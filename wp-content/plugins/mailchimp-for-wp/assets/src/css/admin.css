/** GRID */
.mc4wp-row {
	display: flex;
}

.mc4wp-col {
	padding: 0 1em;
}

.mc4wp-col-1 {
	width: 16.666%;
}

.mc4wp-col-2 {
	width: 33.333%;
}

.mc4wp-col-3 {
	width: 50%;
}

.mc4wp-col-4 {
	width: 66.666%;
}

.mc4wp-col-5 {
	width: 83.333%;
}

.mc4wp-col-6 {
	width: 100%;
}


@media( max-width: 1200px ) {
	.mc4wp-col {

	}
}

/* TABS */
.mc4wp-tab {
	display: none;
}
.mc4wp-tab-active {
	display: block;
}
.mc4wp-tab h2 {
	margin-top: 20px;
}

/** STATUS LABEL */
.mc4wp-status {
	display: inline-block;
	margin-left: 1em;
	padding: 3px 6px;
	color:white;
	font-weight:bold;
}
.mc4wp-status.positive {
	background-color: limeGreen;
}
.mc4wp-status.negative {
	background-color: red;
}
.mc4wp-status.neutral {
	background: gray;
 }

/** WHITESPACE */
.mc4wp-margin-l {
	margin-top: 60px;
	margin-bottom: 60px;
}

.mc4wp-margin-m {
	margin-top: 40px;
	margin-bottom: 40px;
}

.mc4wp-margin-s {
	margin-top: 20px;
	margin-bottom: 20px;
}

/** COLORED TEXT */
.mc4wp-green {
	color: green;
}
.mc4wp-red {
	color: red;
}

/** BREADCRUMBS */
.mc4wp-breadcrumbs {
	border-bottom: 1px solid #DDD;
	padding-bottom: 1em;
}

/** FORM EDITOR */
.CodeMirror {
	border: 1px solid #DDD;
	min-height: 500px;
	font-weight: normal;
	padding: 0 4px;
}
.CodeMirror-empty{
	color: #999;
}
.dashicons {
	vertical-align: middle;
}
/* FORM EDITOR: ADD FORM FIELD (IN OVERLAY) */
#mc4wp-add-form-field h3 {
	margin-top: 0;
	padding-bottom: 12px;
	border-bottom: 1px solid #DDD;
	margin-bottom: 12px;
}
#mc4wp-add-form-field table {
	table-layout: fixed;
	border-collapse: collapse;
	border-spacing: 0;
}
#mc4wp-add-form-field code {
	margin-left: 1em;
}
#mc4wp-add-form-field label {
	display: block;
}
#mc4wp-add-form-field tr,
#mc4wp-add-form-field td {
	vertical-align: middle;
}
#mc4wp-add-form-field .stretch {
	width: 100%;
}
#mc4wp-add-form-field .cb-wrap{
	font-weight: normal;
}
#mc4wp-add-form-field .cb-wrap input {
	margin-right: 6px;
}
#mc4wp-add-form-field .limit-height {
	border: 1px solid #DDD;
	padding: 6px;
	max-height: 200px;
	overflow-y: scroll;
}

/* FORM EDITOR: AVAIlABLE FIELDS */
#mc4wp-available-fields {
	border: 1px solid #DDD;
	padding: 20px;
	background: white;
}
#mc4wp-available-fields .button {
	margin-right: 0.5em;
	margin-bottom: 0.5em;
}
#mc4wp-available-fields .is-required:after {
	content: " *";
	color: red;
}
#mc4wp-available-fields .is-required.not-in-form {
	-webkit-box-shadow:  0 0 3px 1px red;
	-moz-box-shadow:  0 0 3px 1px red;
	box-shadow: 0 0 3px 1px red;
}
#mc4wp-available-fields .in-form {
	opacity: 0.5;
}
.mc4wp-form-editor-wrap {
	padding-right: 0 !important;
}
.mc4wp-form-preview-wrap {
	padding-left: 0 !important;
	margin-top: 1em;
}
#mc4wp-form-preview {
	border: 1px solid #ddd;
	height: 500px; /* codemirror + padding */
	width: 100%;
}

@media (min-width: 1260px) {
	.mc4wp-form-markup-wrap {
		display: flex;
	}

	.mc4wp-form-editor-wrap,
	.mc4wp-form-preview-wrap {
		width: 50%;
		margin-top: 0;
	}

	#mc4wp-form-preview {
		border-left: 0;
	}
}

/** ADMIN SIDEBAR */
.mc4wp-sidebar {
	border-left: 1px solid #DDD;
}
.mc4wp-sidebar h3,
.mc4wp-sidebar h4 {
	font-size: 16px;
	margin-bottom: 0;
}
.mc4wp-box {
	border-bottom: 1px solid #DDD;
	margin-bottom: 20px;
	padding-bottom: 20px;
}
.mc4wp-box h3,
.mc4wp-box h4 {
	margin-top: 0;
}
.mc4wp-box:last-of-type {
	border-bottom: 0;
}

/** PAGE TITLE */
.mc4wp-page-title {
	background: url( "../img/logo-white-on-red.svg" ) no-repeat left center;
	background-size: 32px;
	padding-left: 42px !important;
	line-height: 32px !important;
}

/** RTL SCREENS */
.rtl #mc4wp-page-title {
	background-position: right center;
	padding-left: 0;
	padding-right: 42px;
}
.rtl .CodeMirror-scroll {
	overflow-y: hidden !important;
}
.rtl .CodeMirror-vscrollbar {
	left:  0 !important;
	right: auto !important;
}
.rtl .mc4wp-overlay .close {
	right :auto;
	left: 0;
}
.rtl .mc4wp-is-dismissible {
	padding-left: 38px;
	padding-right: initial;
	position: relative;
}

/** OVERLAY (FOR FORM EDITOR) */
.mc4wp-overlay{
	position: fixed;
	left: 0;
	top: 0;
	z-index: 99999;
	padding: 20px;
	width: 100%;
	max-width: 480px;
	max-height: 100%;

	background: #fefefe;
	border: 1px solid #DDD;
	overflow-y: scroll;

	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
	box-sizing: border-box;
}
.mc4wp-overlay .close {
	position: absolute;
	padding: 10px;
	right: 0;
	top: 0;
	font-size: 24px;
	cursor: pointer;
	opacity: 0.5;
}
.mc4wp-overlay .close:hover,
.mc4wp-overlay .close:focus {
	 opacity: 1;
 }

.mc4wp-overlay-background {
	z-index: 99998;
	background: rgba( 0, 0, 0, .67 );
	position: fixed;
	left: 0;
	right: 0;
	bottom: 0;
	top: 0;
}

/** MISC */
.hover-activated {
	opacity: 0.5;
}

.hover-activated:hover {
	cursor: pointer;
	opacity: 1;
}
.mc4wp-notice{
	padding: 6px 12px;
	color: #31708f;
	background: #d9edf7;
	border: 1px solid #bce8f1;
	margin: 1em 0 !important;
}
.mc4wp-is-dismissible {
	padding-right: 38px;
	position: relative;
}
.column-ID {
	width: 10%;
}

/** DEBUG LOG */
.mc4wp-log { font-family: monaco, monospace, courier, 'courier new', 'Bitstream Vera Sans Mono'; font-size: 13px; resize: vertical; line-height: 140%; height: 200px; padding: 6px; border:1px solid #DDD; background: #262626; color: white; overflow-y: scroll; }
.mc4wp-log .time { color: rgb(181, 137, 0); }
.mc4wp-log .level { color: #35AECD; }
.mc4wp-log .debug-log-empty { color: #DDD; font-style: italic; }
.mc4wp-log .hidden { display: none; }
.mc4wp-log a{ color: #DDD; text-decoration: underline; }

/** LOADING SPINNER */
.mc4wp-loader {
	position: relative;
	display: inline-block;
	text-indent: -9999999px;
	border: 3px solid rgba(0, 0, 0, 0.2);
	border-left-color: #000000;
	-webkit-transform: translateZ(0);
	-ms-transform: translateZ(0);
	transform: translateZ(0);
	-webkit-animation: load8 1.1s infinite linear;
	animation: load8 1.1s infinite linear;
	overflow: hidden;
	border-radius: 50%;
	vertical-align: middle;
	width: 12px;
	height: 12px;
	margin-bottom: 3px;
	margin-left: 3px;
	margin-right: 3px;
}

@-webkit-keyframes load8 {
	0% {
		-webkit-transform: rotate(0deg);
		transform: rotate(0deg);
	}
	100% {
		-webkit-transform: rotate(360deg);
		transform: rotate(360deg);
	}
}
@keyframes load8 {
	0% {
		-webkit-transform: rotate(0deg);
		transform: rotate(0deg);
	}
	100% {
		-webkit-transform: rotate(360deg);
		transform: rotate(360deg);
	}
}

/** CODEMIRROR */
.CodeMirror {
	/* Set height, width, borders, and global font properties here */
	font-family: monospace;
	height: 300px;
	color: black;
	direction: ltr;
}

.CodeMirror-lines {
	padding: 4px 0; /* Vertical padding around content */
}
.CodeMirror pre {
	padding: 0 4px; /* Horizontal padding of content */
}

.CodeMirror-scrollbar-filler, .CodeMirror-gutter-filler {
	background-color: white; /* The little square between H and V scrollbars */
}

.CodeMirror-gutters {
	border-right: 1px solid #ddd;
	background-color: #f7f7f7;
	white-space: nowrap;
}
.CodeMirror-linenumbers {}
.CodeMirror-linenumber {
	padding: 0 3px 0 5px;
	min-width: 20px;
	text-align: right;
	color: #999;
	white-space: nowrap;
}

.CodeMirror-guttermarker { color: black; }
.CodeMirror-guttermarker-subtle { color: #999; }

.CodeMirror-cursor {
	border-left: 1px solid black;
	border-right: none;
	width: 0;
}
.CodeMirror div.CodeMirror-secondarycursor {
	border-left: 1px solid silver;
}
.cm-fat-cursor .CodeMirror-cursor {
	width: auto;
	border: 0 !important;
	background: #7e7;
}
.cm-fat-cursor div.CodeMirror-cursors {
	z-index: 1;
}
.cm-fat-cursor-mark {
	background-color: rgba(20, 255, 20, 0.5);
	-webkit-animation: blink 1.06s steps(1) infinite;
	-moz-animation: blink 1.06s steps(1) infinite;
	animation: blink 1.06s steps(1) infinite;
}
.cm-animate-fat-cursor {
	width: auto;
	border: 0;
	-webkit-animation: blink 1.06s steps(1) infinite;
	-moz-animation: blink 1.06s steps(1) infinite;
	animation: blink 1.06s steps(1) infinite;
	background-color: #7e7;
}
@-moz-keyframes blink {
	0% {}
	50% { background-color: transparent; }
	100% {}
}
@-webkit-keyframes blink {
	0% {}
	50% { background-color: transparent; }
	100% {}
}
@keyframes blink {
	0% {}
	50% { background-color: transparent; }
	100% {}
}

/* Can style cursor different in overwrite (non-insert) mode */
.CodeMirror-overwrite .CodeMirror-cursor {}

.cm-tab { display: inline-block; text-decoration: inherit; }

.CodeMirror-rulers {
	position: absolute;
	left: 0; right: 0; top: -50px; bottom: -20px;
	overflow: hidden;
}
.CodeMirror-ruler {
	border-left: 1px solid #DDD;
	top: 0; bottom: 0;
	position: absolute;
}

.cm-s-default .cm-header {color: blue;}
.cm-s-default .cm-quote {color: #090;}
.cm-negative {color: #d44;}
.cm-positive {color: #292;}
.cm-header, .cm-strong {font-weight: bold;}
.cm-em {font-style: italic;}
.cm-link {text-decoration: underline;}
.cm-strikethrough {text-decoration: line-through;}

.cm-s-default .cm-keyword {color: #708;}
.cm-s-default .cm-atom {color: #219;}
.cm-s-default .cm-number {color: #164;}
.cm-s-default .cm-def {color: #00f;}
.cm-s-default .cm-variable,
.cm-s-default .cm-punctuation,
.cm-s-default .cm-property,
.cm-s-default .cm-operator {}
.cm-s-default .cm-variable-2 {color: #05a;}
.cm-s-default .cm-variable-3, .cm-s-default .cm-type {color: #085;}
.cm-s-default .cm-comment {color: #a50;}
.cm-s-default .cm-string {color: #a11;}
.cm-s-default .cm-string-2 {color: #f50;}
.cm-s-default .cm-meta {color: #555;}
.cm-s-default .cm-qualifier {color: #555;}
.cm-s-default .cm-builtin {color: #30a;}
.cm-s-default .cm-bracket {color: #997;}
.cm-s-default .cm-tag {color: #170;}
.cm-s-default .cm-attribute {color: #00c;}
.cm-s-default .cm-hr {color: #999;}
.cm-s-default .cm-link {color: #00c;}

.cm-s-default .cm-error {color: #f00;}
.cm-invalidchar {color: #f00;}

.CodeMirror-composing { border-bottom: 2px solid; }

div.CodeMirror span.CodeMirror-matchingbracket {color: #0b0;}
div.CodeMirror span.CodeMirror-nonmatchingbracket {color: #a22;}
.CodeMirror-matchingtag { background: rgba(255, 150, 0, .3); }
.CodeMirror-activeline-background {background: #e8f2ff;}

.CodeMirror {
	position: relative;
	overflow: hidden;
	background: white;
}

.CodeMirror-scroll {
	overflow: scroll !important; /* Things will break if this is overridden */
	/* 30px is the magic margin used to hide the element's real scrollbars */
	/* See overflow: hidden in .CodeMirror */
	margin-bottom: -30px; margin-right: -30px;
	padding-bottom: 30px;
	height: 100%;
	outline: none; /* Prevent dragging from highlighting the element */
	position: relative;
}
.CodeMirror-sizer {
	position: relative;
	border-right: 30px solid transparent;
}

/* The fake, visible scrollbars. Used to force redraw during scrolling
   before actual scrolling happens, thus preventing shaking and
   flickering artifacts. */
.CodeMirror-vscrollbar, .CodeMirror-hscrollbar, .CodeMirror-scrollbar-filler, .CodeMirror-gutter-filler {
	position: absolute;
	z-index: 6;
	display: none;
}
.CodeMirror-vscrollbar {
	right: 0; top: 0;
	overflow-x: hidden;
	overflow-y: scroll;
}
.CodeMirror-hscrollbar {
	bottom: 0; left: 0;
	overflow-y: hidden;
	overflow-x: scroll;
}
.CodeMirror-scrollbar-filler {
	right: 0; bottom: 0;
}
.CodeMirror-gutter-filler {
	left: 0; bottom: 0;
}

.CodeMirror-gutters {
	position: absolute; left: 0; top: 0;
	min-height: 100%;
	z-index: 3;
}
.CodeMirror-gutter {
	white-space: normal;
	height: 100%;
	display: inline-block;
	vertical-align: top;
	margin-bottom: -30px;
}
.CodeMirror-gutter-wrapper {
	position: absolute;
	z-index: 4;
	background: none !important;
	border: none !important;
}
.CodeMirror-gutter-background {
	position: absolute;
	top: 0; bottom: 0;
	z-index: 4;
}
.CodeMirror-gutter-elt {
	position: absolute;
	cursor: default;
	z-index: 4;
}
.CodeMirror-gutter-wrapper ::selection { background-color: transparent }
.CodeMirror-gutter-wrapper ::-moz-selection { background-color: transparent }

.CodeMirror-lines {
	cursor: text;
	min-height: 1px; /* prevents collapsing before first draw */
}
.CodeMirror pre {
	/* Reset some styles that the rest of the page might have set */
	-moz-border-radius: 0; -webkit-border-radius: 0; border-radius: 0;
	border-width: 0;
	background: transparent;
	font-family: inherit;
	font-size: inherit;
	margin: 0;
	white-space: pre;
	word-wrap: normal;
	line-height: inherit;
	color: inherit;
	z-index: 2;
	position: relative;
	overflow: visible;
	-webkit-tap-highlight-color: transparent;
	-webkit-font-variant-ligatures: contextual;
	font-variant-ligatures: contextual;
}
.CodeMirror-wrap pre {
	word-wrap: break-word;
	white-space: pre-wrap;
	word-break: normal;
}

.CodeMirror-linebackground {
	position: absolute;
	left: 0; right: 0; top: 0; bottom: 0;
	z-index: 0;
}

.CodeMirror-linewidget {
	position: relative;
	z-index: 2;
	padding: 0.1px; /* Force widget margins to stay inside of the container */
}

.CodeMirror-widget {}

.CodeMirror-rtl pre { direction: rtl; }

.CodeMirror-code {
	outline: none;
}

/* Force content-box sizing for the elements where we expect it */
.CodeMirror-scroll,
.CodeMirror-sizer,
.CodeMirror-gutter,
.CodeMirror-gutters,
.CodeMirror-linenumber {
	-moz-box-sizing: content-box;
	box-sizing: content-box;
}

.CodeMirror-measure {
	position: absolute;
	width: 100%;
	height: 0;
	overflow: hidden;
	visibility: hidden;
}

.CodeMirror-cursor {
	position: absolute;
	pointer-events: none;
}
.CodeMirror-measure pre { position: static; }

div.CodeMirror-cursors {
	visibility: hidden;
	position: relative;
	z-index: 3;
}
div.CodeMirror-dragcursors {
	visibility: visible;
}

.CodeMirror-focused div.CodeMirror-cursors {
	visibility: visible;
}

.CodeMirror-selected { background: #d9d9d9; }
.CodeMirror-focused .CodeMirror-selected { background: #d7d4f0; }
.CodeMirror-crosshair { cursor: crosshair; }
.CodeMirror-line::selection, .CodeMirror-line > span::selection, .CodeMirror-line > span > span::selection { background: #d7d4f0; }
.CodeMirror-line::-moz-selection, .CodeMirror-line > span::-moz-selection, .CodeMirror-line > span > span::-moz-selection { background: #d7d4f0; }

.cm-searching {
	background-color: #ffa;
	background-color: rgba(255, 255, 0, .4);
}

/* Used to force a border model for a node */
.cm-force-border { padding-right: .1px; }

@media print {
	/* Hide the cursor when printing */
	.CodeMirror div.CodeMirror-cursors {
		visibility: hidden;
	}
}

/* See issue #2901 */
.cm-tab-wrap-hack:after { content: ''; }

/* Help users use markselection to safely style text background */
span.CodeMirror-selectedtext { background: none; }
