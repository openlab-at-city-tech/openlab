{"version":3,"file":"./build/list-reusable-blocks/index.min.js","mappings":"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","sources":["webpack://wp/webpack/bootstrap","webpack://wp/webpack/runtime/compat get default export","webpack://wp/webpack/runtime/define property getters","webpack://wp/webpack/runtime/hasOwnProperty shorthand","webpack://wp/webpack/runtime/make namespace object","webpack://wp/external window [\"wp\",\"element\"]","webpack://wp/external window [\"wp\",\"i18n\"]","webpack://wp/external window \"lodash\"","webpack://wp/external window [\"wp\",\"apiFetch\"]","webpack://wp/./packages/list-reusable-blocks/build-module/utils/@wordpress/list-reusable-blocks/src/utils/export.js","webpack://wp/external window [\"wp\",\"components\"]","webpack://wp/external window [\"wp\",\"compose\"]","webpack://wp/./packages/list-reusable-blocks/build-module/components/import-form/@wordpress/list-reusable-blocks/src/components/import-form/index.js","webpack://wp/./packages/list-reusable-blocks/build-module/utils/@wordpress/list-reusable-blocks/src/utils/import.js","webpack://wp/./packages/list-reusable-blocks/build-module/utils/@wordpress/list-reusable-blocks/src/utils/file.js","webpack://wp/./packages/list-reusable-blocks/build-module/components/import-dropdown/@wordpress/list-reusable-blocks/src/components/import-dropdown/index.js","webpack://wp/./packages/list-reusable-blocks/build-module/@wordpress/list-reusable-blocks/src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"lodash\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"apiFetch\"];","/**\n * External dependencies\n */\nimport { kebabCase } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport apiFetch from '@wordpress/api-fetch';\n\n/**\n * Internal dependencies\n */\nimport { download } from './file';\n\n/**\n * Export a reusable block as a JSON file.\n *\n * @param {number} id\n */\nasync function exportReusableBlock( id ) {\n\tconst postType = await apiFetch( { path: `/wp/v2/types/wp_block` } );\n\tconst post = await apiFetch( {\n\t\tpath: `/wp/v2/${ postType.rest_base }/${ id }?context=edit`,\n\t} );\n\tconst title = post.title.raw;\n\tconst content = post.content.raw;\n\tconst fileContent = JSON.stringify(\n\t\t{\n\t\t\t__file: 'wp_block',\n\t\t\ttitle,\n\t\t\tcontent,\n\t\t},\n\t\tnull,\n\t\t2\n\t);\n\tconst fileName = kebabCase( title ) + '.json';\n\n\tdownload( fileName, fileContent, 'application/json' );\n}\n\nexport default exportReusableBlock;\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"compose\"];","/**\n * WordPress dependencies\n */\nimport { useState, useRef } from '@wordpress/element';\nimport { withInstanceId } from '@wordpress/compose';\nimport { __, _x } from '@wordpress/i18n';\nimport { Button, Notice } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport importReusableBlock from '../../utils/import';\n\nfunction ImportForm( { instanceId, onUpload } ) {\n\tconst inputId = 'list-reusable-blocks-import-form-' + instanceId;\n\n\tconst formRef = useRef();\n\tconst [ isLoading, setIsLoading ] = useState( false );\n\tconst [ error, setError ] = useState( null );\n\tconst [ file, setFile ] = useState( null );\n\n\tconst onChangeFile = ( event ) => {\n\t\tsetFile( event.target.files[ 0 ] );\n\t\tsetError( null );\n\t};\n\n\tconst onSubmit = ( event ) => {\n\t\tevent.preventDefault();\n\t\tif ( ! file ) {\n\t\t\treturn;\n\t\t}\n\t\tsetIsLoading( { isLoading: true } );\n\t\timportReusableBlock( file )\n\t\t\t.then( ( reusableBlock ) => {\n\t\t\t\tif ( ! formRef ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tsetIsLoading( false );\n\t\t\t\tonUpload( reusableBlock );\n\t\t\t} )\n\t\t\t.catch( ( errors ) => {\n\t\t\t\tif ( ! formRef ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet uiMessage;\n\t\t\t\tswitch ( errors.message ) {\n\t\t\t\t\tcase 'Invalid JSON file':\n\t\t\t\t\t\tuiMessage = __( 'Invalid JSON file' );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Invalid Reusable block JSON file':\n\t\t\t\t\t\tuiMessage = __( 'Invalid Reusable block JSON file' );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tuiMessage = __( 'Unknown error' );\n\t\t\t\t}\n\n\t\t\t\tsetIsLoading( false );\n\t\t\t\tsetError( uiMessage );\n\t\t\t} );\n\t};\n\n\tconst onDismissError = () => {\n\t\tsetError( null );\n\t};\n\n\treturn (\n\t\t<form\n\t\t\tclassName=\"list-reusable-blocks-import-form\"\n\t\t\tonSubmit={ onSubmit }\n\t\t\tref={ formRef }\n\t\t>\n\t\t\t{ error && (\n\t\t\t\t<Notice status=\"error\" onRemove={ () => onDismissError() }>\n\t\t\t\t\t{ error }\n\t\t\t\t</Notice>\n\t\t\t) }\n\t\t\t<label\n\t\t\t\thtmlFor={ inputId }\n\t\t\t\tclassName=\"list-reusable-blocks-import-form__label\"\n\t\t\t>\n\t\t\t\t{ __( 'File' ) }\n\t\t\t</label>\n\t\t\t<input id={ inputId } type=\"file\" onChange={ onChangeFile } />\n\t\t\t<Button\n\t\t\t\ttype=\"submit\"\n\t\t\t\tisBusy={ isLoading }\n\t\t\t\tdisabled={ ! file || isLoading }\n\t\t\t\tvariant=\"secondary\"\n\t\t\t\tclassName=\"list-reusable-blocks-import-form__button\"\n\t\t\t>\n\t\t\t\t{ _x( 'Import', 'button label' ) }\n\t\t\t</Button>\n\t\t</form>\n\t);\n}\n\nexport default withInstanceId( ImportForm );\n","/**\n * External dependencies\n */\nimport { isString } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport apiFetch from '@wordpress/api-fetch';\n\n/**\n * Internal dependencies\n */\nimport { readTextFile } from './file';\n\n/**\n * Import a reusable block from a JSON file.\n *\n * @param {File} file File.\n * @return {Promise} Promise returning the imported reusable block.\n */\nasync function importReusableBlock( file ) {\n\tconst fileContent = await readTextFile( file );\n\tlet parsedContent;\n\ttry {\n\t\tparsedContent = JSON.parse( fileContent );\n\t} catch ( e ) {\n\t\tthrow new Error( 'Invalid JSON file' );\n\t}\n\tif (\n\t\tparsedContent.__file !== 'wp_block' ||\n\t\t! parsedContent.title ||\n\t\t! parsedContent.content ||\n\t\t! isString( parsedContent.title ) ||\n\t\t! isString( parsedContent.content )\n\t) {\n\t\tthrow new Error( 'Invalid Reusable block JSON file' );\n\t}\n\tconst postType = await apiFetch( { path: `/wp/v2/types/wp_block` } );\n\tconst reusableBlock = await apiFetch( {\n\t\tpath: `/wp/v2/${ postType.rest_base }`,\n\t\tdata: {\n\t\t\ttitle: parsedContent.title,\n\t\t\tcontent: parsedContent.content,\n\t\t\tstatus: 'publish',\n\t\t},\n\t\tmethod: 'POST',\n\t} );\n\n\treturn reusableBlock;\n}\n\nexport default importReusableBlock;\n","/**\n * Downloads a file.\n *\n * @param {string} fileName    File Name.\n * @param {string} content     File Content.\n * @param {string} contentType File mime type.\n */\nexport function download( fileName, content, contentType ) {\n\tconst file = new window.Blob( [ content ], { type: contentType } );\n\n\t// IE11 can't use the click to download technique\n\t// we use a specific IE11 technique instead.\n\tif ( window.navigator.msSaveOrOpenBlob ) {\n\t\twindow.navigator.msSaveOrOpenBlob( file, fileName );\n\t} else {\n\t\tconst a = document.createElement( 'a' );\n\t\ta.href = URL.createObjectURL( file );\n\t\ta.download = fileName;\n\n\t\ta.style.display = 'none';\n\t\tdocument.body.appendChild( a );\n\t\ta.click();\n\t\tdocument.body.removeChild( a );\n\t}\n}\n\n/**\n * Reads the textual content of the given file.\n *\n * @param {File} file File.\n * @return {Promise<string>}  Content of the file.\n */\nexport function readTextFile( file ) {\n\tconst reader = new window.FileReader();\n\treturn new Promise( ( resolve ) => {\n\t\treader.onload = () => {\n\t\t\tresolve( reader.result );\n\t\t};\n\t\treader.readAsText( file );\n\t} );\n}\n","/**\n * External dependencies\n */\nimport { flow } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Dropdown, Button } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport ImportForm from '../import-form';\n\nfunction ImportDropdown( { onUpload } ) {\n\treturn (\n\t\t<Dropdown\n\t\t\tposition=\"bottom right\"\n\t\t\tcontentClassName=\"list-reusable-blocks-import-dropdown__content\"\n\t\t\trenderToggle={ ( { isOpen, onToggle } ) => (\n\t\t\t\t<Button\n\t\t\t\t\taria-expanded={ isOpen }\n\t\t\t\t\tonClick={ onToggle }\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t>\n\t\t\t\t\t{ __( 'Import from JSON' ) }\n\t\t\t\t</Button>\n\t\t\t) }\n\t\t\trenderContent={ ( { onClose } ) => (\n\t\t\t\t<ImportForm onUpload={ flow( onClose, onUpload ) } />\n\t\t\t) }\n\t\t/>\n\t);\n}\n\nexport default ImportDropdown;\n","/**\n * WordPress dependencies\n */\nimport { render } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport exportReusableBlock from './utils/export';\nimport ImportDropdown from './components/import-dropdown';\n\n// Setup Export Links.\ndocument.body.addEventListener( 'click', ( event ) => {\n\tif (\n\t\t! event.target.classList.contains( 'wp-list-reusable-blocks__export' )\n\t) {\n\t\treturn;\n\t}\n\tevent.preventDefault();\n\texportReusableBlock( event.target.dataset.id );\n} );\n\n// Setup Import Form.\ndocument.addEventListener( 'DOMContentLoaded', () => {\n\tconst button = document.querySelector( '.page-title-action' );\n\tif ( ! button ) {\n\t\treturn;\n\t}\n\n\tconst showNotice = () => {\n\t\tconst notice = document.createElement( 'div' );\n\t\tnotice.className = 'notice notice-success is-dismissible';\n\t\tnotice.innerHTML = `<p>${ __(\n\t\t\t'Reusable block imported successfully!'\n\t\t) }</p>`;\n\n\t\tconst headerEnd = document.querySelector( '.wp-header-end' );\n\t\tif ( ! headerEnd ) {\n\t\t\treturn;\n\t\t}\n\t\theaderEnd.parentNode.insertBefore( notice, headerEnd );\n\t};\n\n\tconst container = document.createElement( 'div' );\n\tcontainer.className = 'list-reusable-blocks__container';\n\tbutton.parentNode.insertBefore( container, button );\n\trender( <ImportDropdown onUpload={ showNotice } />, container );\n} );\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","window","withInstanceId","instanceId","onUpload","inputId","formRef","useRef","isLoading","setIsLoading","useState","error","setError","file","setFile","className","onSubmit","event","preventDefault","async","fileContent","reader","FileReader","Promise","resolve","onload","result","readAsText","readTextFile","parsedContent","JSON","parse","e","Error","__file","title","content","isString","postType","apiFetch","path","rest_base","data","status","method","importReusableBlock","then","reusableBlock","catch","errors","uiMessage","message","__","ref","Notice","onRemove","htmlFor","id","type","onChange","target","files","Button","isBusy","disabled","variant","_x","Dropdown","position","contentClassName","renderToggle","isOpen","onToggle","onClick","renderContent","onClose","flow","document","body","addEventListener","classList","contains","post","raw","stringify","fileName","contentType","Blob","navigator","msSaveOrOpenBlob","createElement","href","URL","createObjectURL","download","style","display","appendChild","click","removeChild","kebabCase","exportReusableBlock","dataset","button","querySelector","container","parentNode","insertBefore","render","notice","innerHTML","headerEnd"],"sourceRoot":""}