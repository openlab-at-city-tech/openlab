{"version":3,"file":"./build/edit-widgets/index.min.js","mappings":"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","sources":["webpack://wp/./node_modules/classnames/index.js","webpack://wp/webpack/bootstrap","webpack://wp/webpack/runtime/compat get default export","webpack://wp/webpack/runtime/define property getters","webpack://wp/webpack/runtime/hasOwnProperty shorthand","webpack://wp/webpack/runtime/make namespace object","webpack://wp/external window [\"wp\",\"element\"]","webpack://wp/external window [\"wp\",\"blocks\"]","webpack://wp/external window [\"wp\",\"data\"]","webpack://wp/external window [\"wp\",\"deprecated\"]","webpack://wp/external window [\"wp\",\"blockLibrary\"]","webpack://wp/external window [\"wp\",\"coreData\"]","webpack://wp/external window [\"wp\",\"widgets\"]","webpack://wp/external window [\"wp\",\"preferences\"]","webpack://wp/external window [\"wp\",\"apiFetch\"]","webpack://wp/./packages/edit-widgets/build-module/store/@wordpress/edit-widgets/src/store/reducer.js","webpack://wp/external window [\"wp\",\"i18n\"]","webpack://wp/external window [\"wp\",\"notices\"]","webpack://wp/external window [\"wp\",\"components\"]","webpack://wp/external window [\"wp\",\"primitives\"]","webpack://wp/./packages/icons/build-module/library/@wordpress/icons/src/library/check.js","webpack://wp/./packages/icons/build-module/library/@wordpress/icons/src/library/star-filled.js","webpack://wp/./packages/icons/build-module/library/@wordpress/icons/src/library/star-empty.js","webpack://wp/external window [\"wp\",\"viewport\"]","webpack://wp/./packages/icons/build-module/library/@wordpress/icons/src/library/close-small.js","webpack://wp/./packages/interface/build-module/store/@wordpress/interface/src/store/actions.js","webpack://wp/./packages/interface/build-module/store/@wordpress/interface/src/store/selectors.js","webpack://wp/./packages/interface/build-module/store/@wordpress/interface/src/store/reducer.js","webpack://wp/./packages/interface/build-module/store/@wordpress/interface/src/store/index.js","webpack://wp/./packages/interface/build-module/store/@wordpress/interface/src/store/constants.js","webpack://wp/external window [\"wp\",\"plugins\"]","webpack://wp/./packages/interface/build-module/components/complementary-area-context/@wordpress/interface/src/components/complementary-area-context/index.js","webpack://wp/./packages/interface/build-module/components/complementary-area-toggle/@wordpress/interface/src/components/complementary-area-toggle/index.js","webpack://wp/./packages/interface/build-module/components/complementary-area-header/@wordpress/interface/src/components/complementary-area-header/index.js","webpack://wp/./packages/interface/build-module/components/action-item/@wordpress/interface/src/components/action-item/index.js","webpack://wp/./packages/interface/build-module/components/complementary-area-more-menu-item/@wordpress/interface/src/components/complementary-area-more-menu-item/index.js","webpack://wp/./packages/interface/build-module/components/pinned-items/@wordpress/interface/src/components/pinned-items/index.js","webpack://wp/./packages/interface/build-module/components/complementary-area/@wordpress/interface/src/components/complementary-area/index.js","webpack://wp/external window [\"wp\",\"compose\"]","webpack://wp/./packages/interface/build-module/components/navigable-region/@wordpress/interface/src/components/navigable-region/index.js","webpack://wp/./packages/interface/build-module/components/interface-skeleton/@wordpress/interface/src/components/interface-skeleton/index.js","webpack://wp/./packages/icons/build-module/library/@wordpress/icons/src/library/more-vertical.js","webpack://wp/./packages/interface/build-module/components/more-menu-dropdown/@wordpress/interface/src/components/more-menu-dropdown/index.js","webpack://wp/external window [\"wp\",\"blockEditor\"]","webpack://wp/./packages/edit-widgets/build-module/store/@wordpress/edit-widgets/src/store/transformers.js","webpack://wp/./packages/edit-widgets/build-module/store/@wordpress/edit-widgets/src/store/utils.js","webpack://wp/./packages/edit-widgets/build-module/store/@wordpress/edit-widgets/src/store/constants.js","webpack://wp/./packages/edit-widgets/build-module/store/@wordpress/edit-widgets/src/store/actions.js","webpack://wp/./packages/edit-widgets/build-module/store/@wordpress/edit-widgets/src/store/resolvers.js","webpack://wp/./packages/edit-widgets/build-module/store/@wordpress/edit-widgets/src/store/selectors.js","webpack://wp/./packages/edit-widgets/build-module/store/@wordpress/edit-widgets/src/store/index.js","webpack://wp/external window [\"wp\",\"hooks\"]","webpack://wp/./packages/edit-widgets/build-module/filters/@wordpress/edit-widgets/src/filters/move-to-widget-area.js","webpack://wp/external window [\"wp\",\"mediaUtils\"]","webpack://wp/./packages/edit-widgets/build-module/filters/@wordpress/edit-widgets/src/filters/replace-media-upload.js","webpack://wp/./packages/edit-widgets/build-module/blocks/widget-area/edit/@wordpress/edit-widgets/src/blocks/widget-area/edit/use-is-dragging-within.js","webpack://wp/./packages/edit-widgets/build-module/blocks/widget-area/edit/@wordpress/edit-widgets/src/blocks/widget-area/edit/inner-blocks.js","webpack://wp/./packages/edit-widgets/build-module/blocks/widget-area/edit/@wordpress/edit-widgets/src/blocks/widget-area/edit/index.js","webpack://wp/./packages/edit-widgets/build-module/blocks/widget-area/@wordpress/edit-widgets/src/blocks/widget-area/index.js","webpack://wp/./packages/edit-widgets/build-module/components/error-boundary/@wordpress/edit-widgets/src/components/error-boundary/index.js","webpack://wp/external window [\"wp\",\"reusableBlocks\"]","webpack://wp/external window [\"wp\",\"keyboardShortcuts\"]","webpack://wp/external window [\"wp\",\"keycodes\"]","webpack://wp/./packages/edit-widgets/build-module/components/keyboard-shortcuts/@wordpress/edit-widgets/src/components/keyboard-shortcuts/index.js","webpack://wp/./packages/edit-widgets/build-module/hooks/@wordpress/edit-widgets/src/hooks/use-last-selected-widget-area.js","webpack://wp/./packages/edit-widgets/build-module/@wordpress/edit-widgets/src/constants.js","webpack://wp/external window [\"wp\",\"privateApis\"]","webpack://wp/./packages/edit-widgets/build-module/@wordpress/edit-widgets/src/lock-unlock.js","webpack://wp/./packages/edit-widgets/build-module/components/widget-areas-block-editor-provider/@wordpress/edit-widgets/src/components/widget-areas-block-editor-provider/index.js","webpack://wp/./packages/icons/build-module/library/@wordpress/icons/src/library/drawer-left.js","webpack://wp/./packages/icons/build-module/library/@wordpress/icons/src/library/drawer-right.js","webpack://wp/./packages/icons/build-module/library/@wordpress/icons/src/library/block-default.js","webpack://wp/external window [\"wp\",\"url\"]","webpack://wp/external window [\"wp\",\"dom\"]","webpack://wp/./packages/edit-widgets/build-module/components/sidebar/@wordpress/edit-widgets/src/components/sidebar/widget-areas.js","webpack://wp/./packages/edit-widgets/build-module/components/sidebar/@wordpress/edit-widgets/src/components/sidebar/index.js","webpack://wp/./packages/icons/build-module/library/@wordpress/icons/src/library/plus.js","webpack://wp/./packages/icons/build-module/library/@wordpress/icons/src/library/list-view.js","webpack://wp/./packages/edit-widgets/build-module/components/save-button/@wordpress/edit-widgets/src/components/save-button/index.js","webpack://wp/./packages/icons/build-module/library/@wordpress/icons/src/library/undo.js","webpack://wp/./packages/icons/build-module/library/@wordpress/icons/src/library/redo.js","webpack://wp/./packages/edit-widgets/build-module/components/header/undo-redo/@wordpress/edit-widgets/src/components/header/undo-redo/undo.js","webpack://wp/./packages/edit-widgets/build-module/components/header/undo-redo/@wordpress/edit-widgets/src/components/header/undo-redo/redo.js","webpack://wp/./packages/icons/build-module/library/@wordpress/icons/src/library/external.js","webpack://wp/./packages/edit-widgets/build-module/components/keyboard-shortcut-help-modal/@wordpress/edit-widgets/src/components/keyboard-shortcut-help-modal/config.js","webpack://wp/./packages/edit-widgets/build-module/components/keyboard-shortcut-help-modal/@wordpress/edit-widgets/src/components/keyboard-shortcut-help-modal/shortcut.js","webpack://wp/./packages/edit-widgets/build-module/components/keyboard-shortcut-help-modal/@wordpress/edit-widgets/src/components/keyboard-shortcut-help-modal/dynamic-shortcut.js","webpack://wp/./packages/edit-widgets/build-module/components/keyboard-shortcut-help-modal/@wordpress/edit-widgets/src/components/keyboard-shortcut-help-modal/index.js","webpack://wp/./packages/edit-widgets/build-module/components/more-menu/@wordpress/edit-widgets/src/components/more-menu/tools-more-menu-group.js","webpack://wp/./packages/edit-widgets/build-module/components/more-menu/@wordpress/edit-widgets/src/components/more-menu/index.js","webpack://wp/./packages/edit-widgets/build-module/components/header/@wordpress/edit-widgets/src/components/header/index.js","webpack://wp/./packages/edit-widgets/build-module/components/notices/@wordpress/edit-widgets/src/components/notices/index.js","webpack://wp/./packages/edit-widgets/build-module/components/widget-areas-block-editor-content/@wordpress/edit-widgets/src/components/widget-areas-block-editor-content/index.js","webpack://wp/./packages/icons/build-module/library/@wordpress/icons/src/library/close.js","webpack://wp/./packages/edit-widgets/build-module/hooks/@wordpress/edit-widgets/src/hooks/use-widget-library-insertion-point.js","webpack://wp/./packages/edit-widgets/build-module/components/secondary-sidebar/@wordpress/edit-widgets/src/components/secondary-sidebar/inserter-sidebar.js","webpack://wp/./packages/edit-widgets/build-module/components/secondary-sidebar/@wordpress/edit-widgets/src/components/secondary-sidebar/list-view-sidebar.js","webpack://wp/./packages/edit-widgets/build-module/components/secondary-sidebar/@wordpress/edit-widgets/src/components/secondary-sidebar/index.js","webpack://wp/./packages/edit-widgets/build-module/components/layout/@wordpress/edit-widgets/src/components/layout/interface.js","webpack://wp/./packages/edit-widgets/build-module/components/layout/@wordpress/edit-widgets/src/components/layout/unsaved-changes-warning.js","webpack://wp/./packages/edit-widgets/build-module/components/welcome-guide/@wordpress/edit-widgets/src/components/welcome-guide/index.js","webpack://wp/./packages/edit-widgets/build-module/components/layout/@wordpress/edit-widgets/src/components/layout/index.js","webpack://wp/./packages/edit-widgets/build-module/@wordpress/edit-widgets/src/index.js"],"sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blocks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"data\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"deprecated\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockLibrary\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"coreData\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"widgets\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"preferences\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"apiFetch\"];","/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\n\n/**\n * Controls the open state of the widget areas.\n *\n * @param {Object} state  Redux state.\n * @param {Object} action Redux action.\n *\n * @return {Array} Updated state.\n */\nexport function widgetAreasOpenState( state = {}, action ) {\n\tconst { type } = action;\n\tswitch ( type ) {\n\t\tcase 'SET_WIDGET_AREAS_OPEN_STATE': {\n\t\t\treturn action.widgetAreasOpenState;\n\t\t}\n\t\tcase 'SET_IS_WIDGET_AREA_OPEN': {\n\t\t\tconst { clientId, isOpen } = action;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ clientId ]: isOpen,\n\t\t\t};\n\t\t}\n\t\tdefault: {\n\t\t\treturn state;\n\t\t}\n\t}\n}\n\n/**\n * Reducer to set the block inserter panel open or closed.\n *\n * Note: this reducer interacts with the list view panel reducer\n * to make sure that only one of the two panels is open at the same time.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n */\nexport function blockInserterPanel( state = false, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'SET_IS_LIST_VIEW_OPENED':\n\t\t\treturn action.isOpen ? false : state;\n\t\tcase 'SET_IS_INSERTER_OPENED':\n\t\t\treturn action.value;\n\t}\n\treturn state;\n}\n\n/**\n * Reducer to set the list view panel open or closed.\n *\n * Note: this reducer interacts with the inserter panel reducer\n * to make sure that only one of the two panels is open at the same time.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n */\nexport function listViewPanel( state = false, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'SET_IS_INSERTER_OPENED':\n\t\t\treturn action.value ? false : state;\n\t\tcase 'SET_IS_LIST_VIEW_OPENED':\n\t\t\treturn action.isOpen;\n\t}\n\treturn state;\n}\n\nexport default combineReducers( {\n\tblockInserterPanel,\n\tlistViewPanel,\n\twidgetAreasOpenState,\n} );\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"notices\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"primitives\"];","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst check = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M16.7 7.1l-6.3 8.5-3.3-2.5-.9 1.2 4.5 3.4L17.9 8z\" />\n\t</SVG>\n);\n\nexport default check;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst starFilled = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M11.776 4.454a.25.25 0 01.448 0l2.069 4.192a.25.25 0 00.188.137l4.626.672a.25.25 0 01.139.426l-3.348 3.263a.25.25 0 00-.072.222l.79 4.607a.25.25 0 01-.362.263l-4.138-2.175a.25.25 0 00-.232 0l-4.138 2.175a.25.25 0 01-.363-.263l.79-4.607a.25.25 0 00-.071-.222L4.754 9.881a.25.25 0 01.139-.426l4.626-.672a.25.25 0 00.188-.137l2.069-4.192z\" />\n\t</SVG>\n);\n\nexport default starFilled;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst starEmpty = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path\n\t\t\tfillRule=\"evenodd\"\n\t\t\td=\"M9.706 8.646a.25.25 0 01-.188.137l-4.626.672a.25.25 0 00-.139.427l3.348 3.262a.25.25 0 01.072.222l-.79 4.607a.25.25 0 00.362.264l4.138-2.176a.25.25 0 01.233 0l4.137 2.175a.25.25 0 00.363-.263l-.79-4.607a.25.25 0 01.072-.222l3.347-3.262a.25.25 0 00-.139-.427l-4.626-.672a.25.25 0 01-.188-.137l-2.069-4.192a.25.25 0 00-.448 0L9.706 8.646zM12 7.39l-.948 1.921a1.75 1.75 0 01-1.317.957l-2.12.308 1.534 1.495c.412.402.6.982.503 1.55l-.362 2.11 1.896-.997a1.75 1.75 0 011.629 0l1.895.997-.362-2.11a1.75 1.75 0 01.504-1.55l1.533-1.495-2.12-.308a1.75 1.75 0 01-1.317-.957L12 7.39z\"\n\t\t\tclipRule=\"evenodd\"\n\t\t/>\n\t</SVG>\n);\n\nexport default starEmpty;\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"viewport\"];","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst closeSmall = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M12 13.06l3.712 3.713 1.061-1.06L13.061 12l3.712-3.712-1.06-1.06L12 10.938 8.288 7.227l-1.061 1.06L10.939 12l-3.712 3.712 1.06 1.061L12 13.061z\" />\n\t</SVG>\n);\n\nexport default closeSmall;\n","/**\n * WordPress dependencies\n */\nimport deprecated from '@wordpress/deprecated';\nimport { store as preferencesStore } from '@wordpress/preferences';\n\n/**\n * Set a default complementary area.\n *\n * @param {string} scope Complementary area scope.\n * @param {string} area  Area identifier.\n *\n * @return {Object} Action object.\n */\nexport const setDefaultComplementaryArea = ( scope, area ) => ( {\n\ttype: 'SET_DEFAULT_COMPLEMENTARY_AREA',\n\tscope,\n\tarea,\n} );\n\n/**\n * Enable the complementary area.\n *\n * @param {string} scope Complementary area scope.\n * @param {string} area  Area identifier.\n */\nexport const enableComplementaryArea =\n\t( scope, area ) =>\n\t( { registry, dispatch } ) => {\n\t\t// Return early if there's no area.\n\t\tif ( ! area ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isComplementaryAreaVisible = registry\n\t\t\t.select( preferencesStore )\n\t\t\t.get( scope, 'isComplementaryAreaVisible' );\n\n\t\tif ( ! isComplementaryAreaVisible ) {\n\t\t\tregistry\n\t\t\t\t.dispatch( preferencesStore )\n\t\t\t\t.set( scope, 'isComplementaryAreaVisible', true );\n\t\t}\n\n\t\tdispatch( {\n\t\t\ttype: 'ENABLE_COMPLEMENTARY_AREA',\n\t\t\tscope,\n\t\t\tarea,\n\t\t} );\n\t};\n\n/**\n * Disable the complementary area.\n *\n * @param {string} scope Complementary area scope.\n */\nexport const disableComplementaryArea =\n\t( scope ) =>\n\t( { registry } ) => {\n\t\tconst isComplementaryAreaVisible = registry\n\t\t\t.select( preferencesStore )\n\t\t\t.get( scope, 'isComplementaryAreaVisible' );\n\n\t\tif ( isComplementaryAreaVisible ) {\n\t\t\tregistry\n\t\t\t\t.dispatch( preferencesStore )\n\t\t\t\t.set( scope, 'isComplementaryAreaVisible', false );\n\t\t}\n\t};\n\n/**\n * Pins an item.\n *\n * @param {string} scope Item scope.\n * @param {string} item  Item identifier.\n *\n * @return {Object} Action object.\n */\nexport const pinItem =\n\t( scope, item ) =>\n\t( { registry } ) => {\n\t\t// Return early if there's no item.\n\t\tif ( ! item ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst pinnedItems = registry\n\t\t\t.select( preferencesStore )\n\t\t\t.get( scope, 'pinnedItems' );\n\n\t\t// The item is already pinned, there's nothing to do.\n\t\tif ( pinnedItems?.[ item ] === true ) {\n\t\t\treturn;\n\t\t}\n\n\t\tregistry.dispatch( preferencesStore ).set( scope, 'pinnedItems', {\n\t\t\t...pinnedItems,\n\t\t\t[ item ]: true,\n\t\t} );\n\t};\n\n/**\n * Unpins an item.\n *\n * @param {string} scope Item scope.\n * @param {string} item  Item identifier.\n */\nexport const unpinItem =\n\t( scope, item ) =>\n\t( { registry } ) => {\n\t\t// Return early if there's no item.\n\t\tif ( ! item ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst pinnedItems = registry\n\t\t\t.select( preferencesStore )\n\t\t\t.get( scope, 'pinnedItems' );\n\n\t\tregistry.dispatch( preferencesStore ).set( scope, 'pinnedItems', {\n\t\t\t...pinnedItems,\n\t\t\t[ item ]: false,\n\t\t} );\n\t};\n\n/**\n * Returns an action object used in signalling that a feature should be toggled.\n *\n * @param {string} scope       The feature scope (e.g. core/edit-post).\n * @param {string} featureName The feature name.\n */\nexport function toggleFeature( scope, featureName ) {\n\treturn function ( { registry } ) {\n\t\tdeprecated( `dispatch( 'core/interface' ).toggleFeature`, {\n\t\t\tsince: '6.0',\n\t\t\talternative: `dispatch( 'core/preferences' ).toggle`,\n\t\t} );\n\n\t\tregistry.dispatch( preferencesStore ).toggle( scope, featureName );\n\t};\n}\n\n/**\n * Returns an action object used in signalling that a feature should be set to\n * a true or false value\n *\n * @param {string}  scope       The feature scope (e.g. core/edit-post).\n * @param {string}  featureName The feature name.\n * @param {boolean} value       The value to set.\n *\n * @return {Object} Action object.\n */\nexport function setFeatureValue( scope, featureName, value ) {\n\treturn function ( { registry } ) {\n\t\tdeprecated( `dispatch( 'core/interface' ).setFeatureValue`, {\n\t\t\tsince: '6.0',\n\t\t\talternative: `dispatch( 'core/preferences' ).set`,\n\t\t} );\n\n\t\tregistry\n\t\t\t.dispatch( preferencesStore )\n\t\t\t.set( scope, featureName, !! value );\n\t};\n}\n\n/**\n * Returns an action object used in signalling that defaults should be set for features.\n *\n * @param {string}                  scope    The feature scope (e.g. core/edit-post).\n * @param {Object<string, boolean>} defaults A key/value map of feature names to values.\n *\n * @return {Object} Action object.\n */\nexport function setFeatureDefaults( scope, defaults ) {\n\treturn function ( { registry } ) {\n\t\tdeprecated( `dispatch( 'core/interface' ).setFeatureDefaults`, {\n\t\t\tsince: '6.0',\n\t\t\talternative: `dispatch( 'core/preferences' ).setDefaults`,\n\t\t} );\n\n\t\tregistry.dispatch( preferencesStore ).setDefaults( scope, defaults );\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the user opened a modal.\n *\n * @param {string} name A string that uniquely identifies the modal.\n *\n * @return {Object} Action object.\n */\nexport function openModal( name ) {\n\treturn {\n\t\ttype: 'OPEN_MODAL',\n\t\tname,\n\t};\n}\n\n/**\n * Returns an action object signalling that the user closed a modal.\n *\n * @return {Object} Action object.\n */\nexport function closeModal() {\n\treturn {\n\t\ttype: 'CLOSE_MODAL',\n\t};\n}\n","/**\n * WordPress dependencies\n */\nimport { createRegistrySelector } from '@wordpress/data';\nimport deprecated from '@wordpress/deprecated';\nimport { store as preferencesStore } from '@wordpress/preferences';\n\n/**\n * Returns the complementary area that is active in a given scope.\n *\n * @param {Object} state Global application state.\n * @param {string} scope Item scope.\n *\n * @return {string | null | undefined} The complementary area that is active in the given scope.\n */\nexport const getActiveComplementaryArea = createRegistrySelector(\n\t( select ) => ( state, scope ) => {\n\t\tconst isComplementaryAreaVisible = select( preferencesStore ).get(\n\t\t\tscope,\n\t\t\t'isComplementaryAreaVisible'\n\t\t);\n\n\t\t// Return `undefined` to indicate that the user has never toggled\n\t\t// visibility, this is the vanilla default. Other code relies on this\n\t\t// nuance in the return value.\n\t\tif ( isComplementaryAreaVisible === undefined ) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Return `null` to indicate the user hid the complementary area.\n\t\tif ( isComplementaryAreaVisible === false ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn state?.complementaryAreas?.[ scope ];\n\t}\n);\n\nexport const isComplementaryAreaLoading = createRegistrySelector(\n\t( select ) => ( state, scope ) => {\n\t\tconst isVisible = select( preferencesStore ).get(\n\t\t\tscope,\n\t\t\t'isComplementaryAreaVisible'\n\t\t);\n\t\tconst identifier = state?.complementaryAreas?.[ scope ];\n\n\t\treturn isVisible && identifier === undefined;\n\t}\n);\n\n/**\n * Returns a boolean indicating if an item is pinned or not.\n *\n * @param {Object} state Global application state.\n * @param {string} scope Scope.\n * @param {string} item  Item to check.\n *\n * @return {boolean} True if the item is pinned and false otherwise.\n */\nexport const isItemPinned = createRegistrySelector(\n\t( select ) => ( state, scope, item ) => {\n\t\tconst pinnedItems = select( preferencesStore ).get(\n\t\t\tscope,\n\t\t\t'pinnedItems'\n\t\t);\n\t\treturn pinnedItems?.[ item ] ?? true;\n\t}\n);\n\n/**\n * Returns a boolean indicating whether a feature is active for a particular\n * scope.\n *\n * @param {Object} state       The store state.\n * @param {string} scope       The scope of the feature (e.g. core/edit-post).\n * @param {string} featureName The name of the feature.\n *\n * @return {boolean} Is the feature enabled?\n */\nexport const isFeatureActive = createRegistrySelector(\n\t( select ) => ( state, scope, featureName ) => {\n\t\tdeprecated(\n\t\t\t`select( 'core/interface' ).isFeatureActive( scope, featureName )`,\n\t\t\t{\n\t\t\t\tsince: '6.0',\n\t\t\t\talternative: `select( 'core/preferences' ).get( scope, featureName )`,\n\t\t\t}\n\t\t);\n\n\t\treturn !! select( preferencesStore ).get( scope, featureName );\n\t}\n);\n\n/**\n * Returns true if a modal is active, or false otherwise.\n *\n * @param {Object} state     Global application state.\n * @param {string} modalName A string that uniquely identifies the modal.\n *\n * @return {boolean} Whether the modal is active.\n */\nexport function isModalActive( state, modalName ) {\n\treturn state.activeModal === modalName;\n}\n","/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\n\nexport function complementaryAreas( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'SET_DEFAULT_COMPLEMENTARY_AREA': {\n\t\t\tconst { scope, area } = action;\n\n\t\t\t// If there's already an area, don't overwrite it.\n\t\t\tif ( state[ scope ] ) {\n\t\t\t\treturn state;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ scope ]: area,\n\t\t\t};\n\t\t}\n\t\tcase 'ENABLE_COMPLEMENTARY_AREA': {\n\t\t\tconst { scope, area } = action;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ scope ]: area,\n\t\t\t};\n\t\t}\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer for storing the name of the open modal, or null if no modal is open.\n *\n * @param {Object} state  Previous state.\n * @param {Object} action Action object containing the `name` of the modal\n *\n * @return {Object} Updated state\n */\nexport function activeModal( state = null, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'OPEN_MODAL':\n\t\t\treturn action.name;\n\t\tcase 'CLOSE_MODAL':\n\t\t\treturn null;\n\t}\n\n\treturn state;\n}\n\nexport default combineReducers( {\n\tcomplementaryAreas,\n\tactiveModal,\n} );\n","/**\n * WordPress dependencies\n */\nimport { createReduxStore, register } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport * as actions from './actions';\nimport * as selectors from './selectors';\nimport reducer from './reducer';\nimport { STORE_NAME } from './constants';\n\n/**\n * Store definition for the interface namespace.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/data/README.md#createReduxStore\n *\n * @type {Object}\n */\nexport const store = createReduxStore( STORE_NAME, {\n\treducer,\n\tactions,\n\tselectors,\n} );\n\n// Once we build a more generic persistence plugin that works across types of stores\n// we'd be able to replace this with a register call.\nregister( store );\n","/**\n * The identifier for the data store.\n *\n * @type {string}\n */\nexport const STORE_NAME = 'core/interface';\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"plugins\"];","/**\n * WordPress dependencies\n */\nimport { withPluginContext } from '@wordpress/plugins';\n\nexport default withPluginContext( ( context, ownProps ) => {\n\treturn {\n\t\ticon: ownProps.icon || context.icon,\n\t\tidentifier:\n\t\t\townProps.identifier || `${ context.name }/${ ownProps.name }`,\n\t};\n} );\n","/**\n * WordPress dependencies\n */\nimport { Button } from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as interfaceStore } from '../../store';\nimport complementaryAreaContext from '../complementary-area-context';\n\nfunction ComplementaryAreaToggle( {\n\tas = Button,\n\tscope,\n\tidentifier,\n\ticon,\n\tselectedIcon,\n\tname,\n\t...props\n} ) {\n\tconst ComponentToUse = as;\n\tconst isSelected = useSelect(\n\t\t( select ) =>\n\t\t\tselect( interfaceStore ).getActiveComplementaryArea( scope ) ===\n\t\t\tidentifier,\n\t\t[ identifier ]\n\t);\n\tconst { enableComplementaryArea, disableComplementaryArea } =\n\t\tuseDispatch( interfaceStore );\n\treturn (\n\t\t<ComponentToUse\n\t\t\ticon={ selectedIcon && isSelected ? selectedIcon : icon }\n\t\t\tonClick={ () => {\n\t\t\t\tif ( isSelected ) {\n\t\t\t\t\tdisableComplementaryArea( scope );\n\t\t\t\t} else {\n\t\t\t\t\tenableComplementaryArea( scope, identifier );\n\t\t\t\t}\n\t\t\t} }\n\t\t\t{ ...props }\n\t\t/>\n\t);\n}\n\nexport default complementaryAreaContext( ComplementaryAreaToggle );\n","/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { closeSmall } from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport ComplementaryAreaToggle from '../complementary-area-toggle';\n\nconst ComplementaryAreaHeader = ( {\n\tsmallScreenTitle,\n\tchildren,\n\tclassName,\n\ttoggleButtonProps,\n} ) => {\n\tconst toggleButton = (\n\t\t<ComplementaryAreaToggle icon={ closeSmall } { ...toggleButtonProps } />\n\t);\n\treturn (\n\t\t<>\n\t\t\t<div className=\"components-panel__header interface-complementary-area-header__small\">\n\t\t\t\t{ smallScreenTitle && (\n\t\t\t\t\t<span className=\"interface-complementary-area-header__small-title\">\n\t\t\t\t\t\t{ smallScreenTitle }\n\t\t\t\t\t</span>\n\t\t\t\t) }\n\t\t\t\t{ toggleButton }\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName={ classnames(\n\t\t\t\t\t'components-panel__header',\n\t\t\t\t\t'interface-complementary-area-header',\n\t\t\t\t\tclassName\n\t\t\t\t) }\n\t\t\t\ttabIndex={ -1 }\n\t\t\t>\n\t\t\t\t{ children }\n\t\t\t\t{ toggleButton }\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default ComplementaryAreaHeader;\n","/**\n * WordPress dependencies\n */\nimport { ButtonGroup, Button, Slot, Fill } from '@wordpress/components';\nimport { Children } from '@wordpress/element';\n\nconst noop = () => {};\n\nfunction ActionItemSlot( {\n\tname,\n\tas: Component = ButtonGroup,\n\tfillProps = {},\n\tbubblesVirtually,\n\t...props\n} ) {\n\treturn (\n\t\t<Slot\n\t\t\tname={ name }\n\t\t\tbubblesVirtually={ bubblesVirtually }\n\t\t\tfillProps={ fillProps }\n\t\t>\n\t\t\t{ ( fills ) => {\n\t\t\t\tif ( ! Children.toArray( fills ).length ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\t// Special handling exists for backward compatibility.\n\t\t\t\t// It ensures that menu items created by plugin authors aren't\n\t\t\t\t// duplicated with automatically injected menu items coming\n\t\t\t\t// from pinnable plugin sidebars.\n\t\t\t\t// @see https://github.com/WordPress/gutenberg/issues/14457\n\t\t\t\tconst initializedByPlugins = [];\n\t\t\t\tChildren.forEach(\n\t\t\t\t\tfills,\n\t\t\t\t\t( {\n\t\t\t\t\t\tprops: { __unstableExplicitMenuItem, __unstableTarget },\n\t\t\t\t\t} ) => {\n\t\t\t\t\t\tif ( __unstableTarget && __unstableExplicitMenuItem ) {\n\t\t\t\t\t\t\tinitializedByPlugins.push( __unstableTarget );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tconst children = Children.map( fills, ( child ) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\t! child.props.__unstableExplicitMenuItem &&\n\t\t\t\t\t\tinitializedByPlugins.includes(\n\t\t\t\t\t\t\tchild.props.__unstableTarget\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\treturn child;\n\t\t\t\t} );\n\n\t\t\t\treturn <Component { ...props }>{ children }</Component>;\n\t\t\t} }\n\t\t</Slot>\n\t);\n}\n\nfunction ActionItem( { name, as: Component = Button, onClick, ...props } ) {\n\treturn (\n\t\t<Fill name={ name }>\n\t\t\t{ ( { onClick: fpOnClick } ) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Component\n\t\t\t\t\t\tonClick={\n\t\t\t\t\t\t\tonClick || fpOnClick\n\t\t\t\t\t\t\t\t? ( ...args ) => {\n\t\t\t\t\t\t\t\t\t\t( onClick || noop )( ...args );\n\t\t\t\t\t\t\t\t\t\t( fpOnClick || noop )( ...args );\n\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{ ...props }\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t} }\n\t\t</Fill>\n\t);\n}\n\nActionItem.Slot = ActionItemSlot;\n\nexport default ActionItem;\n","/**\n * WordPress dependencies\n */\nimport { check } from '@wordpress/icons';\nimport { MenuItem } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport ComplementaryAreaToggle from '../complementary-area-toggle';\nimport ActionItem from '../action-item';\n\nconst PluginsMenuItem = ( {\n\t// Menu item is marked with unstable prop for backward compatibility.\n\t// They are removed so they don't leak to DOM elements.\n\t// @see https://github.com/WordPress/gutenberg/issues/14457\n\t__unstableExplicitMenuItem,\n\t__unstableTarget,\n\t...restProps\n} ) => <MenuItem { ...restProps } />;\n\nexport default function ComplementaryAreaMoreMenuItem( {\n\tscope,\n\ttarget,\n\t__unstableExplicitMenuItem,\n\t...props\n} ) {\n\treturn (\n\t\t<ComplementaryAreaToggle\n\t\t\tas={ ( toggleProps ) => {\n\t\t\t\treturn (\n\t\t\t\t\t<ActionItem\n\t\t\t\t\t\t__unstableExplicitMenuItem={\n\t\t\t\t\t\t\t__unstableExplicitMenuItem\n\t\t\t\t\t\t}\n\t\t\t\t\t\t__unstableTarget={ `${ scope }/${ target }` }\n\t\t\t\t\t\tas={ PluginsMenuItem }\n\t\t\t\t\t\tname={ `${ scope }/plugin-more-menu` }\n\t\t\t\t\t\t{ ...toggleProps }\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t} }\n\t\t\trole=\"menuitemcheckbox\"\n\t\t\tselectedIcon={ check }\n\t\t\tname={ target }\n\t\t\tscope={ scope }\n\t\t\t{ ...props }\n\t\t/>\n\t);\n}\n","/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { Slot, Fill } from '@wordpress/components';\n\nfunction PinnedItems( { scope, ...props } ) {\n\treturn <Fill name={ `PinnedItems/${ scope }` } { ...props } />;\n}\n\nfunction PinnedItemsSlot( { scope, className, ...props } ) {\n\treturn (\n\t\t<Slot name={ `PinnedItems/${ scope }` } { ...props }>\n\t\t\t{ ( fills ) =>\n\t\t\t\tfills?.length > 0 && (\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={ classnames(\n\t\t\t\t\t\t\tclassName,\n\t\t\t\t\t\t\t'interface-pinned-items'\n\t\t\t\t\t\t) }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ fills }\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t</Slot>\n\t);\n}\n\nPinnedItems.Slot = PinnedItemsSlot;\n\nexport default PinnedItems;\n","/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { Button, Panel, Slot, Fill } from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\nimport { check, starEmpty, starFilled } from '@wordpress/icons';\nimport { useEffect, useRef } from '@wordpress/element';\nimport { store as viewportStore } from '@wordpress/viewport';\n\n/**\n * Internal dependencies\n */\nimport ComplementaryAreaHeader from '../complementary-area-header';\nimport ComplementaryAreaMoreMenuItem from '../complementary-area-more-menu-item';\nimport ComplementaryAreaToggle from '../complementary-area-toggle';\nimport withComplementaryAreaContext from '../complementary-area-context';\nimport PinnedItems from '../pinned-items';\nimport { store as interfaceStore } from '../../store';\n\nfunction ComplementaryAreaSlot( { scope, ...props } ) {\n\treturn <Slot name={ `ComplementaryArea/${ scope }` } { ...props } />;\n}\n\nfunction ComplementaryAreaFill( { scope, children, className } ) {\n\treturn (\n\t\t<Fill name={ `ComplementaryArea/${ scope }` }>\n\t\t\t<div className={ className }>{ children }</div>\n\t\t</Fill>\n\t);\n}\n\nfunction useAdjustComplementaryListener(\n\tscope,\n\tidentifier,\n\tactiveArea,\n\tisActive,\n\tisSmall\n) {\n\tconst previousIsSmall = useRef( false );\n\tconst shouldOpenWhenNotSmall = useRef( false );\n\tconst { enableComplementaryArea, disableComplementaryArea } =\n\t\tuseDispatch( interfaceStore );\n\tuseEffect( () => {\n\t\t// If the complementary area is active and the editor is switching from\n\t\t// a big to a small window size.\n\t\tif ( isActive && isSmall && ! previousIsSmall.current ) {\n\t\t\tdisableComplementaryArea( scope );\n\t\t\t// Flag the complementary area to be reopened when the window size\n\t\t\t// goes from small to big.\n\t\t\tshouldOpenWhenNotSmall.current = true;\n\t\t} else if (\n\t\t\t// If there is a flag indicating the complementary area should be\n\t\t\t// enabled when we go from small to big window size and we are going\n\t\t\t// from a small to big window size.\n\t\t\tshouldOpenWhenNotSmall.current &&\n\t\t\t! isSmall &&\n\t\t\tpreviousIsSmall.current\n\t\t) {\n\t\t\t// Remove the flag indicating the complementary area should be\n\t\t\t// enabled.\n\t\t\tshouldOpenWhenNotSmall.current = false;\n\t\t\tenableComplementaryArea( scope, identifier );\n\t\t} else if (\n\t\t\t// If the flag is indicating the current complementary should be\n\t\t\t// reopened but another complementary area becomes active, remove\n\t\t\t// the flag.\n\t\t\tshouldOpenWhenNotSmall.current &&\n\t\t\tactiveArea &&\n\t\t\tactiveArea !== identifier\n\t\t) {\n\t\t\tshouldOpenWhenNotSmall.current = false;\n\t\t}\n\t\tif ( isSmall !== previousIsSmall.current ) {\n\t\t\tpreviousIsSmall.current = isSmall;\n\t\t}\n\t}, [ isActive, isSmall, scope, identifier, activeArea ] );\n}\n\nfunction ComplementaryArea( {\n\tchildren,\n\tclassName,\n\tcloseLabel = __( 'Close plugin' ),\n\tidentifier,\n\theader,\n\theaderClassName,\n\ticon,\n\tisPinnable = true,\n\tpanelClassName,\n\tscope,\n\tname,\n\tsmallScreenTitle,\n\ttitle,\n\ttoggleShortcut,\n\tisActiveByDefault,\n\tshowIconLabels = false,\n} ) {\n\tconst { isLoading, isActive, isPinned, activeArea, isSmall, isLarge } =\n\t\tuseSelect(\n\t\t\t( select ) => {\n\t\t\t\tconst {\n\t\t\t\t\tgetActiveComplementaryArea,\n\t\t\t\t\tisComplementaryAreaLoading,\n\t\t\t\t\tisItemPinned,\n\t\t\t\t} = select( interfaceStore );\n\n\t\t\t\tconst _activeArea = getActiveComplementaryArea( scope );\n\n\t\t\t\treturn {\n\t\t\t\t\tisLoading: isComplementaryAreaLoading( scope ),\n\t\t\t\t\tisActive: _activeArea === identifier,\n\t\t\t\t\tisPinned: isItemPinned( scope, identifier ),\n\t\t\t\t\tactiveArea: _activeArea,\n\t\t\t\t\tisSmall:\n\t\t\t\t\t\tselect( viewportStore ).isViewportMatch( '< medium' ),\n\t\t\t\t\tisLarge: select( viewportStore ).isViewportMatch( 'large' ),\n\t\t\t\t};\n\t\t\t},\n\t\t\t[ identifier, scope ]\n\t\t);\n\tuseAdjustComplementaryListener(\n\t\tscope,\n\t\tidentifier,\n\t\tactiveArea,\n\t\tisActive,\n\t\tisSmall\n\t);\n\tconst {\n\t\tenableComplementaryArea,\n\t\tdisableComplementaryArea,\n\t\tpinItem,\n\t\tunpinItem,\n\t} = useDispatch( interfaceStore );\n\n\tuseEffect( () => {\n\t\t// Set initial visibility: For large screens, enable if it's active by\n\t\t// default. For small screens, always initially disable.\n\t\tif ( isActiveByDefault && activeArea === undefined && ! isSmall ) {\n\t\t\tenableComplementaryArea( scope, identifier );\n\t\t} else if ( activeArea === undefined && isSmall ) {\n\t\t\tdisableComplementaryArea( scope, identifier );\n\t\t}\n\t}, [ activeArea, isActiveByDefault, scope, identifier, isSmall ] );\n\n\treturn (\n\t\t<>\n\t\t\t{ isPinnable && (\n\t\t\t\t<PinnedItems scope={ scope }>\n\t\t\t\t\t{ isPinned && (\n\t\t\t\t\t\t<ComplementaryAreaToggle\n\t\t\t\t\t\t\tscope={ scope }\n\t\t\t\t\t\t\tidentifier={ identifier }\n\t\t\t\t\t\t\tisPressed={\n\t\t\t\t\t\t\t\tisActive && ( ! showIconLabels || isLarge )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\taria-expanded={ isActive }\n\t\t\t\t\t\t\taria-disabled={ isLoading }\n\t\t\t\t\t\t\tlabel={ title }\n\t\t\t\t\t\t\ticon={ showIconLabels ? check : icon }\n\t\t\t\t\t\t\tshowTooltip={ ! showIconLabels }\n\t\t\t\t\t\t\tvariant={ showIconLabels ? 'tertiary' : undefined }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</PinnedItems>\n\t\t\t) }\n\t\t\t{ name && isPinnable && (\n\t\t\t\t<ComplementaryAreaMoreMenuItem\n\t\t\t\t\ttarget={ name }\n\t\t\t\t\tscope={ scope }\n\t\t\t\t\ticon={ icon }\n\t\t\t\t>\n\t\t\t\t\t{ title }\n\t\t\t\t</ComplementaryAreaMoreMenuItem>\n\t\t\t) }\n\t\t\t{ isActive && (\n\t\t\t\t<ComplementaryAreaFill\n\t\t\t\t\tclassName={ classnames(\n\t\t\t\t\t\t'interface-complementary-area',\n\t\t\t\t\t\tclassName\n\t\t\t\t\t) }\n\t\t\t\t\tscope={ scope }\n\t\t\t\t>\n\t\t\t\t\t<ComplementaryAreaHeader\n\t\t\t\t\t\tclassName={ headerClassName }\n\t\t\t\t\t\tcloseLabel={ closeLabel }\n\t\t\t\t\t\tonClose={ () => disableComplementaryArea( scope ) }\n\t\t\t\t\t\tsmallScreenTitle={ smallScreenTitle }\n\t\t\t\t\t\ttoggleButtonProps={ {\n\t\t\t\t\t\t\tlabel: closeLabel,\n\t\t\t\t\t\t\tshortcut: toggleShortcut,\n\t\t\t\t\t\t\tscope,\n\t\t\t\t\t\t\tidentifier,\n\t\t\t\t\t\t} }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ header || (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<strong>{ title }</strong>\n\t\t\t\t\t\t\t\t{ isPinnable && (\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tclassName=\"interface-complementary-area__pin-unpin-item\"\n\t\t\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\t\t\tisPinned ? starFilled : starEmpty\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t\t\t\t\tisPinned\n\t\t\t\t\t\t\t\t\t\t\t\t? __( 'Unpin from toolbar' )\n\t\t\t\t\t\t\t\t\t\t\t\t: __( 'Pin to toolbar' )\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tonClick={ () =>\n\t\t\t\t\t\t\t\t\t\t\t( isPinned ? unpinItem : pinItem )(\n\t\t\t\t\t\t\t\t\t\t\t\tscope,\n\t\t\t\t\t\t\t\t\t\t\t\tidentifier\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tisPressed={ isPinned }\n\t\t\t\t\t\t\t\t\t\taria-expanded={ isPinned }\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</ComplementaryAreaHeader>\n\t\t\t\t\t<Panel className={ panelClassName }>{ children }</Panel>\n\t\t\t\t</ComplementaryAreaFill>\n\t\t\t) }\n\t\t</>\n\t);\n}\n\nconst ComplementaryAreaWrapped =\n\twithComplementaryAreaContext( ComplementaryArea );\n\nComplementaryAreaWrapped.Slot = ComplementaryAreaSlot;\n\nexport default ComplementaryAreaWrapped;\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"compose\"];","/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\nexport default function NavigableRegion( {\n\tchildren,\n\tclassName,\n\tariaLabel,\n\tas: Tag = 'div',\n\t...props\n} ) {\n\treturn (\n\t\t<Tag\n\t\t\tclassName={ classnames( 'interface-navigable-region', className ) }\n\t\t\taria-label={ ariaLabel }\n\t\t\trole=\"region\"\n\t\t\ttabIndex=\"-1\"\n\t\t\t{ ...props }\n\t\t>\n\t\t\t{ children }\n\t\t</Tag>\n\t);\n}\n","/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { forwardRef, useEffect } from '@wordpress/element';\nimport {\n\t__unstableUseNavigateRegions as useNavigateRegions,\n\t__unstableMotion as motion,\n} from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useMergeRefs } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport NavigableRegion from '../navigable-region';\n\nfunction useHTMLClass( className ) {\n\tuseEffect( () => {\n\t\tconst element =\n\t\t\tdocument && document.querySelector( `html:not(.${ className })` );\n\t\tif ( ! element ) {\n\t\t\treturn;\n\t\t}\n\t\telement.classList.toggle( className );\n\t\treturn () => {\n\t\t\telement.classList.toggle( className );\n\t\t};\n\t}, [ className ] );\n}\n\nconst headerVariants = {\n\thidden: { opacity: 0 },\n\thover: {\n\t\topacity: 1,\n\t\ttransition: { type: 'tween', delay: 0.2, delayChildren: 0.2 },\n\t},\n\tdistractionFreeInactive: { opacity: 1, transition: { delay: 0 } },\n};\n\nfunction InterfaceSkeleton(\n\t{\n\t\tisDistractionFree,\n\t\tfooter,\n\t\theader,\n\t\teditorNotices,\n\t\tsidebar,\n\t\tsecondarySidebar,\n\t\tnotices,\n\t\tcontent,\n\t\tactions,\n\t\tlabels,\n\t\tclassName,\n\t\tenableRegionNavigation = true,\n\t\t// Todo: does this need to be a prop.\n\t\t// Can we use a dependency to keyboard-shortcuts directly?\n\t\tshortcuts,\n\t},\n\tref\n) {\n\tconst navigateRegionsProps = useNavigateRegions( shortcuts );\n\n\tuseHTMLClass( 'interface-interface-skeleton__html-container' );\n\n\tconst defaultLabels = {\n\t\t/* translators: accessibility text for the top bar landmark region. */\n\t\theader: __( 'Header' ),\n\t\t/* translators: accessibility text for the content landmark region. */\n\t\tbody: __( 'Content' ),\n\t\t/* translators: accessibility text for the secondary sidebar landmark region. */\n\t\tsecondarySidebar: __( 'Block Library' ),\n\t\t/* translators: accessibility text for the settings landmark region. */\n\t\tsidebar: __( 'Settings' ),\n\t\t/* translators: accessibility text for the publish landmark region. */\n\t\tactions: __( 'Publish' ),\n\t\t/* translators: accessibility text for the footer landmark region. */\n\t\tfooter: __( 'Footer' ),\n\t};\n\n\tconst mergedLabels = { ...defaultLabels, ...labels };\n\n\treturn (\n\t\t<div\n\t\t\t{ ...( enableRegionNavigation ? navigateRegionsProps : {} ) }\n\t\t\tref={ useMergeRefs( [\n\t\t\t\tref,\n\t\t\t\tenableRegionNavigation ? navigateRegionsProps.ref : undefined,\n\t\t\t] ) }\n\t\t\tclassName={ classnames(\n\t\t\t\tclassName,\n\t\t\t\t'interface-interface-skeleton',\n\t\t\t\tnavigateRegionsProps.className,\n\t\t\t\t!! footer && 'has-footer'\n\t\t\t) }\n\t\t>\n\t\t\t<div className=\"interface-interface-skeleton__editor\">\n\t\t\t\t{ !! header && (\n\t\t\t\t\t<NavigableRegion\n\t\t\t\t\t\tas={ motion.div }\n\t\t\t\t\t\tclassName=\"interface-interface-skeleton__header\"\n\t\t\t\t\t\taria-label={ mergedLabels.header }\n\t\t\t\t\t\tinitial={\n\t\t\t\t\t\t\tisDistractionFree\n\t\t\t\t\t\t\t\t? 'hidden'\n\t\t\t\t\t\t\t\t: 'distractionFreeInactive'\n\t\t\t\t\t\t}\n\t\t\t\t\t\twhileHover={\n\t\t\t\t\t\t\tisDistractionFree\n\t\t\t\t\t\t\t\t? 'hover'\n\t\t\t\t\t\t\t\t: 'distractionFreeInactive'\n\t\t\t\t\t\t}\n\t\t\t\t\t\tanimate={\n\t\t\t\t\t\t\tisDistractionFree\n\t\t\t\t\t\t\t\t? 'hidden'\n\t\t\t\t\t\t\t\t: 'distractionFreeInactive'\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvariants={ headerVariants }\n\t\t\t\t\t\ttransition={\n\t\t\t\t\t\t\tisDistractionFree\n\t\t\t\t\t\t\t\t? { type: 'tween', delay: 0.8 }\n\t\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t{ header }\n\t\t\t\t\t</NavigableRegion>\n\t\t\t\t) }\n\t\t\t\t{ isDistractionFree && (\n\t\t\t\t\t<div className=\"interface-interface-skeleton__header\">\n\t\t\t\t\t\t{ editorNotices }\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\t\t\t\t<div className=\"interface-interface-skeleton__body\">\n\t\t\t\t\t{ !! secondarySidebar && (\n\t\t\t\t\t\t<NavigableRegion\n\t\t\t\t\t\t\tclassName=\"interface-interface-skeleton__secondary-sidebar\"\n\t\t\t\t\t\t\tariaLabel={ mergedLabels.secondarySidebar }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ secondarySidebar }\n\t\t\t\t\t\t</NavigableRegion>\n\t\t\t\t\t) }\n\t\t\t\t\t{ !! notices && (\n\t\t\t\t\t\t<div className=\"interface-interface-skeleton__notices\">\n\t\t\t\t\t\t\t{ notices }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) }\n\t\t\t\t\t<NavigableRegion\n\t\t\t\t\t\tclassName=\"interface-interface-skeleton__content\"\n\t\t\t\t\t\tariaLabel={ mergedLabels.body }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ content }\n\t\t\t\t\t</NavigableRegion>\n\t\t\t\t\t{ !! sidebar && (\n\t\t\t\t\t\t<NavigableRegion\n\t\t\t\t\t\t\tclassName=\"interface-interface-skeleton__sidebar\"\n\t\t\t\t\t\t\tariaLabel={ mergedLabels.sidebar }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ sidebar }\n\t\t\t\t\t\t</NavigableRegion>\n\t\t\t\t\t) }\n\t\t\t\t\t{ !! actions && (\n\t\t\t\t\t\t<NavigableRegion\n\t\t\t\t\t\t\tclassName=\"interface-interface-skeleton__actions\"\n\t\t\t\t\t\t\tariaLabel={ mergedLabels.actions }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ actions }\n\t\t\t\t\t\t</NavigableRegion>\n\t\t\t\t\t) }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{ !! footer && (\n\t\t\t\t<NavigableRegion\n\t\t\t\t\tclassName=\"interface-interface-skeleton__footer\"\n\t\t\t\t\tariaLabel={ mergedLabels.footer }\n\t\t\t\t>\n\t\t\t\t\t{ footer }\n\t\t\t\t</NavigableRegion>\n\t\t\t) }\n\t\t</div>\n\t);\n}\n\nexport default forwardRef( InterfaceSkeleton );\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst moreVertical = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M13 19h-2v-2h2v2zm0-6h-2v-2h2v2zm0-6h-2V5h2v2z\" />\n\t</SVG>\n);\n\nexport default moreVertical;\n","/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { DropdownMenu } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { moreVertical } from '@wordpress/icons';\n\nexport default function MoreMenuDropdown( {\n\tas: DropdownComponent = DropdownMenu,\n\tclassName,\n\t/* translators: button label text should, if possible, be under 16 characters. */\n\tlabel = __( 'Options' ),\n\tpopoverProps,\n\ttoggleProps,\n\tchildren,\n} ) {\n\treturn (\n\t\t<DropdownComponent\n\t\t\tclassName={ classnames(\n\t\t\t\t'interface-more-menu-dropdown',\n\t\t\t\tclassName\n\t\t\t) }\n\t\t\ticon={ moreVertical }\n\t\t\tlabel={ label }\n\t\t\tpopoverProps={ {\n\t\t\t\tplacement: 'bottom-end',\n\t\t\t\t...popoverProps,\n\t\t\t\tclassName: classnames(\n\t\t\t\t\t'interface-more-menu-dropdown__content',\n\t\t\t\t\tpopoverProps?.className\n\t\t\t\t),\n\t\t\t} }\n\t\t\ttoggleProps={ {\n\t\t\t\ttooltipPosition: 'bottom',\n\t\t\t\t...toggleProps,\n\t\t\t} }\n\t\t>\n\t\t\t{ ( onClose ) => children( onClose ) }\n\t\t</DropdownComponent>\n\t);\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","/**\n * WordPress dependencies\n */\nimport { createBlock, parse, serialize } from '@wordpress/blocks';\nimport { addWidgetIdToBlock } from '@wordpress/widgets';\n\n/**\n * Converts a widget entity record into a block.\n *\n * @param {Object} widget The widget entity record.\n * @return {Object} a block (converted from the entity record).\n */\nexport function transformWidgetToBlock( widget ) {\n\tif ( widget.id_base === 'block' ) {\n\t\tconst parsedBlocks = parse( widget.instance.raw.content, {\n\t\t\t__unstableSkipAutop: true,\n\t\t} );\n\t\tif ( ! parsedBlocks.length ) {\n\t\t\treturn addWidgetIdToBlock(\n\t\t\t\tcreateBlock( 'core/paragraph', {}, [] ),\n\t\t\t\twidget.id\n\t\t\t);\n\t\t}\n\t\treturn addWidgetIdToBlock( parsedBlocks[ 0 ], widget.id );\n\t}\n\n\tlet attributes;\n\tif ( widget._embedded.about[ 0 ].is_multi ) {\n\t\tattributes = {\n\t\t\tidBase: widget.id_base,\n\t\t\tinstance: widget.instance,\n\t\t};\n\t} else {\n\t\tattributes = {\n\t\t\tid: widget.id,\n\t\t};\n\t}\n\n\treturn addWidgetIdToBlock(\n\t\tcreateBlock( 'core/legacy-widget', attributes, [] ),\n\t\twidget.id\n\t);\n}\n\n/**\n * Converts a block to a widget entity record.\n *\n * @param {Object}  block         The block.\n * @param {Object?} relatedWidget A related widget entity record from the API (optional).\n * @return {Object} the widget object (converted from block).\n */\nexport function transformBlockToWidget( block, relatedWidget = {} ) {\n\tlet widget;\n\n\tconst isValidLegacyWidgetBlock =\n\t\tblock.name === 'core/legacy-widget' &&\n\t\t( block.attributes.id || block.attributes.instance );\n\n\tif ( isValidLegacyWidgetBlock ) {\n\t\twidget = {\n\t\t\t...relatedWidget,\n\t\t\tid: block.attributes.id ?? relatedWidget.id,\n\t\t\tid_base: block.attributes.idBase ?? relatedWidget.id_base,\n\t\t\tinstance: block.attributes.instance ?? relatedWidget.instance,\n\t\t};\n\t} else {\n\t\twidget = {\n\t\t\t...relatedWidget,\n\t\t\tid_base: 'block',\n\t\t\tinstance: {\n\t\t\t\traw: {\n\t\t\t\t\tcontent: serialize( block ),\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t}\n\n\t// Delete read-only properties.\n\tdelete widget.rendered;\n\tdelete widget.rendered_form;\n\n\treturn widget;\n}\n","/**\n * \"Kind\" of the navigation post.\n *\n * @type {string}\n */\nexport const KIND = 'root';\n\n/**\n * \"post type\" of the navigation post.\n *\n * @type {string}\n */\nexport const WIDGET_AREA_ENTITY_TYPE = 'sidebar';\n\n/**\n * \"post type\" of the widget area post.\n *\n * @type {string}\n */\nexport const POST_TYPE = 'postType';\n\n/**\n * Builds an ID for a new widget area post.\n *\n * @param {number} widgetAreaId Widget area id.\n * @return {string} An ID.\n */\nexport const buildWidgetAreaPostId = ( widgetAreaId ) =>\n\t`widget-area-${ widgetAreaId }`;\n\n/**\n * Builds an ID for a global widget areas post.\n *\n * @return {string} An ID.\n */\nexport const buildWidgetAreasPostId = () => `widget-areas`;\n\n/**\n * Builds a query to resolve sidebars.\n *\n * @return {Object} Query.\n */\nexport function buildWidgetAreasQuery() {\n\treturn {\n\t\tper_page: -1,\n\t};\n}\n\n/**\n * Builds a query to resolve widgets.\n *\n * @return {Object} Query.\n */\nexport function buildWidgetsQuery() {\n\treturn {\n\t\tper_page: -1,\n\t\t_embed: 'about',\n\t};\n}\n\n/**\n * Creates a stub post with given id and set of blocks. Used as a governing entity records\n * for all widget areas.\n *\n * @param {string} id     Post ID.\n * @param {Array}  blocks The list of blocks.\n * @return {Object} A stub post object formatted in compliance with the data layer.\n */\nexport const createStubPost = ( id, blocks ) => ( {\n\tid,\n\tslug: id,\n\tstatus: 'draft',\n\ttype: 'page',\n\tblocks,\n\tmeta: {\n\t\twidgetAreaId: id,\n\t},\n} );\n","/**\n * Module Constants\n */\nexport const STORE_NAME = 'core/edit-widgets';\n","/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport { store as noticesStore } from '@wordpress/notices';\nimport { store as interfaceStore } from '@wordpress/interface';\nimport { getWidgetIdFromBlock } from '@wordpress/widgets';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport { transformBlockToWidget } from './transformers';\nimport {\n\tbuildWidgetAreaPostId,\n\tbuildWidgetAreasQuery,\n\tcreateStubPost,\n\tKIND,\n\tPOST_TYPE,\n\tWIDGET_AREA_ENTITY_TYPE,\n} from './utils';\nimport { STORE_NAME as editWidgetsStoreName } from './constants';\n\n/**\n * Persists a stub post with given ID to core data store. The post is meant to be in-memory only and\n * shouldn't be saved via the API.\n *\n * @param {string} id     Post ID.\n * @param {Array}  blocks Blocks the post should consist of.\n * @return {Object} The post object.\n */\nexport const persistStubPost =\n\t( id, blocks ) =>\n\t( { registry } ) => {\n\t\tconst stubPost = createStubPost( id, blocks );\n\t\tregistry\n\t\t\t.dispatch( coreStore )\n\t\t\t.receiveEntityRecords(\n\t\t\t\tKIND,\n\t\t\t\tPOST_TYPE,\n\t\t\t\tstubPost,\n\t\t\t\t{ id: stubPost.id },\n\t\t\t\tfalse\n\t\t\t);\n\t\treturn stubPost;\n\t};\n\n/**\n * Converts all the blocks from edited widget areas into widgets,\n * and submits a batch request to save everything at once.\n *\n * Creates a snackbar notice on either success or error.\n *\n * @return {Function} An action creator.\n */\nexport const saveEditedWidgetAreas =\n\t() =>\n\tasync ( { select, dispatch, registry } ) => {\n\t\tconst editedWidgetAreas = select.getEditedWidgetAreas();\n\t\tif ( ! editedWidgetAreas?.length ) {\n\t\t\treturn;\n\t\t}\n\t\ttry {\n\t\t\tawait dispatch.saveWidgetAreas( editedWidgetAreas );\n\t\t\tregistry\n\t\t\t\t.dispatch( noticesStore )\n\t\t\t\t.createSuccessNotice( __( 'Widgets saved.' ), {\n\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t} );\n\t\t} catch ( e ) {\n\t\t\tregistry.dispatch( noticesStore ).createErrorNotice(\n\t\t\t\t/* translators: %s: The error message. */\n\t\t\t\tsprintf( __( 'There was an error. %s' ), e.message ),\n\t\t\t\t{\n\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t};\n\n/**\n * Converts all the blocks from specified widget areas into widgets,\n * and submits a batch request to save everything at once.\n *\n * @param {Object[]} widgetAreas Widget areas to save.\n * @return {Function} An action creator.\n */\nexport const saveWidgetAreas =\n\t( widgetAreas ) =>\n\tasync ( { dispatch, registry } ) => {\n\t\ttry {\n\t\t\tfor ( const widgetArea of widgetAreas ) {\n\t\t\t\tawait dispatch.saveWidgetArea( widgetArea.id );\n\t\t\t}\n\t\t} finally {\n\t\t\t// saveEditedEntityRecord resets the resolution status, let's fix it manually.\n\t\t\tawait registry\n\t\t\t\t.dispatch( coreStore )\n\t\t\t\t.finishResolution(\n\t\t\t\t\t'getEntityRecord',\n\t\t\t\t\tKIND,\n\t\t\t\t\tWIDGET_AREA_ENTITY_TYPE,\n\t\t\t\t\tbuildWidgetAreasQuery()\n\t\t\t\t);\n\t\t}\n\t};\n\n/**\n * Converts all the blocks from a widget area specified by ID into widgets,\n * and submits a batch request to save everything at once.\n *\n * @param {string} widgetAreaId ID of the widget area to process.\n * @return {Function} An action creator.\n */\nexport const saveWidgetArea =\n\t( widgetAreaId ) =>\n\tasync ( { dispatch, select, registry } ) => {\n\t\tconst widgets = select.getWidgets();\n\n\t\tconst post = registry\n\t\t\t.select( coreStore )\n\t\t\t.getEditedEntityRecord(\n\t\t\t\tKIND,\n\t\t\t\tPOST_TYPE,\n\t\t\t\tbuildWidgetAreaPostId( widgetAreaId )\n\t\t\t);\n\n\t\t// Get all widgets from this area\n\t\tconst areaWidgets = Object.values( widgets ).filter(\n\t\t\t( { sidebar } ) => sidebar === widgetAreaId\n\t\t);\n\n\t\t// Remove all duplicate reference widget instances for legacy widgets.\n\t\t// Why? We filter out the widgets with duplicate IDs to prevent adding more than one instance of a widget\n\t\t// implemented using a function. WordPress doesn't support having more than one instance of these, if you try to\n\t\t// save multiple instances of these in different sidebars you will run into undefined behaviors.\n\t\tconst usedReferenceWidgets = [];\n\t\tconst widgetsBlocks = post.blocks.filter( ( block ) => {\n\t\t\tconst { id } = block.attributes;\n\n\t\t\tif ( block.name === 'core/legacy-widget' && id ) {\n\t\t\t\tif ( usedReferenceWidgets.includes( id ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tusedReferenceWidgets.push( id );\n\t\t\t}\n\t\t\treturn true;\n\t\t} );\n\n\t\t// Determine which widgets have been deleted. We can tell if a widget is\n\t\t// deleted and not just moved to a different area by looking to see if\n\t\t// getWidgetAreaForWidgetId() finds something.\n\t\tconst deletedWidgets = [];\n\t\tfor ( const widget of areaWidgets ) {\n\t\t\tconst widgetsNewArea = select.getWidgetAreaForWidgetId( widget.id );\n\t\t\tif ( ! widgetsNewArea ) {\n\t\t\t\tdeletedWidgets.push( widget );\n\t\t\t}\n\t\t}\n\n\t\tconst batchMeta = [];\n\t\tconst batchTasks = [];\n\t\tconst sidebarWidgetsIds = [];\n\t\tfor ( let i = 0; i < widgetsBlocks.length; i++ ) {\n\t\t\tconst block = widgetsBlocks[ i ];\n\t\t\tconst widgetId = getWidgetIdFromBlock( block );\n\t\t\tconst oldWidget = widgets[ widgetId ];\n\t\t\tconst widget = transformBlockToWidget( block, oldWidget );\n\n\t\t\t// We'll replace the null widgetId after save, but we track it here\n\t\t\t// since order is important.\n\t\t\tsidebarWidgetsIds.push( widgetId );\n\n\t\t\t// Check oldWidget as widgetId might refer to an ID which has been\n\t\t\t// deleted, e.g. if a deleted block is restored via undo after saving.\n\t\t\tif ( oldWidget ) {\n\t\t\t\t// Update an existing widget.\n\t\t\t\tregistry.dispatch( coreStore ).editEntityRecord(\n\t\t\t\t\t'root',\n\t\t\t\t\t'widget',\n\t\t\t\t\twidgetId,\n\t\t\t\t\t{\n\t\t\t\t\t\t...widget,\n\t\t\t\t\t\tsidebar: widgetAreaId,\n\t\t\t\t\t},\n\t\t\t\t\t{ undoIgnore: true }\n\t\t\t\t);\n\n\t\t\t\tconst hasEdits = registry\n\t\t\t\t\t.select( coreStore )\n\t\t\t\t\t.hasEditsForEntityRecord( 'root', 'widget', widgetId );\n\n\t\t\t\tif ( ! hasEdits ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tbatchTasks.push( ( { saveEditedEntityRecord } ) =>\n\t\t\t\t\tsaveEditedEntityRecord( 'root', 'widget', widgetId )\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t// Create a new widget.\n\t\t\t\tbatchTasks.push( ( { saveEntityRecord } ) =>\n\t\t\t\t\tsaveEntityRecord( 'root', 'widget', {\n\t\t\t\t\t\t...widget,\n\t\t\t\t\t\tsidebar: widgetAreaId,\n\t\t\t\t\t} )\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tbatchMeta.push( {\n\t\t\t\tblock,\n\t\t\t\tposition: i,\n\t\t\t\tclientId: block.clientId,\n\t\t\t} );\n\t\t}\n\t\tfor ( const widget of deletedWidgets ) {\n\t\t\tbatchTasks.push( ( { deleteEntityRecord } ) =>\n\t\t\t\tdeleteEntityRecord( 'root', 'widget', widget.id, {\n\t\t\t\t\tforce: true,\n\t\t\t\t} )\n\t\t\t);\n\t\t}\n\n\t\tconst records = await registry\n\t\t\t.dispatch( coreStore )\n\t\t\t.__experimentalBatch( batchTasks );\n\t\tconst preservedRecords = records.filter(\n\t\t\t( record ) => ! record.hasOwnProperty( 'deleted' )\n\t\t);\n\n\t\tconst failedWidgetNames = [];\n\n\t\tfor ( let i = 0; i < preservedRecords.length; i++ ) {\n\t\t\tconst widget = preservedRecords[ i ];\n\t\t\tconst { block, position } = batchMeta[ i ];\n\n\t\t\t// Set __internalWidgetId on the block. This will be persisted to the\n\t\t\t// store when we dispatch receiveEntityRecords( post ) below.\n\t\t\tpost.blocks[ position ].attributes.__internalWidgetId = widget.id;\n\n\t\t\tconst error = registry\n\t\t\t\t.select( coreStore )\n\t\t\t\t.getLastEntitySaveError( 'root', 'widget', widget.id );\n\t\t\tif ( error ) {\n\t\t\t\tfailedWidgetNames.push( block.attributes?.name || block?.name );\n\t\t\t}\n\n\t\t\tif ( ! sidebarWidgetsIds[ position ] ) {\n\t\t\t\tsidebarWidgetsIds[ position ] = widget.id;\n\t\t\t}\n\t\t}\n\n\t\tif ( failedWidgetNames.length ) {\n\t\t\tthrow new Error(\n\t\t\t\tsprintf(\n\t\t\t\t\t/* translators: %s: List of widget names */\n\t\t\t\t\t__( 'Could not save the following widgets: %s.' ),\n\t\t\t\t\tfailedWidgetNames.join( ', ' )\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tregistry.dispatch( coreStore ).editEntityRecord(\n\t\t\tKIND,\n\t\t\tWIDGET_AREA_ENTITY_TYPE,\n\t\t\twidgetAreaId,\n\t\t\t{\n\t\t\t\twidgets: sidebarWidgetsIds,\n\t\t\t},\n\t\t\t{ undoIgnore: true }\n\t\t);\n\n\t\tdispatch( trySaveWidgetArea( widgetAreaId ) );\n\n\t\tregistry\n\t\t\t.dispatch( coreStore )\n\t\t\t.receiveEntityRecords( KIND, POST_TYPE, post, undefined );\n\t};\n\nconst trySaveWidgetArea =\n\t( widgetAreaId ) =>\n\t( { registry } ) => {\n\t\tregistry\n\t\t\t.dispatch( coreStore )\n\t\t\t.saveEditedEntityRecord(\n\t\t\t\tKIND,\n\t\t\t\tWIDGET_AREA_ENTITY_TYPE,\n\t\t\t\twidgetAreaId,\n\t\t\t\t{\n\t\t\t\t\tthrowOnError: true,\n\t\t\t\t}\n\t\t\t);\n\t};\n\n/**\n * Sets the clientId stored for a particular widgetId.\n *\n * @param {number} clientId Client id.\n * @param {number} widgetId Widget id.\n *\n * @return {Object} Action.\n */\nexport function setWidgetIdForClientId( clientId, widgetId ) {\n\treturn {\n\t\ttype: 'SET_WIDGET_ID_FOR_CLIENT_ID',\n\t\tclientId,\n\t\twidgetId,\n\t};\n}\n\n/**\n * Sets the open state of all the widget areas.\n *\n * @param {Object} widgetAreasOpenState The open states of all the widget areas.\n *\n * @return {Object} Action.\n */\nexport function setWidgetAreasOpenState( widgetAreasOpenState ) {\n\treturn {\n\t\ttype: 'SET_WIDGET_AREAS_OPEN_STATE',\n\t\twidgetAreasOpenState,\n\t};\n}\n\n/**\n * Sets the open state of the widget area.\n *\n * @param {string}  clientId The clientId of the widget area.\n * @param {boolean} isOpen   Whether the widget area should be opened.\n *\n * @return {Object} Action.\n */\nexport function setIsWidgetAreaOpen( clientId, isOpen ) {\n\treturn {\n\t\ttype: 'SET_IS_WIDGET_AREA_OPEN',\n\t\tclientId,\n\t\tisOpen,\n\t};\n}\n\n/**\n * Returns an action object used to open/close the inserter.\n *\n * @param {boolean|Object} value                Whether the inserter should be\n *                                              opened (true) or closed (false).\n *                                              To specify an insertion point,\n *                                              use an object.\n * @param {string}         value.rootClientId   The root client ID to insert at.\n * @param {number}         value.insertionIndex The index to insert at.\n *\n * @return {Object} Action object.\n */\nexport function setIsInserterOpened( value ) {\n\treturn {\n\t\ttype: 'SET_IS_INSERTER_OPENED',\n\t\tvalue,\n\t};\n}\n\n/**\n * Returns an action object used to open/close the list view.\n *\n * @param {boolean} isOpen A boolean representing whether the list view should be opened or closed.\n * @return {Object} Action object.\n */\nexport function setIsListViewOpened( isOpen ) {\n\treturn {\n\t\ttype: 'SET_IS_LIST_VIEW_OPENED',\n\t\tisOpen,\n\t};\n}\n\n/**\n * Returns an action object signalling that the user closed the sidebar.\n *\n * @return {Object} Action creator.\n */\nexport const closeGeneralSidebar =\n\t() =>\n\t( { registry } ) => {\n\t\tregistry\n\t\t\t.dispatch( interfaceStore )\n\t\t\t.disableComplementaryArea( editWidgetsStoreName );\n\t};\n\n/**\n * Action that handles moving a block between widget areas\n *\n * @param {string} clientId     The clientId of the block to move.\n * @param {string} widgetAreaId The id of the widget area to move the block to.\n */\nexport const moveBlockToWidgetArea =\n\t( clientId, widgetAreaId ) =>\n\tasync ( { dispatch, select, registry } ) => {\n\t\tconst sourceRootClientId = registry\n\t\t\t.select( blockEditorStore )\n\t\t\t.getBlockRootClientId( clientId );\n\n\t\t// Search the top level blocks (widget areas) for the one with the matching\n\t\t// id attribute. Makes the assumption that all top-level blocks are widget\n\t\t// areas.\n\t\tconst widgetAreas = registry.select( blockEditorStore ).getBlocks();\n\t\tconst destinationWidgetAreaBlock = widgetAreas.find(\n\t\t\t( { attributes } ) => attributes.id === widgetAreaId\n\t\t);\n\t\tconst destinationRootClientId = destinationWidgetAreaBlock.clientId;\n\n\t\t// Get the index for moving to the end of the destination widget area.\n\t\tconst destinationInnerBlocksClientIds = registry\n\t\t\t.select( blockEditorStore )\n\t\t\t.getBlockOrder( destinationRootClientId );\n\t\tconst destinationIndex = destinationInnerBlocksClientIds.length;\n\n\t\t// Reveal the widget area, if it's not open.\n\t\tconst isDestinationWidgetAreaOpen = select.getIsWidgetAreaOpen(\n\t\t\tdestinationRootClientId\n\t\t);\n\n\t\tif ( ! isDestinationWidgetAreaOpen ) {\n\t\t\tdispatch.setIsWidgetAreaOpen( destinationRootClientId, true );\n\t\t}\n\n\t\t// Move the block.\n\t\tregistry\n\t\t\t.dispatch( blockEditorStore )\n\t\t\t.moveBlocksToPosition(\n\t\t\t\t[ clientId ],\n\t\t\t\tsourceRootClientId,\n\t\t\t\tdestinationRootClientId,\n\t\t\t\tdestinationIndex\n\t\t\t);\n\t};\n","/**\n * WordPress dependencies\n */\nimport { createBlock } from '@wordpress/blocks';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { persistStubPost, setWidgetAreasOpenState } from './actions';\nimport {\n\tKIND,\n\tWIDGET_AREA_ENTITY_TYPE,\n\tbuildWidgetsQuery,\n\tbuildWidgetAreasQuery,\n\tbuildWidgetAreaPostId,\n\tbuildWidgetAreasPostId,\n} from './utils';\nimport { transformWidgetToBlock } from './transformers';\n\n/**\n * Creates a \"stub\" widgets post reflecting all available widget areas. The\n * post is meant as a convenient to only exists in runtime and should never be saved. It\n * enables a convenient way of editing the widgets by using a regular post editor.\n *\n * Fetches all widgets from all widgets aras, converts them into blocks, and hydrates a new post with them.\n *\n * @return {Function} An action creator.\n */\nexport const getWidgetAreas =\n\t() =>\n\tasync ( { dispatch, registry } ) => {\n\t\tconst query = buildWidgetAreasQuery();\n\t\tconst widgetAreas = await registry\n\t\t\t.resolveSelect( coreStore )\n\t\t\t.getEntityRecords( KIND, WIDGET_AREA_ENTITY_TYPE, query );\n\n\t\tconst widgetAreaBlocks = [];\n\t\tconst sortedWidgetAreas = widgetAreas.sort( ( a, b ) => {\n\t\t\tif ( a.id === 'wp_inactive_widgets' ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif ( b.id === 'wp_inactive_widgets' ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn 0;\n\t\t} );\n\t\tfor ( const widgetArea of sortedWidgetAreas ) {\n\t\t\twidgetAreaBlocks.push(\n\t\t\t\tcreateBlock( 'core/widget-area', {\n\t\t\t\t\tid: widgetArea.id,\n\t\t\t\t\tname: widgetArea.name,\n\t\t\t\t} )\n\t\t\t);\n\n\t\t\tif ( ! widgetArea.widgets.length ) {\n\t\t\t\t// If this widget area has no widgets, it won't get a post setup by\n\t\t\t\t// the getWidgets resolver.\n\t\t\t\tdispatch(\n\t\t\t\t\tpersistStubPost(\n\t\t\t\t\t\tbuildWidgetAreaPostId( widgetArea.id ),\n\t\t\t\t\t\t[]\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tconst widgetAreasOpenState = {};\n\t\twidgetAreaBlocks.forEach( ( widgetAreaBlock, index ) => {\n\t\t\t// Defaults to open the first widget area.\n\t\t\twidgetAreasOpenState[ widgetAreaBlock.clientId ] = index === 0;\n\t\t} );\n\t\tdispatch( setWidgetAreasOpenState( widgetAreasOpenState ) );\n\n\t\tdispatch(\n\t\t\tpersistStubPost( buildWidgetAreasPostId(), widgetAreaBlocks )\n\t\t);\n\t};\n\n/**\n * Fetches all widgets from all widgets ares, and groups them by widget area Id.\n *\n * @return {Function} An action creator.\n */\nexport const getWidgets =\n\t() =>\n\tasync ( { dispatch, registry } ) => {\n\t\tconst query = buildWidgetsQuery();\n\t\tconst widgets = await registry\n\t\t\t.resolveSelect( coreStore )\n\t\t\t.getEntityRecords( 'root', 'widget', query );\n\n\t\tconst groupedBySidebar = {};\n\n\t\tfor ( const widget of widgets ) {\n\t\t\tconst block = transformWidgetToBlock( widget );\n\t\t\tgroupedBySidebar[ widget.sidebar ] =\n\t\t\t\tgroupedBySidebar[ widget.sidebar ] || [];\n\t\t\tgroupedBySidebar[ widget.sidebar ].push( block );\n\t\t}\n\n\t\tfor ( const sidebarId in groupedBySidebar ) {\n\t\t\tif ( groupedBySidebar.hasOwnProperty( sidebarId ) ) {\n\t\t\t\t// Persist the actual post containing the widget block\n\t\t\t\tdispatch(\n\t\t\t\t\tpersistStubPost(\n\t\t\t\t\t\tbuildWidgetAreaPostId( sidebarId ),\n\t\t\t\t\t\tgroupedBySidebar[ sidebarId ]\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t};\n","/**\n * WordPress dependencies\n */\nimport { createRegistrySelector } from '@wordpress/data';\nimport { getWidgetIdFromBlock } from '@wordpress/widgets';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport {\n\tbuildWidgetsQuery,\n\tbuildWidgetAreasQuery,\n\tbuildWidgetAreaPostId,\n\tKIND,\n\tPOST_TYPE,\n\tWIDGET_AREA_ENTITY_TYPE,\n} from './utils';\nimport { STORE_NAME as editWidgetsStoreName } from './constants';\n\n/**\n * Returns all API widgets.\n *\n * @return {Object[]} API List of widgets.\n */\nexport const getWidgets = createRegistrySelector( ( select ) => () => {\n\tconst widgets = select( coreStore ).getEntityRecords(\n\t\t'root',\n\t\t'widget',\n\t\tbuildWidgetsQuery()\n\t);\n\n\treturn (\n\t\t// Key widgets by their ID.\n\t\twidgets?.reduce(\n\t\t\t( allWidgets, widget ) => ( {\n\t\t\t\t...allWidgets,\n\t\t\t\t[ widget.id ]: widget,\n\t\t\t} ),\n\t\t\t{}\n\t\t) || {}\n\t);\n} );\n\n/**\n * Returns API widget data for a particular widget ID.\n *\n * @param {number} id Widget ID.\n *\n * @return {Object} API widget data for a particular widget ID.\n */\nexport const getWidget = createRegistrySelector(\n\t( select ) => ( state, id ) => {\n\t\tconst widgets = select( editWidgetsStoreName ).getWidgets();\n\t\treturn widgets[ id ];\n\t}\n);\n\n/**\n * Returns all API widget areas.\n *\n * @return {Object[]} API List of widget areas.\n */\nexport const getWidgetAreas = createRegistrySelector( ( select ) => () => {\n\tconst query = buildWidgetAreasQuery();\n\treturn select( coreStore ).getEntityRecords(\n\t\tKIND,\n\t\tWIDGET_AREA_ENTITY_TYPE,\n\t\tquery\n\t);\n} );\n\n/**\n * Returns widgetArea containing a block identify by given widgetId\n *\n * @param {string} widgetId The ID of the widget.\n * @return {Object} Containing widget area.\n */\nexport const getWidgetAreaForWidgetId = createRegistrySelector(\n\t( select ) => ( state, widgetId ) => {\n\t\tconst widgetAreas = select( editWidgetsStoreName ).getWidgetAreas();\n\t\treturn widgetAreas.find( ( widgetArea ) => {\n\t\t\tconst post = select( coreStore ).getEditedEntityRecord(\n\t\t\t\tKIND,\n\t\t\t\tPOST_TYPE,\n\t\t\t\tbuildWidgetAreaPostId( widgetArea.id )\n\t\t\t);\n\t\t\tconst blockWidgetIds = post.blocks.map( ( block ) =>\n\t\t\t\tgetWidgetIdFromBlock( block )\n\t\t\t);\n\t\t\treturn blockWidgetIds.includes( widgetId );\n\t\t} );\n\t}\n);\n\n/**\n * Given a child client id, returns the parent widget area block.\n *\n * @param {string} clientId The client id of a block in a widget area.\n *\n * @return {WPBlock} The widget area block.\n */\nexport const getParentWidgetAreaBlock = createRegistrySelector(\n\t( select ) => ( state, clientId ) => {\n\t\tconst { getBlock, getBlockName, getBlockParents } =\n\t\t\tselect( blockEditorStore );\n\t\tconst blockParents = getBlockParents( clientId );\n\t\tconst widgetAreaClientId = blockParents.find(\n\t\t\t( parentClientId ) =>\n\t\t\t\tgetBlockName( parentClientId ) === 'core/widget-area'\n\t\t);\n\t\treturn getBlock( widgetAreaClientId );\n\t}\n);\n\n/**\n * Returns all edited widget area entity records.\n *\n * @return {Object[]} List of edited widget area entity records.\n */\nexport const getEditedWidgetAreas = createRegistrySelector(\n\t( select ) => ( state, ids ) => {\n\t\tlet widgetAreas = select( editWidgetsStoreName ).getWidgetAreas();\n\t\tif ( ! widgetAreas ) {\n\t\t\treturn [];\n\t\t}\n\t\tif ( ids ) {\n\t\t\twidgetAreas = widgetAreas.filter( ( { id } ) =>\n\t\t\t\tids.includes( id )\n\t\t\t);\n\t\t}\n\t\treturn widgetAreas\n\t\t\t.filter( ( { id } ) =>\n\t\t\t\tselect( coreStore ).hasEditsForEntityRecord(\n\t\t\t\t\tKIND,\n\t\t\t\t\tPOST_TYPE,\n\t\t\t\t\tbuildWidgetAreaPostId( id )\n\t\t\t\t)\n\t\t\t)\n\t\t\t.map( ( { id } ) =>\n\t\t\t\tselect( coreStore ).getEditedEntityRecord(\n\t\t\t\t\tKIND,\n\t\t\t\t\tWIDGET_AREA_ENTITY_TYPE,\n\t\t\t\t\tid\n\t\t\t\t)\n\t\t\t);\n\t}\n);\n\n/**\n * Returns all blocks representing reference widgets.\n *\n * @param {string} referenceWidgetName Optional. If given, only reference widgets with this name will be returned.\n * @return {Array}  List of all blocks representing reference widgets\n */\nexport const getReferenceWidgetBlocks = createRegistrySelector(\n\t( select ) =>\n\t\t( state, referenceWidgetName = null ) => {\n\t\t\tconst results = [];\n\t\t\tconst widgetAreas = select( editWidgetsStoreName ).getWidgetAreas();\n\t\t\tfor ( const _widgetArea of widgetAreas ) {\n\t\t\t\tconst post = select( coreStore ).getEditedEntityRecord(\n\t\t\t\t\tKIND,\n\t\t\t\t\tPOST_TYPE,\n\t\t\t\t\tbuildWidgetAreaPostId( _widgetArea.id )\n\t\t\t\t);\n\t\t\t\tfor ( const block of post.blocks ) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tblock.name === 'core/legacy-widget' &&\n\t\t\t\t\t\t( ! referenceWidgetName ||\n\t\t\t\t\t\t\tblock.attributes?.referenceWidgetName ===\n\t\t\t\t\t\t\t\treferenceWidgetName )\n\t\t\t\t\t) {\n\t\t\t\t\t\tresults.push( block );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn results;\n\t\t}\n);\n\n/**\n * Returns true if any widget area is currently being saved.\n *\n * @return {boolean} True if any widget area is currently being saved. False otherwise.\n */\nexport const isSavingWidgetAreas = createRegistrySelector( ( select ) => () => {\n\tconst widgetAreasIds = select( editWidgetsStoreName )\n\t\t.getWidgetAreas()\n\t\t?.map( ( { id } ) => id );\n\tif ( ! widgetAreasIds ) {\n\t\treturn false;\n\t}\n\n\tfor ( const id of widgetAreasIds ) {\n\t\tconst isSaving = select( coreStore ).isSavingEntityRecord(\n\t\t\tKIND,\n\t\t\tWIDGET_AREA_ENTITY_TYPE,\n\t\t\tid\n\t\t);\n\t\tif ( isSaving ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tconst widgetIds = [\n\t\t...Object.keys( select( editWidgetsStoreName ).getWidgets() ),\n\t\tundefined, // account for new widgets without an ID\n\t];\n\tfor ( const id of widgetIds ) {\n\t\tconst isSaving = select( coreStore ).isSavingEntityRecord(\n\t\t\t'root',\n\t\t\t'widget',\n\t\t\tid\n\t\t);\n\t\tif ( isSaving ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n} );\n\n/**\n * Gets whether the widget area is opened.\n *\n * @param {Array}  state    The open state of the widget areas.\n * @param {string} clientId The clientId of the widget area.\n *\n * @return {boolean} True if the widget area is open.\n */\nexport const getIsWidgetAreaOpen = ( state, clientId ) => {\n\tconst { widgetAreasOpenState } = state;\n\treturn !! widgetAreasOpenState[ clientId ];\n};\n\n/**\n * Returns true if the inserter is opened.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether the inserter is opened.\n */\nexport function isInserterOpened( state ) {\n\treturn !! state.blockInserterPanel;\n}\n\n/**\n * Get the insertion point for the inserter.\n *\n * @param {Object} state Global application state.\n *\n * @return {Object} The root client ID and index to insert at.\n */\nexport function __experimentalGetInsertionPoint( state ) {\n\tconst { rootClientId, insertionIndex } = state.blockInserterPanel;\n\treturn { rootClientId, insertionIndex };\n}\n\n/**\n * Returns true if a block can be inserted into a widget area.\n *\n * @param {Array}  state     The open state of the widget areas.\n * @param {string} blockName The name of the block being inserted.\n *\n * @return {boolean} True if the block can be inserted in a widget area.\n */\nexport const canInsertBlockInWidgetArea = createRegistrySelector(\n\t( select ) => ( state, blockName ) => {\n\t\t// Widget areas are always top-level blocks, which getBlocks will return.\n\t\tconst widgetAreas = select( blockEditorStore ).getBlocks();\n\n\t\t// Makes an assumption that a block that can be inserted into one\n\t\t// widget area can be inserted into any widget area. Uses the first\n\t\t// widget area for testing whether the block can be inserted.\n\t\tconst [ firstWidgetArea ] = widgetAreas;\n\t\treturn select( blockEditorStore ).canInsertBlockType(\n\t\t\tblockName,\n\t\t\tfirstWidgetArea.clientId\n\t\t);\n\t}\n);\n\n/**\n * Returns true if the list view is opened.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether the list view is opened.\n */\nexport function isListViewOpened( state ) {\n\treturn state.listViewPanel;\n}\n","/**\n * WordPress dependencies\n */\nimport apiFetch from '@wordpress/api-fetch';\nimport { createReduxStore, register } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport reducer from './reducer';\nimport * as resolvers from './resolvers';\nimport * as selectors from './selectors';\nimport * as actions from './actions';\nimport { STORE_NAME } from './constants';\n\n/**\n * Block editor data store configuration.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/data/README.md#register\n *\n * @type {Object}\n */\nconst storeConfig = {\n\treducer,\n\tselectors,\n\tresolvers,\n\tactions,\n};\n\n/**\n * Store definition for the edit widgets namespace.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/data/README.md#createReduxStore\n *\n * @type {Object}\n */\nexport const store = createReduxStore( STORE_NAME, storeConfig );\nregister( store );\n\n// This package uses a few in-memory post types as wrappers for convenience.\n// This middleware prevents any network requests related to these types as they are\n// bound to fail anyway.\napiFetch.use( function ( options, next ) {\n\tif ( options.path?.indexOf( '/wp/v2/types/widget-area' ) === 0 ) {\n\t\treturn Promise.resolve( {} );\n\t}\n\n\treturn next( options );\n} );\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"hooks\"];","/**\n * WordPress dependencies\n */\n\nimport { BlockControls } from '@wordpress/block-editor';\nimport { createHigherOrderComponent } from '@wordpress/compose';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { addFilter } from '@wordpress/hooks';\nimport { MoveToWidgetArea } from '@wordpress/widgets';\n\n/**\n * Internal dependencies\n */\nimport { store as editWidgetsStore } from '../store';\n\nconst withMoveToWidgetAreaToolbarItem = createHigherOrderComponent(\n\t( BlockEdit ) => ( props ) => {\n\t\tconst { clientId, name: blockName } = props;\n\t\tconst { widgetAreas, currentWidgetAreaId, canInsertBlockInWidgetArea } =\n\t\t\tuseSelect(\n\t\t\t\t( select ) => {\n\t\t\t\t\t// Component won't display for a widget area, so don't run selectors.\n\t\t\t\t\tif ( blockName === 'core/widget-area' ) {\n\t\t\t\t\t\treturn {};\n\t\t\t\t\t}\n\n\t\t\t\t\tconst selectors = select( editWidgetsStore );\n\n\t\t\t\t\tconst widgetAreaBlock =\n\t\t\t\t\t\tselectors.getParentWidgetAreaBlock( clientId );\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\twidgetAreas: selectors.getWidgetAreas(),\n\t\t\t\t\t\tcurrentWidgetAreaId: widgetAreaBlock?.attributes?.id,\n\t\t\t\t\t\tcanInsertBlockInWidgetArea:\n\t\t\t\t\t\t\tselectors.canInsertBlockInWidgetArea( blockName ),\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\t[ clientId, blockName ]\n\t\t\t);\n\n\t\tconst { moveBlockToWidgetArea } = useDispatch( editWidgetsStore );\n\t\tconst hasMultipleWidgetAreas = widgetAreas?.length > 1;\n\t\tconst isMoveToWidgetAreaVisible =\n\t\t\tblockName !== 'core/widget-area' &&\n\t\t\thasMultipleWidgetAreas &&\n\t\t\tcanInsertBlockInWidgetArea;\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<BlockEdit { ...props } />\n\t\t\t\t{ isMoveToWidgetAreaVisible && (\n\t\t\t\t\t<BlockControls>\n\t\t\t\t\t\t<MoveToWidgetArea\n\t\t\t\t\t\t\twidgetAreas={ widgetAreas }\n\t\t\t\t\t\t\tcurrentWidgetAreaId={ currentWidgetAreaId }\n\t\t\t\t\t\t\tonSelect={ ( widgetAreaId ) => {\n\t\t\t\t\t\t\t\tmoveBlockToWidgetArea(\n\t\t\t\t\t\t\t\t\tprops.clientId,\n\t\t\t\t\t\t\t\t\twidgetAreaId\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</BlockControls>\n\t\t\t\t) }\n\t\t\t</>\n\t\t);\n\t},\n\t'withMoveToWidgetAreaToolbarItem'\n);\n\naddFilter(\n\t'editor.BlockEdit',\n\t'core/edit-widgets/block-edit',\n\twithMoveToWidgetAreaToolbarItem\n);\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"mediaUtils\"];","/**\n * WordPress dependencies\n */\nimport { addFilter } from '@wordpress/hooks';\nimport { MediaUpload } from '@wordpress/media-utils';\n\nconst replaceMediaUpload = () => MediaUpload;\n\naddFilter(\n\t'editor.MediaUpload',\n\t'core/edit-widgets/replace-media-upload',\n\treplaceMediaUpload\n);\n","/**\n * WordPress dependencies\n */\nimport { useState, useEffect } from '@wordpress/element';\n\n/** @typedef {import('@wordpress/element').RefObject} RefObject */\n\n/**\n * A React hook to determine if it's dragging within the target element.\n *\n * @param {RefObject<HTMLElement>} elementRef The target elementRef object.\n *\n * @return {boolean} Is dragging within the target element.\n */\nconst useIsDraggingWithin = ( elementRef ) => {\n\tconst [ isDraggingWithin, setIsDraggingWithin ] = useState( false );\n\n\tuseEffect( () => {\n\t\tconst { ownerDocument } = elementRef.current;\n\n\t\tfunction handleDragStart( event ) {\n\t\t\t// Check the first time when the dragging starts.\n\t\t\thandleDragEnter( event );\n\t\t}\n\n\t\t// Set to false whenever the user cancel the drag event by either releasing the mouse or press Escape.\n\t\tfunction handleDragEnd() {\n\t\t\tsetIsDraggingWithin( false );\n\t\t}\n\n\t\tfunction handleDragEnter( event ) {\n\t\t\t// Check if the current target is inside the item element.\n\t\t\tif ( elementRef.current.contains( event.target ) ) {\n\t\t\t\tsetIsDraggingWithin( true );\n\t\t\t} else {\n\t\t\t\tsetIsDraggingWithin( false );\n\t\t\t}\n\t\t}\n\n\t\t// Bind these events to the document to catch all drag events.\n\t\t// Ideally, we can also use `event.relatedTarget`, but sadly that doesn't work in Safari.\n\t\townerDocument.addEventListener( 'dragstart', handleDragStart );\n\t\townerDocument.addEventListener( 'dragend', handleDragEnd );\n\t\townerDocument.addEventListener( 'dragenter', handleDragEnter );\n\n\t\treturn () => {\n\t\t\townerDocument.removeEventListener( 'dragstart', handleDragStart );\n\t\t\townerDocument.removeEventListener( 'dragend', handleDragEnd );\n\t\t\townerDocument.removeEventListener( 'dragenter', handleDragEnter );\n\t\t};\n\t}, [] );\n\n\treturn isDraggingWithin;\n};\n\nexport default useIsDraggingWithin;\n","/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { useEntityBlockEditor } from '@wordpress/core-data';\nimport { InnerBlocks, useInnerBlocksProps } from '@wordpress/block-editor';\nimport { useRef } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport useIsDraggingWithin from './use-is-dragging-within';\n\nexport default function WidgetAreaInnerBlocks( { id } ) {\n\tconst [ blocks, onInput, onChange ] = useEntityBlockEditor(\n\t\t'root',\n\t\t'postType'\n\t);\n\tconst innerBlocksRef = useRef();\n\tconst isDraggingWithinInnerBlocks = useIsDraggingWithin( innerBlocksRef );\n\tconst shouldHighlightDropZone = isDraggingWithinInnerBlocks;\n\t// Using the experimental hook so that we can control the className of the element.\n\tconst innerBlocksProps = useInnerBlocksProps(\n\t\t{ ref: innerBlocksRef },\n\t\t{\n\t\t\tvalue: blocks,\n\t\t\tonInput,\n\t\t\tonChange,\n\t\t\ttemplateLock: false,\n\t\t\trenderAppender: InnerBlocks.ButtonBlockAppender,\n\t\t}\n\t);\n\n\treturn (\n\t\t<div\n\t\t\tdata-widget-area-id={ id }\n\t\t\tclassName={ classnames(\n\t\t\t\t'wp-block-widget-area__inner-blocks block-editor-inner-blocks editor-styles-wrapper',\n\t\t\t\t{\n\t\t\t\t\t'wp-block-widget-area__highlight-drop-zone':\n\t\t\t\t\t\tshouldHighlightDropZone,\n\t\t\t\t}\n\t\t\t) }\n\t\t>\n\t\t\t<div { ...innerBlocksProps } />\n\t\t</div>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useEffect, useState, useCallback, useRef } from '@wordpress/element';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { EntityProvider } from '@wordpress/core-data';\nimport {\n\t__unstableDisclosureContent as DisclosureContent,\n\tPanel,\n\tPanelBody,\n} from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport WidgetAreaInnerBlocks from './inner-blocks';\nimport { store as editWidgetsStore } from '../../../store';\nimport useIsDraggingWithin from './use-is-dragging-within';\n\n/** @typedef {import('@wordpress/element').RefObject} RefObject */\n\nexport default function WidgetAreaEdit( {\n\tclientId,\n\tclassName,\n\tattributes: { id, name },\n} ) {\n\tconst isOpen = useSelect(\n\t\t( select ) =>\n\t\t\tselect( editWidgetsStore ).getIsWidgetAreaOpen( clientId ),\n\t\t[ clientId ]\n\t);\n\tconst { setIsWidgetAreaOpen } = useDispatch( editWidgetsStore );\n\n\tconst wrapper = useRef();\n\tconst setOpen = useCallback(\n\t\t( openState ) => setIsWidgetAreaOpen( clientId, openState ),\n\t\t[ clientId ]\n\t);\n\tconst isDragging = useIsDragging( wrapper );\n\tconst isDraggingWithin = useIsDraggingWithin( wrapper );\n\n\tconst [ openedWhileDragging, setOpenedWhileDragging ] = useState( false );\n\tuseEffect( () => {\n\t\tif ( ! isDragging ) {\n\t\t\tsetOpenedWhileDragging( false );\n\t\t\treturn;\n\t\t}\n\n\t\tif ( isDraggingWithin && ! isOpen ) {\n\t\t\tsetOpen( true );\n\t\t\tsetOpenedWhileDragging( true );\n\t\t} else if ( ! isDraggingWithin && isOpen && openedWhileDragging ) {\n\t\t\tsetOpen( false );\n\t\t}\n\t}, [ isOpen, isDragging, isDraggingWithin, openedWhileDragging ] );\n\n\treturn (\n\t\t<Panel className={ className } ref={ wrapper }>\n\t\t\t<PanelBody\n\t\t\t\ttitle={ name }\n\t\t\t\topened={ isOpen }\n\t\t\t\tonToggle={ () => {\n\t\t\t\t\tsetIsWidgetAreaOpen( clientId, ! isOpen );\n\t\t\t\t} }\n\t\t\t\tscrollAfterOpen={ ! isDragging }\n\t\t\t>\n\t\t\t\t{ ( { opened } ) => (\n\t\t\t\t\t// This is required to ensure LegacyWidget blocks are not\n\t\t\t\t\t// unmounted when the panel is collapsed. Unmounting legacy\n\t\t\t\t\t// widgets may have unintended consequences (e.g.  TinyMCE\n\t\t\t\t\t// not being properly reinitialized)\n\t\t\t\t\t<DisclosureContent\n\t\t\t\t\t\tclassName=\"wp-block-widget-area__panel-body-content\"\n\t\t\t\t\t\tvisible={ opened }\n\t\t\t\t\t>\n\t\t\t\t\t\t<EntityProvider\n\t\t\t\t\t\t\tkind=\"root\"\n\t\t\t\t\t\t\ttype=\"postType\"\n\t\t\t\t\t\t\tid={ `widget-area-${ id }` }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<WidgetAreaInnerBlocks id={ id } />\n\t\t\t\t\t\t</EntityProvider>\n\t\t\t\t\t</DisclosureContent>\n\t\t\t\t) }\n\t\t\t</PanelBody>\n\t\t</Panel>\n\t);\n}\n\n/**\n * A React hook to determine if dragging is active.\n *\n * @param {RefObject<HTMLElement>} elementRef The target elementRef object.\n *\n * @return {boolean} Is dragging within the entire document.\n */\nconst useIsDragging = ( elementRef ) => {\n\tconst [ isDragging, setIsDragging ] = useState( false );\n\n\tuseEffect( () => {\n\t\tconst { ownerDocument } = elementRef.current;\n\n\t\tfunction handleDragStart() {\n\t\t\tsetIsDragging( true );\n\t\t}\n\n\t\tfunction handleDragEnd() {\n\t\t\tsetIsDragging( false );\n\t\t}\n\n\t\townerDocument.addEventListener( 'dragstart', handleDragStart );\n\t\townerDocument.addEventListener( 'dragend', handleDragEnd );\n\n\t\treturn () => {\n\t\t\townerDocument.removeEventListener( 'dragstart', handleDragStart );\n\t\t\townerDocument.removeEventListener( 'dragend', handleDragEnd );\n\t\t};\n\t}, [] );\n\n\treturn isDragging;\n};\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport metadata from './block.json';\nimport edit from './edit';\n\nconst { name } = metadata;\nexport { metadata, name };\n\nexport const settings = {\n\ttitle: __( 'Widget Area' ),\n\tdescription: __( 'A widget area container.' ),\n\t__experimentalLabel: ( { name: label } ) => label,\n\tedit,\n};\n","/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport { Button } from '@wordpress/components';\nimport { Warning } from '@wordpress/block-editor';\nimport { useCopyToClipboard } from '@wordpress/compose';\nimport { doAction } from '@wordpress/hooks';\n\nfunction CopyButton( { text, children } ) {\n\tconst ref = useCopyToClipboard( text );\n\treturn (\n\t\t<Button variant=\"secondary\" ref={ ref }>\n\t\t\t{ children }\n\t\t</Button>\n\t);\n}\n\nfunction ErrorBoundaryWarning( { message, error } ) {\n\tconst actions = [\n\t\t<CopyButton key=\"copy-error\" text={ error.stack }>\n\t\t\t{ __( 'Copy Error' ) }\n\t\t</CopyButton>,\n\t];\n\n\treturn (\n\t\t<Warning className=\"edit-widgets-error-boundary\" actions={ actions }>\n\t\t\t{ message }\n\t\t</Warning>\n\t);\n}\n\nexport default class ErrorBoundary extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.state = {\n\t\t\terror: null,\n\t\t};\n\t}\n\n\tcomponentDidCatch( error ) {\n\t\tdoAction( 'editor.ErrorBoundary.errorLogged', error );\n\t}\n\n\tstatic getDerivedStateFromError( error ) {\n\t\treturn { error };\n\t}\n\n\trender() {\n\t\tif ( ! this.state.error ) {\n\t\t\treturn this.props.children;\n\t\t}\n\n\t\treturn (\n\t\t\t<ErrorBoundaryWarning\n\t\t\t\tmessage={ __(\n\t\t\t\t\t'The editor has encountered an unexpected error.'\n\t\t\t\t) }\n\t\t\t\terror={ this.state.error }\n\t\t\t/>\n\t\t);\n\t}\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"reusableBlocks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"keyboardShortcuts\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"keycodes\"];","/**\n * WordPress dependencies\n */\nimport { useEffect } from '@wordpress/element';\nimport {\n\tuseShortcut,\n\tstore as keyboardShortcutsStore,\n} from '@wordpress/keyboard-shortcuts';\nimport { isAppleOS } from '@wordpress/keycodes';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { createBlock } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport { store as editWidgetsStore } from '../../store';\n\nfunction KeyboardShortcuts() {\n\tconst { redo, undo } = useDispatch( coreStore );\n\tconst { saveEditedWidgetAreas } = useDispatch( editWidgetsStore );\n\n\tconst { replaceBlocks } = useDispatch( blockEditorStore );\n\tconst { getBlockName, getSelectedBlockClientId, getBlockAttributes } =\n\t\tuseSelect( blockEditorStore );\n\n\tconst handleTextLevelShortcut = ( event, level ) => {\n\t\tevent.preventDefault();\n\t\tconst destinationBlockName =\n\t\t\tlevel === 0 ? 'core/paragraph' : 'core/heading';\n\t\tconst currentClientId = getSelectedBlockClientId();\n\t\tif ( currentClientId === null ) {\n\t\t\treturn;\n\t\t}\n\t\tconst blockName = getBlockName( currentClientId );\n\t\tif ( blockName !== 'core/paragraph' && blockName !== 'core/heading' ) {\n\t\t\treturn;\n\t\t}\n\t\tconst attributes = getBlockAttributes( currentClientId );\n\t\tconst textAlign =\n\t\t\tblockName === 'core/paragraph' ? 'align' : 'textAlign';\n\t\tconst destinationTextAlign =\n\t\t\tdestinationBlockName === 'core/paragraph' ? 'align' : 'textAlign';\n\n\t\treplaceBlocks(\n\t\t\tcurrentClientId,\n\t\t\tcreateBlock( destinationBlockName, {\n\t\t\t\tlevel,\n\t\t\t\tcontent: attributes.content,\n\t\t\t\t...{ [ destinationTextAlign ]: attributes[ textAlign ] },\n\t\t\t} )\n\t\t);\n\t};\n\n\tuseShortcut( 'core/edit-widgets/undo', ( event ) => {\n\t\tundo();\n\t\tevent.preventDefault();\n\t} );\n\n\tuseShortcut( 'core/edit-widgets/redo', ( event ) => {\n\t\tredo();\n\t\tevent.preventDefault();\n\t} );\n\n\tuseShortcut( 'core/edit-widgets/save', ( event ) => {\n\t\tevent.preventDefault();\n\t\tsaveEditedWidgetAreas();\n\t} );\n\n\tuseShortcut(\n\t\t'core/edit-widgets/transform-heading-to-paragraph',\n\t\t( event ) => handleTextLevelShortcut( event, 0 )\n\t);\n\n\t[ 1, 2, 3, 4, 5, 6 ].forEach( ( level ) => {\n\t\t//the loop is based off on a constant therefore\n\t\t//the hook will execute the same way every time\n\t\t//eslint-disable-next-line react-hooks/rules-of-hooks\n\t\tuseShortcut(\n\t\t\t`core/edit-widgets/transform-paragraph-to-heading-${ level }`,\n\t\t\t( event ) => handleTextLevelShortcut( event, level )\n\t\t);\n\t} );\n\n\treturn null;\n}\n\nfunction KeyboardShortcutsRegister() {\n\t// Registering the shortcuts.\n\tconst { registerShortcut } = useDispatch( keyboardShortcutsStore );\n\tuseEffect( () => {\n\t\tregisterShortcut( {\n\t\t\tname: 'core/edit-widgets/undo',\n\t\t\tcategory: 'global',\n\t\t\tdescription: __( 'Undo your last changes.' ),\n\t\t\tkeyCombination: {\n\t\t\t\tmodifier: 'primary',\n\t\t\t\tcharacter: 'z',\n\t\t\t},\n\t\t} );\n\n\t\tregisterShortcut( {\n\t\t\tname: 'core/edit-widgets/redo',\n\t\t\tcategory: 'global',\n\t\t\tdescription: __( 'Redo your last undo.' ),\n\t\t\tkeyCombination: {\n\t\t\t\tmodifier: 'primaryShift',\n\t\t\t\tcharacter: 'z',\n\t\t\t},\n\t\t\t// Disable on Apple OS because it conflicts with the browser's\n\t\t\t// history shortcut. It's a fine alias for both Windows and Linux.\n\t\t\t// Since there's no conflict for Ctrl+Shift+Z on both Windows and\n\t\t\t// Linux, we keep it as the default for consistency.\n\t\t\taliases: isAppleOS()\n\t\t\t\t? []\n\t\t\t\t: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmodifier: 'primary',\n\t\t\t\t\t\t\tcharacter: 'y',\n\t\t\t\t\t\t},\n\t\t\t\t  ],\n\t\t} );\n\n\t\tregisterShortcut( {\n\t\t\tname: 'core/edit-widgets/save',\n\t\t\tcategory: 'global',\n\t\t\tdescription: __( 'Save your changes.' ),\n\t\t\tkeyCombination: {\n\t\t\t\tmodifier: 'primary',\n\t\t\t\tcharacter: 's',\n\t\t\t},\n\t\t} );\n\n\t\tregisterShortcut( {\n\t\t\tname: 'core/edit-widgets/keyboard-shortcuts',\n\t\t\tcategory: 'main',\n\t\t\tdescription: __( 'Display these keyboard shortcuts.' ),\n\t\t\tkeyCombination: {\n\t\t\t\tmodifier: 'access',\n\t\t\t\tcharacter: 'h',\n\t\t\t},\n\t\t} );\n\n\t\tregisterShortcut( {\n\t\t\tname: 'core/edit-widgets/next-region',\n\t\t\tcategory: 'global',\n\t\t\tdescription: __( 'Navigate to the next part of the editor.' ),\n\t\t\tkeyCombination: {\n\t\t\t\tmodifier: 'ctrl',\n\t\t\t\tcharacter: '`',\n\t\t\t},\n\t\t\taliases: [\n\t\t\t\t{\n\t\t\t\t\tmodifier: 'access',\n\t\t\t\t\tcharacter: 'n',\n\t\t\t\t},\n\t\t\t],\n\t\t} );\n\n\t\tregisterShortcut( {\n\t\t\tname: 'core/edit-widgets/previous-region',\n\t\t\tcategory: 'global',\n\t\t\tdescription: __( 'Navigate to the previous part of the editor.' ),\n\t\t\tkeyCombination: {\n\t\t\t\tmodifier: 'ctrlShift',\n\t\t\t\tcharacter: '`',\n\t\t\t},\n\t\t\taliases: [\n\t\t\t\t{\n\t\t\t\t\tmodifier: 'access',\n\t\t\t\t\tcharacter: 'p',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tmodifier: 'ctrlShift',\n\t\t\t\t\tcharacter: '~',\n\t\t\t\t},\n\t\t\t],\n\t\t} );\n\n\t\tregisterShortcut( {\n\t\t\tname: 'core/edit-widgets/transform-heading-to-paragraph',\n\t\t\tcategory: 'block-library',\n\t\t\tdescription: __( 'Transform heading to paragraph.' ),\n\t\t\tkeyCombination: {\n\t\t\t\tmodifier: 'access',\n\t\t\t\tcharacter: `0`,\n\t\t\t},\n\t\t} );\n\n\t\t[ 1, 2, 3, 4, 5, 6 ].forEach( ( level ) => {\n\t\t\tregisterShortcut( {\n\t\t\t\tname: `core/edit-widgets/transform-paragraph-to-heading-${ level }`,\n\t\t\t\tcategory: 'block-library',\n\t\t\t\tdescription: __( 'Transform paragraph to heading.' ),\n\t\t\t\tkeyCombination: {\n\t\t\t\t\tmodifier: 'access',\n\t\t\t\t\tcharacter: `${ level }`,\n\t\t\t\t},\n\t\t\t} );\n\t\t} );\n\t}, [ registerShortcut ] );\n\n\treturn null;\n}\n\nKeyboardShortcuts.Register = KeyboardShortcutsRegister;\nexport default KeyboardShortcuts;\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as widgetsEditorStore } from '../store';\nimport { buildWidgetAreasPostId, KIND, POST_TYPE } from '../store/utils';\n\n/**\n * A react hook that returns the client id of the last widget area to have\n * been selected, or to have a selected block within it.\n *\n * @return {string} clientId of the widget area last selected.\n */\nconst useLastSelectedWidgetArea = () =>\n\tuseSelect( ( select ) => {\n\t\tconst { getBlockSelectionEnd, getBlockName } =\n\t\t\tselect( blockEditorStore );\n\t\tconst selectionEndClientId = getBlockSelectionEnd();\n\n\t\t// If the selected block is a widget area, return its clientId.\n\t\tif ( getBlockName( selectionEndClientId ) === 'core/widget-area' ) {\n\t\t\treturn selectionEndClientId;\n\t\t}\n\n\t\tconst { getParentWidgetAreaBlock } = select( widgetsEditorStore );\n\t\tconst widgetAreaBlock =\n\t\t\tgetParentWidgetAreaBlock( selectionEndClientId );\n\t\tconst widgetAreaBlockClientId = widgetAreaBlock?.clientId;\n\n\t\tif ( widgetAreaBlockClientId ) {\n\t\t\treturn widgetAreaBlockClientId;\n\t\t}\n\n\t\t// If no widget area has been selected, return the clientId of the first\n\t\t// area.\n\t\tconst { getEntityRecord } = select( coreStore );\n\t\tconst widgetAreasPost = getEntityRecord(\n\t\t\tKIND,\n\t\t\tPOST_TYPE,\n\t\t\tbuildWidgetAreasPostId()\n\t\t);\n\t\treturn widgetAreasPost?.blocks[ 0 ]?.clientId;\n\t}, [] );\n\nexport default useLastSelectedWidgetArea;\n","export const ALLOW_REUSABLE_BLOCKS = false;\nexport const ENABLE_EXPERIMENTAL_FSE_BLOCKS = false;\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"privateApis\"];","/**\n * WordPress dependencies\n */\nimport { __dangerousOptInToUnstableAPIsOnlyForCoreModules } from '@wordpress/private-apis';\n\nexport const { lock, unlock } =\n\t__dangerousOptInToUnstableAPIsOnlyForCoreModules(\n\t\t'I know using unstable features means my plugin or theme will inevitably break on the next WordPress release.',\n\t\t'@wordpress/edit-widgets'\n\t);\n","/**\n * WordPress dependencies\n */\nimport { SlotFillProvider } from '@wordpress/components';\nimport { uploadMedia } from '@wordpress/media-utils';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport {\n\tuseEntityBlockEditor,\n\tstore as coreStore,\n\tuseResourcePermissions,\n} from '@wordpress/core-data';\nimport { useMemo } from '@wordpress/element';\nimport {\n\tBlockEditorKeyboardShortcuts,\n\tCopyHandler,\n\tprivateApis as blockEditorPrivateApis,\n} from '@wordpress/block-editor';\nimport { ReusableBlocksMenuItems } from '@wordpress/reusable-blocks';\nimport { ShortcutProvider } from '@wordpress/keyboard-shortcuts';\nimport { store as preferencesStore } from '@wordpress/preferences';\n\n/**\n * Internal dependencies\n */\nimport KeyboardShortcuts from '../keyboard-shortcuts';\nimport { buildWidgetAreasPostId, KIND, POST_TYPE } from '../../store/utils';\nimport useLastSelectedWidgetArea from '../../hooks/use-last-selected-widget-area';\nimport { store as editWidgetsStore } from '../../store';\nimport { ALLOW_REUSABLE_BLOCKS } from '../../constants';\nimport { unlock } from '../../lock-unlock';\n\nconst { ExperimentalBlockEditorProvider } = unlock( blockEditorPrivateApis );\n\nexport default function WidgetAreasBlockEditorProvider( {\n\tblockEditorSettings,\n\tchildren,\n\t...props\n} ) {\n\tconst mediaPermissions = useResourcePermissions( 'media' );\n\tconst { reusableBlocks, isFixedToolbarActive, keepCaretInsideBlock } =\n\t\tuseSelect(\n\t\t\t( select ) => ( {\n\t\t\t\twidgetAreas: select( editWidgetsStore ).getWidgetAreas(),\n\t\t\t\twidgets: select( editWidgetsStore ).getWidgets(),\n\t\t\t\treusableBlocks: ALLOW_REUSABLE_BLOCKS\n\t\t\t\t\t? select( coreStore ).getEntityRecords(\n\t\t\t\t\t\t\t'postType',\n\t\t\t\t\t\t\t'wp_block'\n\t\t\t\t\t  )\n\t\t\t\t\t: [],\n\t\t\t\tisFixedToolbarActive: !! select( preferencesStore ).get(\n\t\t\t\t\t'core/edit-widgets',\n\t\t\t\t\t'fixedToolbar'\n\t\t\t\t),\n\t\t\t\tkeepCaretInsideBlock: !! select( preferencesStore ).get(\n\t\t\t\t\t'core/edit-widgets',\n\t\t\t\t\t'keepCaretInsideBlock'\n\t\t\t\t),\n\t\t\t} ),\n\t\t\t[]\n\t\t);\n\tconst { setIsInserterOpened } = useDispatch( editWidgetsStore );\n\n\tconst settings = useMemo( () => {\n\t\tlet mediaUploadBlockEditor;\n\t\tif ( mediaPermissions.canCreate ) {\n\t\t\tmediaUploadBlockEditor = ( { onError, ...argumentsObject } ) => {\n\t\t\t\tuploadMedia( {\n\t\t\t\t\twpAllowedMimeTypes: blockEditorSettings.allowedMimeTypes,\n\t\t\t\t\tonError: ( { message } ) => onError( message ),\n\t\t\t\t\t...argumentsObject,\n\t\t\t\t} );\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t...blockEditorSettings,\n\t\t\t__experimentalReusableBlocks: reusableBlocks,\n\t\t\thasFixedToolbar: isFixedToolbarActive,\n\t\t\tkeepCaretInsideBlock,\n\t\t\tmediaUpload: mediaUploadBlockEditor,\n\t\t\ttemplateLock: 'all',\n\t\t\t__experimentalSetIsInserterOpened: setIsInserterOpened,\n\t\t};\n\t}, [\n\t\tblockEditorSettings,\n\t\tisFixedToolbarActive,\n\t\tkeepCaretInsideBlock,\n\t\tmediaPermissions.canCreate,\n\t\treusableBlocks,\n\t\tsetIsInserterOpened,\n\t] );\n\n\tconst widgetAreaId = useLastSelectedWidgetArea();\n\n\tconst [ blocks, onInput, onChange ] = useEntityBlockEditor(\n\t\tKIND,\n\t\tPOST_TYPE,\n\t\t{ id: buildWidgetAreasPostId() }\n\t);\n\n\treturn (\n\t\t<ShortcutProvider>\n\t\t\t<BlockEditorKeyboardShortcuts.Register />\n\t\t\t<KeyboardShortcuts.Register />\n\t\t\t<SlotFillProvider>\n\t\t\t\t<ExperimentalBlockEditorProvider\n\t\t\t\t\tvalue={ blocks }\n\t\t\t\t\tonInput={ onInput }\n\t\t\t\t\tonChange={ onChange }\n\t\t\t\t\tsettings={ settings }\n\t\t\t\t\tuseSubRegistry={ false }\n\t\t\t\t\t{ ...props }\n\t\t\t\t>\n\t\t\t\t\t<CopyHandler>{ children }</CopyHandler>\n\t\t\t\t\t<ReusableBlocksMenuItems rootClientId={ widgetAreaId } />\n\t\t\t\t</ExperimentalBlockEditorProvider>\n\t\t\t</SlotFillProvider>\n\t\t</ShortcutProvider>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst drawerLeft = (\n\t<SVG\n\t\twidth=\"24\"\n\t\theight=\"24\"\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\tviewBox=\"0 0 24 24\"\n\t>\n\t\t<Path\n\t\t\tfillRule=\"evenodd\"\n\t\t\tclipRule=\"evenodd\"\n\t\t\td=\"M18 4H6c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zM8.5 18.5H6c-.3 0-.5-.2-.5-.5V6c0-.3.2-.5.5-.5h2.5v13zm10-.5c0 .3-.2.5-.5.5h-8v-13h8c.3 0 .5.2.5.5v12z\"\n\t\t/>\n\t</SVG>\n);\n\nexport default drawerLeft;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst drawerRight = (\n\t<SVG\n\t\twidth=\"24\"\n\t\theight=\"24\"\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\tviewBox=\"0 0 24 24\"\n\t>\n\t\t<Path\n\t\t\tfillRule=\"evenodd\"\n\t\t\tclipRule=\"evenodd\"\n\t\t\td=\"M18 4H6c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-4 14.5H6c-.3 0-.5-.2-.5-.5V6c0-.3.2-.5.5-.5h8v13zm4.5-.5c0 .3-.2.5-.5.5h-2.5v-13H18c.3 0 .5.2.5.5v12z\"\n\t\t/>\n\t</SVG>\n);\n\nexport default drawerRight;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst blockDefault = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M19 8h-1V6h-5v2h-2V6H6v2H5c-1.1 0-2 .9-2 2v8c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-8c0-1.1-.9-2-2-2zm.5 10c0 .3-.2.5-.5.5H5c-.3 0-.5-.2-.5-.5v-8c0-.3.2-.5.5-.5h14c.3 0 .5.2.5.5v8z\" />\n\t</SVG>\n);\n\nexport default blockDefault;\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"url\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"dom\"];","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { useMemo } from '@wordpress/element';\nimport { blockDefault } from '@wordpress/icons';\nimport { BlockIcon } from '@wordpress/block-editor';\nimport { Button } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { addQueryArgs } from '@wordpress/url';\nimport { safeHTML } from '@wordpress/dom';\n\n/**\n * Internal dependencies\n */\nimport { store as editWidgetsStore } from '../../store';\n\nexport default function WidgetAreas( { selectedWidgetAreaId } ) {\n\tconst widgetAreas = useSelect(\n\t\t( select ) => select( editWidgetsStore ).getWidgetAreas(),\n\t\t[]\n\t);\n\n\tconst selectedWidgetArea = useMemo(\n\t\t() =>\n\t\t\tselectedWidgetAreaId &&\n\t\t\twidgetAreas?.find(\n\t\t\t\t( widgetArea ) => widgetArea.id === selectedWidgetAreaId\n\t\t\t),\n\t\t[ selectedWidgetAreaId, widgetAreas ]\n\t);\n\n\tlet description;\n\tif ( ! selectedWidgetArea ) {\n\t\tdescription = __(\n\t\t\t'Widget Areas are global parts in your site’s layout that can accept blocks. These vary by theme, but are typically parts like your Sidebar or Footer.'\n\t\t);\n\t} else if ( selectedWidgetAreaId === 'wp_inactive_widgets' ) {\n\t\tdescription = __(\n\t\t\t'Blocks in this Widget Area will not be displayed in your site.'\n\t\t);\n\t} else {\n\t\tdescription = selectedWidgetArea.description;\n\t}\n\n\treturn (\n\t\t<div className=\"edit-widgets-widget-areas\">\n\t\t\t<div className=\"edit-widgets-widget-areas__top-container\">\n\t\t\t\t<BlockIcon icon={ blockDefault } />\n\t\t\t\t<div>\n\t\t\t\t\t<p\n\t\t\t\t\t\t// Use `dangerouslySetInnerHTML` to keep backwards\n\t\t\t\t\t\t// compatibility. Basic markup in the description is an\n\t\t\t\t\t\t// established feature of WordPress.\n\t\t\t\t\t\t// @see https://github.com/WordPress/gutenberg/issues/33106\n\t\t\t\t\t\tdangerouslySetInnerHTML={ {\n\t\t\t\t\t\t\t__html: safeHTML( description ),\n\t\t\t\t\t\t} }\n\t\t\t\t\t/>\n\t\t\t\t\t{ widgetAreas?.length === 0 && (\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t'Your theme does not contain any Widget Areas.'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</p>\n\t\t\t\t\t) }\n\t\t\t\t\t{ ! selectedWidgetArea && (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\thref={ addQueryArgs( 'customize.php', {\n\t\t\t\t\t\t\t\t'autofocus[panel]': 'widgets',\n\t\t\t\t\t\t\t\treturn: window.location.pathname,\n\t\t\t\t\t\t\t} ) }\n\t\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Manage with live preview' ) }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t) }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { useEffect, Platform } from '@wordpress/element';\nimport { isRTL, __, sprintf } from '@wordpress/i18n';\nimport {\n\tComplementaryArea,\n\tstore as interfaceStore,\n} from '@wordpress/interface';\nimport {\n\tBlockInspector,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\n\nimport { drawerLeft, drawerRight } from '@wordpress/icons';\nimport { Button } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\n\nconst SIDEBAR_ACTIVE_BY_DEFAULT = Platform.select( {\n\tweb: true,\n\tnative: false,\n} );\n\nconst BLOCK_INSPECTOR_IDENTIFIER = 'edit-widgets/block-inspector';\n\n// Widget areas were one called block areas, so use 'edit-widgets/block-areas'\n// for backwards compatibility.\nconst WIDGET_AREAS_IDENTIFIER = 'edit-widgets/block-areas';\n\n/**\n * Internal dependencies\n */\nimport WidgetAreas from './widget-areas';\nimport { store as editWidgetsStore } from '../../store';\n\nfunction ComplementaryAreaTab( { identifier, label, isActive } ) {\n\tconst { enableComplementaryArea } = useDispatch( interfaceStore );\n\treturn (\n\t\t<Button\n\t\t\tonClick={ () =>\n\t\t\t\tenableComplementaryArea( editWidgetsStore.name, identifier )\n\t\t\t}\n\t\t\tclassName={ classnames( 'edit-widgets-sidebar__panel-tab', {\n\t\t\t\t'is-active': isActive,\n\t\t\t} ) }\n\t\t\taria-label={\n\t\t\t\tisActive\n\t\t\t\t\t? // translators: %s: sidebar label e.g: \"Widget Areas\".\n\t\t\t\t\t  sprintf( __( '%s (selected)' ), label )\n\t\t\t\t\t: label\n\t\t\t}\n\t\t\tdata-label={ label }\n\t\t>\n\t\t\t{ label }\n\t\t</Button>\n\t);\n}\n\nexport default function Sidebar() {\n\tconst { enableComplementaryArea } = useDispatch( interfaceStore );\n\tconst {\n\t\tcurrentArea,\n\t\thasSelectedNonAreaBlock,\n\t\tisGeneralSidebarOpen,\n\t\tselectedWidgetAreaBlock,\n\t} = useSelect( ( select ) => {\n\t\tconst { getSelectedBlock, getBlock, getBlockParentsByBlockName } =\n\t\t\tselect( blockEditorStore );\n\t\tconst { getActiveComplementaryArea } = select( interfaceStore );\n\n\t\tconst selectedBlock = getSelectedBlock();\n\n\t\tconst activeArea = getActiveComplementaryArea( editWidgetsStore.name );\n\n\t\tlet currentSelection = activeArea;\n\t\tif ( ! currentSelection ) {\n\t\t\tif ( selectedBlock ) {\n\t\t\t\tcurrentSelection = BLOCK_INSPECTOR_IDENTIFIER;\n\t\t\t} else {\n\t\t\t\tcurrentSelection = WIDGET_AREAS_IDENTIFIER;\n\t\t\t}\n\t\t}\n\n\t\tlet widgetAreaBlock;\n\t\tif ( selectedBlock ) {\n\t\t\tif ( selectedBlock.name === 'core/widget-area' ) {\n\t\t\t\twidgetAreaBlock = selectedBlock;\n\t\t\t} else {\n\t\t\t\twidgetAreaBlock = getBlock(\n\t\t\t\t\tgetBlockParentsByBlockName(\n\t\t\t\t\t\tselectedBlock.clientId,\n\t\t\t\t\t\t'core/widget-area'\n\t\t\t\t\t)[ 0 ]\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tcurrentArea: currentSelection,\n\t\t\thasSelectedNonAreaBlock: !! (\n\t\t\t\tselectedBlock && selectedBlock.name !== 'core/widget-area'\n\t\t\t),\n\t\t\tisGeneralSidebarOpen: !! activeArea,\n\t\t\tselectedWidgetAreaBlock: widgetAreaBlock,\n\t\t};\n\t}, [] );\n\n\t// currentArea, and isGeneralSidebarOpen are intentionally left out from the dependencies,\n\t// because we want to run the effect when a block is selected/unselected and not when the sidebar state changes.\n\tuseEffect( () => {\n\t\tif (\n\t\t\thasSelectedNonAreaBlock &&\n\t\t\tcurrentArea === WIDGET_AREAS_IDENTIFIER &&\n\t\t\tisGeneralSidebarOpen\n\t\t) {\n\t\t\tenableComplementaryArea(\n\t\t\t\t'core/edit-widgets',\n\t\t\t\tBLOCK_INSPECTOR_IDENTIFIER\n\t\t\t);\n\t\t}\n\t\tif (\n\t\t\t! hasSelectedNonAreaBlock &&\n\t\t\tcurrentArea === BLOCK_INSPECTOR_IDENTIFIER &&\n\t\t\tisGeneralSidebarOpen\n\t\t) {\n\t\t\tenableComplementaryArea(\n\t\t\t\t'core/edit-widgets',\n\t\t\t\tWIDGET_AREAS_IDENTIFIER\n\t\t\t);\n\t\t}\n\t}, [ hasSelectedNonAreaBlock, enableComplementaryArea ] );\n\n\treturn (\n\t\t<ComplementaryArea\n\t\t\tclassName=\"edit-widgets-sidebar\"\n\t\t\theader={\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<ComplementaryAreaTab\n\t\t\t\t\t\t\tidentifier={ WIDGET_AREAS_IDENTIFIER }\n\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t\tselectedWidgetAreaBlock\n\t\t\t\t\t\t\t\t\t? selectedWidgetAreaBlock.attributes.name\n\t\t\t\t\t\t\t\t\t: __( 'Widget Areas' )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tisActive={ currentArea === WIDGET_AREAS_IDENTIFIER }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<ComplementaryAreaTab\n\t\t\t\t\t\t\tidentifier={ BLOCK_INSPECTOR_IDENTIFIER }\n\t\t\t\t\t\t\tlabel={ __( 'Block' ) }\n\t\t\t\t\t\t\tisActive={\n\t\t\t\t\t\t\t\tcurrentArea === BLOCK_INSPECTOR_IDENTIFIER\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t}\n\t\t\theaderClassName=\"edit-widgets-sidebar__panel-tabs\"\n\t\t\t/* translators: button label text should, if possible, be under 16 characters. */\n\t\t\ttitle={ __( 'Settings' ) }\n\t\t\tcloseLabel={ __( 'Close Settings' ) }\n\t\t\tscope=\"core/edit-widgets\"\n\t\t\tidentifier={ currentArea }\n\t\t\ticon={ isRTL() ? drawerLeft : drawerRight }\n\t\t\tisActiveByDefault={ SIDEBAR_ACTIVE_BY_DEFAULT }\n\t\t>\n\t\t\t{ currentArea === WIDGET_AREAS_IDENTIFIER && (\n\t\t\t\t<WidgetAreas\n\t\t\t\t\tselectedWidgetAreaId={\n\t\t\t\t\t\tselectedWidgetAreaBlock?.attributes.id\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t) }\n\t\t\t{ currentArea === BLOCK_INSPECTOR_IDENTIFIER &&\n\t\t\t\t( hasSelectedNonAreaBlock ? (\n\t\t\t\t\t<BlockInspector />\n\t\t\t\t) : (\n\t\t\t\t\t// Pretend that Widget Areas are part of the UI by not\n\t\t\t\t\t// showing the Block Inspector when one is selected.\n\t\t\t\t\t<span className=\"block-editor-block-inspector__no-blocks\">\n\t\t\t\t\t\t{ __( 'No block selected.' ) }\n\t\t\t\t\t</span>\n\t\t\t\t) ) }\n\t\t</ComplementaryArea>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst plus = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M18 11.2h-5.2V6h-1.6v5.2H6v1.6h5.2V18h1.6v-5.2H18z\" />\n\t</SVG>\n);\n\nexport default plus;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst listView = (\n\t<SVG viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t<Path d=\"M3 6h11v1.5H3V6Zm3.5 5.5h11V13h-11v-1.5ZM21 17H10v1.5h11V17Z\" />\n\t</SVG>\n);\n\nexport default listView;\n","/**\n * WordPress dependencies\n */\nimport { Button } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useDispatch, useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as editWidgetsStore } from '../../store';\n\nfunction SaveButton() {\n\tconst { hasEditedWidgetAreaIds, isSaving } = useSelect( ( select ) => {\n\t\tconst { getEditedWidgetAreas, isSavingWidgetAreas } =\n\t\t\tselect( editWidgetsStore );\n\n\t\treturn {\n\t\t\thasEditedWidgetAreaIds: getEditedWidgetAreas()?.length > 0,\n\t\t\tisSaving: isSavingWidgetAreas(),\n\t\t};\n\t}, [] );\n\tconst { saveEditedWidgetAreas } = useDispatch( editWidgetsStore );\n\n\treturn (\n\t\t<Button\n\t\t\tvariant=\"primary\"\n\t\t\tisBusy={ isSaving }\n\t\t\taria-disabled={ isSaving }\n\t\t\tonClick={ isSaving ? undefined : saveEditedWidgetAreas }\n\t\t\tdisabled={ ! hasEditedWidgetAreaIds }\n\t\t>\n\t\t\t{ isSaving ? __( 'Saving…' ) : __( 'Update' ) }\n\t\t</Button>\n\t);\n}\n\nexport default SaveButton;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst undo = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M18.3 11.7c-.6-.6-1.4-.9-2.3-.9H6.7l2.9-3.3-1.1-1-4.5 5L8.5 16l1-1-2.7-2.7H16c.5 0 .9.2 1.3.5 1 1 1 3.4 1 4.5v.3h1.5v-.2c0-1.5 0-4.3-1.5-5.7z\" />\n\t</SVG>\n);\n\nexport default undo;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst redo = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M15.6 6.5l-1.1 1 2.9 3.3H8c-.9 0-1.7.3-2.3.9-1.4 1.5-1.4 4.2-1.4 5.6v.2h1.5v-.3c0-1.1 0-3.5 1-4.5.3-.3.7-.5 1.3-.5h9.2L14.5 15l1.1 1.1 4.6-4.6-4.6-5z\" />\n\t</SVG>\n);\n\nexport default redo;\n","/**\n * WordPress dependencies\n */\nimport { __, isRTL } from '@wordpress/i18n';\nimport { ToolbarButton } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { undo as undoIcon, redo as redoIcon } from '@wordpress/icons';\nimport { displayShortcut } from '@wordpress/keycodes';\nimport { store as coreStore } from '@wordpress/core-data';\n\nexport default function UndoButton() {\n\tconst hasUndo = useSelect(\n\t\t( select ) => select( coreStore ).hasUndo(),\n\t\t[]\n\t);\n\tconst { undo } = useDispatch( coreStore );\n\treturn (\n\t\t<ToolbarButton\n\t\t\ticon={ ! isRTL() ? undoIcon : redoIcon }\n\t\t\tlabel={ __( 'Undo' ) }\n\t\t\tshortcut={ displayShortcut.primary( 'z' ) }\n\t\t\t// If there are no undo levels we don't want to actually disable this\n\t\t\t// button, because it will remove focus for keyboard users.\n\t\t\t// See: https://github.com/WordPress/gutenberg/issues/3486\n\t\t\taria-disabled={ ! hasUndo }\n\t\t\tonClick={ hasUndo ? undo : undefined }\n\t\t/>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { __, isRTL } from '@wordpress/i18n';\nimport { ToolbarButton } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { redo as redoIcon, undo as undoIcon } from '@wordpress/icons';\nimport { displayShortcut, isAppleOS } from '@wordpress/keycodes';\nimport { store as coreStore } from '@wordpress/core-data';\n\nexport default function RedoButton() {\n\tconst shortcut = isAppleOS()\n\t\t? displayShortcut.primaryShift( 'z' )\n\t\t: displayShortcut.primary( 'y' );\n\n\tconst hasRedo = useSelect(\n\t\t( select ) => select( coreStore ).hasRedo(),\n\t\t[]\n\t);\n\tconst { redo } = useDispatch( coreStore );\n\treturn (\n\t\t<ToolbarButton\n\t\t\ticon={ ! isRTL() ? redoIcon : undoIcon }\n\t\t\tlabel={ __( 'Redo' ) }\n\t\t\tshortcut={ shortcut }\n\t\t\t// If there are no undo levels we don't want to actually disable this\n\t\t\t// button, because it will remove focus for keyboard users.\n\t\t\t// See: https://github.com/WordPress/gutenberg/issues/3486\n\t\t\taria-disabled={ ! hasRedo }\n\t\t\tonClick={ hasRedo ? redo : undefined }\n\t\t/>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { Path, SVG } from '@wordpress/primitives';\n\nconst external = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M19.5 4.5h-7V6h4.44l-5.97 5.97 1.06 1.06L18 7.06v4.44h1.5v-7Zm-13 1a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2v-3H17v3a.5.5 0 0 1-.5.5h-10a.5.5 0 0 1-.5-.5v-10a.5.5 0 0 1 .5-.5h3V5.5h-3Z\" />\n\t</SVG>\n);\n\nexport default external;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\nexport const textFormattingShortcuts = [\n\t{\n\t\tkeyCombination: { modifier: 'primary', character: 'b' },\n\t\tdescription: __( 'Make the selected text bold.' ),\n\t},\n\t{\n\t\tkeyCombination: { modifier: 'primary', character: 'i' },\n\t\tdescription: __( 'Make the selected text italic.' ),\n\t},\n\t{\n\t\tkeyCombination: { modifier: 'primary', character: 'k' },\n\t\tdescription: __( 'Convert the selected text into a link.' ),\n\t},\n\t{\n\t\tkeyCombination: { modifier: 'primaryShift', character: 'k' },\n\t\tdescription: __( 'Remove a link.' ),\n\t},\n\t{\n\t\tkeyCombination: { character: '[[' },\n\t\tdescription: __( 'Insert a link to a post or page.' ),\n\t},\n\t{\n\t\tkeyCombination: { modifier: 'primary', character: 'u' },\n\t\tdescription: __( 'Underline the selected text.' ),\n\t},\n\t{\n\t\tkeyCombination: { modifier: 'access', character: 'd' },\n\t\tdescription: __( 'Strikethrough the selected text.' ),\n\t},\n\t{\n\t\tkeyCombination: { modifier: 'access', character: 'x' },\n\t\tdescription: __( 'Make the selected text inline code.' ),\n\t},\n\t{\n\t\tkeyCombination: { modifier: 'access', character: '0' },\n\t\tdescription: __( 'Convert the current heading to a paragraph.' ),\n\t},\n\t{\n\t\tkeyCombination: { modifier: 'access', character: '1-6' },\n\t\tdescription: __(\n\t\t\t'Convert the current paragraph or heading to a heading of level 1 to 6.'\n\t\t),\n\t},\n];\n","/**\n * WordPress dependencies\n */\nimport { Fragment } from '@wordpress/element';\nimport { displayShortcutList, shortcutAriaLabel } from '@wordpress/keycodes';\n\nfunction KeyCombination( { keyCombination, forceAriaLabel } ) {\n\tconst shortcut = keyCombination.modifier\n\t\t? displayShortcutList[ keyCombination.modifier ](\n\t\t\t\tkeyCombination.character\n\t\t  )\n\t\t: keyCombination.character;\n\tconst ariaLabel = keyCombination.modifier\n\t\t? shortcutAriaLabel[ keyCombination.modifier ](\n\t\t\t\tkeyCombination.character\n\t\t  )\n\t\t: keyCombination.character;\n\tconst shortcuts = Array.isArray( shortcut ) ? shortcut : [ shortcut ];\n\n\treturn (\n\t\t<kbd\n\t\t\tclassName=\"edit-widgets-keyboard-shortcut-help-modal__shortcut-key-combination\"\n\t\t\taria-label={ forceAriaLabel || ariaLabel }\n\t\t>\n\t\t\t{ shortcuts.map( ( character, index ) => {\n\t\t\t\tif ( character === '+' ) {\n\t\t\t\t\treturn <Fragment key={ index }>{ character }</Fragment>;\n\t\t\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t\t<kbd\n\t\t\t\t\t\tkey={ index }\n\t\t\t\t\t\tclassName=\"edit-widgets-keyboard-shortcut-help-modal__shortcut-key\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{ character }\n\t\t\t\t\t</kbd>\n\t\t\t\t);\n\t\t\t} ) }\n\t\t</kbd>\n\t);\n}\n\nfunction Shortcut( { description, keyCombination, aliases = [], ariaLabel } ) {\n\treturn (\n\t\t<>\n\t\t\t<div className=\"edit-widgets-keyboard-shortcut-help-modal__shortcut-description\">\n\t\t\t\t{ description }\n\t\t\t</div>\n\t\t\t<div className=\"edit-widgets-keyboard-shortcut-help-modal__shortcut-term\">\n\t\t\t\t<KeyCombination\n\t\t\t\t\tkeyCombination={ keyCombination }\n\t\t\t\t\tforceAriaLabel={ ariaLabel }\n\t\t\t\t/>\n\t\t\t\t{ aliases.map( ( alias, index ) => (\n\t\t\t\t\t<KeyCombination\n\t\t\t\t\t\tkeyCombination={ alias }\n\t\t\t\t\t\tforceAriaLabel={ ariaLabel }\n\t\t\t\t\t\tkey={ index }\n\t\t\t\t\t/>\n\t\t\t\t) ) }\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default Shortcut;\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { store as keyboardShortcutsStore } from '@wordpress/keyboard-shortcuts';\n\n/**\n * Internal dependencies\n */\nimport Shortcut from './shortcut';\n\nfunction DynamicShortcut( { name } ) {\n\tconst { keyCombination, description, aliases } = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetShortcutKeyCombination,\n\t\t\t\tgetShortcutDescription,\n\t\t\t\tgetShortcutAliases,\n\t\t\t} = select( keyboardShortcutsStore );\n\n\t\t\treturn {\n\t\t\t\tkeyCombination: getShortcutKeyCombination( name ),\n\t\t\t\taliases: getShortcutAliases( name ),\n\t\t\t\tdescription: getShortcutDescription( name ),\n\t\t\t};\n\t\t},\n\t\t[ name ]\n\t);\n\n\tif ( ! keyCombination ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<Shortcut\n\t\t\tkeyCombination={ keyCombination }\n\t\t\tdescription={ description }\n\t\t\taliases={ aliases }\n\t\t/>\n\t);\n}\n\nexport default DynamicShortcut;\n","/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { Modal } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport {\n\tuseShortcut,\n\tstore as keyboardShortcutsStore,\n} from '@wordpress/keyboard-shortcuts';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { textFormattingShortcuts } from './config';\nimport Shortcut from './shortcut';\nimport DynamicShortcut from './dynamic-shortcut';\n\nconst ShortcutList = ( { shortcuts } ) => (\n\t/*\n\t * Disable reason: The `list` ARIA role is redundant but\n\t * Safari+VoiceOver won't announce the list otherwise.\n\t */\n\t/* eslint-disable jsx-a11y/no-redundant-roles */\n\t<ul\n\t\tclassName=\"edit-widgets-keyboard-shortcut-help-modal__shortcut-list\"\n\t\trole=\"list\"\n\t>\n\t\t{ shortcuts.map( ( shortcut, index ) => (\n\t\t\t<li\n\t\t\t\tclassName=\"edit-widgets-keyboard-shortcut-help-modal__shortcut\"\n\t\t\t\tkey={ index }\n\t\t\t>\n\t\t\t\t{ typeof shortcut === 'string' ? (\n\t\t\t\t\t<DynamicShortcut name={ shortcut } />\n\t\t\t\t) : (\n\t\t\t\t\t<Shortcut { ...shortcut } />\n\t\t\t\t) }\n\t\t\t</li>\n\t\t) ) }\n\t</ul>\n\t/* eslint-enable jsx-a11y/no-redundant-roles */\n);\n\nconst ShortcutSection = ( { title, shortcuts, className } ) => (\n\t<section\n\t\tclassName={ classnames(\n\t\t\t'edit-widgets-keyboard-shortcut-help-modal__section',\n\t\t\tclassName\n\t\t) }\n\t>\n\t\t{ !! title && (\n\t\t\t<h2 className=\"edit-widgets-keyboard-shortcut-help-modal__section-title\">\n\t\t\t\t{ title }\n\t\t\t</h2>\n\t\t) }\n\t\t<ShortcutList shortcuts={ shortcuts } />\n\t</section>\n);\n\nconst ShortcutCategorySection = ( {\n\ttitle,\n\tcategoryName,\n\tadditionalShortcuts = [],\n} ) => {\n\tconst categoryShortcuts = useSelect(\n\t\t( select ) => {\n\t\t\treturn select( keyboardShortcutsStore ).getCategoryShortcuts(\n\t\t\t\tcategoryName\n\t\t\t);\n\t\t},\n\t\t[ categoryName ]\n\t);\n\n\treturn (\n\t\t<ShortcutSection\n\t\t\ttitle={ title }\n\t\t\tshortcuts={ categoryShortcuts.concat( additionalShortcuts ) }\n\t\t/>\n\t);\n};\n\nexport default function KeyboardShortcutHelpModal( {\n\tisModalActive,\n\ttoggleModal,\n} ) {\n\tuseShortcut( 'core/edit-widgets/keyboard-shortcuts', toggleModal, {\n\t\tbindGlobal: true,\n\t} );\n\n\tif ( ! isModalActive ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<Modal\n\t\t\tclassName=\"edit-widgets-keyboard-shortcut-help-modal\"\n\t\t\ttitle={ __( 'Keyboard shortcuts' ) }\n\t\t\tonRequestClose={ toggleModal }\n\t\t>\n\t\t\t<ShortcutSection\n\t\t\t\tclassName=\"edit-widgets-keyboard-shortcut-help-modal__main-shortcuts\"\n\t\t\t\tshortcuts={ [ 'core/edit-widgets/keyboard-shortcuts' ] }\n\t\t\t/>\n\t\t\t<ShortcutCategorySection\n\t\t\t\ttitle={ __( 'Global shortcuts' ) }\n\t\t\t\tcategoryName=\"global\"\n\t\t\t/>\n\n\t\t\t<ShortcutCategorySection\n\t\t\t\ttitle={ __( 'Selection shortcuts' ) }\n\t\t\t\tcategoryName=\"selection\"\n\t\t\t/>\n\n\t\t\t<ShortcutCategorySection\n\t\t\t\ttitle={ __( 'Block shortcuts' ) }\n\t\t\t\tcategoryName=\"block\"\n\t\t\t\tadditionalShortcuts={ [\n\t\t\t\t\t{\n\t\t\t\t\t\tkeyCombination: { character: '/' },\n\t\t\t\t\t\tdescription: __(\n\t\t\t\t\t\t\t'Change the block type after adding a new paragraph.'\n\t\t\t\t\t\t),\n\t\t\t\t\t\t/* translators: The forward-slash character. e.g. '/'. */\n\t\t\t\t\t\tariaLabel: __( 'Forward-slash' ),\n\t\t\t\t\t},\n\t\t\t\t] }\n\t\t\t/>\n\t\t\t<ShortcutSection\n\t\t\t\ttitle={ __( 'Text formatting' ) }\n\t\t\t\tshortcuts={ textFormattingShortcuts }\n\t\t\t/>\n\t\t</Modal>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { createSlotFill } from '@wordpress/components';\n\nconst { Fill: ToolsMoreMenuGroup, Slot } = createSlotFill(\n\t'EditWidgetsToolsMoreMenuGroup'\n);\n\nToolsMoreMenuGroup.Slot = ( { fillProps } ) => (\n\t<Slot fillProps={ fillProps }>\n\t\t{ ( fills ) => fills.length > 0 && fills }\n\t</Slot>\n);\n\nexport default ToolsMoreMenuGroup;\n","/**\n * WordPress dependencies\n */\nimport { MenuGroup, MenuItem, VisuallyHidden } from '@wordpress/components';\nimport { useState } from '@wordpress/element';\nimport { __, _x } from '@wordpress/i18n';\nimport { external } from '@wordpress/icons';\nimport { MoreMenuDropdown } from '@wordpress/interface';\nimport { PreferenceToggleMenuItem } from '@wordpress/preferences';\nimport { displayShortcut } from '@wordpress/keycodes';\nimport { useShortcut } from '@wordpress/keyboard-shortcuts';\nimport { useViewportMatch } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport KeyboardShortcutHelpModal from '../keyboard-shortcut-help-modal';\nimport ToolsMoreMenuGroup from './tools-more-menu-group';\n\nexport default function MoreMenu() {\n\tconst [\n\t\tisKeyboardShortcutsModalActive,\n\t\tsetIsKeyboardShortcutsModalVisible,\n\t] = useState( false );\n\tconst toggleKeyboardShortcutsModal = () =>\n\t\tsetIsKeyboardShortcutsModalVisible( ! isKeyboardShortcutsModalActive );\n\n\tuseShortcut(\n\t\t'core/edit-widgets/keyboard-shortcuts',\n\t\ttoggleKeyboardShortcutsModal\n\t);\n\n\tconst isLargeViewport = useViewportMatch( 'medium' );\n\n\treturn (\n\t\t<>\n\t\t\t<MoreMenuDropdown>\n\t\t\t\t{ ( onClose ) => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{ isLargeViewport && (\n\t\t\t\t\t\t\t<MenuGroup label={ _x( 'View', 'noun' ) }>\n\t\t\t\t\t\t\t\t<PreferenceToggleMenuItem\n\t\t\t\t\t\t\t\t\tscope=\"core/edit-widgets\"\n\t\t\t\t\t\t\t\t\tname=\"fixedToolbar\"\n\t\t\t\t\t\t\t\t\tlabel={ __( 'Top toolbar' ) }\n\t\t\t\t\t\t\t\t\tinfo={ __(\n\t\t\t\t\t\t\t\t\t\t'Access all block and document tools in a single place'\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\tmessageActivated={ __(\n\t\t\t\t\t\t\t\t\t\t'Top toolbar activated'\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\tmessageDeactivated={ __(\n\t\t\t\t\t\t\t\t\t\t'Top toolbar deactivated'\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</MenuGroup>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t<MenuGroup label={ __( 'Tools' ) }>\n\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\t\tsetIsKeyboardShortcutsModalVisible( true );\n\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\tshortcut={ displayShortcut.access( 'h' ) }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ __( 'Keyboard shortcuts' ) }\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t<PreferenceToggleMenuItem\n\t\t\t\t\t\t\t\tscope=\"core/edit-widgets\"\n\t\t\t\t\t\t\t\tname=\"welcomeGuide\"\n\t\t\t\t\t\t\t\tlabel={ __( 'Welcome Guide' ) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\trole=\"menuitem\"\n\t\t\t\t\t\t\t\ticon={ external }\n\t\t\t\t\t\t\t\thref={ __(\n\t\t\t\t\t\t\t\t\t'https://wordpress.org/documentation/article/block-based-widgets-editor/'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ __( 'Help' ) }\n\t\t\t\t\t\t\t\t<VisuallyHidden as=\"span\">\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t/* translators: accessibility text */\n\t\t\t\t\t\t\t\t\t\t__( '(opens in a new tab)' )\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</VisuallyHidden>\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t<ToolsMoreMenuGroup.Slot\n\t\t\t\t\t\t\t\tfillProps={ { onClose } }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</MenuGroup>\n\t\t\t\t\t\t<MenuGroup label={ __( 'Preferences' ) }>\n\t\t\t\t\t\t\t<PreferenceToggleMenuItem\n\t\t\t\t\t\t\t\tscope=\"core/edit-widgets\"\n\t\t\t\t\t\t\t\tname=\"keepCaretInsideBlock\"\n\t\t\t\t\t\t\t\tlabel={ __(\n\t\t\t\t\t\t\t\t\t'Contain text cursor inside block'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\tinfo={ __(\n\t\t\t\t\t\t\t\t\t'Aids screen readers by stopping text caret from leaving blocks.'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\tmessageActivated={ __(\n\t\t\t\t\t\t\t\t\t'Contain text cursor inside block activated'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\tmessageDeactivated={ __(\n\t\t\t\t\t\t\t\t\t'Contain text cursor inside block deactivated'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<PreferenceToggleMenuItem\n\t\t\t\t\t\t\t\tscope=\"core/edit-widgets\"\n\t\t\t\t\t\t\t\tname=\"themeStyles\"\n\t\t\t\t\t\t\t\tinfo={ __(\n\t\t\t\t\t\t\t\t\t'Make the editor look like your theme.'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\tlabel={ __( 'Use theme styles' ) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{ isLargeViewport && (\n\t\t\t\t\t\t\t\t<PreferenceToggleMenuItem\n\t\t\t\t\t\t\t\t\tscope=\"core/edit-widgets\"\n\t\t\t\t\t\t\t\t\tname=\"showBlockBreadcrumbs\"\n\t\t\t\t\t\t\t\t\tlabel={ __( 'Display block breadcrumbs' ) }\n\t\t\t\t\t\t\t\t\tinfo={ __(\n\t\t\t\t\t\t\t\t\t\t'Shows block breadcrumbs at the bottom of the editor.'\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\tmessageActivated={ __(\n\t\t\t\t\t\t\t\t\t\t'Display block breadcrumbs activated'\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\tmessageDeactivated={ __(\n\t\t\t\t\t\t\t\t\t\t'Display block breadcrumbs deactivated'\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</MenuGroup>\n\t\t\t\t\t</>\n\t\t\t\t) }\n\t\t\t</MoreMenuDropdown>\n\t\t\t<KeyboardShortcutHelpModal\n\t\t\t\tisModalActive={ isKeyboardShortcutsModalActive }\n\t\t\t\ttoggleModal={ toggleKeyboardShortcutsModal }\n\t\t\t/>\n\t\t</>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { __, _x } from '@wordpress/i18n';\nimport { Button, ToolbarItem, VisuallyHidden } from '@wordpress/components';\nimport {\n\tNavigableToolbar,\n\tstore as blockEditorStore,\n\tprivateApis as blockEditorPrivateApis,\n} from '@wordpress/block-editor';\nimport { PinnedItems } from '@wordpress/interface';\nimport { listView, plus } from '@wordpress/icons';\nimport { useCallback, useRef } from '@wordpress/element';\nimport { useViewportMatch } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport SaveButton from '../save-button';\nimport UndoButton from './undo-redo/undo';\nimport RedoButton from './undo-redo/redo';\nimport MoreMenu from '../more-menu';\nimport useLastSelectedWidgetArea from '../../hooks/use-last-selected-widget-area';\nimport { store as editWidgetsStore } from '../../store';\nimport { unlock } from '../../lock-unlock';\n\nconst { useShouldContextualToolbarShow } = unlock( blockEditorPrivateApis );\n\nfunction Header() {\n\tconst isMediumViewport = useViewportMatch( 'medium' );\n\tconst inserterButton = useRef();\n\tconst widgetAreaClientId = useLastSelectedWidgetArea();\n\tconst isLastSelectedWidgetAreaOpen = useSelect(\n\t\t( select ) =>\n\t\t\tselect( editWidgetsStore ).getIsWidgetAreaOpen(\n\t\t\t\twidgetAreaClientId\n\t\t\t),\n\t\t[ widgetAreaClientId ]\n\t);\n\tconst { isInserterOpen, isListViewOpen } = useSelect( ( select ) => {\n\t\tconst { isInserterOpened, isListViewOpened } =\n\t\t\tselect( editWidgetsStore );\n\t\treturn {\n\t\t\tisInserterOpen: isInserterOpened(),\n\t\t\tisListViewOpen: isListViewOpened(),\n\t\t};\n\t}, [] );\n\tconst { setIsWidgetAreaOpen, setIsInserterOpened, setIsListViewOpened } =\n\t\tuseDispatch( editWidgetsStore );\n\tconst { selectBlock } = useDispatch( blockEditorStore );\n\tconst handleClick = () => {\n\t\tif ( isInserterOpen ) {\n\t\t\t// Focusing the inserter button closes the inserter popover.\n\t\t\tsetIsInserterOpened( false );\n\t\t} else {\n\t\t\tif ( ! isLastSelectedWidgetAreaOpen ) {\n\t\t\t\t// Select the last selected block if hasn't already.\n\t\t\t\tselectBlock( widgetAreaClientId );\n\t\t\t\t// Open the last selected widget area when opening the inserter.\n\t\t\t\tsetIsWidgetAreaOpen( widgetAreaClientId, true );\n\t\t\t}\n\t\t\t// The DOM updates resulting from selectBlock() and setIsInserterOpened() calls are applied the\n\t\t\t// same tick and pretty much in a random order. The inserter is closed if any other part of the\n\t\t\t// app receives focus. If selectBlock() happens to take effect after setIsInserterOpened() then\n\t\t\t// the inserter is visible for a brief moment and then gets auto-closed due to focus moving to\n\t\t\t// the selected block.\n\t\t\twindow.requestAnimationFrame( () => setIsInserterOpened( true ) );\n\t\t}\n\t};\n\n\tconst toggleListView = useCallback(\n\t\t() => setIsListViewOpened( ! isListViewOpen ),\n\t\t[ setIsListViewOpened, isListViewOpen ]\n\t);\n\n\tconst {\n\t\tshouldShowContextualToolbar,\n\t\tcanFocusHiddenToolbar,\n\t\tfixedToolbarCanBeFocused,\n\t} = useShouldContextualToolbarShow();\n\t// If there's a block toolbar to be focused, disable the focus shortcut for the document toolbar.\n\t// There's a fixed block toolbar when the fixed toolbar option is enabled or when the browser width is less than the large viewport.\n\tconst blockToolbarCanBeFocused =\n\t\tshouldShowContextualToolbar ||\n\t\tcanFocusHiddenToolbar ||\n\t\tfixedToolbarCanBeFocused;\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"edit-widgets-header\">\n\t\t\t\t<div className=\"edit-widgets-header__navigable-toolbar-wrapper\">\n\t\t\t\t\t{ isMediumViewport && (\n\t\t\t\t\t\t<h1 className=\"edit-widgets-header__title\">\n\t\t\t\t\t\t\t{ __( 'Widgets' ) }\n\t\t\t\t\t\t</h1>\n\t\t\t\t\t) }\n\t\t\t\t\t{ ! isMediumViewport && (\n\t\t\t\t\t\t<VisuallyHidden\n\t\t\t\t\t\t\tas=\"h1\"\n\t\t\t\t\t\t\tclassName=\"edit-widgets-header__title\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Widgets' ) }\n\t\t\t\t\t\t</VisuallyHidden>\n\t\t\t\t\t) }\n\t\t\t\t\t<NavigableToolbar\n\t\t\t\t\t\tclassName=\"edit-widgets-header-toolbar\"\n\t\t\t\t\t\taria-label={ __( 'Document tools' ) }\n\t\t\t\t\t\tshouldUseKeyboardFocusShortcut={\n\t\t\t\t\t\t\t! blockToolbarCanBeFocused\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ToolbarItem\n\t\t\t\t\t\t\tref={ inserterButton }\n\t\t\t\t\t\t\tas={ Button }\n\t\t\t\t\t\t\tclassName=\"edit-widgets-header-toolbar__inserter-toggle\"\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\tisPressed={ isInserterOpen }\n\t\t\t\t\t\t\tonMouseDown={ ( event ) => {\n\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\tonClick={ handleClick }\n\t\t\t\t\t\t\ticon={ plus }\n\t\t\t\t\t\t\t/* translators: button label text should, if possible, be under 16\n\t\t\t\t\tcharacters. */\n\t\t\t\t\t\t\tlabel={ _x(\n\t\t\t\t\t\t\t\t'Toggle block inserter',\n\t\t\t\t\t\t\t\t'Generic label for block inserter button'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{ isMediumViewport && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<UndoButton />\n\t\t\t\t\t\t\t\t<RedoButton />\n\t\t\t\t\t\t\t\t<ToolbarItem\n\t\t\t\t\t\t\t\t\tas={ Button }\n\t\t\t\t\t\t\t\t\tclassName=\"edit-widgets-header-toolbar__list-view-toggle\"\n\t\t\t\t\t\t\t\t\ticon={ listView }\n\t\t\t\t\t\t\t\t\tisPressed={ isListViewOpen }\n\t\t\t\t\t\t\t\t\t/* translators: button label text should, if possible, be under 16 characters. */\n\t\t\t\t\t\t\t\t\tlabel={ __( 'List View' ) }\n\t\t\t\t\t\t\t\t\tonClick={ toggleListView }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</NavigableToolbar>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"edit-widgets-header__actions\">\n\t\t\t\t\t<SaveButton />\n\t\t\t\t\t<PinnedItems.Slot scope=\"core/edit-widgets\" />\n\t\t\t\t\t<MoreMenu />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default Header;\n","/**\n * WordPress dependencies\n */\nimport { NoticeList, SnackbarList } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as noticesStore } from '@wordpress/notices';\n\nfunction Notices() {\n\tconst { removeNotice } = useDispatch( noticesStore );\n\tconst { notices } = useSelect( ( select ) => {\n\t\treturn {\n\t\t\tnotices: select( noticesStore ).getNotices(),\n\t\t};\n\t}, [] );\n\n\tconst dismissibleNotices = notices.filter(\n\t\t( { isDismissible, type } ) => isDismissible && type === 'default'\n\t);\n\tconst nonDismissibleNotices = notices.filter(\n\t\t( { isDismissible, type } ) => ! isDismissible && type === 'default'\n\t);\n\tconst snackbarNotices = notices.filter(\n\t\t( { type } ) => type === 'snackbar'\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<NoticeList\n\t\t\t\tnotices={ nonDismissibleNotices }\n\t\t\t\tclassName=\"edit-widgets-notices__pinned\"\n\t\t\t/>\n\t\t\t<NoticeList\n\t\t\t\tnotices={ dismissibleNotices }\n\t\t\t\tclassName=\"edit-widgets-notices__dismissible\"\n\t\t\t\tonRemove={ removeNotice }\n\t\t\t/>\n\t\t\t<SnackbarList\n\t\t\t\tnotices={ snackbarNotices }\n\t\t\t\tclassName=\"edit-widgets-notices__snackbar\"\n\t\t\t\tonRemove={ removeNotice }\n\t\t\t/>\n\t\t</>\n\t);\n}\n\nexport default Notices;\n","/**\n * WordPress dependencies\n */\nimport {\n\tBlockList,\n\tBlockTools,\n\tBlockSelectionClearer,\n\tWritingFlow,\n\tObserveTyping,\n\t__unstableEditorStyles as EditorStyles,\n} from '@wordpress/block-editor';\nimport { useSelect } from '@wordpress/data';\nimport { useMemo } from '@wordpress/element';\nimport { store as preferencesStore } from '@wordpress/preferences';\n\n/**\n * Internal dependencies\n */\nimport Notices from '../notices';\nimport KeyboardShortcuts from '../keyboard-shortcuts';\n\nexport default function WidgetAreasBlockEditorContent( {\n\tblockEditorSettings,\n} ) {\n\tconst hasThemeStyles = useSelect(\n\t\t( select ) =>\n\t\t\t!! select( preferencesStore ).get(\n\t\t\t\t'core/edit-widgets',\n\t\t\t\t'themeStyles'\n\t\t\t),\n\t\t[]\n\t);\n\n\tconst styles = useMemo( () => {\n\t\treturn hasThemeStyles ? blockEditorSettings.styles : [];\n\t}, [ blockEditorSettings, hasThemeStyles ] );\n\n\treturn (\n\t\t<div className=\"edit-widgets-block-editor\">\n\t\t\t<Notices />\n\t\t\t<BlockTools>\n\t\t\t\t<KeyboardShortcuts />\n\t\t\t\t<EditorStyles styles={ styles } />\n\t\t\t\t<BlockSelectionClearer>\n\t\t\t\t\t<WritingFlow>\n\t\t\t\t\t\t<ObserveTyping>\n\t\t\t\t\t\t\t<BlockList className=\"edit-widgets-main-block-list\" />\n\t\t\t\t\t\t</ObserveTyping>\n\t\t\t\t\t</WritingFlow>\n\t\t\t\t</BlockSelectionClearer>\n\t\t\t</BlockTools>\n\t\t</div>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst close = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M13 11.8l6.1-6.3-1-1-6.1 6.2-6.1-6.2-1 1 6.1 6.3-6.5 6.7 1 1 6.5-6.6 6.5 6.6 1-1z\" />\n\t</SVG>\n);\n\nexport default close;\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editWidgetsStore } from '../store';\nimport { buildWidgetAreasPostId, KIND, POST_TYPE } from '../store/utils';\n\nconst useWidgetLibraryInsertionPoint = () => {\n\tconst firstRootId = useSelect( ( select ) => {\n\t\t// Default to the first widget area\n\t\tconst { getEntityRecord } = select( coreStore );\n\t\tconst widgetAreasPost = getEntityRecord(\n\t\t\tKIND,\n\t\t\tPOST_TYPE,\n\t\t\tbuildWidgetAreasPostId()\n\t\t);\n\t\treturn widgetAreasPost?.blocks[ 0 ]?.clientId;\n\t}, [] );\n\n\treturn useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetBlockRootClientId,\n\t\t\t\tgetBlockSelectionEnd,\n\t\t\t\tgetBlockOrder,\n\t\t\t\tgetBlockIndex,\n\t\t\t} = select( blockEditorStore );\n\n\t\t\tconst insertionPoint =\n\t\t\t\tselect( editWidgetsStore ).__experimentalGetInsertionPoint();\n\n\t\t\t// \"Browse all\" in the quick inserter will set the rootClientId to the current block.\n\t\t\t// Otherwise, it will just be undefined, and we'll have to handle it differently below.\n\t\t\tif ( insertionPoint.rootClientId ) {\n\t\t\t\treturn insertionPoint;\n\t\t\t}\n\n\t\t\tconst clientId = getBlockSelectionEnd() || firstRootId;\n\t\t\tconst rootClientId = getBlockRootClientId( clientId );\n\n\t\t\t// If the selected block is at the root level, it's a widget area and\n\t\t\t// blocks can't be inserted here. Return this block as the root and the\n\t\t\t// last child clientId indicating insertion at the end.\n\t\t\tif ( clientId && rootClientId === '' ) {\n\t\t\t\treturn {\n\t\t\t\t\trootClientId: clientId,\n\t\t\t\t\tinsertionIndex: getBlockOrder( clientId ).length,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\trootClientId,\n\t\t\t\tinsertionIndex: getBlockIndex( clientId ) + 1,\n\t\t\t};\n\t\t},\n\t\t[ firstRootId ]\n\t);\n};\n\nexport default useWidgetLibraryInsertionPoint;\n","/**\n * WordPress dependencies\n */\nimport { Button, VisuallyHidden } from '@wordpress/components';\nimport { close } from '@wordpress/icons';\nimport { __experimentalLibrary as Library } from '@wordpress/block-editor';\nimport {\n\tuseViewportMatch,\n\t__experimentalUseDialog as useDialog,\n} from '@wordpress/compose';\nimport { useCallback, useEffect, useRef } from '@wordpress/element';\nimport { useDispatch } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport useWidgetLibraryInsertionPoint from '../../hooks/use-widget-library-insertion-point';\nimport { store as editWidgetsStore } from '../../store';\n\nexport default function InserterSidebar() {\n\tconst isMobileViewport = useViewportMatch( 'medium', '<' );\n\tconst { rootClientId, insertionIndex } = useWidgetLibraryInsertionPoint();\n\n\tconst { setIsInserterOpened } = useDispatch( editWidgetsStore );\n\n\tconst closeInserter = useCallback( () => {\n\t\treturn setIsInserterOpened( false );\n\t}, [ setIsInserterOpened ] );\n\n\tconst TagName = ! isMobileViewport ? VisuallyHidden : 'div';\n\tconst [ inserterDialogRef, inserterDialogProps ] = useDialog( {\n\t\tonClose: closeInserter,\n\t\tfocusOnMount: null,\n\t} );\n\n\tconst libraryRef = useRef();\n\tuseEffect( () => {\n\t\tlibraryRef.current.focusSearch();\n\t}, [] );\n\n\treturn (\n\t\t<div\n\t\t\tref={ inserterDialogRef }\n\t\t\t{ ...inserterDialogProps }\n\t\t\tclassName=\"edit-widgets-layout__inserter-panel\"\n\t\t>\n\t\t\t<TagName className=\"edit-widgets-layout__inserter-panel-header\">\n\t\t\t\t<Button\n\t\t\t\t\ticon={ close }\n\t\t\t\t\tonClick={ closeInserter }\n\t\t\t\t\tlabel={ __( 'Close block inserter' ) }\n\t\t\t\t/>\n\t\t\t</TagName>\n\t\t\t<div className=\"edit-widgets-layout__inserter-panel-content\">\n\t\t\t\t<Library\n\t\t\t\t\tshowInserterHelpPanel\n\t\t\t\t\tshouldFocusBlock={ isMobileViewport }\n\t\t\t\t\trootClientId={ rootClientId }\n\t\t\t\t\t__experimentalInsertionIndex={ insertionIndex }\n\t\t\t\t\tref={ libraryRef }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { __experimentalListView as ListView } from '@wordpress/block-editor';\nimport { Button } from '@wordpress/components';\nimport {\n\tuseFocusOnMount,\n\tuseFocusReturn,\n\tuseMergeRefs,\n} from '@wordpress/compose';\nimport { useDispatch } from '@wordpress/data';\nimport { useState } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport { closeSmall } from '@wordpress/icons';\nimport { ESCAPE } from '@wordpress/keycodes';\n\n/**\n * Internal dependencies\n */\nimport { store as editWidgetsStore } from '../../store';\n\nexport default function ListViewSidebar() {\n\tconst { setIsListViewOpened } = useDispatch( editWidgetsStore );\n\n\t// Use internal state instead of a ref to make sure that the component\n\t// re-renders when the dropZoneElement updates.\n\tconst [ dropZoneElement, setDropZoneElement ] = useState( null );\n\n\tconst focusOnMountRef = useFocusOnMount( 'firstElement' );\n\tconst headerFocusReturnRef = useFocusReturn();\n\tconst contentFocusReturnRef = useFocusReturn();\n\n\tfunction closeOnEscape( event ) {\n\t\tif ( event.keyCode === ESCAPE && ! event.defaultPrevented ) {\n\t\t\tevent.preventDefault();\n\t\t\tsetIsListViewOpened( false );\n\t\t}\n\t}\n\n\treturn (\n\t\t// eslint-disable-next-line jsx-a11y/no-static-element-interactions\n\t\t<div\n\t\t\tclassName=\"edit-widgets-editor__list-view-panel\"\n\t\t\tonKeyDown={ closeOnEscape }\n\t\t>\n\t\t\t<div\n\t\t\t\tclassName=\"edit-widgets-editor__list-view-panel-header\"\n\t\t\t\tref={ headerFocusReturnRef }\n\t\t\t>\n\t\t\t\t<strong>{ __( 'List View' ) }</strong>\n\t\t\t\t<Button\n\t\t\t\t\ticon={ closeSmall }\n\t\t\t\t\tlabel={ __( 'Close' ) }\n\t\t\t\t\tonClick={ () => setIsListViewOpened( false ) }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName=\"edit-widgets-editor__list-view-panel-content\"\n\t\t\t\tref={ useMergeRefs( [\n\t\t\t\t\tcontentFocusReturnRef,\n\t\t\t\t\tfocusOnMountRef,\n\t\t\t\t\tsetDropZoneElement,\n\t\t\t\t] ) }\n\t\t\t>\n\t\t\t\t<ListView dropZoneElement={ dropZoneElement } />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\n/**\n * Internal dependencies\n */\nimport { store as editWidgetsStore } from '../../store';\n\n/**\n * Internal dependencies\n */\nimport InserterSidebar from './inserter-sidebar';\nimport ListViewSidebar from './list-view-sidebar';\n\nexport default function SecondarySidebar() {\n\tconst { isInserterOpen, isListViewOpen } = useSelect( ( select ) => {\n\t\tconst { isInserterOpened, isListViewOpened } =\n\t\t\tselect( editWidgetsStore );\n\t\treturn {\n\t\t\tisInserterOpen: isInserterOpened(),\n\t\t\tisListViewOpen: isListViewOpened(),\n\t\t};\n\t}, [] );\n\n\tif ( isInserterOpen ) {\n\t\treturn <InserterSidebar />;\n\t}\n\tif ( isListViewOpen ) {\n\t\treturn <ListViewSidebar />;\n\t}\n\treturn null;\n}\n","/**\n * WordPress dependencies\n */\nimport { useViewportMatch } from '@wordpress/compose';\nimport { BlockBreadcrumb } from '@wordpress/block-editor';\nimport { useEffect } from '@wordpress/element';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport {\n\tInterfaceSkeleton,\n\tComplementaryArea,\n\tstore as interfaceStore,\n} from '@wordpress/interface';\nimport { __ } from '@wordpress/i18n';\nimport { store as keyboardShortcutsStore } from '@wordpress/keyboard-shortcuts';\nimport { store as preferencesStore } from '@wordpress/preferences';\n\n/**\n * Internal dependencies\n */\nimport Header from '../header';\nimport WidgetAreasBlockEditorContent from '../widget-areas-block-editor-content';\nimport { store as editWidgetsStore } from '../../store';\nimport SecondarySidebar from '../secondary-sidebar';\n\nconst interfaceLabels = {\n\t/* translators: accessibility text for the widgets screen top bar landmark region. */\n\theader: __( 'Widgets top bar' ),\n\t/* translators: accessibility text for the widgets screen content landmark region. */\n\tbody: __( 'Widgets and blocks' ),\n\t/* translators: accessibility text for the widgets screen settings landmark region. */\n\tsidebar: __( 'Widgets settings' ),\n\t/* translators: accessibility text for the widgets screen footer landmark region. */\n\tfooter: __( 'Widgets footer' ),\n};\n\nfunction Interface( { blockEditorSettings } ) {\n\tconst isMobileViewport = useViewportMatch( 'medium', '<' );\n\tconst isHugeViewport = useViewportMatch( 'huge', '>=' );\n\tconst { setIsInserterOpened, setIsListViewOpened, closeGeneralSidebar } =\n\t\tuseDispatch( editWidgetsStore );\n\tconst {\n\t\thasBlockBreadCrumbsEnabled,\n\t\thasSidebarEnabled,\n\t\tisInserterOpened,\n\t\tisListViewOpened,\n\t\tpreviousShortcut,\n\t\tnextShortcut,\n\t} = useSelect(\n\t\t( select ) => ( {\n\t\t\thasSidebarEnabled: !! select(\n\t\t\t\tinterfaceStore\n\t\t\t).getActiveComplementaryArea( editWidgetsStore.name ),\n\t\t\tisInserterOpened: !! select( editWidgetsStore ).isInserterOpened(),\n\t\t\tisListViewOpened: !! select( editWidgetsStore ).isListViewOpened(),\n\t\t\thasBlockBreadCrumbsEnabled: !! select( preferencesStore ).get(\n\t\t\t\t'core/edit-widgets',\n\t\t\t\t'showBlockBreadcrumbs'\n\t\t\t),\n\t\t\tpreviousShortcut: select(\n\t\t\t\tkeyboardShortcutsStore\n\t\t\t).getAllShortcutKeyCombinations(\n\t\t\t\t'core/edit-widgets/previous-region'\n\t\t\t),\n\t\t\tnextShortcut: select(\n\t\t\t\tkeyboardShortcutsStore\n\t\t\t).getAllShortcutKeyCombinations( 'core/edit-widgets/next-region' ),\n\t\t} ),\n\t\t[]\n\t);\n\n\t// Inserter and Sidebars are mutually exclusive\n\tuseEffect( () => {\n\t\tif ( hasSidebarEnabled && ! isHugeViewport ) {\n\t\t\tsetIsInserterOpened( false );\n\t\t\tsetIsListViewOpened( false );\n\t\t}\n\t}, [ hasSidebarEnabled, isHugeViewport ] );\n\n\tuseEffect( () => {\n\t\tif ( ( isInserterOpened || isListViewOpened ) && ! isHugeViewport ) {\n\t\t\tcloseGeneralSidebar();\n\t\t}\n\t}, [ isInserterOpened, isListViewOpened, isHugeViewport ] );\n\n\tconst secondarySidebarLabel = isListViewOpened\n\t\t? __( 'List View' )\n\t\t: __( 'Block Library' );\n\n\tconst hasSecondarySidebar = isListViewOpened || isInserterOpened;\n\n\treturn (\n\t\t<InterfaceSkeleton\n\t\t\tlabels={ {\n\t\t\t\t...interfaceLabels,\n\t\t\t\tsecondarySidebar: secondarySidebarLabel,\n\t\t\t} }\n\t\t\theader={ <Header /> }\n\t\t\tsecondarySidebar={ hasSecondarySidebar && <SecondarySidebar /> }\n\t\t\tsidebar={\n\t\t\t\thasSidebarEnabled && (\n\t\t\t\t\t<ComplementaryArea.Slot scope=\"core/edit-widgets\" />\n\t\t\t\t)\n\t\t\t}\n\t\t\tcontent={\n\t\t\t\t<>\n\t\t\t\t\t<WidgetAreasBlockEditorContent\n\t\t\t\t\t\tblockEditorSettings={ blockEditorSettings }\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t}\n\t\t\tfooter={\n\t\t\t\thasBlockBreadCrumbsEnabled &&\n\t\t\t\t! isMobileViewport && (\n\t\t\t\t\t<div className=\"edit-widgets-layout__footer\">\n\t\t\t\t\t\t<BlockBreadcrumb rootLabelText={ __( 'Widgets' ) } />\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t\tshortcuts={ {\n\t\t\t\tprevious: previousShortcut,\n\t\t\t\tnext: nextShortcut,\n\t\t\t} }\n\t\t/>\n\t);\n}\n\nexport default Interface;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useEffect } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as editWidgetsStore } from '../../store';\n\n/**\n * Warns the user if there are unsaved changes before leaving the editor.\n *\n * This is a duplicate of the component implemented in the editor package.\n * Duplicated here as edit-widgets doesn't depend on editor.\n *\n * @return {WPComponent} The component.\n */\nexport default function UnsavedChangesWarning() {\n\tconst isDirty = useSelect( ( select ) => {\n\t\tconst { getEditedWidgetAreas } = select( editWidgetsStore );\n\t\tconst editedWidgetAreas = getEditedWidgetAreas();\n\n\t\treturn editedWidgetAreas?.length > 0;\n\t}, [] );\n\n\tuseEffect( () => {\n\t\t/**\n\t\t * Warns the user if there are unsaved changes before leaving the editor.\n\t\t *\n\t\t * @param {Event} event `beforeunload` event.\n\t\t *\n\t\t * @return {string | undefined} Warning prompt message, if unsaved changes exist.\n\t\t */\n\t\tconst warnIfUnsavedChanges = ( event ) => {\n\t\t\tif ( isDirty ) {\n\t\t\t\tevent.returnValue = __(\n\t\t\t\t\t'You have unsaved changes. If you proceed, they will be lost.'\n\t\t\t\t);\n\t\t\t\treturn event.returnValue;\n\t\t\t}\n\t\t};\n\n\t\twindow.addEventListener( 'beforeunload', warnIfUnsavedChanges );\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener( 'beforeunload', warnIfUnsavedChanges );\n\t\t};\n\t}, [ isDirty ] );\n\n\treturn null;\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { ExternalLink, Guide } from '@wordpress/components';\nimport { __, sprintf, _n } from '@wordpress/i18n';\nimport { createInterpolateElement } from '@wordpress/element';\nimport { store as preferencesStore } from '@wordpress/preferences';\n\n/**\n * Internal dependencies\n */\nimport { store as editWidgetsStore } from '../../store';\n\nexport default function WelcomeGuide() {\n\tconst isActive = useSelect(\n\t\t( select ) =>\n\t\t\t!! select( preferencesStore ).get(\n\t\t\t\t'core/edit-widgets',\n\t\t\t\t'welcomeGuide'\n\t\t\t),\n\t\t[]\n\t);\n\n\tconst { toggle } = useDispatch( preferencesStore );\n\n\tconst widgetAreas = useSelect(\n\t\t( select ) =>\n\t\t\tselect( editWidgetsStore ).getWidgetAreas( { per_page: -1 } ),\n\t\t[]\n\t);\n\n\tif ( ! isActive ) {\n\t\treturn null;\n\t}\n\n\tconst isEntirelyBlockWidgets = widgetAreas?.every(\n\t\t( widgetArea ) =>\n\t\t\twidgetArea.id === 'wp_inactive_widgets' ||\n\t\t\twidgetArea.widgets.every( ( widgetId ) =>\n\t\t\t\twidgetId.startsWith( 'block-' )\n\t\t\t)\n\t);\n\n\tconst numWidgetAreas =\n\t\twidgetAreas?.filter(\n\t\t\t( widgetArea ) => widgetArea.id !== 'wp_inactive_widgets'\n\t\t).length ?? 0;\n\n\treturn (\n\t\t<Guide\n\t\t\tclassName=\"edit-widgets-welcome-guide\"\n\t\t\tcontentLabel={ __( 'Welcome to block Widgets' ) }\n\t\t\tfinishButtonText={ __( 'Get started' ) }\n\t\t\tonFinish={ () => toggle( 'core/edit-widgets', 'welcomeGuide' ) }\n\t\t\tpages={ [\n\t\t\t\t{\n\t\t\t\t\timage: (\n\t\t\t\t\t\t<WelcomeGuideImage\n\t\t\t\t\t\t\tnonAnimatedSrc=\"https://s.w.org/images/block-editor/welcome-canvas.svg\"\n\t\t\t\t\t\t\tanimatedSrc=\"https://s.w.org/images/block-editor/welcome-canvas.gif\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t),\n\t\t\t\t\tcontent: (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<h1 className=\"edit-widgets-welcome-guide__heading\">\n\t\t\t\t\t\t\t\t{ __( 'Welcome to block Widgets' ) }\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t{ isEntirelyBlockWidgets ? (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<p className=\"edit-widgets-welcome-guide__text\">\n\t\t\t\t\t\t\t\t\t\t{ sprintf(\n\t\t\t\t\t\t\t\t\t\t\t// Translators: %s: Number of block areas in the current theme.\n\t\t\t\t\t\t\t\t\t\t\t_n(\n\t\t\t\t\t\t\t\t\t\t\t\t'Your theme provides %s “block” area for you to add and edit content. Try adding a search bar, social icons, or other types of blocks here and see how they’ll look on your site.',\n\t\t\t\t\t\t\t\t\t\t\t\t'Your theme provides %s different “block” areas for you to add and edit content. Try adding a search bar, social icons, or other types of blocks here and see how they’ll look on your site.',\n\t\t\t\t\t\t\t\t\t\t\t\tnumWidgetAreas\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\tnumWidgetAreas\n\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<p className=\"edit-widgets-welcome-guide__text\">\n\t\t\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t\t\t'You can now add any block to your site’s widget areas. Don’t worry, all of your favorite widgets still work flawlessly.'\n\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<p className=\"edit-widgets-welcome-guide__text\">\n\t\t\t\t\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t\t\t\t'Want to stick with the old widgets?'\n\t\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t\t</strong>{ ' ' }\n\t\t\t\t\t\t\t\t\t\t<ExternalLink\n\t\t\t\t\t\t\t\t\t\t\thref={ __(\n\t\t\t\t\t\t\t\t\t\t\t\t'https://wordpress.org/plugins/classic-widgets/'\n\t\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t\t\t\t'Get the Classic Widgets plugin.'\n\t\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t\t</ExternalLink>\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</>\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\timage: (\n\t\t\t\t\t\t<WelcomeGuideImage\n\t\t\t\t\t\t\tnonAnimatedSrc=\"https://s.w.org/images/block-editor/welcome-editor.svg\"\n\t\t\t\t\t\t\tanimatedSrc=\"https://s.w.org/images/block-editor/welcome-editor.gif\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t),\n\t\t\t\t\tcontent: (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<h1 className=\"edit-widgets-welcome-guide__heading\">\n\t\t\t\t\t\t\t\t{ __( 'Make each block your own' ) }\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t<p className=\"edit-widgets-welcome-guide__text\">\n\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t'Each block comes with its own set of controls for changing things like color, width, and alignment. These will show and hide automatically when you have a block selected.'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</>\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\timage: (\n\t\t\t\t\t\t<WelcomeGuideImage\n\t\t\t\t\t\t\tnonAnimatedSrc=\"https://s.w.org/images/block-editor/welcome-library.svg\"\n\t\t\t\t\t\t\tanimatedSrc=\"https://s.w.org/images/block-editor/welcome-library.gif\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t),\n\t\t\t\t\tcontent: (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<h1 className=\"edit-widgets-welcome-guide__heading\">\n\t\t\t\t\t\t\t\t{ __( 'Get to know the block library' ) }\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t<p className=\"edit-widgets-welcome-guide__text\">\n\t\t\t\t\t\t\t\t{ createInterpolateElement(\n\t\t\t\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t\t\t\t'All of the blocks available to you live in the block library. You’ll find it wherever you see the <InserterIconImage /> icon.'\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tInserterIconImage: (\n\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"edit-widgets-welcome-guide__inserter-icon\"\n\t\t\t\t\t\t\t\t\t\t\t\talt={ __( 'inserter' ) }\n\t\t\t\t\t\t\t\t\t\t\t\tsrc=\"data:image/svg+xml,%3Csvg width='18' height='18' viewBox='0 0 18 18' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Crect width='18' height='18' rx='2' fill='%231E1E1E'/%3E%3Cpath d='M9.22727 4V14M4 8.77273H14' stroke='white' stroke-width='1.5'/%3E%3C/svg%3E%0A\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</>\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\timage: (\n\t\t\t\t\t\t<WelcomeGuideImage\n\t\t\t\t\t\t\tnonAnimatedSrc=\"https://s.w.org/images/block-editor/welcome-documentation.svg\"\n\t\t\t\t\t\t\tanimatedSrc=\"https://s.w.org/images/block-editor/welcome-documentation.gif\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t),\n\t\t\t\t\tcontent: (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<h1 className=\"edit-widgets-welcome-guide__heading\">\n\t\t\t\t\t\t\t\t{ __( 'Learn how to use the block editor' ) }\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t<p className=\"edit-widgets-welcome-guide__text\">\n\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t'New to the block editor? Want to learn more about using it? '\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t<ExternalLink\n\t\t\t\t\t\t\t\t\thref={ __(\n\t\t\t\t\t\t\t\t\t\t'https://wordpress.org/documentation/article/wordpress-block-editor/'\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{ __( \"Here's a detailed guide.\" ) }\n\t\t\t\t\t\t\t\t</ExternalLink>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</>\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t] }\n\t\t/>\n\t);\n}\n\nfunction WelcomeGuideImage( { nonAnimatedSrc, animatedSrc } ) {\n\treturn (\n\t\t<picture className=\"edit-widgets-welcome-guide__image\">\n\t\t\t<source\n\t\t\t\tsrcSet={ nonAnimatedSrc }\n\t\t\t\tmedia=\"(prefers-reduced-motion: reduce)\"\n\t\t\t/>\n\t\t\t<img src={ animatedSrc } width=\"312\" height=\"240\" alt=\"\" />\n\t\t</picture>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport { Popover } from '@wordpress/components';\nimport { useDispatch } from '@wordpress/data';\nimport { PluginArea } from '@wordpress/plugins';\nimport { store as noticesStore } from '@wordpress/notices';\n\n/**\n * Internal dependencies\n */\nimport ErrorBoundary from '../error-boundary';\nimport WidgetAreasBlockEditorProvider from '../widget-areas-block-editor-provider';\nimport Sidebar from '../sidebar';\nimport Interface from './interface';\nimport UnsavedChangesWarning from './unsaved-changes-warning';\nimport WelcomeGuide from '../welcome-guide';\n\nfunction Layout( { blockEditorSettings } ) {\n\tconst { createErrorNotice } = useDispatch( noticesStore );\n\n\tfunction onPluginAreaError( name ) {\n\t\tcreateErrorNotice(\n\t\t\tsprintf(\n\t\t\t\t/* translators: %s: plugin name */\n\t\t\t\t__(\n\t\t\t\t\t'The \"%s\" plugin has encountered an error and cannot be rendered.'\n\t\t\t\t),\n\t\t\t\tname\n\t\t\t)\n\t\t);\n\t}\n\n\treturn (\n\t\t<ErrorBoundary>\n\t\t\t<WidgetAreasBlockEditorProvider\n\t\t\t\tblockEditorSettings={ blockEditorSettings }\n\t\t\t>\n\t\t\t\t<Interface blockEditorSettings={ blockEditorSettings } />\n\t\t\t\t<Sidebar />\n\t\t\t\t<Popover.Slot />\n\t\t\t\t<PluginArea onError={ onPluginAreaError } />\n\t\t\t\t<UnsavedChangesWarning />\n\t\t\t\t<WelcomeGuide />\n\t\t\t</WidgetAreasBlockEditorProvider>\n\t\t</ErrorBoundary>\n\t);\n}\n\nexport default Layout;\n","/**\n * WordPress dependencies\n */\nimport {\n\tregisterBlockType,\n\tunstable__bootstrapServerSideBlockDefinitions, // eslint-disable-line camelcase\n\tsetFreeformContentHandlerName,\n\tstore as blocksStore,\n} from '@wordpress/blocks';\nimport { dispatch } from '@wordpress/data';\nimport deprecated from '@wordpress/deprecated';\nimport { createRoot } from '@wordpress/element';\nimport {\n\tregisterCoreBlocks,\n\t__experimentalGetCoreBlocks,\n\t__experimentalRegisterExperimentalCoreBlocks,\n} from '@wordpress/block-library';\nimport { __experimentalFetchLinkSuggestions as fetchLinkSuggestions } from '@wordpress/core-data';\nimport {\n\tregisterLegacyWidgetBlock,\n\tregisterLegacyWidgetVariations,\n\tregisterWidgetGroupBlock,\n} from '@wordpress/widgets';\nimport { store as preferencesStore } from '@wordpress/preferences';\n\n/**\n * Internal dependencies\n */\nimport './store';\nimport './filters';\nimport * as widgetArea from './blocks/widget-area';\n\nimport Layout from './components/layout';\nimport {\n\tALLOW_REUSABLE_BLOCKS,\n\tENABLE_EXPERIMENTAL_FSE_BLOCKS,\n} from './constants';\n\nconst disabledBlocks = [\n\t'core/more',\n\t'core/freeform',\n\t'core/template-part',\n\t...( ALLOW_REUSABLE_BLOCKS ? [] : [ 'core/block' ] ),\n];\n\n/**\n * Initializes the block editor in the widgets screen.\n *\n * @param {string} id       ID of the root element to render the screen in.\n * @param {Object} settings Block editor settings.\n */\nexport function initializeEditor( id, settings ) {\n\tconst target = document.getElementById( id );\n\tconst root = createRoot( target );\n\n\tconst coreBlocks = __experimentalGetCoreBlocks().filter( ( block ) => {\n\t\treturn ! (\n\t\t\tdisabledBlocks.includes( block.name ) ||\n\t\t\tblock.name.startsWith( 'core/post' ) ||\n\t\t\tblock.name.startsWith( 'core/query' ) ||\n\t\t\tblock.name.startsWith( 'core/site' ) ||\n\t\t\tblock.name.startsWith( 'core/navigation' )\n\t\t);\n\t} );\n\n\tdispatch( preferencesStore ).setDefaults( 'core/edit-widgets', {\n\t\tfixedToolbar: false,\n\t\twelcomeGuide: true,\n\t\tshowBlockBreadcrumbs: true,\n\t\tthemeStyles: true,\n\t} );\n\n\tdispatch( blocksStore ).__experimentalReapplyBlockTypeFilters();\n\tregisterCoreBlocks( coreBlocks );\n\tregisterLegacyWidgetBlock();\n\tif ( process.env.IS_GUTENBERG_PLUGIN ) {\n\t\t__experimentalRegisterExperimentalCoreBlocks( {\n\t\t\tenableFSEBlocks: ENABLE_EXPERIMENTAL_FSE_BLOCKS,\n\t\t} );\n\t}\n\tregisterLegacyWidgetVariations( settings );\n\tregisterBlock( widgetArea );\n\tregisterWidgetGroupBlock();\n\n\tsettings.__experimentalFetchLinkSuggestions = ( search, searchOptions ) =>\n\t\tfetchLinkSuggestions( search, searchOptions, settings );\n\n\t// As we are unregistering `core/freeform` to avoid the Classic block, we must\n\t// replace it with something as the default freeform content handler. Failure to\n\t// do this will result in errors in the default block parser.\n\t// see: https://github.com/WordPress/gutenberg/issues/33097\n\tsetFreeformContentHandlerName( 'core/html' );\n\n\troot.render( <Layout blockEditorSettings={ settings } /> );\n\n\treturn root;\n}\n\n/**\n * Compatibility export under the old `initialize` name.\n */\nexport const initialize = initializeEditor;\n\nexport function reinitializeEditor() {\n\tdeprecated( 'wp.editWidgets.reinitializeEditor', {\n\t\tsince: '6.2',\n\t\tversion: '6.3',\n\t} );\n}\n\n/**\n * Function to register an individual block.\n *\n * @param {Object} block The block to be registered.\n *\n */\nconst registerBlock = ( block ) => {\n\tif ( ! block ) {\n\t\treturn;\n\t}\n\tconst { metadata, settings, name } = block;\n\tif ( metadata ) {\n\t\tunstable__bootstrapServerSideBlockDefinitions( { [ name ]: metadata } );\n\t}\n\tregisterBlockType( name, settings );\n};\n"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","obj","prop","r","Symbol","toStringTag","value","window","combineReducers","blockInserterPanel","state","action","type","isOpen","listViewPanel","widgetAreasOpenState","clientId","SVG","xmlns","viewBox","Path","fillRule","clipRule","setDefaultComplementaryArea","scope","area","enableComplementaryArea","registry","dispatch","select","preferencesStore","set","disableComplementaryArea","pinItem","item","pinnedItems","unpinItem","toggleFeature","featureName","deprecated","since","alternative","toggle","setFeatureValue","setFeatureDefaults","defaults","setDefaults","openModal","name","closeModal","getActiveComplementaryArea","createRegistrySelector","isComplementaryAreaVisible","complementaryAreas","isComplementaryAreaLoading","isVisible","identifier","isItemPinned","isFeatureActive","isModalActive","modalName","activeModal","store","createReduxStore","reducer","actions","selectors","register","withPluginContext","context","ownProps","icon","complementaryAreaContext","as","Button","selectedIcon","props","ComponentToUse","isSelected","useSelect","interfaceStore","useDispatch","onClick","smallScreenTitle","children","className","toggleButtonProps","toggleButton","closeSmall","classnames","tabIndex","noop","ActionItem","Component","Fill","fpOnClick","args","Slot","ButtonGroup","fillProps","bubblesVirtually","fills","Children","initializedByPlugins","__unstableExplicitMenuItem","__unstableTarget","child","includes","PluginsMenuItem","restProps","MenuItem","ComplementaryAreaMoreMenuItem","target","toggleProps","role","check","PinnedItems","ComplementaryAreaFill","ComplementaryAreaWrapped","withComplementaryAreaContext","closeLabel","__","header","headerClassName","isPinnable","panelClassName","title","toggleShortcut","isActiveByDefault","showIconLabels","isLoading","isActive","isPinned","activeArea","isSmall","isLarge","_activeArea","viewportStore","isViewportMatch","previousIsSmall","useRef","shouldOpenWhenNotSmall","useEffect","current","useAdjustComplementaryListener","isPressed","label","showTooltip","variant","onClose","shortcut","starFilled","starEmpty","Panel","NavigableRegion","ariaLabel","Tag","headerVariants","hidden","opacity","hover","transition","delay","delayChildren","distractionFreeInactive","forwardRef","isDistractionFree","footer","editorNotices","sidebar","secondarySidebar","notices","content","labels","enableRegionNavigation","shortcuts","ref","navigateRegionsProps","useNavigateRegions","element","document","querySelector","classList","useHTMLClass","mergedLabels","body","useMergeRefs","motion","initial","whileHover","animate","variants","MoreMenuDropdown","DropdownComponent","DropdownMenu","popoverProps","moreVertical","placement","tooltipPosition","transformWidgetToBlock","widget","id_base","parsedBlocks","parse","instance","raw","__unstableSkipAutop","addWidgetIdToBlock","id","createBlock","attributes","_embedded","about","is_multi","idBase","transformBlockToWidget","block","relatedWidget","serialize","rendered","rendered_form","KIND","WIDGET_AREA_ENTITY_TYPE","POST_TYPE","buildWidgetAreaPostId","widgetAreaId","STORE_NAME","persistStubPost","blocks","stubPost","slug","status","meta","createStubPost","coreStore","receiveEntityRecords","saveEditedWidgetAreas","async","editedWidgetAreas","getEditedWidgetAreas","saveWidgetAreas","noticesStore","createSuccessNotice","e","createErrorNotice","sprintf","message","widgetAreas","widgetArea","saveWidgetArea","finishResolution","per_page","widgets","getWidgets","post","getEditedEntityRecord","areaWidgets","values","filter","usedReferenceWidgets","widgetsBlocks","deletedWidgets","getWidgetAreaForWidgetId","batchMeta","batchTasks","sidebarWidgetsIds","widgetId","getWidgetIdFromBlock","oldWidget","editEntityRecord","undoIgnore","hasEditsForEntityRecord","saveEditedEntityRecord","saveEntityRecord","position","deleteEntityRecord","force","preservedRecords","__experimentalBatch","record","failedWidgetNames","__internalWidgetId","getLastEntitySaveError","Error","trySaveWidgetArea","throwOnError","setWidgetIdForClientId","setWidgetAreasOpenState","setIsWidgetAreaOpen","setIsInserterOpened","setIsListViewOpened","closeGeneralSidebar","editWidgetsStoreName","moveBlockToWidgetArea","sourceRootClientId","blockEditorStore","getBlockRootClientId","destinationRootClientId","getBlocks","find","destinationIndex","getBlockOrder","getIsWidgetAreaOpen","moveBlocksToPosition","getWidgetAreas","widgetAreaBlocks","sortedWidgetAreas","resolveSelect","getEntityRecords","sort","b","forEach","widgetAreaBlock","index","_embed","groupedBySidebar","sidebarId","reduce","allWidgets","getWidget","map","getParentWidgetAreaBlock","getBlock","getBlockName","getBlockParents","parentClientId","ids","getReferenceWidgetBlocks","referenceWidgetName","results","_widgetArea","isSavingWidgetAreas","widgetAreasIds","isSavingEntityRecord","widgetIds","keys","isInserterOpened","__experimentalGetInsertionPoint","rootClientId","insertionIndex","canInsertBlockInWidgetArea","blockName","firstWidgetArea","canInsertBlockType","isListViewOpened","storeConfig","resolvers","apiFetch","options","next","path","indexOf","Promise","resolve","withMoveToWidgetAreaToolbarItem","createHigherOrderComponent","BlockEdit","currentWidgetAreaId","editWidgetsStore","isMoveToWidgetAreaVisible","BlockControls","MoveToWidgetArea","onSelect","addFilter","MediaUpload","elementRef","isDraggingWithin","setIsDraggingWithin","useState","ownerDocument","handleDragStart","event","handleDragEnter","handleDragEnd","contains","addEventListener","removeEventListener","WidgetAreaInnerBlocks","onInput","onChange","useEntityBlockEditor","innerBlocksRef","shouldHighlightDropZone","useIsDraggingWithin","innerBlocksProps","useInnerBlocksProps","templateLock","renderAppender","InnerBlocks","metadata","settings","description","__experimentalLabel","edit","wrapper","setOpen","useCallback","openState","isDragging","setIsDragging","useIsDragging","openedWhileDragging","setOpenedWhileDragging","PanelBody","opened","onToggle","scrollAfterOpen","visible","EntityProvider","kind","CopyButton","text","useCopyToClipboard","ErrorBoundaryWarning","error","stack","Warning","ErrorBoundary","constructor","super","this","componentDidCatch","doAction","render","KeyboardShortcuts","redo","undo","replaceBlocks","getSelectedBlockClientId","getBlockAttributes","handleTextLevelShortcut","level","preventDefault","destinationBlockName","currentClientId","textAlign","destinationTextAlign","useShortcut","Register","registerShortcut","keyboardShortcutsStore","category","keyCombination","modifier","character","aliases","isAppleOS","getBlockSelectionEnd","selectionEndClientId","widgetsEditorStore","widgetAreaBlockClientId","getEntityRecord","widgetAreasPost","ENABLE_EXPERIMENTAL_FSE_BLOCKS","lock","unlock","__dangerousOptInToUnstableAPIsOnlyForCoreModules","ExperimentalBlockEditorProvider","blockEditorPrivateApis","WidgetAreasBlockEditorProvider","blockEditorSettings","mediaPermissions","useResourcePermissions","reusableBlocks","isFixedToolbarActive","keepCaretInsideBlock","useMemo","mediaUploadBlockEditor","canCreate","onError","argumentsObject","uploadMedia","wpAllowedMimeTypes","allowedMimeTypes","__experimentalReusableBlocks","hasFixedToolbar","mediaUpload","__experimentalSetIsInserterOpened","useLastSelectedWidgetArea","ShortcutProvider","BlockEditorKeyboardShortcuts","SlotFillProvider","useSubRegistry","CopyHandler","ReusableBlocksMenuItems","width","height","WidgetAreas","selectedWidgetAreaId","selectedWidgetArea","BlockIcon","blockDefault","dangerouslySetInnerHTML","__html","safeHTML","href","addQueryArgs","return","location","pathname","SIDEBAR_ACTIVE_BY_DEFAULT","Platform","web","native","BLOCK_INSPECTOR_IDENTIFIER","WIDGET_AREAS_IDENTIFIER","ComplementaryAreaTab","Sidebar","currentArea","hasSelectedNonAreaBlock","isGeneralSidebarOpen","selectedWidgetAreaBlock","getSelectedBlock","getBlockParentsByBlockName","selectedBlock","currentSelection","isRTL","drawerLeft","drawerRight","BlockInspector","hasEditedWidgetAreaIds","isSaving","isBusy","disabled","UndoButton","hasUndo","ToolbarButton","redoIcon","undoIcon","displayShortcut","RedoButton","hasRedo","textFormattingShortcuts","KeyCombination","forceAriaLabel","displayShortcutList","shortcutAriaLabel","Fragment","alias","getShortcutKeyCombination","getShortcutDescription","getShortcutAliases","ShortcutList","ShortcutSection","ShortcutCategorySection","categoryName","additionalShortcuts","categoryShortcuts","getCategoryShortcuts","concat","KeyboardShortcutHelpModal","toggleModal","bindGlobal","Modal","onRequestClose","ToolsMoreMenuGroup","createSlotFill","MoreMenu","isKeyboardShortcutsModalActive","setIsKeyboardShortcutsModalVisible","toggleKeyboardShortcutsModal","isLargeViewport","useViewportMatch","MenuGroup","_x","PreferenceToggleMenuItem","info","messageActivated","messageDeactivated","external","rel","VisuallyHidden","useShouldContextualToolbarShow","isMediumViewport","inserterButton","widgetAreaClientId","isLastSelectedWidgetAreaOpen","isInserterOpen","isListViewOpen","selectBlock","toggleListView","shouldShowContextualToolbar","canFocusHiddenToolbar","fixedToolbarCanBeFocused","blockToolbarCanBeFocused","NavigableToolbar","shouldUseKeyboardFocusShortcut","ToolbarItem","onMouseDown","requestAnimationFrame","plus","listView","removeNotice","getNotices","dismissibleNotices","isDismissible","nonDismissibleNotices","snackbarNotices","NoticeList","onRemove","SnackbarList","WidgetAreasBlockEditorContent","hasThemeStyles","styles","BlockTools","BlockSelectionClearer","WritingFlow","ObserveTyping","BlockList","firstRootId","getBlockIndex","insertionPoint","InserterSidebar","isMobileViewport","useWidgetLibraryInsertionPoint","closeInserter","TagName","inserterDialogRef","inserterDialogProps","useDialog","focusOnMount","libraryRef","focusSearch","close","showInserterHelpPanel","shouldFocusBlock","__experimentalInsertionIndex","ListViewSidebar","dropZoneElement","setDropZoneElement","focusOnMountRef","useFocusOnMount","headerFocusReturnRef","useFocusReturn","contentFocusReturnRef","onKeyDown","keyCode","ESCAPE","defaultPrevented","SecondarySidebar","interfaceLabels","isHugeViewport","hasBlockBreadCrumbsEnabled","hasSidebarEnabled","previousShortcut","nextShortcut","getAllShortcutKeyCombinations","secondarySidebarLabel","hasSecondarySidebar","BlockBreadcrumb","rootLabelText","previous","UnsavedChangesWarning","isDirty","warnIfUnsavedChanges","returnValue","WelcomeGuide","isEntirelyBlockWidgets","every","startsWith","numWidgetAreas","Guide","contentLabel","finishButtonText","onFinish","pages","image","WelcomeGuideImage","nonAnimatedSrc","animatedSrc","_n","ExternalLink","createInterpolateElement","InserterIconImage","alt","src","srcSet","media","Popover","PluginArea","disabledBlocks","initializeEditor","getElementById","root","createRoot","coreBlocks","__experimentalGetCoreBlocks","fixedToolbar","welcomeGuide","showBlockBreadcrumbs","themeStyles","blocksStore","__experimentalReapplyBlockTypeFilters","registerCoreBlocks","registerLegacyWidgetBlock","__experimentalRegisterExperimentalCoreBlocks","enableFSEBlocks","registerLegacyWidgetVariations","registerBlock","registerWidgetGroupBlock","__experimentalFetchLinkSuggestions","search","searchOptions","fetchLinkSuggestions","setFreeformContentHandlerName","initialize","reinitializeEditor","version","unstable__bootstrapServerSideBlockDefinitions","registerBlockType"],"sourceRoot":""}