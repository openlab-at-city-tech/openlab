{"version":3,"file":"./build/media-utils/index.min.js","mappings":"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","sources":["webpack://wp/webpack/bootstrap","webpack://wp/webpack/runtime/compat get default export","webpack://wp/webpack/runtime/define property getters","webpack://wp/webpack/runtime/hasOwnProperty shorthand","webpack://wp/webpack/runtime/make namespace object","webpack://wp/external window \"lodash\"","webpack://wp/external window [\"wp\",\"element\"]","webpack://wp/external window [\"wp\",\"i18n\"]","webpack://wp/./packages/media-utils/build-module/components/media-upload/@wordpress/media-utils/src/components/media-upload/index.js","webpack://wp/external window [\"wp\",\"apiFetch\"]","webpack://wp/external window [\"wp\",\"blob\"]","webpack://wp/./packages/media-utils/build-module/utils/@wordpress/media-utils/src/utils/upload-media.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"lodash\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","/**\n * External dependencies\n */\nimport { castArray, defaults, pick } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\n\nconst { wp } = window;\n\nconst DEFAULT_EMPTY_GALLERY = [];\n\n/**\n * Prepares the Featured Image toolbars and frames.\n *\n * @return {wp.media.view.MediaFrame.Select} The default media workflow.\n */\nconst getFeaturedImageMediaFrame = () => {\n\treturn wp.media.view.MediaFrame.Select.extend( {\n\t\t/**\n\t\t * Enables the Set Featured Image Button.\n\t\t *\n\t\t * @param {Object} toolbar toolbar for featured image state\n\t\t * @return {void}\n\t\t */\n\t\tfeaturedImageToolbar( toolbar ) {\n\t\t\tthis.createSelectToolbar( toolbar, {\n\t\t\t\ttext: wp.media.view.l10n.setFeaturedImage,\n\t\t\t\tstate: this.options.state,\n\t\t\t} );\n\t\t},\n\n\t\t/**\n\t\t * Handle the edit state requirements of selected media item.\n\t\t *\n\t\t * @return {void}\n\t\t */\n\t\teditState() {\n\t\t\tconst selection = this.state( 'featured-image' ).get( 'selection' );\n\t\t\tconst view = new wp.media.view.EditImage( {\n\t\t\t\tmodel: selection.single(),\n\t\t\t\tcontroller: this,\n\t\t\t} ).render();\n\n\t\t\t// Set the view to the EditImage frame using the selected image.\n\t\t\tthis.content.set( view );\n\n\t\t\t// After bringing in the frame, load the actual editor via an ajax call.\n\t\t\tview.loadEditor();\n\t\t},\n\n\t\t/**\n\t\t * Create the default states.\n\t\t *\n\t\t * @return {void}\n\t\t */\n\t\tcreateStates: function createStates() {\n\t\t\tthis.on(\n\t\t\t\t'toolbar:create:featured-image',\n\t\t\t\tthis.featuredImageToolbar,\n\t\t\t\tthis\n\t\t\t);\n\t\t\tthis.on( 'content:render:edit-image', this.editState, this );\n\n\t\t\tthis.states.add( [\n\t\t\t\tnew wp.media.controller.FeaturedImage(),\n\t\t\t\tnew wp.media.controller.EditImage( {\n\t\t\t\t\tmodel: this.options.editImage,\n\t\t\t\t} ),\n\t\t\t] );\n\t\t},\n\t} );\n};\n\n/**\n * Prepares the Gallery toolbars and frames.\n *\n * @return {wp.media.view.MediaFrame.Post} The default media workflow.\n */\nconst getGalleryDetailsMediaFrame = () => {\n\t/**\n\t * Custom gallery details frame.\n\t *\n\t * @see https://github.com/xwp/wp-core-media-widgets/blob/905edbccfc2a623b73a93dac803c5335519d7837/wp-admin/js/widgets/media-gallery-widget.js\n\t * @class GalleryDetailsMediaFrame\n\t * @class\n\t */\n\treturn wp.media.view.MediaFrame.Post.extend( {\n\t\t/**\n\t\t * Set up gallery toolbar.\n\t\t *\n\t\t * @return {void}\n\t\t */\n\t\tgalleryToolbar() {\n\t\t\tconst editing = this.state().get( 'editing' );\n\t\t\tthis.toolbar.set(\n\t\t\t\tnew wp.media.view.Toolbar( {\n\t\t\t\t\tcontroller: this,\n\t\t\t\t\titems: {\n\t\t\t\t\t\tinsert: {\n\t\t\t\t\t\t\tstyle: 'primary',\n\t\t\t\t\t\t\ttext: editing\n\t\t\t\t\t\t\t\t? wp.media.view.l10n.updateGallery\n\t\t\t\t\t\t\t\t: wp.media.view.l10n.insertGallery,\n\t\t\t\t\t\t\tpriority: 80,\n\t\t\t\t\t\t\trequires: { library: true },\n\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @fires wp.media.controller.State#update\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tclick() {\n\t\t\t\t\t\t\t\tconst controller = this.controller,\n\t\t\t\t\t\t\t\t\tstate = controller.state();\n\n\t\t\t\t\t\t\t\tcontroller.close();\n\t\t\t\t\t\t\t\tstate.trigger(\n\t\t\t\t\t\t\t\t\t'update',\n\t\t\t\t\t\t\t\t\tstate.get( 'library' )\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t// Restore and reset the default state.\n\t\t\t\t\t\t\t\tcontroller.setState( controller.options.state );\n\t\t\t\t\t\t\t\tcontroller.reset();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t} )\n\t\t\t);\n\t\t},\n\n\t\t/**\n\t\t * Handle the edit state requirements of selected media item.\n\t\t *\n\t\t * @return {void}\n\t\t */\n\t\teditState() {\n\t\t\tconst selection = this.state( 'gallery' ).get( 'selection' );\n\t\t\tconst view = new wp.media.view.EditImage( {\n\t\t\t\tmodel: selection.single(),\n\t\t\t\tcontroller: this,\n\t\t\t} ).render();\n\n\t\t\t// Set the view to the EditImage frame using the selected image.\n\t\t\tthis.content.set( view );\n\n\t\t\t// After bringing in the frame, load the actual editor via an ajax call.\n\t\t\tview.loadEditor();\n\t\t},\n\n\t\t/**\n\t\t * Create the default states.\n\t\t *\n\t\t * @return {void}\n\t\t */\n\t\tcreateStates: function createStates() {\n\t\t\tthis.on( 'toolbar:create:main-gallery', this.galleryToolbar, this );\n\t\t\tthis.on( 'content:render:edit-image', this.editState, this );\n\n\t\t\tthis.states.add( [\n\t\t\t\tnew wp.media.controller.Library( {\n\t\t\t\t\tid: 'gallery',\n\t\t\t\t\ttitle: wp.media.view.l10n.createGalleryTitle,\n\t\t\t\t\tpriority: 40,\n\t\t\t\t\ttoolbar: 'main-gallery',\n\t\t\t\t\tfilterable: 'uploaded',\n\t\t\t\t\tmultiple: 'add',\n\t\t\t\t\teditable: false,\n\n\t\t\t\t\tlibrary: wp.media.query(\n\t\t\t\t\t\tdefaults(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: 'image',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tthis.options.library\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\t} ),\n\t\t\t\tnew wp.media.controller.EditImage( {\n\t\t\t\t\tmodel: this.options.editImage,\n\t\t\t\t} ),\n\n\t\t\t\tnew wp.media.controller.GalleryEdit( {\n\t\t\t\t\tlibrary: this.options.selection,\n\t\t\t\t\tediting: this.options.editing,\n\t\t\t\t\tmenu: 'gallery',\n\t\t\t\t\tdisplaySettings: false,\n\t\t\t\t\tmultiple: true,\n\t\t\t\t} ),\n\n\t\t\t\tnew wp.media.controller.GalleryAdd(),\n\t\t\t] );\n\t\t},\n\t} );\n};\n\n// The media library image object contains numerous attributes\n// we only need this set to display the image in the library.\nconst slimImageObject = ( img ) => {\n\tconst attrSet = [\n\t\t'sizes',\n\t\t'mime',\n\t\t'type',\n\t\t'subtype',\n\t\t'id',\n\t\t'url',\n\t\t'alt',\n\t\t'link',\n\t\t'caption',\n\t];\n\treturn pick( img, attrSet );\n};\n\nconst getAttachmentsCollection = ( ids ) => {\n\treturn wp.media.query( {\n\t\torder: 'ASC',\n\t\torderby: 'post__in',\n\t\tpost__in: ids,\n\t\tposts_per_page: -1,\n\t\tquery: true,\n\t\ttype: 'image',\n\t} );\n};\n\nclass MediaUpload extends Component {\n\tconstructor( {\n\t\tallowedTypes,\n\t\tgallery = false,\n\t\tunstableFeaturedImageFlow = false,\n\t\tmodalClass,\n\t\tmultiple = false,\n\t\ttitle = __( 'Select or Upload Media' ),\n\t} ) {\n\t\tsuper( ...arguments );\n\t\tthis.openModal = this.openModal.bind( this );\n\t\tthis.onOpen = this.onOpen.bind( this );\n\t\tthis.onSelect = this.onSelect.bind( this );\n\t\tthis.onUpdate = this.onUpdate.bind( this );\n\t\tthis.onClose = this.onClose.bind( this );\n\n\t\tif ( gallery ) {\n\t\t\tthis.buildAndSetGalleryFrame();\n\t\t} else {\n\t\t\tconst frameConfig = {\n\t\t\t\ttitle,\n\t\t\t\tmultiple,\n\t\t\t};\n\t\t\tif ( !! allowedTypes ) {\n\t\t\t\tframeConfig.library = { type: allowedTypes };\n\t\t\t}\n\n\t\t\tthis.frame = wp.media( frameConfig );\n\t\t}\n\n\t\tif ( modalClass ) {\n\t\t\tthis.frame.$el.addClass( modalClass );\n\t\t}\n\n\t\tif ( unstableFeaturedImageFlow ) {\n\t\t\tthis.buildAndSetFeatureImageFrame();\n\t\t}\n\t\tthis.initializeListeners();\n\t}\n\n\tinitializeListeners() {\n\t\t// When an image is selected in the media frame...\n\t\tthis.frame.on( 'select', this.onSelect );\n\t\tthis.frame.on( 'update', this.onUpdate );\n\t\tthis.frame.on( 'open', this.onOpen );\n\t\tthis.frame.on( 'close', this.onClose );\n\t}\n\n\t/**\n\t * Sets the Gallery frame and initializes listeners.\n\t *\n\t * @return {void}\n\t */\n\tbuildAndSetGalleryFrame() {\n\t\tconst {\n\t\t\taddToGallery = false,\n\t\t\tallowedTypes,\n\t\t\tmultiple = false,\n\t\t\tvalue = DEFAULT_EMPTY_GALLERY,\n\t\t} = this.props;\n\n\t\t// If the value did not changed there is no need to rebuild the frame,\n\t\t// we can continue to use the existing one.\n\t\tif ( value === this.lastGalleryValue ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.lastGalleryValue = value;\n\n\t\t// If a frame already existed remove it.\n\t\tif ( this.frame ) {\n\t\t\tthis.frame.remove();\n\t\t}\n\t\tlet currentState;\n\t\tif ( addToGallery ) {\n\t\t\tcurrentState = 'gallery-library';\n\t\t} else {\n\t\t\tcurrentState = value && value.length ? 'gallery-edit' : 'gallery';\n\t\t}\n\t\tif ( ! this.GalleryDetailsMediaFrame ) {\n\t\t\tthis.GalleryDetailsMediaFrame = getGalleryDetailsMediaFrame();\n\t\t}\n\t\tconst attachments = getAttachmentsCollection( value );\n\t\tconst selection = new wp.media.model.Selection( attachments.models, {\n\t\t\tprops: attachments.props.toJSON(),\n\t\t\tmultiple,\n\t\t} );\n\t\tthis.frame = new this.GalleryDetailsMediaFrame( {\n\t\t\tmimeType: allowedTypes,\n\t\t\tstate: currentState,\n\t\t\tmultiple,\n\t\t\tselection,\n\t\t\tediting: value && value.length ? true : false,\n\t\t} );\n\t\twp.media.frame = this.frame;\n\t\tthis.initializeListeners();\n\t}\n\n\t/**\n\t * Initializes the Media Library requirements for the featured image flow.\n\t *\n\t * @return {void}\n\t */\n\tbuildAndSetFeatureImageFrame() {\n\t\tconst featuredImageFrame = getFeaturedImageMediaFrame();\n\t\tconst attachments = getAttachmentsCollection( this.props.value );\n\t\tconst selection = new wp.media.model.Selection( attachments.models, {\n\t\t\tprops: attachments.props.toJSON(),\n\t\t} );\n\t\tthis.frame = new featuredImageFrame( {\n\t\t\tmimeType: this.props.allowedTypes,\n\t\t\tstate: 'featured-image',\n\t\t\tmultiple: this.props.multiple,\n\t\t\tselection,\n\t\t\tediting: this.props.value ? true : false,\n\t\t} );\n\t\twp.media.frame = this.frame;\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.frame.remove();\n\t}\n\n\tonUpdate( selections ) {\n\t\tconst { onSelect, multiple = false } = this.props;\n\t\tconst state = this.frame.state();\n\t\tconst selectedImages = selections || state.get( 'selection' );\n\n\t\tif ( ! selectedImages || ! selectedImages.models.length ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( multiple ) {\n\t\t\tonSelect(\n\t\t\t\tselectedImages.models.map( ( model ) =>\n\t\t\t\t\tslimImageObject( model.toJSON() )\n\t\t\t\t)\n\t\t\t);\n\t\t} else {\n\t\t\tonSelect( slimImageObject( selectedImages.models[ 0 ].toJSON() ) );\n\t\t}\n\t}\n\n\tonSelect() {\n\t\tconst { onSelect, multiple = false } = this.props;\n\t\t// Get media attachment details from the frame state.\n\t\tconst attachment = this.frame.state().get( 'selection' ).toJSON();\n\t\tonSelect( multiple ? attachment : attachment[ 0 ] );\n\t}\n\n\tonOpen() {\n\t\tthis.updateCollection();\n\n\t\t//Handle active tab in media model on model open.\n\t\tif ( this.props.mode ) {\n\t\t\tthis.frame.content.mode( this.props.mode );\n\t\t}\n\n\t\t// Handle both this.props.value being either (number[]) multiple ids\n\t\t// (for galleries) or a (number) singular id (e.g. image block).\n\t\tconst hasMedia = Array.isArray( this.props.value )\n\t\t\t? !! this.props.value?.length\n\t\t\t: !! this.props.value;\n\n\t\tif ( ! hasMedia ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isGallery = this.props.gallery;\n\t\tconst selection = this.frame.state().get( 'selection' );\n\n\t\tif ( ! isGallery ) {\n\t\t\tcastArray( this.props.value ).forEach( ( id ) => {\n\t\t\t\tselection.add( wp.media.attachment( id ) );\n\t\t\t} );\n\t\t}\n\n\t\t// Load the images so they are available in the media modal.\n\t\tconst attachments = getAttachmentsCollection(\n\t\t\tcastArray( this.props.value )\n\t\t);\n\n\t\t// Once attachments are loaded, set the current selection.\n\t\tattachments.more().done( function () {\n\t\t\tif ( isGallery && attachments?.models?.length ) {\n\t\t\t\tselection.add( attachments.models );\n\t\t\t}\n\t\t} );\n\t}\n\n\tonClose() {\n\t\tconst { onClose } = this.props;\n\n\t\tif ( onClose ) {\n\t\t\tonClose();\n\t\t}\n\t}\n\n\tupdateCollection() {\n\t\tconst frameContent = this.frame.content.get();\n\t\tif ( frameContent && frameContent.collection ) {\n\t\t\tconst collection = frameContent.collection;\n\n\t\t\t// Clean all attachments we have in memory.\n\t\t\tcollection\n\t\t\t\t.toArray()\n\t\t\t\t.forEach( ( model ) => model.trigger( 'destroy', model ) );\n\n\t\t\t// Reset has more flag, if library had small amount of items all items may have been loaded before.\n\t\t\tcollection.mirroring._hasMore = true;\n\n\t\t\t// Request items.\n\t\t\tcollection.more();\n\t\t}\n\t}\n\n\topenModal() {\n\t\tif ( this.props.gallery ) {\n\t\t\tthis.buildAndSetGalleryFrame();\n\t\t}\n\t\tthis.frame.open();\n\t}\n\n\trender() {\n\t\treturn this.props.render( { open: this.openModal } );\n\t}\n}\n\nexport default MediaUpload;\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"apiFetch\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blob\"];","/**\n * External dependencies\n */\nimport {\n\tcompact,\n\tflatMap,\n\tforEach,\n\tget,\n\thas,\n\tincludes,\n\tmap,\n\tomit,\n\tsome,\n\tstartsWith,\n} from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport apiFetch from '@wordpress/api-fetch';\nimport { createBlobURL, revokeBlobURL } from '@wordpress/blob';\nimport { __, sprintf } from '@wordpress/i18n';\n\nconst noop = () => {};\n\n/**\n * Browsers may use unexpected mime types, and they differ from browser to browser.\n * This function computes a flexible array of mime types from the mime type structured provided by the server.\n * Converts { jpg|jpeg|jpe: \"image/jpeg\" } into [ \"image/jpeg\", \"image/jpg\", \"image/jpeg\", \"image/jpe\" ]\n * The computation of this array instead of directly using the object,\n * solves the problem in chrome where mp3 files have audio/mp3 as mime type instead of audio/mpeg.\n * https://bugs.chromium.org/p/chromium/issues/detail?id=227004\n *\n * @param {?Object} wpMimeTypesObject Mime type object received from the server.\n *                                    Extensions are keys separated by '|' and values are mime types associated with an extension.\n *\n * @return {?Array} An array of mime types or the parameter passed if it was \"falsy\".\n */\nexport function getMimeTypesArray( wpMimeTypesObject ) {\n\tif ( ! wpMimeTypesObject ) {\n\t\treturn wpMimeTypesObject;\n\t}\n\treturn flatMap( wpMimeTypesObject, ( mime, extensionsString ) => {\n\t\tconst [ type ] = mime.split( '/' );\n\t\tconst extensions = extensionsString.split( '|' );\n\t\treturn [\n\t\t\tmime,\n\t\t\t...map( extensions, ( extension ) => `${ type }/${ extension }` ),\n\t\t];\n\t} );\n}\n\n/**\n *\tMedia Upload is used by audio, image, gallery, video, and file blocks to\n *\thandle uploading a media file when a file upload button is activated.\n *\n *\tTODO: future enhancement to add an upload indicator.\n *\n * @param {Object}   $0                    Parameters object passed to the function.\n * @param {?Array}   $0.allowedTypes       Array with the types of media that can be uploaded, if unset all types are allowed.\n * @param {?Object}  $0.additionalData     Additional data to include in the request.\n * @param {Array}    $0.filesList          List of files.\n * @param {?number}  $0.maxUploadFileSize  Maximum upload size in bytes allowed for the site.\n * @param {Function} $0.onError            Function called when an error happens.\n * @param {Function} $0.onFileChange       Function called each time a file or a temporary representation of the file is available.\n * @param {?Object}  $0.wpAllowedMimeTypes List of allowed mime types and file extensions.\n */\nexport async function uploadMedia( {\n\tallowedTypes,\n\tadditionalData = {},\n\tfilesList,\n\tmaxUploadFileSize,\n\tonError = noop,\n\tonFileChange,\n\twpAllowedMimeTypes = null,\n} ) {\n\t// Cast filesList to array.\n\tconst files = [ ...filesList ];\n\n\tconst filesSet = [];\n\tconst setAndUpdateFiles = ( idx, value ) => {\n\t\trevokeBlobURL( get( filesSet, [ idx, 'url' ] ) );\n\t\tfilesSet[ idx ] = value;\n\t\tonFileChange( compact( filesSet ) );\n\t};\n\n\t// Allowed type specified by consumer.\n\tconst isAllowedType = ( fileType ) => {\n\t\tif ( ! allowedTypes ) {\n\t\t\treturn true;\n\t\t}\n\t\treturn some( allowedTypes, ( allowedType ) => {\n\t\t\t// If a complete mimetype is specified verify if it matches exactly the mime type of the file.\n\t\t\tif ( includes( allowedType, '/' ) ) {\n\t\t\t\treturn allowedType === fileType;\n\t\t\t}\n\t\t\t// Otherwise a general mime type is used and we should verify if the file mimetype starts with it.\n\t\t\treturn startsWith( fileType, `${ allowedType }/` );\n\t\t} );\n\t};\n\n\t// Allowed types for the current WP_User.\n\tconst allowedMimeTypesForUser = getMimeTypesArray( wpAllowedMimeTypes );\n\tconst isAllowedMimeTypeForUser = ( fileType ) => {\n\t\treturn includes( allowedMimeTypesForUser, fileType );\n\t};\n\n\tconst validFiles = [];\n\n\tfor ( const mediaFile of files ) {\n\t\t// Verify if user is allowed to upload this mime type.\n\t\t// Defer to the server when type not detected.\n\t\tif (\n\t\t\tallowedMimeTypesForUser &&\n\t\t\tmediaFile.type &&\n\t\t\t! isAllowedMimeTypeForUser( mediaFile.type )\n\t\t) {\n\t\t\tonError( {\n\t\t\t\tcode: 'MIME_TYPE_NOT_ALLOWED_FOR_USER',\n\t\t\t\tmessage: sprintf(\n\t\t\t\t\t// translators: %s: file name.\n\t\t\t\t\t__(\n\t\t\t\t\t\t'%s: Sorry, you are not allowed to upload this file type.'\n\t\t\t\t\t),\n\t\t\t\t\tmediaFile.name\n\t\t\t\t),\n\t\t\t\tfile: mediaFile,\n\t\t\t} );\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Check if the block supports this mime type.\n\t\t// Defer to the server when type not detected.\n\t\tif ( mediaFile.type && ! isAllowedType( mediaFile.type ) ) {\n\t\t\tonError( {\n\t\t\t\tcode: 'MIME_TYPE_NOT_SUPPORTED',\n\t\t\t\tmessage: sprintf(\n\t\t\t\t\t// translators: %s: file name.\n\t\t\t\t\t__( '%s: Sorry, this file type is not supported here.' ),\n\t\t\t\t\tmediaFile.name\n\t\t\t\t),\n\t\t\t\tfile: mediaFile,\n\t\t\t} );\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Verify if file is greater than the maximum file upload size allowed for the site.\n\t\tif ( maxUploadFileSize && mediaFile.size > maxUploadFileSize ) {\n\t\t\tonError( {\n\t\t\t\tcode: 'SIZE_ABOVE_LIMIT',\n\t\t\t\tmessage: sprintf(\n\t\t\t\t\t// translators: %s: file name.\n\t\t\t\t\t__(\n\t\t\t\t\t\t'%s: This file exceeds the maximum upload size for this site.'\n\t\t\t\t\t),\n\t\t\t\t\tmediaFile.name\n\t\t\t\t),\n\t\t\t\tfile: mediaFile,\n\t\t\t} );\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Don't allow empty files to be uploaded.\n\t\tif ( mediaFile.size <= 0 ) {\n\t\t\tonError( {\n\t\t\t\tcode: 'EMPTY_FILE',\n\t\t\t\tmessage: sprintf(\n\t\t\t\t\t// translators: %s: file name.\n\t\t\t\t\t__( '%s: This file is empty.' ),\n\t\t\t\t\tmediaFile.name\n\t\t\t\t),\n\t\t\t\tfile: mediaFile,\n\t\t\t} );\n\t\t\tcontinue;\n\t\t}\n\n\t\tvalidFiles.push( mediaFile );\n\n\t\t// Set temporary URL to create placeholder media file, this is replaced\n\t\t// with final file from media gallery when upload is `done` below.\n\t\tfilesSet.push( { url: createBlobURL( mediaFile ) } );\n\t\tonFileChange( filesSet );\n\t}\n\n\tfor ( let idx = 0; idx < validFiles.length; ++idx ) {\n\t\tconst mediaFile = validFiles[ idx ];\n\t\ttry {\n\t\t\tconst savedMedia = await createMediaFromFile(\n\t\t\t\tmediaFile,\n\t\t\t\tadditionalData\n\t\t\t);\n\t\t\tconst mediaObject = {\n\t\t\t\t...omit( savedMedia, [ 'alt_text', 'source_url' ] ),\n\t\t\t\talt: savedMedia.alt_text,\n\t\t\t\tcaption: get( savedMedia, [ 'caption', 'raw' ], '' ),\n\t\t\t\ttitle: savedMedia.title.raw,\n\t\t\t\turl: savedMedia.source_url,\n\t\t\t};\n\t\t\tsetAndUpdateFiles( idx, mediaObject );\n\t\t} catch ( error ) {\n\t\t\t// Reset to empty on failure.\n\t\t\tsetAndUpdateFiles( idx, null );\n\t\t\tlet message;\n\t\t\tif ( has( error, [ 'message' ] ) ) {\n\t\t\t\tmessage = get( error, [ 'message' ] );\n\t\t\t} else {\n\t\t\t\tmessage = sprintf(\n\t\t\t\t\t// translators: %s: file name\n\t\t\t\t\t__( 'Error while uploading file %s to the media library.' ),\n\t\t\t\t\tmediaFile.name\n\t\t\t\t);\n\t\t\t}\n\t\t\tonError( {\n\t\t\t\tcode: 'GENERAL',\n\t\t\t\tmessage,\n\t\t\t\tfile: mediaFile,\n\t\t\t} );\n\t\t}\n\t}\n}\n\n/**\n * @param {File}    file           Media File to Save.\n * @param {?Object} additionalData Additional data to include in the request.\n *\n * @return {Promise} Media Object Promise.\n */\nfunction createMediaFromFile( file, additionalData ) {\n\t// Create upload payload.\n\tconst data = new window.FormData();\n\tdata.append( 'file', file, file.name || file.type.replace( '/', '.' ) );\n\tforEach( additionalData, ( value, key ) => data.append( key, value ) );\n\treturn apiFetch( {\n\t\tpath: '/wp/v2/media',\n\t\tbody: data,\n\t\tmethod: 'POST',\n\t} );\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","window","wp","DEFAULT_EMPTY_GALLERY","getFeaturedImageMediaFrame","media","view","MediaFrame","Select","extend","featuredImageToolbar","toolbar","this","createSelectToolbar","text","l10n","setFeaturedImage","state","options","editState","selection","EditImage","model","single","controller","render","content","set","loadEditor","createStates","on","states","add","FeaturedImage","editImage","getGalleryDetailsMediaFrame","Post","galleryToolbar","editing","Toolbar","items","insert","style","updateGallery","insertGallery","priority","requires","library","click","close","trigger","setState","reset","Library","id","title","createGalleryTitle","filterable","multiple","editable","query","defaults","type","GalleryEdit","menu","displaySettings","GalleryAdd","slimImageObject","img","pick","getAttachmentsCollection","ids","order","orderby","post__in","posts_per_page","MediaUpload","Component","constructor","allowedTypes","gallery","unstableFeaturedImageFlow","modalClass","__","super","arguments","openModal","bind","onOpen","onSelect","onUpdate","onClose","buildAndSetGalleryFrame","frameConfig","frame","$el","addClass","buildAndSetFeatureImageFrame","initializeListeners","addToGallery","props","lastGalleryValue","currentState","remove","length","GalleryDetailsMediaFrame","attachments","Selection","models","toJSON","mimeType","featuredImageFrame","componentWillUnmount","selections","selectedImages","map","attachment","updateCollection","mode","Array","isArray","isGallery","castArray","forEach","more","done","frameContent","collection","toArray","mirroring","_hasMore","open","noop","async","uploadMedia","additionalData","filesList","maxUploadFileSize","onError","onFileChange","wpAllowedMimeTypes","files","filesSet","setAndUpdateFiles","idx","revokeBlobURL","compact","isAllowedType","fileType","some","allowedType","includes","startsWith","allowedMimeTypesForUser","wpMimeTypesObject","flatMap","mime","extensionsString","split","extensions","extension","validFiles","mediaFile","code","message","sprintf","name","file","size","push","url","createBlobURL","savedMedia","createMediaFromFile","omit","alt","alt_text","caption","raw","source_url","error","has","data","FormData","append","replace","apiFetch","path","body","method"],"sourceRoot":""}