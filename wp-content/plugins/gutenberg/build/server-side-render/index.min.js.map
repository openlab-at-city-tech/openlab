{"version":3,"file":"./build/server-side-render/index.min.js","mappings":"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","sources":["webpack://wp/webpack/bootstrap","webpack://wp/webpack/runtime/compat get default export","webpack://wp/webpack/runtime/define property getters","webpack://wp/webpack/runtime/hasOwnProperty shorthand","webpack://wp/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://wp/external window [\"wp\",\"element\"]","webpack://wp/external window [\"wp\",\"data\"]","webpack://wp/external window [\"wp\",\"deprecated\"]","webpack://wp/external window \"lodash\"","webpack://wp/external window [\"wp\",\"compose\"]","webpack://wp/external window [\"wp\",\"i18n\"]","webpack://wp/external window [\"wp\",\"apiFetch\"]","webpack://wp/external window [\"wp\",\"url\"]","webpack://wp/external window [\"wp\",\"components\"]","webpack://wp/external window [\"wp\",\"blocks\"]","webpack://wp/./packages/server-side-render/build-module/@wordpress/server-side-render/src/server-side-render.js","webpack://wp/./packages/server-side-render/build-module/@wordpress/server-side-render/src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"data\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"deprecated\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"lodash\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"compose\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"apiFetch\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"url\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blocks\"];","/**\n * External dependencies\n */\nimport { isEqual } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { useDebounce, usePrevious } from '@wordpress/compose';\nimport { RawHTML, useEffect, useRef, useState } from '@wordpress/element';\nimport { __, sprintf } from '@wordpress/i18n';\nimport apiFetch from '@wordpress/api-fetch';\nimport { addQueryArgs } from '@wordpress/url';\nimport { Placeholder, Spinner } from '@wordpress/components';\nimport { __experimentalSanitizeBlockAttributes } from '@wordpress/blocks';\n\nexport function rendererPath( block, attributes = null, urlQueryArgs = {} ) {\n\treturn addQueryArgs( `/wp/v2/block-renderer/${ block }`, {\n\t\tcontext: 'edit',\n\t\t...( null !== attributes ? { attributes } : {} ),\n\t\t...urlQueryArgs,\n\t} );\n}\n\nfunction DefaultEmptyResponsePlaceholder( { className } ) {\n\treturn (\n\t\t<Placeholder className={ className }>\n\t\t\t{ __( 'Block rendered as empty.' ) }\n\t\t</Placeholder>\n\t);\n}\n\nfunction DefaultErrorResponsePlaceholder( { response, className } ) {\n\tconst errorMessage = sprintf(\n\t\t// translators: %s: error message describing the problem\n\t\t__( 'Error loading block: %s' ),\n\t\tresponse.errorMsg\n\t);\n\treturn <Placeholder className={ className }>{ errorMessage }</Placeholder>;\n}\n\nfunction DefaultLoadingResponsePlaceholder( { children, showLoader } ) {\n\treturn (\n\t\t<div style={ { position: 'relative' } }>\n\t\t\t{ showLoader && (\n\t\t\t\t<div\n\t\t\t\t\tstyle={ {\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\ttop: '50%',\n\t\t\t\t\t\tleft: '50%',\n\t\t\t\t\t\tmarginTop: '-9px',\n\t\t\t\t\t\tmarginLeft: '-9px',\n\t\t\t\t\t} }\n\t\t\t\t>\n\t\t\t\t\t<Spinner />\n\t\t\t\t</div>\n\t\t\t) }\n\t\t\t<div style={ { opacity: showLoader ? '0.3' : 1 } }>\n\t\t\t\t{ children }\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default function ServerSideRender( props ) {\n\tconst {\n\t\tattributes,\n\t\tblock,\n\t\tclassName,\n\t\thttpMethod = 'GET',\n\t\turlQueryArgs,\n\t\tEmptyResponsePlaceholder = DefaultEmptyResponsePlaceholder,\n\t\tErrorResponsePlaceholder = DefaultErrorResponsePlaceholder,\n\t\tLoadingResponsePlaceholder = DefaultLoadingResponsePlaceholder,\n\t} = props;\n\n\tconst isMountedRef = useRef( true );\n\tconst [ showLoader, setShowLoader ] = useState( false );\n\tconst fetchRequestRef = useRef();\n\tconst [ response, setResponse ] = useState( null );\n\tconst prevProps = usePrevious( props );\n\tconst [ isLoading, setIsLoading ] = useState( false );\n\n\tfunction fetchData() {\n\t\tif ( ! isMountedRef.current ) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetIsLoading( true );\n\n\t\tconst sanitizedAttributes =\n\t\t\tattributes &&\n\t\t\t__experimentalSanitizeBlockAttributes( block, attributes );\n\n\t\t// If httpMethod is 'POST', send the attributes in the request body instead of the URL.\n\t\t// This allows sending a larger attributes object than in a GET request, where the attributes are in the URL.\n\t\tconst isPostRequest = 'POST' === httpMethod;\n\t\tconst urlAttributes = isPostRequest\n\t\t\t? null\n\t\t\t: sanitizedAttributes ?? null;\n\t\tconst path = rendererPath( block, urlAttributes, urlQueryArgs );\n\t\tconst data = isPostRequest\n\t\t\t? { attributes: sanitizedAttributes ?? null }\n\t\t\t: null;\n\n\t\t// Store the latest fetch request so that when we process it, we can\n\t\t// check if it is the current request, to avoid race conditions on slow networks.\n\t\tconst fetchRequest = ( fetchRequestRef.current = apiFetch( {\n\t\t\tpath,\n\t\t\tdata,\n\t\t\tmethod: isPostRequest ? 'POST' : 'GET',\n\t\t} )\n\t\t\t.then( ( fetchResponse ) => {\n\t\t\t\tif (\n\t\t\t\t\tisMountedRef.current &&\n\t\t\t\t\tfetchRequest === fetchRequestRef.current &&\n\t\t\t\t\tfetchResponse\n\t\t\t\t) {\n\t\t\t\t\tsetResponse( fetchResponse.rendered );\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.catch( ( error ) => {\n\t\t\t\tif (\n\t\t\t\t\tisMountedRef.current &&\n\t\t\t\t\tfetchRequest === fetchRequestRef.current\n\t\t\t\t) {\n\t\t\t\t\tsetResponse( {\n\t\t\t\t\t\terror: true,\n\t\t\t\t\t\terrorMsg: error.message,\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.finally( () => {\n\t\t\t\tif (\n\t\t\t\t\tisMountedRef.current &&\n\t\t\t\t\tfetchRequest === fetchRequestRef.current\n\t\t\t\t) {\n\t\t\t\t\tsetIsLoading( false );\n\t\t\t\t}\n\t\t\t} ) );\n\n\t\treturn fetchRequest;\n\t}\n\n\tconst debouncedFetchData = useDebounce( fetchData, 500 );\n\n\t// When the component unmounts, set isMountedRef to false. This will\n\t// let the async fetch callbacks know when to stop.\n\tuseEffect(\n\t\t() => () => {\n\t\t\tisMountedRef.current = false;\n\t\t},\n\t\t[]\n\t);\n\n\tuseEffect( () => {\n\t\t// Don't debounce the first fetch. This ensures that the first render\n\t\t// shows data as soon as possible.\n\t\tif ( prevProps === undefined ) {\n\t\t\tfetchData();\n\t\t} else if ( ! isEqual( prevProps, props ) ) {\n\t\t\tdebouncedFetchData();\n\t\t}\n\t} );\n\n\t/**\n\t * Effect to handle showing the loading placeholder.\n\t * Show it only if there is no previous response or\n\t * the request takes more than one second.\n\t */\n\tuseEffect( () => {\n\t\tif ( ! isLoading ) {\n\t\t\treturn;\n\t\t}\n\t\tconst timeout = setTimeout( () => {\n\t\t\tsetShowLoader( true );\n\t\t}, 1000 );\n\t\treturn () => clearTimeout( timeout );\n\t}, [ isLoading ] );\n\n\tconst hasResponse = !! response;\n\tconst hasEmptyResponse = response === '';\n\tconst hasError = response?.error;\n\n\tif ( isLoading ) {\n\t\treturn (\n\t\t\t<LoadingResponsePlaceholder { ...props } showLoader={ showLoader }>\n\t\t\t\t{ hasResponse && (\n\t\t\t\t\t<RawHTML className={ className }>{ response }</RawHTML>\n\t\t\t\t) }\n\t\t\t</LoadingResponsePlaceholder>\n\t\t);\n\t}\n\n\tif ( hasEmptyResponse || ! hasResponse ) {\n\t\treturn <EmptyResponsePlaceholder { ...props } />;\n\t}\n\n\tif ( hasError ) {\n\t\treturn <ErrorResponsePlaceholder response={ response } { ...props } />;\n\t}\n\n\treturn <RawHTML className={ className }>{ response }</RawHTML>;\n}\n","/**\n * WordPress dependencies\n */\nimport { useMemo, forwardRef } from '@wordpress/element';\nimport { withSelect } from '@wordpress/data';\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Internal dependencies\n */\nimport ServerSideRender from './server-side-render';\n\n/**\n * Constants\n */\nconst EMPTY_OBJECT = {};\n\nconst ExportedServerSideRender = withSelect( ( select ) => {\n\t// FIXME: @wordpress/server-side-render should not depend on @wordpress/editor.\n\t// It is used by blocks that can be loaded into a *non-post* block editor.\n\t// eslint-disable-next-line @wordpress/data-no-store-string-literals\n\tconst coreEditorSelect = select( 'core/editor' );\n\tif ( coreEditorSelect ) {\n\t\tconst currentPostId = coreEditorSelect.getCurrentPostId();\n\t\t// For templates and template parts we use a custom ID format.\n\t\t// Since they aren't real posts, we don't want to use their ID\n\t\t// for server-side rendering. Since they use a string based ID,\n\t\t// we can assume real post IDs are numbers.\n\t\tif ( currentPostId && typeof currentPostId === 'number' ) {\n\t\t\treturn {\n\t\t\t\tcurrentPostId,\n\t\t\t};\n\t\t}\n\t}\n\treturn EMPTY_OBJECT;\n} )( ( { urlQueryArgs = EMPTY_OBJECT, currentPostId, ...props } ) => {\n\tconst newUrlQueryArgs = useMemo( () => {\n\t\tif ( ! currentPostId ) {\n\t\t\treturn urlQueryArgs;\n\t\t}\n\t\treturn {\n\t\t\tpost_id: currentPostId,\n\t\t\t...urlQueryArgs,\n\t\t};\n\t}, [ currentPostId, urlQueryArgs ] );\n\n\treturn <ServerSideRender urlQueryArgs={ newUrlQueryArgs } { ...props } />;\n} );\n\nif ( window && window.wp && window.wp.components ) {\n\twindow.wp.components.ServerSideRender = forwardRef( ( props, ref ) => {\n\t\tdeprecated( 'wp.components.ServerSideRender', {\n\t\t\tversion: '6.2',\n\t\t\tsince: '5.3',\n\t\t\talternative: 'wp.serverSideRender',\n\t\t} );\n\t\treturn <ExportedServerSideRender { ...props } ref={ ref } />;\n\t} );\n}\n\nexport default ExportedServerSideRender;\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","_extends","assign","target","i","arguments","length","source","apply","this","window","DefaultEmptyResponsePlaceholder","className","Placeholder","__","DefaultErrorResponsePlaceholder","response","errorMessage","sprintf","errorMsg","DefaultLoadingResponsePlaceholder","children","showLoader","style","position","top","left","marginTop","marginLeft","Spinner","opacity","ServerSideRender","props","attributes","block","httpMethod","urlQueryArgs","EmptyResponsePlaceholder","ErrorResponsePlaceholder","LoadingResponsePlaceholder","isMountedRef","useRef","setShowLoader","useState","fetchRequestRef","setResponse","prevProps","usePrevious","isLoading","setIsLoading","fetchData","current","sanitizedAttributes","__experimentalSanitizeBlockAttributes","isPostRequest","path","addQueryArgs","context","rendererPath","data","fetchRequest","apiFetch","method","then","fetchResponse","rendered","catch","error","message","finally","debouncedFetchData","useDebounce","useEffect","undefined","isEqual","timeout","setTimeout","clearTimeout","hasResponse","hasEmptyResponse","hasError","RawHTML","EMPTY_OBJECT","ExportedServerSideRender","withSelect","select","coreEditorSelect","currentPostId","getCurrentPostId","newUrlQueryArgs","useMemo","post_id","wp","components","forwardRef","ref","deprecated","version","since","alternative"],"sourceRoot":""}