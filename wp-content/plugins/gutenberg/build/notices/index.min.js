!function(){"use strict";var t={d:function(e,n){for(var i in n)t.o(n,i)&&!t.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:n[i]})},o:function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r:function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};t.r(e),t.d(e,{store:function(){return w}});var n={};t.r(n),t.d(n,{createErrorNotice:function(){return p},createInfoNotice:function(){return g},createNotice:function(){return d},createSuccessNotice:function(){return f},createWarningNotice:function(){return v},removeNotice:function(){return y}});var i={};t.r(i),t.d(i,{getNotices:function(){return E}});var r=window.wp.data;const o=(c="context",t=>function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=arguments.length>1?arguments[1]:void 0;const i=n[c];if(void 0===i)return e;const r=t(e[i],n);return r===e[i]?e:{...e,[i]:r}})((function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],e=arguments.length>1?arguments[1]:void 0;switch(e.type){case"CREATE_NOTICE":return[...t.filter((t=>{let{id:n}=t;return n!==e.notice.id})),e.notice];case"REMOVE_NOTICE":return t.filter((t=>{let{id:n}=t;return n!==e.id}))}return t}));var c,u=o;const s="global",l="info";let a=0;function d(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:l,e=arguments.length>1?arguments[1]:void 0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const{speak:i=!0,isDismissible:r=!0,context:o=s,id:c=`${o}${++a}`,actions:u=[],type:d="default",__unstableHTML:f,icon:g=null,explicitDismiss:p=!1,onDismiss:v}=n;return e=String(e),{type:"CREATE_NOTICE",context:o,notice:{id:c,status:t,content:e,spokenMessage:i?e:null,__unstableHTML:f,isDismissible:r,actions:u,type:d,icon:g,explicitDismiss:p,onDismiss:v}}}function f(t,e){return d("success",t,e)}function g(t,e){return d("info",t,e)}function p(t,e){return d("error",t,e)}function v(t,e){return d("warning",t,e)}function y(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:s;return{type:"REMOVE_NOTICE",id:t,context:e}}const b=[];function E(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:s;return t[e]||b}const w=(0,r.createReduxStore)("core/notices",{reducer:u,actions:n,selectors:i});(0,r.register)(w),(window.wp=window.wp||{}).notices=e}();
//# sourceMappingURL=index.min.js.map