!function(){"use strict";var t={d:function(e,n){for(var i in n)t.o(n,i)&&!t.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:n[i]})},o:function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r:function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};t.r(e),t.d(e,{store:function(){return y}});var n={};t.r(n),t.d(n,{createErrorNotice:function(){return f},createInfoNotice:function(){return a},createNotice:function(){return l},createSuccessNotice:function(){return d},createWarningNotice:function(){return g},removeNotice:function(){return p}});var i={};t.r(i),t.d(i,{getNotices:function(){return w}});var o=window.wp.data,r=window.lodash,c=(t=>function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=arguments.length>1?arguments[1]:void 0;const i=n.context;if(void 0===i)return e;const o=t(e[i],n);return o===e[i]?e:{...e,[i]:o}})((function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],e=arguments.length>1?arguments[1]:void 0;switch(e.type){case"CREATE_NOTICE":return[...(0,r.reject)(t,{id:e.notice.id}),e.notice];case"REMOVE_NOTICE":return(0,r.reject)(t,{id:e.id})}return t}));const u="global",s="info";function l(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:s,e=arguments.length>1?arguments[1]:void 0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const{speak:i=!0,isDismissible:o=!0,context:c=u,id:l=(0,r.uniqueId)(c),actions:d=[],type:a="default",__unstableHTML:f,icon:g=null,explicitDismiss:p=!1,onDismiss:v}=n;return e=String(e),{type:"CREATE_NOTICE",context:c,notice:{id:l,status:t,content:e,spokenMessage:i?e:null,__unstableHTML:f,isDismissible:o,actions:d,type:a,icon:g,explicitDismiss:p,onDismiss:v}}}function d(t,e){return l("success",t,e)}function a(t,e){return l("info",t,e)}function f(t,e){return l("error",t,e)}function g(t,e){return l("warning",t,e)}function p(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:u;return{type:"REMOVE_NOTICE",id:t,context:e}}const v=[];function w(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:u;return t[e]||v}const y=(0,o.createReduxStore)("core/notices",{reducer:c,actions:n,selectors:i});(0,o.register)(y),(window.wp=window.wp||{}).notices=e}();