{"version":3,"file":"./build/keyboard-shortcuts/index.min.js","mappings":"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","sources":["webpack://wp/webpack/bootstrap","webpack://wp/webpack/runtime/define property getters","webpack://wp/webpack/runtime/hasOwnProperty shorthand","webpack://wp/webpack/runtime/make namespace object","webpack://wp/external window [\"wp\",\"data\"]","webpack://wp/./packages/keyboard-shortcuts/build-module/store/@wordpress/keyboard-shortcuts/src/store/actions.js","webpack://wp/./node_modules/rememo/es/rememo.js","webpack://wp/external window [\"wp\",\"keycodes\"]","webpack://wp/./packages/keyboard-shortcuts/build-module/store/@wordpress/keyboard-shortcuts/src/store/selectors.js","webpack://wp/./packages/keyboard-shortcuts/build-module/store/@wordpress/keyboard-shortcuts/src/store/index.js","webpack://wp/./packages/keyboard-shortcuts/build-module/store/@wordpress/keyboard-shortcuts/src/store/reducer.js","webpack://wp/external window [\"wp\",\"element\"]","webpack://wp/./packages/keyboard-shortcuts/build-module/hooks/@wordpress/keyboard-shortcuts/src/hooks/use-shortcut-event-match.js","webpack://wp/./packages/keyboard-shortcuts/build-module/@wordpress/keyboard-shortcuts/src/context.js","webpack://wp/./packages/keyboard-shortcuts/build-module/hooks/@wordpress/keyboard-shortcuts/src/hooks/use-shortcut.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://wp/./packages/keyboard-shortcuts/build-module/components/@wordpress/keyboard-shortcuts/src/components/shortcut-provider.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"data\"];","/** @typedef {import('@wordpress/keycodes').WPKeycodeModifier} WPKeycodeModifier */\n\n/**\n * Keyboard key combination.\n *\n * @typedef {Object} WPShortcutKeyCombination\n *\n * @property {string}                      character Character.\n * @property {WPKeycodeModifier|undefined} modifier  Modifier.\n */\n\n/**\n * Configuration of a registered keyboard shortcut.\n *\n * @typedef {Object} WPShortcutConfig\n *\n * @property {string}                     name           Shortcut name.\n * @property {string}                     category       Shortcut category.\n * @property {string}                     description    Shortcut description.\n * @property {WPShortcutKeyCombination}   keyCombination Shortcut key combination.\n * @property {WPShortcutKeyCombination[]} [aliases]      Shortcut aliases.\n */\n\n/**\n * Returns an action object used to register a new keyboard shortcut.\n *\n * @param {WPShortcutConfig} config Shortcut config.\n *\n * @return {Object} action.\n */\nexport function registerShortcut( {\n\tname,\n\tcategory,\n\tdescription,\n\tkeyCombination,\n\taliases,\n} ) {\n\treturn {\n\t\ttype: 'REGISTER_SHORTCUT',\n\t\tname,\n\t\tcategory,\n\t\tkeyCombination,\n\t\taliases,\n\t\tdescription,\n\t};\n}\n\n/**\n * Returns an action object used to unregister a keyboard shortcut.\n *\n * @param {string} name Shortcut name.\n *\n * @return {Object} action.\n */\nexport function unregisterShortcut( name ) {\n\treturn {\n\t\ttype: 'UNREGISTER_SHORTCUT',\n\t\tname,\n\t};\n}\n","'use strict';\n\n/** @typedef {(...args: any[]) => *[]} GetDependants */\n\n/** @typedef {() => void} Clear */\n\n/**\n * @typedef {{\n *   getDependants: GetDependants,\n *   clear: Clear\n * }} EnhancedSelector\n */\n\n/**\n * Internal cache entry.\n *\n * @typedef CacheNode\n *\n * @property {?CacheNode|undefined} [prev] Previous node.\n * @property {?CacheNode|undefined} [next] Next node.\n * @property {*[]} args Function arguments for cache entry.\n * @property {*} val Function result.\n */\n\n/**\n * @typedef Cache\n *\n * @property {Clear} clear Function to clear cache.\n * @property {boolean} [isUniqueByDependants] Whether dependants are valid in\n * considering cache uniqueness. A cache is unique if dependents are all arrays\n * or objects.\n * @property {CacheNode?} [head] Cache head.\n * @property {*[]} [lastDependants] Dependants from previous invocation.\n */\n\n/**\n * Arbitrary value used as key for referencing cache object in WeakMap tree.\n *\n * @type {{}}\n */\nvar LEAF_KEY = {};\n\n/**\n * Returns the first argument as the sole entry in an array.\n *\n * @template T\n *\n * @param {T} value Value to return.\n *\n * @return {[T]} Value returned as entry in array.\n */\nfunction arrayOf(value) {\n\treturn [value];\n}\n\n/**\n * Returns true if the value passed is object-like, or false otherwise. A value\n * is object-like if it can support property assignment, e.g. object or array.\n *\n * @param {*} value Value to test.\n *\n * @return {boolean} Whether value is object-like.\n */\nfunction isObjectLike(value) {\n\treturn !!value && 'object' === typeof value;\n}\n\n/**\n * Creates and returns a new cache object.\n *\n * @return {Cache} Cache object.\n */\nfunction createCache() {\n\t/** @type {Cache} */\n\tvar cache = {\n\t\tclear: function () {\n\t\t\tcache.head = null;\n\t\t},\n\t};\n\n\treturn cache;\n}\n\n/**\n * Returns true if entries within the two arrays are strictly equal by\n * reference from a starting index.\n *\n * @param {*[]} a First array.\n * @param {*[]} b Second array.\n * @param {number} fromIndex Index from which to start comparison.\n *\n * @return {boolean} Whether arrays are shallowly equal.\n */\nfunction isShallowEqual(a, b, fromIndex) {\n\tvar i;\n\n\tif (a.length !== b.length) {\n\t\treturn false;\n\t}\n\n\tfor (i = fromIndex; i < a.length; i++) {\n\t\tif (a[i] !== b[i]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * Returns a memoized selector function. The getDependants function argument is\n * called before the memoized selector and is expected to return an immutable\n * reference or array of references on which the selector depends for computing\n * its own return value. The memoize cache is preserved only as long as those\n * dependant references remain the same. If getDependants returns a different\n * reference(s), the cache is cleared and the selector value regenerated.\n *\n * @template {(...args: *[]) => *} S\n *\n * @param {S} selector Selector function.\n * @param {GetDependants=} getDependants Dependant getter returning an array of\n * references used in cache bust consideration.\n */\nexport default function (selector, getDependants) {\n\t/** @type {WeakMap<*,*>} */\n\tvar rootCache;\n\n\t/** @type {GetDependants} */\n\tvar normalizedGetDependants = getDependants ? getDependants : arrayOf;\n\n\t/**\n\t * Returns the cache for a given dependants array. When possible, a WeakMap\n\t * will be used to create a unique cache for each set of dependants. This\n\t * is feasible due to the nature of WeakMap in allowing garbage collection\n\t * to occur on entries where the key object is no longer referenced. Since\n\t * WeakMap requires the key to be an object, this is only possible when the\n\t * dependant is object-like. The root cache is created as a hierarchy where\n\t * each top-level key is the first entry in a dependants set, the value a\n\t * WeakMap where each key is the next dependant, and so on. This continues\n\t * so long as the dependants are object-like. If no dependants are object-\n\t * like, then the cache is shared across all invocations.\n\t *\n\t * @see isObjectLike\n\t *\n\t * @param {*[]} dependants Selector dependants.\n\t *\n\t * @return {Cache} Cache object.\n\t */\n\tfunction getCache(dependants) {\n\t\tvar caches = rootCache,\n\t\t\tisUniqueByDependants = true,\n\t\t\ti,\n\t\t\tdependant,\n\t\t\tmap,\n\t\t\tcache;\n\n\t\tfor (i = 0; i < dependants.length; i++) {\n\t\t\tdependant = dependants[i];\n\n\t\t\t// Can only compose WeakMap from object-like key.\n\t\t\tif (!isObjectLike(dependant)) {\n\t\t\t\tisUniqueByDependants = false;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Does current segment of cache already have a WeakMap?\n\t\t\tif (caches.has(dependant)) {\n\t\t\t\t// Traverse into nested WeakMap.\n\t\t\t\tcaches = caches.get(dependant);\n\t\t\t} else {\n\t\t\t\t// Create, set, and traverse into a new one.\n\t\t\t\tmap = new WeakMap();\n\t\t\t\tcaches.set(dependant, map);\n\t\t\t\tcaches = map;\n\t\t\t}\n\t\t}\n\n\t\t// We use an arbitrary (but consistent) object as key for the last item\n\t\t// in the WeakMap to serve as our running cache.\n\t\tif (!caches.has(LEAF_KEY)) {\n\t\t\tcache = createCache();\n\t\t\tcache.isUniqueByDependants = isUniqueByDependants;\n\t\t\tcaches.set(LEAF_KEY, cache);\n\t\t}\n\n\t\treturn caches.get(LEAF_KEY);\n\t}\n\n\t/**\n\t * Resets root memoization cache.\n\t */\n\tfunction clear() {\n\t\trootCache = new WeakMap();\n\t}\n\n\t/* eslint-disable jsdoc/check-param-names */\n\t/**\n\t * The augmented selector call, considering first whether dependants have\n\t * changed before passing it to underlying memoize function.\n\t *\n\t * @param {*}    source    Source object for derivation.\n\t * @param {...*} extraArgs Additional arguments to pass to selector.\n\t *\n\t * @return {*} Selector result.\n\t */\n\t/* eslint-enable jsdoc/check-param-names */\n\tfunction callSelector(/* source, ...extraArgs */) {\n\t\tvar len = arguments.length,\n\t\t\tcache,\n\t\t\tnode,\n\t\t\ti,\n\t\t\targs,\n\t\t\tdependants;\n\n\t\t// Create copy of arguments (avoid leaking deoptimization).\n\t\targs = new Array(len);\n\t\tfor (i = 0; i < len; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\n\t\tdependants = normalizedGetDependants.apply(null, args);\n\t\tcache = getCache(dependants);\n\n\t\t// If not guaranteed uniqueness by dependants (primitive type), shallow\n\t\t// compare against last dependants and, if references have changed,\n\t\t// destroy cache to recalculate result.\n\t\tif (!cache.isUniqueByDependants) {\n\t\t\tif (\n\t\t\t\tcache.lastDependants &&\n\t\t\t\t!isShallowEqual(dependants, cache.lastDependants, 0)\n\t\t\t) {\n\t\t\t\tcache.clear();\n\t\t\t}\n\n\t\t\tcache.lastDependants = dependants;\n\t\t}\n\n\t\tnode = cache.head;\n\t\twhile (node) {\n\t\t\t// Check whether node arguments match arguments\n\t\t\tif (!isShallowEqual(node.args, args, 1)) {\n\t\t\t\tnode = node.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// At this point we can assume we've found a match\n\n\t\t\t// Surface matched node to head if not already\n\t\t\tif (node !== cache.head) {\n\t\t\t\t// Adjust siblings to point to each other.\n\t\t\t\t/** @type {CacheNode} */ (node.prev).next = node.next;\n\t\t\t\tif (node.next) {\n\t\t\t\t\tnode.next.prev = node.prev;\n\t\t\t\t}\n\n\t\t\t\tnode.next = cache.head;\n\t\t\t\tnode.prev = null;\n\t\t\t\t/** @type {CacheNode} */ (cache.head).prev = node;\n\t\t\t\tcache.head = node;\n\t\t\t}\n\n\t\t\t// Return immediately\n\t\t\treturn node.val;\n\t\t}\n\n\t\t// No cached value found. Continue to insertion phase:\n\n\t\tnode = /** @type {CacheNode} */ ({\n\t\t\t// Generate the result from original function\n\t\t\tval: selector.apply(null, args),\n\t\t});\n\n\t\t// Avoid including the source object in the cache.\n\t\targs[0] = null;\n\t\tnode.args = args;\n\n\t\t// Don't need to check whether node is already head, since it would\n\t\t// have been returned above already if it was\n\n\t\t// Shift existing head down list\n\t\tif (cache.head) {\n\t\t\tcache.head.prev = node;\n\t\t\tnode.next = cache.head;\n\t\t}\n\n\t\tcache.head = node;\n\n\t\treturn node.val;\n\t}\n\n\tcallSelector.getDependants = normalizedGetDependants;\n\tcallSelector.clear = clear;\n\tclear();\n\n\treturn /** @type {S & EnhancedSelector} */ (callSelector);\n}\n","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"keycodes\"];","/**\n * External dependencies\n */\nimport createSelector from 'rememo';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tdisplayShortcut,\n\tshortcutAriaLabel,\n\trawShortcut,\n} from '@wordpress/keycodes';\n\n/** @typedef {import('./actions').WPShortcutKeyCombination} WPShortcutKeyCombination */\n\n/** @typedef {import('@wordpress/keycodes').WPKeycodeHandlerByModifier} WPKeycodeHandlerByModifier */\n\n/**\n * Shared reference to an empty array for cases where it is important to avoid\n * returning a new array reference on every invocation.\n *\n * @type {Array<any>}\n */\nconst EMPTY_ARRAY = [];\n\n/**\n * Shortcut formatting methods.\n *\n * @property {WPKeycodeHandlerByModifier} display     Display formatting.\n * @property {WPKeycodeHandlerByModifier} rawShortcut Raw shortcut formatting.\n * @property {WPKeycodeHandlerByModifier} ariaLabel   ARIA label formatting.\n */\nconst FORMATTING_METHODS = {\n\tdisplay: displayShortcut,\n\traw: rawShortcut,\n\tariaLabel: shortcutAriaLabel,\n};\n\n/**\n * Returns a string representing the key combination.\n *\n * @param {?WPShortcutKeyCombination} shortcut       Key combination.\n * @param {keyof FORMATTING_METHODS}  representation Type of representation\n *                                                   (display, raw, ariaLabel).\n *\n * @return {string?} Shortcut representation.\n */\nfunction getKeyCombinationRepresentation( shortcut, representation ) {\n\tif ( ! shortcut ) {\n\t\treturn null;\n\t}\n\n\treturn shortcut.modifier\n\t\t? FORMATTING_METHODS[ representation ][ shortcut.modifier ](\n\t\t\t\tshortcut.character\n\t\t  )\n\t\t: shortcut.character;\n}\n\n/**\n * Returns the main key combination for a given shortcut name.\n *\n * @param {Object} state Global state.\n * @param {string} name  Shortcut name.\n *\n * @return {WPShortcutKeyCombination?} Key combination.\n */\nexport function getShortcutKeyCombination( state, name ) {\n\treturn state[ name ] ? state[ name ].keyCombination : null;\n}\n\n/**\n * Returns a string representing the main key combination for a given shortcut name.\n *\n * @param {Object}                   state          Global state.\n * @param {string}                   name           Shortcut name.\n * @param {keyof FORMATTING_METHODS} representation Type of representation\n *                                                  (display, raw, ariaLabel).\n *\n * @return {string?} Shortcut representation.\n */\nexport function getShortcutRepresentation(\n\tstate,\n\tname,\n\trepresentation = 'display'\n) {\n\tconst shortcut = getShortcutKeyCombination( state, name );\n\treturn getKeyCombinationRepresentation( shortcut, representation );\n}\n\n/**\n * Returns the shortcut description given its name.\n *\n * @param {Object} state Global state.\n * @param {string} name  Shortcut name.\n *\n * @return {string?} Shortcut description.\n */\nexport function getShortcutDescription( state, name ) {\n\treturn state[ name ] ? state[ name ].description : null;\n}\n\n/**\n * Returns the aliases for a given shortcut name.\n *\n * @param {Object} state Global state.\n * @param {string} name  Shortcut name.\n *\n * @return {WPShortcutKeyCombination[]} Key combinations.\n */\nexport function getShortcutAliases( state, name ) {\n\treturn state[ name ] && state[ name ].aliases\n\t\t? state[ name ].aliases\n\t\t: EMPTY_ARRAY;\n}\n\nexport const getAllShortcutKeyCombinations = createSelector(\n\t( state, name ) => {\n\t\treturn [\n\t\t\tgetShortcutKeyCombination( state, name ),\n\t\t\t...getShortcutAliases( state, name ),\n\t\t].filter( Boolean );\n\t},\n\t( state, name ) => [ state[ name ] ]\n);\n\n/**\n * Returns the raw representation of all the keyboard combinations of a given shortcut name.\n *\n * @param {Object} state Global state.\n * @param {string} name  Shortcut name.\n *\n * @return {string[]} Shortcuts.\n */\nexport const getAllShortcutRawKeyCombinations = createSelector(\n\t( state, name ) => {\n\t\treturn getAllShortcutKeyCombinations( state, name ).map(\n\t\t\t( combination ) =>\n\t\t\t\tgetKeyCombinationRepresentation( combination, 'raw' )\n\t\t);\n\t},\n\t( state, name ) => [ state[ name ] ]\n);\n\n/**\n * Returns the shortcut names list for a given category name.\n *\n * @param {Object} state Global state.\n * @param {string} name  Category name.\n *\n * @return {string[]} Shortcut names.\n */\nexport const getCategoryShortcuts = createSelector(\n\t( state, categoryName ) => {\n\t\treturn Object.entries( state )\n\t\t\t.filter( ( [ , shortcut ] ) => shortcut.category === categoryName )\n\t\t\t.map( ( [ name ] ) => name );\n\t},\n\t( state ) => [ state ]\n);\n","/**\n * WordPress dependencies\n */\nimport { createReduxStore, register } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport reducer from './reducer';\nimport * as actions from './actions';\nimport * as selectors from './selectors';\n\nconst STORE_NAME = 'core/keyboard-shortcuts';\n\n/**\n * Store definition for the keyboard shortcuts namespace.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/data/README.md#createReduxStore\n *\n * @type {Object}\n */\nexport const store = createReduxStore( STORE_NAME, {\n\treducer,\n\tactions,\n\tselectors,\n} );\n\nregister( store );\n","/**\n * Reducer returning the registered shortcuts\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nfunction reducer( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'REGISTER_SHORTCUT':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ action.name ]: {\n\t\t\t\t\tcategory: action.category,\n\t\t\t\t\tkeyCombination: action.keyCombination,\n\t\t\t\t\taliases: action.aliases,\n\t\t\t\t\tdescription: action.description,\n\t\t\t\t},\n\t\t\t};\n\t\tcase 'UNREGISTER_SHORTCUT':\n\t\t\tconst { [ action.name ]: actionName, ...remainingState } = state;\n\t\t\treturn remainingState;\n\t}\n\n\treturn state;\n}\n\nexport default reducer;\n","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { isKeyboardEvent } from '@wordpress/keycodes';\n\n/**\n * Internal dependencies\n */\nimport { store as keyboardShortcutsStore } from '../store';\n\n/**\n * Returns a function to check if a keyboard event matches a shortcut name.\n *\n * @return {Function} A function to check if a keyboard event matches a\n *                    predefined shortcut combination.\n */\nexport default function useShortcutEventMatch() {\n\tconst { getAllShortcutKeyCombinations } = useSelect(\n\t\tkeyboardShortcutsStore\n\t);\n\n\t/**\n\t * A function to check if a keyboard event matches a predefined shortcut\n\t * combination.\n\t *\n\t * @param {string}        name  Shortcut name.\n\t * @param {KeyboardEvent} event Event to check.\n\t *\n\t * @return {boolean} True if the event matches any shortcuts, false if not.\n\t */\n\tfunction isMatch( name, event ) {\n\t\treturn getAllShortcutKeyCombinations( name ).some(\n\t\t\t( { modifier, character } ) => {\n\t\t\t\treturn isKeyboardEvent[ modifier ]( event, character );\n\t\t\t}\n\t\t);\n\t}\n\n\treturn isMatch;\n}\n","/**\n * WordPress dependencies\n */\nimport { createContext } from '@wordpress/element';\n\nexport const context = createContext();\n","/**\n * WordPress dependencies\n */\nimport { useContext, useEffect, useRef } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport useShortcutEventMatch from './use-shortcut-event-match';\nimport { context } from '../context';\n\n/**\n * Attach a keyboard shortcut handler.\n *\n * @param {string}   name               Shortcut name.\n * @param {Function} callback           Shortcut callback.\n * @param {Object}   options            Shortcut options.\n * @param {boolean}  options.isDisabled Whether to disable to shortut.\n */\nexport default function useShortcut( name, callback, { isDisabled } = {} ) {\n\tconst shortcuts = useContext( context );\n\tconst isMatch = useShortcutEventMatch();\n\tconst callbackRef = useRef();\n\tcallbackRef.current = callback;\n\n\tuseEffect( () => {\n\t\tif ( isDisabled ) {\n\t\t\treturn;\n\t\t}\n\n\t\tfunction _callback( event ) {\n\t\t\tif ( isMatch( name, event ) ) {\n\t\t\t\tcallbackRef.current( event );\n\t\t\t}\n\t\t}\n\n\t\tshortcuts.current.add( _callback );\n\t\treturn () => {\n\t\t\tshortcuts.current.delete( _callback );\n\t\t};\n\t}, [ name, isDisabled ] );\n}\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","/**\n * WordPress dependencies\n */\nimport { useRef } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { context } from '../context';\n\nconst { Provider } = context;\n\n/**\n * Handles callbacks added to context by `useShortcut`.\n *\n * @param {Object} props Props to pass to `div`.\n *\n * @return {import('@wordpress/element').WPElement} Component.\n */\nexport function ShortcutProvider( props ) {\n\tconst keyboardShortcuts = useRef( new Set() );\n\n\tfunction onKeyDown( event ) {\n\t\tif ( props.onKeyDown ) props.onKeyDown( event );\n\n\t\tfor ( const keyboardShortcut of keyboardShortcuts.current ) {\n\t\t\tkeyboardShortcut( event );\n\t\t}\n\t}\n\n\t/* eslint-disable jsx-a11y/no-static-element-interactions */\n\treturn (\n\t\t<Provider value={ keyboardShortcuts }>\n\t\t\t<div { ...props } onKeyDown={ onKeyDown } />\n\t\t</Provider>\n\t);\n\t/* eslint-enable jsx-a11y/no-static-element-interactions */\n}\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","window","registerShortcut","name","category","description","keyCombination","aliases","type","unregisterShortcut","LEAF_KEY","arrayOf","isShallowEqual","a","b","fromIndex","i","length","selector","getDependants","rootCache","normalizedGetDependants","getCache","dependants","dependant","map","cache","caches","isUniqueByDependants","has","WeakMap","set","clear","head","createCache","callSelector","node","args","len","arguments","Array","apply","lastDependants","next","prev","val","EMPTY_ARRAY","FORMATTING_METHODS","display","displayShortcut","raw","rawShortcut","ariaLabel","shortcutAriaLabel","getKeyCombinationRepresentation","shortcut","representation","modifier","character","getShortcutKeyCombination","state","getShortcutRepresentation","getShortcutDescription","getShortcutAliases","getAllShortcutKeyCombinations","createSelector","filter","Boolean","getAllShortcutRawKeyCombinations","combination","getCategoryShortcuts","categoryName","entries","store","createReduxStore","reducer","action","actionName","remainingState","actions","selectors","register","useShortcutEventMatch","useSelect","keyboardShortcutsStore","event","some","isKeyboardEvent","context","createContext","useShortcut","callback","isDisabled","shortcuts","useContext","isMatch","callbackRef","useRef","current","useEffect","add","_callback","delete","_extends","assign","target","source","this","Provider","ShortcutProvider","props","keyboardShortcuts","Set","onKeyDown","keyboardShortcut"],"sourceRoot":""}