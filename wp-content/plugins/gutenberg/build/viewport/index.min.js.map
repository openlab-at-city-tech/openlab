{"version":3,"file":"./build/viewport/index.min.js","mappings":"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","sources":["webpack://wp/webpack/bootstrap","webpack://wp/webpack/runtime/define property getters","webpack://wp/webpack/runtime/hasOwnProperty shorthand","webpack://wp/webpack/runtime/make namespace object","webpack://wp/external window \"lodash\"","webpack://wp/external window [\"wp\",\"data\"]","webpack://wp/./packages/viewport/build-module/store/@wordpress/viewport/src/store/actions.js","webpack://wp/./packages/viewport/build-module/store/@wordpress/viewport/src/store/selectors.js","webpack://wp/./packages/viewport/build-module/store/@wordpress/viewport/src/store/index.js","webpack://wp/./packages/viewport/build-module/store/@wordpress/viewport/src/store/reducer.js","webpack://wp/./packages/viewport/build-module/@wordpress/viewport/src/listener.js","webpack://wp/external window [\"wp\",\"compose\"]","webpack://wp/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://wp/external window [\"wp\",\"element\"]","webpack://wp/./packages/viewport/build-module/@wordpress/viewport/src/with-viewport-match.js","webpack://wp/./packages/viewport/build-module/@wordpress/viewport/src/if-viewport-matches.js","webpack://wp/./packages/viewport/build-module/@wordpress/viewport/src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"lodash\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"data\"];","/**\n * Returns an action object used in signalling that viewport queries have been\n * updated. Values are specified as an object of breakpoint query keys where\n * value represents whether query matches.\n *\n * @param {Object} values Breakpoint query matches.\n *\n * @return {Object} Action object.\n */\nexport function setIsMatching( values ) {\n\treturn {\n\t\ttype: 'SET_IS_MATCHING',\n\t\tvalues,\n\t};\n}\n","/**\n * Returns true if the viewport matches the given query, or false otherwise.\n *\n * @param {Object} state Viewport state object.\n * @param {string} query Query string. Includes operator and breakpoint name,\n *                       space separated. Operator defaults to >=.\n *\n * @example\n *\n * ```js\n * isViewportMatch( state, '< huge' );\n * isViewPortMatch( state, 'medium' );\n * ```\n *\n * @return {boolean} Whether viewport matches query.\n */\nexport function isViewportMatch( state, query ) {\n\t// Default to `>=` if no operator is present.\n\tif ( query.indexOf( ' ' ) === -1 ) {\n\t\tquery = '>= ' + query;\n\t}\n\n\treturn !! state[ query ];\n}\n","/**\n * WordPress dependencies\n */\nimport { createReduxStore, register } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport reducer from './reducer';\nimport * as actions from './actions';\nimport * as selectors from './selectors';\n\nconst STORE_NAME = 'core/viewport';\n\n/**\n * Store definition for the viewport namespace.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/data/README.md#createReduxStore\n *\n * @type {Object}\n */\nexport const store = createReduxStore( STORE_NAME, {\n\treducer,\n\tactions,\n\tselectors,\n} );\n\nregister( store );\n","/**\n * Reducer returning the viewport state, as keys of breakpoint queries with\n * boolean value representing whether query is matched.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nfunction reducer( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'SET_IS_MATCHING':\n\t\t\treturn action.values;\n\t}\n\n\treturn state;\n}\n\nexport default reducer;\n","/**\n * External dependencies\n */\nimport { reduce, forEach, debounce, mapValues } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { dispatch } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store } from './store';\n\nconst addDimensionsEventListener = ( breakpoints, operators ) => {\n\t/**\n\t * Callback invoked when media query state should be updated. Is invoked a\n\t * maximum of one time per call stack.\n\t */\n\tconst setIsMatching = debounce(\n\t\t() => {\n\t\t\tconst values = mapValues( queries, ( query ) => query.matches );\n\t\t\tdispatch( store ).setIsMatching( values );\n\t\t},\n\t\t{ leading: true }\n\t);\n\n\t/**\n\t * Hash of breakpoint names with generated MediaQueryList for corresponding\n\t * media query.\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList\n\t *\n\t * @type {Object<string,MediaQueryList>}\n\t */\n\tconst queries = reduce(\n\t\tbreakpoints,\n\t\t( result, width, name ) => {\n\t\t\tforEach( operators, ( condition, operator ) => {\n\t\t\t\tconst list = window.matchMedia(\n\t\t\t\t\t`(${ condition }: ${ width }px)`\n\t\t\t\t);\n\t\t\t\tlist.addListener( setIsMatching );\n\n\t\t\t\tconst key = [ operator, name ].join( ' ' );\n\t\t\t\tresult[ key ] = list;\n\t\t\t} );\n\n\t\t\treturn result;\n\t\t},\n\t\t{}\n\t);\n\n\twindow.addEventListener( 'orientationchange', setIsMatching );\n\n\t// Set initial values.\n\tsetIsMatching();\n\tsetIsMatching.flush();\n};\n\nexport default addDimensionsEventListener;\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"compose\"];","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","/**\n * External dependencies\n */\nimport { mapValues } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tcreateHigherOrderComponent,\n\tpure,\n\tuseViewportMatch,\n} from '@wordpress/compose';\n\n/**\n * Higher-order component creator, creating a new component which renders with\n * the given prop names, where the value passed to the underlying component is\n * the result of the query assigned as the object's value.\n *\n * @see isViewportMatch\n *\n * @param {Object} queries Object of prop name to viewport query.\n *\n * @example\n *\n * ```jsx\n * function MyComponent( { isMobile } ) {\n * \treturn (\n * \t\t<div>Currently: { isMobile ? 'Mobile' : 'Not Mobile' }</div>\n * \t);\n * }\n *\n * MyComponent = withViewportMatch( { isMobile: '< small' } )( MyComponent );\n * ```\n *\n * @return {Function} Higher-order component.\n */\nconst withViewportMatch = ( queries ) => {\n\tconst useViewPortQueriesResult = () =>\n\t\tmapValues( queries, ( query ) => {\n\t\t\tlet [ operator, breakpointName ] = query.split( ' ' );\n\t\t\tif ( breakpointName === undefined ) {\n\t\t\t\tbreakpointName = operator;\n\t\t\t\toperator = '>=';\n\t\t\t}\n\t\t\t// Hooks should unconditionally execute in the same order,\n\t\t\t// we are respecting that as from the static query of the HOC we generate\n\t\t\t// a hook that calls other hooks always in the same order (because the query never changes).\n\t\t\t// eslint-disable-next-line react-hooks/rules-of-hooks\n\t\t\treturn useViewportMatch( breakpointName, operator );\n\t\t} );\n\treturn createHigherOrderComponent( ( WrappedComponent ) => {\n\t\treturn pure( ( props ) => {\n\t\t\tconst queriesResult = useViewPortQueriesResult();\n\t\t\treturn <WrappedComponent { ...props } { ...queriesResult } />;\n\t\t} );\n\t}, 'withViewportMatch' );\n};\n\nexport default withViewportMatch;\n","/**\n * WordPress dependencies\n */\nimport {\n\tifCondition,\n\tcompose,\n\tcreateHigherOrderComponent,\n} from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport withViewportMatch from './with-viewport-match';\n\n/**\n * Higher-order component creator, creating a new component which renders if\n * the viewport query is satisfied.\n *\n * @see withViewportMatches\n *\n * @param {string} query Viewport query.\n *\n * @example\n *\n * ```jsx\n * function MyMobileComponent() {\n * \treturn <div>I'm only rendered on mobile viewports!</div>;\n * }\n *\n * MyMobileComponent = ifViewportMatches( '< small' )( MyMobileComponent );\n * ```\n *\n * @return {Function} Higher-order component.\n */\nconst ifViewportMatches = ( query ) =>\n\tcreateHigherOrderComponent(\n\t\tcompose( [\n\t\t\twithViewportMatch( {\n\t\t\t\tisViewportMatch: query,\n\t\t\t} ),\n\t\t\tifCondition( ( props ) => props.isViewportMatch ),\n\t\t] ),\n\t\t'ifViewportMatches'\n\t);\n\nexport default ifViewportMatches;\n","/**\n * Internal dependencies\n */\nimport addDimensionsEventListener from './listener';\n\nexport { store } from './store';\nexport { default as ifViewportMatches } from './if-viewport-matches';\nexport { default as withViewportMatch } from './with-viewport-match';\n\n/**\n * Hash of breakpoint names with pixel width at which it becomes effective.\n *\n * @see _breakpoints.scss\n *\n * @type {Object}\n */\nconst BREAKPOINTS = {\n\thuge: 1440,\n\twide: 1280,\n\tlarge: 960,\n\tmedium: 782,\n\tsmall: 600,\n\tmobile: 480,\n};\n\n/**\n * Hash of query operators with corresponding condition for media query.\n *\n * @type {Object}\n */\nconst OPERATORS = {\n\t'<': 'max-width',\n\t'>=': 'min-width',\n};\n\naddDimensionsEventListener( BREAKPOINTS, OPERATORS );\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","window","setIsMatching","values","type","isViewportMatch","state","query","indexOf","store","createReduxStore","reducer","action","actions","selectors","register","_extends","assign","target","i","arguments","length","source","apply","this","queries","createHigherOrderComponent","WrappedComponent","pure","props","queriesResult","mapValues","operator","breakpointName","split","undefined","useViewportMatch","compose","withViewportMatch","ifCondition","breakpoints","operators","debounce","matches","dispatch","leading","reduce","result","width","name","forEach","condition","list","matchMedia","addListener","join","addEventListener","flush","addDimensionsEventListener","huge","wide","large","medium","small","mobile"],"sourceRoot":""}