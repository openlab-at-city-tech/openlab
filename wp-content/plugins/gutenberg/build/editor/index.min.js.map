{"version":3,"file":"./build/editor/index.min.js","mappings":"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","sources":["webpack://wp/./node_modules/autosize/dist/autosize.js","webpack://wp/./node_modules/computed-style/dist/computedStyle.commonjs.js","webpack://wp/./node_modules/deepmerge/dist/cjs.js","webpack://wp/./node_modules/fast-deep-equal/index.js","webpack://wp/./node_modules/line-height/lib/line-height.js","webpack://wp/./node_modules/prop-types/factoryWithThrowingShims.js","webpack://wp/./node_modules/prop-types/index.js","webpack://wp/./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack://wp/./node_modules/react-autosize-textarea/lib/TextareaAutosize.js","webpack://wp/./node_modules/react-autosize-textarea/lib/index.js","webpack://wp/./node_modules/remove-accents/index.js","webpack://wp/external window \"React\"","webpack://wp/webpack/bootstrap","webpack://wp/webpack/runtime/compat get default export","webpack://wp/webpack/runtime/define property getters","webpack://wp/webpack/runtime/hasOwnProperty shorthand","webpack://wp/webpack/runtime/make namespace object","webpack://wp/external window [\"wp\",\"blocks\"]","webpack://wp/external window [\"wp\",\"data\"]","webpack://wp/external window [\"wp\",\"privateApis\"]","../../packages/editor/src/lock-unlock.js","webpack://wp/external window [\"wp\",\"i18n\"]","webpack://wp/external window [\"wp\",\"blockEditor\"]","../../packages/editor/src/bindings/pattern-overrides.js","webpack://wp/external window [\"wp\",\"coreData\"]","../../packages/editor/src/store/defaults.js","../../packages/editor/src/dataviews/store/reducer.ts","../../packages/editor/src/store/reducer.js","webpack://wp/external window [\"wp\",\"date\"]","webpack://wp/external window [\"wp\",\"url\"]","webpack://wp/external window [\"wp\",\"deprecated\"]","webpack://wp/external window [\"wp\",\"element\"]","webpack://wp/external window [\"wp\",\"primitives\"]","webpack://wp/external window \"ReactJSXRuntime\"","../../packages/icons/src/library/layout.js","webpack://wp/external window [\"wp\",\"preferences\"]","../../packages/editor/src/store/constants.js","../../packages/icons/src/library/header.js","../../packages/icons/src/library/footer.js","../../packages/icons/src/library/sidebar.js","../../packages/icons/src/library/symbol-filled.js","../../packages/editor/src/utils/get-template-part-icon.js","../../packages/editor/src/store/selectors.js","webpack://wp/external window [\"wp\",\"a11y\"]","webpack://wp/external window [\"wp\",\"apiFetch\"]","webpack://wp/external window [\"wp\",\"notices\"]","webpack://wp/external window [\"wp\",\"hooks\"]","../../packages/editor/src/store/local-autosave.js","../../packages/editor/src/store/actions.js","../../packages/editor/src/store/utils/notice-builder.js","webpack://wp/external window [\"wp\",\"htmlEntities\"]","../../packages/editor/src/store/utils/is-template-revertable.js","../../packages/editor/src/dataviews/store/private-actions.ts","../../packages/editor/src/store/private-actions.js","../../packages/icons/src/library/symbol.js","../../packages/icons/src/library/navigation.js","../../packages/icons/src/library/page.js","../../packages/icons/src/library/verse.js","../../packages/editor/src/store/utils/get-filtered-template-parts.js","webpack://wp/./node_modules/memize/dist/index.js","../../packages/editor/src/dataviews/store/private-selectors.ts","../../packages/editor/src/store/private-selectors.js","../../packages/editor/src/store/index.js","../../packages/editor/src/bindings/post-meta.js","../../packages/editor/src/bindings/index.js","webpack://wp/external window [\"wp\",\"compose\"]","../../packages/editor/src/components/autocompleters/user.js","../../packages/editor/src/hooks/custom-sources-backwards-compatibility.js","../../packages/editor/src/hooks/default-autocompleters.js","webpack://wp/external window [\"wp\",\"mediaUtils\"]","../../packages/editor/src/hooks/media-upload.js","webpack://wp/external window [\"wp\",\"patterns\"]","../../packages/editor/src/hooks/pattern-overrides.js","webpack://wp/external window [\"wp\",\"keyboardShortcuts\"]","webpack://wp/./node_modules/clsx/dist/clsx.mjs","webpack://wp/external window [\"wp\",\"components\"]","../../packages/icons/src/library/check.js","../../packages/icons/src/library/star-filled.js","../../packages/icons/src/library/star-empty.js","webpack://wp/external window [\"wp\",\"viewport\"]","../../packages/icons/src/library/close-small.js","../../packages/interface/src/store/deprecated.js","../../packages/interface/src/store/actions.js","../../packages/interface/src/store/selectors.js","../../packages/interface/src/store/reducer.js","../../packages/interface/src/store/index.js","../../packages/interface/src/store/constants.js","webpack://wp/external window [\"wp\",\"plugins\"]","../../packages/interface/src/components/complementary-area-context/index.js","../../packages/interface/src/components/complementary-area-toggle/index.js","../../packages/interface/src/components/complementary-area-header/index.js","../../packages/interface/src/components/action-item/index.js","../../packages/interface/src/components/complementary-area-more-menu-item/index.js","../../packages/interface/src/components/pinned-items/index.js","../../packages/interface/src/components/complementary-area/index.js","../../packages/interface/src/components/fullscreen-mode/index.js","../../packages/interface/src/components/navigable-region/index.js","../../packages/interface/src/components/interface-skeleton/index.js","../../packages/editor/src/components/global-keyboard-shortcuts/index.js","../../packages/editor/src/components/autosave-monitor/index.js","../../packages/icons/src/library/chevron-right-small.js","../../packages/icons/src/library/chevron-left-small.js","webpack://wp/external window [\"wp\",\"keycodes\"]","webpack://wp/external window [\"wp\",\"commands\"]","../../packages/editor/src/components/document-bar/index.js","webpack://wp/external window [\"wp\",\"richText\"]","../../packages/editor/src/components/document-outline/item.js","../../packages/editor/src/components/document-outline/index.js","../../packages/editor/src/components/document-outline/check.js","../../packages/editor/src/components/global-keyboard-shortcuts/register-shortcuts.js","../../packages/icons/src/library/redo.js","../../packages/icons/src/library/undo.js","../../packages/editor/src/components/editor-history/redo.js","../../packages/editor/src/components/editor-history/undo.js","../../packages/editor/src/components/template-validation-notice/index.js","../../packages/editor/src/components/editor-notices/index.js","../../packages/editor/src/components/editor-snackbars/index.js","../../packages/editor/src/components/entities-saved-states/entity-record-item.js","../../packages/editor/src/components/entities-saved-states/entity-type-list.js","../../packages/editor/src/components/entities-saved-states/hooks/use-is-dirty.js","../../packages/editor/src/components/entities-saved-states/index.js","../../packages/editor/src/components/error-boundary/index.js","../../packages/editor/src/components/local-autosave-monitor/index.js","../../packages/editor/src/components/page-attributes/check.js","../../packages/editor/src/components/post-panel-row/index.js","../../packages/editor/src/components/post-type-support-check/index.js","../../packages/editor/src/components/page-attributes/order.js","../../packages/editor/src/utils/terms.js","../../packages/editor/src/components/page-attributes/parent.js","../../packages/editor/src/components/page-attributes/panel.js","../../packages/icons/src/library/add-template.js","../../packages/editor/src/components/post-template/create-new-template-modal.js","../../packages/editor/src/components/post-template/hooks.js","../../packages/editor/src/components/post-template/classic-theme.js","../../packages/editor/src/components/preferences-modal/enable-panel.js","webpack://wp/external window [\"wp\",\"warning\"]","../../packages/editor/src/components/preferences-modal/enable-plugin-document-setting-panel.js","../../packages/editor/src/components/plugin-document-setting-panel/index.js","../../packages/editor/src/components/block-settings-menu/plugin-block-settings-menu-item.js","../../packages/editor/src/components/plugin-more-menu-item/index.js","../../packages/editor/src/components/plugin-post-publish-panel/index.js","../../packages/editor/src/components/plugin-post-status-info/index.js","../../packages/editor/src/components/plugin-pre-publish-panel/index.js","../../packages/editor/src/components/plugin-sidebar/index.js","../../packages/editor/src/components/plugin-sidebar-more-menu-item/index.js","../../packages/editor/src/components/post-template/swap-template-button.js","../../packages/editor/src/components/post-template/reset-default-template.js","../../packages/editor/src/components/post-template/create-new-template.js","../../packages/editor/src/components/post-template/block-theme.js","../../packages/editor/src/components/post-template/panel.js","../../packages/editor/src/components/post-author/constants.js","../../packages/editor/src/components/post-author/hook.js","../../packages/editor/src/components/post-author/combobox.js","../../packages/editor/src/components/post-author/select.js","../../packages/editor/src/components/post-author/index.js","../../packages/editor/src/components/post-author/check.js","../../packages/editor/src/components/post-author/panel.js","../../packages/editor/src/components/post-comments/index.js","../../packages/editor/src/components/post-pingbacks/index.js","../../packages/editor/src/components/post-discussion/panel.js","../../packages/editor/src/components/post-excerpt/index.js","../../packages/editor/src/components/post-excerpt/check.js","../../packages/editor/src/components/post-excerpt/plugin.js","../../packages/editor/src/components/post-excerpt/panel.js","webpack://wp/external window [\"wp\",\"blob\"]","../../packages/editor/src/components/theme-support-check/index.js","../../packages/editor/src/components/post-featured-image/check.js","../../packages/editor/src/components/post-featured-image/index.js","../../packages/editor/src/components/post-featured-image/panel.js","../../packages/editor/src/components/post-format/check.js","../../packages/editor/src/components/post-format/index.js","../../packages/icons/src/library/backup.js","../../packages/editor/src/components/post-last-revision/check.js","../../packages/editor/src/components/post-last-revision/index.js","../../packages/editor/src/components/post-last-revision/panel.js","../../packages/editor/src/components/post-locked-modal/index.js","../../packages/editor/src/components/post-pending-status/check.js","../../packages/editor/src/components/post-pending-status/index.js","../../packages/editor/src/components/post-preview-button/index.js","../../packages/editor/src/components/post-publish-button/label.js","../../packages/editor/src/components/post-publish-button/index.js","../../packages/icons/src/library/wordpress.js","../../packages/editor/src/components/post-visibility/utils.js","../../packages/editor/src/components/post-visibility/index.js","../../packages/editor/src/components/post-visibility/label.js","webpack://wp/./node_modules/date-fns/toDate.mjs","webpack://wp/./node_modules/date-fns/startOfMonth.mjs","webpack://wp/./node_modules/date-fns/endOfMonth.mjs","webpack://wp/./node_modules/date-fns/constants.mjs","webpack://wp/./node_modules/date-fns/parseISO.mjs","../../packages/editor/src/components/post-schedule/index.js","../../packages/editor/src/components/post-schedule/label.js","../../packages/editor/src/components/post-taxonomies/most-used-terms.js","../../packages/editor/src/components/post-taxonomies/flat-term-selector.js","../../packages/editor/src/components/post-publish-panel/maybe-tags-panel.js","../../packages/editor/src/components/post-publish-panel/maybe-post-format-panel.js","../../packages/editor/src/components/post-taxonomies/hierarchical-term-selector.js","../../packages/editor/src/components/post-publish-panel/maybe-category-panel.js","../../packages/editor/src/components/post-publish-panel/maybe-upload-media.js","../../packages/editor/src/components/post-publish-panel/prepublish.js","../../packages/editor/src/components/post-publish-panel/postpublish.js","../../packages/editor/src/components/post-publish-panel/index.js","../../packages/icons/src/library/cloud-upload.js","../../packages/icons/src/icon/index.js","../../packages/icons/src/library/cloud.js","../../packages/editor/src/components/post-saved-state/index.js","../../packages/editor/src/components/post-schedule/check.js","../../packages/editor/src/components/post-schedule/panel.js","../../packages/editor/src/components/post-slug/check.js","../../packages/editor/src/components/post-slug/index.js","../../packages/editor/src/components/post-sticky/check.js","../../packages/editor/src/components/post-sticky/index.js","../../packages/editor/src/components/post-switch-to-draft-button/index.js","../../packages/editor/src/components/post-sync-status/index.js","../../packages/editor/src/components/post-taxonomies/index.js","../../packages/editor/src/components/post-taxonomies/check.js","../../packages/editor/src/components/post-taxonomies/panel.js","../../packages/editor/src/components/post-text-editor/index.js","webpack://wp/external window [\"wp\",\"dom\"]","../../packages/editor/src/components/post-title/constants.js","../../packages/editor/src/components/post-title/use-post-title-focus.js","../../packages/editor/src/components/post-title/use-post-title.js","../../packages/editor/src/components/post-title/index.js","../../packages/editor/src/components/post-title/post-title-raw.js","../../packages/editor/src/components/post-trash/index.js","../../packages/editor/src/components/post-trash/check.js","../../packages/icons/src/library/copy-small.js","../../packages/editor/src/components/post-url/index.js","../../packages/editor/src/components/post-url/check.js","../../packages/editor/src/components/post-url/label.js","../../packages/editor/src/components/post-url/panel.js","../../packages/editor/src/components/post-visibility/check.js","../../packages/icons/src/library/info.js","webpack://wp/external window [\"wp\",\"wordcount\"]","../../packages/editor/src/components/word-count/index.js","../../packages/editor/src/components/time-to-read/index.js","../../packages/editor/src/components/character-count/index.js","../../packages/editor/src/components/table-of-contents/panel.js","../../packages/editor/src/components/table-of-contents/index.js","../../packages/editor/src/components/unsaved-changes-warning/index.js","../../packages/editor/src/components/provider/with-registry-provider.js","../../packages/editor/src/components/media-categories/index.js","../../packages/editor/src/utils/media-upload/index.js","webpack://wp/./node_modules/is-plain-object/dist/is-plain-object.mjs","../../packages/editor/src/components/global-styles-provider/index.js","../../packages/editor/src/components/provider/use-block-editor-settings.js","../../packages/editor/src/components/provider/disable-non-page-content-blocks.js","../../packages/editor/src/components/provider/navigation-block-editing-mode.js","../../packages/editor/src/components/provider/use-hide-blocks-from-inserter.js","../../packages/icons/src/library/keyboard.js","../../packages/icons/src/library/list-view.js","../../packages/icons/src/library/code.js","../../packages/icons/src/library/drawer-left.js","../../packages/icons/src/library/drawer-right.js","../../packages/icons/src/library/block-default.js","../../packages/icons/src/library/format-list-bullets.js","../../packages/icons/src/library/external.js","../../packages/icons/src/library/edit.js","../../packages/icons/src/library/pencil.js","../../packages/editor/src/components/pattern-rename-modal/index.js","../../packages/editor/src/components/pattern-duplicate-modal/index.js","../../packages/editor/src/components/commands/index.js","../../packages/editor/src/components/block-removal-warnings/index.js","../../packages/editor/src/components/start-page-options/index.js","../../packages/editor/src/components/keyboard-shortcut-help-modal/config.js","../../packages/editor/src/components/keyboard-shortcut-help-modal/shortcut.js","../../packages/editor/src/components/keyboard-shortcut-help-modal/dynamic-shortcut.js","../../packages/editor/src/components/keyboard-shortcut-help-modal/index.js","../../packages/editor/src/components/block-settings-menu/content-only-settings-menu.js","../../packages/editor/src/components/start-template-options/index.js","../../packages/editor/src/components/template-part-menu-items/convert-to-regular.js","webpack://wp/./node_modules/tslib/tslib.es6.mjs","webpack://wp/./node_modules/lower-case/src/index.ts","webpack://wp/./node_modules/no-case/src/index.ts","webpack://wp/./node_modules/param-case/src/index.ts","webpack://wp/./node_modules/dot-case/src/index.ts","../../packages/editor/src/components/create-template-part-modal/utils.js","../../packages/editor/src/components/create-template-part-modal/index.js","../../packages/editor/src/components/template-part-menu-items/convert-to-template-part.js","../../packages/editor/src/components/template-part-menu-items/index.js","../../packages/editor/src/components/provider/index.js","webpack://wp/external window [\"wp\",\"serverSideRender\"]","../../packages/editor/src/components/deprecated.js","../../packages/editor/src/components/index.js","../../packages/editor/src/utils/url.js","../../packages/editor/src/components/editor-interface/content-slot-fill.js","../../packages/editor/src/components/header/back-button.js","../../packages/icons/src/library/next.js","../../packages/icons/src/library/previous.js","../../packages/editor/src/components/collapsible-block-toolbar/index.js","../../packages/icons/src/library/plus.js","../../packages/editor/src/components/document-tools/index.js","../../packages/icons/src/library/more-vertical.js","../../packages/editor/src/components/more-menu/copy-content-menu-item.js","../../packages/editor/src/components/mode-switcher/index.js","../../packages/editor/src/components/more-menu/tools-more-menu-group.js","../../packages/editor/src/components/more-menu/view-more-menu-group.js","../../packages/editor/src/components/more-menu/index.js","../../packages/editor/src/components/post-publish-button/post-publish-button-or-toggle.js","../../packages/editor/src/components/post-view-link/index.js","../../packages/icons/src/library/mobile.js","../../packages/icons/src/library/tablet.js","../../packages/icons/src/library/desktop.js","../../packages/editor/src/components/preview-dropdown/index.js","../../packages/editor/src/components/header/index.js","../../packages/editor/src/components/inserter-sidebar/index.js","../../packages/editor/src/components/list-view-sidebar/list-view-outline.js","../../packages/editor/src/components/list-view-sidebar/index.js","../../packages/editor/src/components/save-publish-panels/index.js","../../packages/editor/src/components/text-editor/index.js","../../packages/editor/src/components/visual-editor/edit-template-blocks-notification.js","../../packages/editor/src/components/resizable-editor/resize-handle.js","../../packages/editor/src/components/resizable-editor/index.js","../../packages/editor/src/hooks/use-select-nearest-editable-block.js","../../packages/editor/src/components/visual-editor/index.js","../../packages/editor/src/components/editor-interface/index.js","../../packages/editor/src/components/pattern-overrides-panel/index.js","../../packages/icons/src/library/trash.js","webpack://wp/./node_modules/client-zip/index.js","../../packages/editor/src/components/post-actions/export-pattern-action.js","../../packages/editor/src/components/post-actions/actions.js","../../packages/editor/src/components/post-actions/index.js","../../packages/editor/src/components/post-card-panel/index.js","../../packages/editor/src/components/post-content-information/index.js","../../packages/editor/src/components/post-format/panel.js","../../packages/editor/src/components/post-last-edited-panel/index.js","../../packages/editor/src/components/post-panel-section/index.js","../../packages/editor/src/components/post-status/index.js","../../packages/editor/src/components/blog-title/index.js","../../packages/editor/src/components/posts-per-page/index.js","../../packages/editor/src/components/site-discussion/index.js","../../packages/editor/src/components/template-areas/index.js","../../packages/editor/src/components/sidebar/post-summary.js","../../packages/editor/src/components/post-transform-panel/hooks.js","../../packages/editor/src/components/post-transform-panel/index.js","../../packages/editor/src/components/sidebar/constants.js","../../packages/editor/src/components/sidebar/header.js","../../packages/editor/src/components/template-content-panel/index.js","../../packages/editor/src/components/template-part-content-panel/index.js","../../packages/editor/src/components/provider/use-auto-switch-editor-sidebars.js","../../packages/editor/src/components/sidebar/index.js","../../packages/editor/src/components/preferences-modal/enable-publish-sidebar.js","../../packages/editor/src/components/block-manager/checklist.js","../../packages/editor/src/components/block-manager/category.js","../../packages/editor/src/components/block-manager/index.js","../../packages/editor/src/components/preferences-modal/index.js","../../packages/editor/src/private-apis.js","../../packages/editor/src/dataviews/api.js","../../packages/editor/src/components/editor/index.js"],"sourcesContent":["/*!\n\tautosize 4.0.2\n\tlicense: MIT\n\thttp://www.jacklmoore.com/autosize\n*/\n(function (global, factory) {\n\tif (typeof define === \"function\" && define.amd) {\n\t\tdefine(['module', 'exports'], factory);\n\t} else if (typeof exports !== \"undefined\") {\n\t\tfactory(module, exports);\n\t} else {\n\t\tvar mod = {\n\t\t\texports: {}\n\t\t};\n\t\tfactory(mod, mod.exports);\n\t\tglobal.autosize = mod.exports;\n\t}\n})(this, function (module, exports) {\n\t'use strict';\n\n\tvar map = typeof Map === \"function\" ? new Map() : function () {\n\t\tvar keys = [];\n\t\tvar values = [];\n\n\t\treturn {\n\t\t\thas: function has(key) {\n\t\t\t\treturn keys.indexOf(key) > -1;\n\t\t\t},\n\t\t\tget: function get(key) {\n\t\t\t\treturn values[keys.indexOf(key)];\n\t\t\t},\n\t\t\tset: function set(key, value) {\n\t\t\t\tif (keys.indexOf(key) === -1) {\n\t\t\t\t\tkeys.push(key);\n\t\t\t\t\tvalues.push(value);\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelete: function _delete(key) {\n\t\t\t\tvar index = keys.indexOf(key);\n\t\t\t\tif (index > -1) {\n\t\t\t\t\tkeys.splice(index, 1);\n\t\t\t\t\tvalues.splice(index, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}();\n\n\tvar createEvent = function createEvent(name) {\n\t\treturn new Event(name, { bubbles: true });\n\t};\n\ttry {\n\t\tnew Event('test');\n\t} catch (e) {\n\t\t// IE does not support `new Event()`\n\t\tcreateEvent = function createEvent(name) {\n\t\t\tvar evt = document.createEvent('Event');\n\t\t\tevt.initEvent(name, true, false);\n\t\t\treturn evt;\n\t\t};\n\t}\n\n\tfunction assign(ta) {\n\t\tif (!ta || !ta.nodeName || ta.nodeName !== 'TEXTAREA' || map.has(ta)) return;\n\n\t\tvar heightOffset = null;\n\t\tvar clientWidth = null;\n\t\tvar cachedHeight = null;\n\n\t\tfunction init() {\n\t\t\tvar style = window.getComputedStyle(ta, null);\n\n\t\t\tif (style.resize === 'vertical') {\n\t\t\t\tta.style.resize = 'none';\n\t\t\t} else if (style.resize === 'both') {\n\t\t\t\tta.style.resize = 'horizontal';\n\t\t\t}\n\n\t\t\tif (style.boxSizing === 'content-box') {\n\t\t\t\theightOffset = -(parseFloat(style.paddingTop) + parseFloat(style.paddingBottom));\n\t\t\t} else {\n\t\t\t\theightOffset = parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth);\n\t\t\t}\n\t\t\t// Fix when a textarea is not on document body and heightOffset is Not a Number\n\t\t\tif (isNaN(heightOffset)) {\n\t\t\t\theightOffset = 0;\n\t\t\t}\n\n\t\t\tupdate();\n\t\t}\n\n\t\tfunction changeOverflow(value) {\n\t\t\t{\n\t\t\t\t// Chrome/Safari-specific fix:\n\t\t\t\t// When the textarea y-overflow is hidden, Chrome/Safari do not reflow the text to account for the space\n\t\t\t\t// made available by removing the scrollbar. The following forces the necessary text reflow.\n\t\t\t\tvar width = ta.style.width;\n\t\t\t\tta.style.width = '0px';\n\t\t\t\t// Force reflow:\n\t\t\t\t/* jshint ignore:start */\n\t\t\t\tta.offsetWidth;\n\t\t\t\t/* jshint ignore:end */\n\t\t\t\tta.style.width = width;\n\t\t\t}\n\n\t\t\tta.style.overflowY = value;\n\t\t}\n\n\t\tfunction getParentOverflows(el) {\n\t\t\tvar arr = [];\n\n\t\t\twhile (el && el.parentNode && el.parentNode instanceof Element) {\n\t\t\t\tif (el.parentNode.scrollTop) {\n\t\t\t\t\tarr.push({\n\t\t\t\t\t\tnode: el.parentNode,\n\t\t\t\t\t\tscrollTop: el.parentNode.scrollTop\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tel = el.parentNode;\n\t\t\t}\n\n\t\t\treturn arr;\n\t\t}\n\n\t\tfunction resize() {\n\t\t\tif (ta.scrollHeight === 0) {\n\t\t\t\t// If the scrollHeight is 0, then the element probably has display:none or is detached from the DOM.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar overflows = getParentOverflows(ta);\n\t\t\tvar docTop = document.documentElement && document.documentElement.scrollTop; // Needed for Mobile IE (ticket #240)\n\n\t\t\tta.style.height = '';\n\t\t\tta.style.height = ta.scrollHeight + heightOffset + 'px';\n\n\t\t\t// used to check if an update is actually necessary on window.resize\n\t\t\tclientWidth = ta.clientWidth;\n\n\t\t\t// prevents scroll-position jumping\n\t\t\toverflows.forEach(function (el) {\n\t\t\t\tel.node.scrollTop = el.scrollTop;\n\t\t\t});\n\n\t\t\tif (docTop) {\n\t\t\t\tdocument.documentElement.scrollTop = docTop;\n\t\t\t}\n\t\t}\n\n\t\tfunction update() {\n\t\t\tresize();\n\n\t\t\tvar styleHeight = Math.round(parseFloat(ta.style.height));\n\t\t\tvar computed = window.getComputedStyle(ta, null);\n\n\t\t\t// Using offsetHeight as a replacement for computed.height in IE, because IE does not account use of border-box\n\t\t\tvar actualHeight = computed.boxSizing === 'content-box' ? Math.round(parseFloat(computed.height)) : ta.offsetHeight;\n\n\t\t\t// The actual height not matching the style height (set via the resize method) indicates that \n\t\t\t// the max-height has been exceeded, in which case the overflow should be allowed.\n\t\t\tif (actualHeight < styleHeight) {\n\t\t\t\tif (computed.overflowY === 'hidden') {\n\t\t\t\t\tchangeOverflow('scroll');\n\t\t\t\t\tresize();\n\t\t\t\t\tactualHeight = computed.boxSizing === 'content-box' ? Math.round(parseFloat(window.getComputedStyle(ta, null).height)) : ta.offsetHeight;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Normally keep overflow set to hidden, to avoid flash of scrollbar as the textarea expands.\n\t\t\t\tif (computed.overflowY !== 'hidden') {\n\t\t\t\t\tchangeOverflow('hidden');\n\t\t\t\t\tresize();\n\t\t\t\t\tactualHeight = computed.boxSizing === 'content-box' ? Math.round(parseFloat(window.getComputedStyle(ta, null).height)) : ta.offsetHeight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (cachedHeight !== actualHeight) {\n\t\t\t\tcachedHeight = actualHeight;\n\t\t\t\tvar evt = createEvent('autosize:resized');\n\t\t\t\ttry {\n\t\t\t\t\tta.dispatchEvent(evt);\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Firefox will throw an error on dispatchEvent for a detached element\n\t\t\t\t\t// https://bugzilla.mozilla.org/show_bug.cgi?id=889376\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar pageResize = function pageResize() {\n\t\t\tif (ta.clientWidth !== clientWidth) {\n\t\t\t\tupdate();\n\t\t\t}\n\t\t};\n\n\t\tvar destroy = function (style) {\n\t\t\twindow.removeEventListener('resize', pageResize, false);\n\t\t\tta.removeEventListener('input', update, false);\n\t\t\tta.removeEventListener('keyup', update, false);\n\t\t\tta.removeEventListener('autosize:destroy', destroy, false);\n\t\t\tta.removeEventListener('autosize:update', update, false);\n\n\t\t\tObject.keys(style).forEach(function (key) {\n\t\t\t\tta.style[key] = style[key];\n\t\t\t});\n\n\t\t\tmap.delete(ta);\n\t\t}.bind(ta, {\n\t\t\theight: ta.style.height,\n\t\t\tresize: ta.style.resize,\n\t\t\toverflowY: ta.style.overflowY,\n\t\t\toverflowX: ta.style.overflowX,\n\t\t\twordWrap: ta.style.wordWrap\n\t\t});\n\n\t\tta.addEventListener('autosize:destroy', destroy, false);\n\n\t\t// IE9 does not fire onpropertychange or oninput for deletions,\n\t\t// so binding to onkeyup to catch most of those events.\n\t\t// There is no way that I know of to detect something like 'cut' in IE9.\n\t\tif ('onpropertychange' in ta && 'oninput' in ta) {\n\t\t\tta.addEventListener('keyup', update, false);\n\t\t}\n\n\t\twindow.addEventListener('resize', pageResize, false);\n\t\tta.addEventListener('input', update, false);\n\t\tta.addEventListener('autosize:update', update, false);\n\t\tta.style.overflowX = 'hidden';\n\t\tta.style.wordWrap = 'break-word';\n\n\t\tmap.set(ta, {\n\t\t\tdestroy: destroy,\n\t\t\tupdate: update\n\t\t});\n\n\t\tinit();\n\t}\n\n\tfunction destroy(ta) {\n\t\tvar methods = map.get(ta);\n\t\tif (methods) {\n\t\t\tmethods.destroy();\n\t\t}\n\t}\n\n\tfunction update(ta) {\n\t\tvar methods = map.get(ta);\n\t\tif (methods) {\n\t\t\tmethods.update();\n\t\t}\n\t}\n\n\tvar autosize = null;\n\n\t// Do nothing in Node.js environment and IE8 (or lower)\n\tif (typeof window === 'undefined' || typeof window.getComputedStyle !== 'function') {\n\t\tautosize = function autosize(el) {\n\t\t\treturn el;\n\t\t};\n\t\tautosize.destroy = function (el) {\n\t\t\treturn el;\n\t\t};\n\t\tautosize.update = function (el) {\n\t\t\treturn el;\n\t\t};\n\t} else {\n\t\tautosize = function autosize(el, options) {\n\t\t\tif (el) {\n\t\t\t\tArray.prototype.forEach.call(el.length ? el : [el], function (x) {\n\t\t\t\t\treturn assign(x, options);\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn el;\n\t\t};\n\t\tautosize.destroy = function (el) {\n\t\t\tif (el) {\n\t\t\t\tArray.prototype.forEach.call(el.length ? el : [el], destroy);\n\t\t\t}\n\t\t\treturn el;\n\t\t};\n\t\tautosize.update = function (el) {\n\t\t\tif (el) {\n\t\t\t\tArray.prototype.forEach.call(el.length ? el : [el], update);\n\t\t\t}\n\t\t\treturn el;\n\t\t};\n\t}\n\n\texports.default = autosize;\n\tmodule.exports = exports['default'];\n});","// This code has been refactored for 140 bytes\n// You can see the original here: https://github.com/twolfson/computedStyle/blob/04cd1da2e30fa45844f95f5cb1ac898e9b9ef050/lib/computedStyle.js\nvar computedStyle = function (el, prop, getComputedStyle) {\n  getComputedStyle = window.getComputedStyle;\n\n  // In one fell swoop\n  return (\n    // If we have getComputedStyle\n    getComputedStyle ?\n      // Query it\n      // TODO: From CSS-Query notes, we might need (node, null) for FF\n      getComputedStyle(el) :\n\n    // Otherwise, we are in IE and use currentStyle\n      el.currentStyle\n  )[\n    // Switch to camelCase for CSSOM\n    // DEV: Grabbed from jQuery\n    // https://github.com/jquery/jquery/blob/1.9-stable/src/css.js#L191-L194\n    // https://github.com/jquery/jquery/blob/1.9-stable/src/core.js#L593-L597\n    prop.replace(/-(\\w)/gi, function (word, letter) {\n      return letter.toUpperCase();\n    })\n  ];\n};\n\nmodule.exports = computedStyle;\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn Object.propertyIsEnumerable.call(target, symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","// Load in dependencies\nvar computedStyle = require('computed-style');\n\n/**\n * Calculate the `line-height` of a given node\n * @param {HTMLElement} node Element to calculate line height of. Must be in the DOM.\n * @returns {Number} `line-height` of the element in pixels\n */\nfunction lineHeight(node) {\n  // Grab the line-height via style\n  var lnHeightStr = computedStyle(node, 'line-height');\n  var lnHeight = parseFloat(lnHeightStr, 10);\n\n  // If the lineHeight did not contain a unit (i.e. it was numeric), convert it to ems (e.g. '2.3' === '2.3em')\n  if (lnHeightStr === lnHeight + '') {\n    // Save the old lineHeight style and update the em unit to the element\n    var _lnHeightStyle = node.style.lineHeight;\n    node.style.lineHeight = lnHeightStr + 'em';\n\n    // Calculate the em based height\n    lnHeightStr = computedStyle(node, 'line-height');\n    lnHeight = parseFloat(lnHeightStr, 10);\n\n    // Revert the lineHeight style\n    if (_lnHeightStyle) {\n      node.style.lineHeight = _lnHeightStyle;\n    } else {\n      delete node.style.lineHeight;\n    }\n  }\n\n  // If the lineHeight is in `pt`, convert it to pixels (4px for 3pt)\n  // DEV: `em` units are converted to `pt` in IE6\n  // Conversion ratio from https://developer.mozilla.org/en-US/docs/Web/CSS/length\n  if (lnHeightStr.indexOf('pt') !== -1) {\n    lnHeight *= 4;\n    lnHeight /= 3;\n  // Otherwise, if the lineHeight is in `mm`, convert it to pixels (96px for 25.4mm)\n  } else if (lnHeightStr.indexOf('mm') !== -1) {\n    lnHeight *= 96;\n    lnHeight /= 25.4;\n  // Otherwise, if the lineHeight is in `cm`, convert it to pixels (96px for 2.54cm)\n  } else if (lnHeightStr.indexOf('cm') !== -1) {\n    lnHeight *= 96;\n    lnHeight /= 2.54;\n  // Otherwise, if the lineHeight is in `in`, convert it to pixels (96px for 1in)\n  } else if (lnHeightStr.indexOf('in') !== -1) {\n    lnHeight *= 96;\n  // Otherwise, if the lineHeight is in `pc`, convert it to pixels (12pt for 1pc)\n  } else if (lnHeightStr.indexOf('pc') !== -1) {\n    lnHeight *= 16;\n  }\n\n  // Continue our computation\n  lnHeight = Math.round(lnHeight);\n\n  // If the line-height is \"normal\", calculate by font-size\n  if (lnHeightStr === 'normal') {\n    // Create a temporary node\n    var nodeName = node.nodeName;\n    var _node = document.createElement(nodeName);\n    _node.innerHTML = '&nbsp;';\n\n    // If we have a text area, reset it to only 1 row\n    // https://github.com/twolfson/line-height/issues/4\n    if (nodeName.toUpperCase() === 'TEXTAREA') {\n      _node.setAttribute('rows', '1');\n    }\n\n    // Set the font-size of the element\n    var fontSizeStr = computedStyle(node, 'font-size');\n    _node.style.fontSize = fontSizeStr;\n\n    // Remove default padding/border which can affect offset height\n    // https://github.com/twolfson/line-height/issues/4\n    // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetHeight\n    _node.style.padding = '0px';\n    _node.style.border = '0px';\n\n    // Append it to the body\n    var body = document.body;\n    body.appendChild(_node);\n\n    // Assume the line height of the element is the height\n    var height = _node.offsetHeight;\n    lnHeight = height;\n\n    // Remove our child from the DOM\n    body.removeChild(_node);\n  }\n\n  // Return the calculated height\n  return lnHeight;\n}\n\n// Export lineHeight\nmodule.exports = lineHeight;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nexports.__esModule = true;\nvar React = require(\"react\");\nvar PropTypes = require(\"prop-types\");\nvar autosize = require(\"autosize\");\nvar _getLineHeight = require(\"line-height\");\nvar getLineHeight = _getLineHeight;\nvar RESIZED = \"autosize:resized\";\n/**\n * A light replacement for built-in textarea component\n * which automaticaly adjusts its height to match the content\n */\nvar TextareaAutosizeClass = /** @class */ (function (_super) {\n    __extends(TextareaAutosizeClass, _super);\n    function TextareaAutosizeClass() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            lineHeight: null\n        };\n        _this.textarea = null;\n        _this.onResize = function (e) {\n            if (_this.props.onResize) {\n                _this.props.onResize(e);\n            }\n        };\n        _this.updateLineHeight = function () {\n            if (_this.textarea) {\n                _this.setState({\n                    lineHeight: getLineHeight(_this.textarea)\n                });\n            }\n        };\n        _this.onChange = function (e) {\n            var onChange = _this.props.onChange;\n            _this.currentValue = e.currentTarget.value;\n            onChange && onChange(e);\n        };\n        return _this;\n    }\n    TextareaAutosizeClass.prototype.componentDidMount = function () {\n        var _this = this;\n        var _a = this.props, maxRows = _a.maxRows, async = _a.async;\n        if (typeof maxRows === \"number\") {\n            this.updateLineHeight();\n        }\n        if (typeof maxRows === \"number\" || async) {\n            /*\n              the defer is needed to:\n                - force \"autosize\" to activate the scrollbar when this.props.maxRows is passed\n                - support StyledComponents (see #71)\n            */\n            setTimeout(function () { return _this.textarea && autosize(_this.textarea); });\n        }\n        else {\n            this.textarea && autosize(this.textarea);\n        }\n        if (this.textarea) {\n            this.textarea.addEventListener(RESIZED, this.onResize);\n        }\n    };\n    TextareaAutosizeClass.prototype.componentWillUnmount = function () {\n        if (this.textarea) {\n            this.textarea.removeEventListener(RESIZED, this.onResize);\n            autosize.destroy(this.textarea);\n        }\n    };\n    TextareaAutosizeClass.prototype.render = function () {\n        var _this = this;\n        var _a = this, _b = _a.props, onResize = _b.onResize, maxRows = _b.maxRows, onChange = _b.onChange, style = _b.style, innerRef = _b.innerRef, children = _b.children, props = __rest(_b, [\"onResize\", \"maxRows\", \"onChange\", \"style\", \"innerRef\", \"children\"]), lineHeight = _a.state.lineHeight;\n        var maxHeight = maxRows && lineHeight ? lineHeight * maxRows : null;\n        return (React.createElement(\"textarea\", __assign({}, props, { onChange: this.onChange, style: maxHeight ? __assign({}, style, { maxHeight: maxHeight }) : style, ref: function (element) {\n                _this.textarea = element;\n                if (typeof _this.props.innerRef === 'function') {\n                    _this.props.innerRef(element);\n                }\n                else if (_this.props.innerRef) {\n                    _this.props.innerRef.current = element;\n                }\n            } }), children));\n    };\n    TextareaAutosizeClass.prototype.componentDidUpdate = function () {\n        this.textarea && autosize.update(this.textarea);\n    };\n    TextareaAutosizeClass.defaultProps = {\n        rows: 1,\n        async: false\n    };\n    TextareaAutosizeClass.propTypes = {\n        rows: PropTypes.number,\n        maxRows: PropTypes.number,\n        onResize: PropTypes.func,\n        innerRef: PropTypes.any,\n        async: PropTypes.bool\n    };\n    return TextareaAutosizeClass;\n}(React.Component));\nexports.TextareaAutosize = React.forwardRef(function (props, ref) {\n    return React.createElement(TextareaAutosizeClass, __assign({}, props, { innerRef: ref }));\n});\n","\"use strict\";\nexports.__esModule = true;\nvar TextareaAutosize_1 = require(\"./TextareaAutosize\");\nexports[\"default\"] = TextareaAutosize_1.TextareaAutosize;\n","var characterMap = {\n\t\"À\": \"A\",\n\t\"Á\": \"A\",\n\t\"Â\": \"A\",\n\t\"Ã\": \"A\",\n\t\"Ä\": \"A\",\n\t\"Å\": \"A\",\n\t\"Ấ\": \"A\",\n\t\"Ắ\": \"A\",\n\t\"Ẳ\": \"A\",\n\t\"Ẵ\": \"A\",\n\t\"Ặ\": \"A\",\n\t\"Æ\": \"AE\",\n\t\"Ầ\": \"A\",\n\t\"Ằ\": \"A\",\n\t\"Ȃ\": \"A\",\n\t\"Ả\": \"A\",\n\t\"Ạ\": \"A\",\n\t\"Ẩ\": \"A\",\n\t\"Ẫ\": \"A\",\n\t\"Ậ\": \"A\",\n\t\"Ç\": \"C\",\n\t\"Ḉ\": \"C\",\n\t\"È\": \"E\",\n\t\"É\": \"E\",\n\t\"Ê\": \"E\",\n\t\"Ë\": \"E\",\n\t\"Ế\": \"E\",\n\t\"Ḗ\": \"E\",\n\t\"Ề\": \"E\",\n\t\"Ḕ\": \"E\",\n\t\"Ḝ\": \"E\",\n\t\"Ȇ\": \"E\",\n\t\"Ẻ\": \"E\",\n\t\"Ẽ\": \"E\",\n\t\"Ẹ\": \"E\",\n\t\"Ể\": \"E\",\n\t\"Ễ\": \"E\",\n\t\"Ệ\": \"E\",\n\t\"Ì\": \"I\",\n\t\"Í\": \"I\",\n\t\"Î\": \"I\",\n\t\"Ï\": \"I\",\n\t\"Ḯ\": \"I\",\n\t\"Ȋ\": \"I\",\n\t\"Ỉ\": \"I\",\n\t\"Ị\": \"I\",\n\t\"Ð\": \"D\",\n\t\"Ñ\": \"N\",\n\t\"Ò\": \"O\",\n\t\"Ó\": \"O\",\n\t\"Ô\": \"O\",\n\t\"Õ\": \"O\",\n\t\"Ö\": \"O\",\n\t\"Ø\": \"O\",\n\t\"Ố\": \"O\",\n\t\"Ṍ\": \"O\",\n\t\"Ṓ\": \"O\",\n\t\"Ȏ\": \"O\",\n\t\"Ỏ\": \"O\",\n\t\"Ọ\": \"O\",\n\t\"Ổ\": \"O\",\n\t\"Ỗ\": \"O\",\n\t\"Ộ\": \"O\",\n\t\"Ờ\": \"O\",\n\t\"Ở\": \"O\",\n\t\"Ỡ\": \"O\",\n\t\"Ớ\": \"O\",\n\t\"Ợ\": \"O\",\n\t\"Ù\": \"U\",\n\t\"Ú\": \"U\",\n\t\"Û\": \"U\",\n\t\"Ü\": \"U\",\n\t\"Ủ\": \"U\",\n\t\"Ụ\": \"U\",\n\t\"Ử\": \"U\",\n\t\"Ữ\": \"U\",\n\t\"Ự\": \"U\",\n\t\"Ý\": \"Y\",\n\t\"à\": \"a\",\n\t\"á\": \"a\",\n\t\"â\": \"a\",\n\t\"ã\": \"a\",\n\t\"ä\": \"a\",\n\t\"å\": \"a\",\n\t\"ấ\": \"a\",\n\t\"ắ\": \"a\",\n\t\"ẳ\": \"a\",\n\t\"ẵ\": \"a\",\n\t\"ặ\": \"a\",\n\t\"æ\": \"ae\",\n\t\"ầ\": \"a\",\n\t\"ằ\": \"a\",\n\t\"ȃ\": \"a\",\n\t\"ả\": \"a\",\n\t\"ạ\": \"a\",\n\t\"ẩ\": \"a\",\n\t\"ẫ\": \"a\",\n\t\"ậ\": \"a\",\n\t\"ç\": \"c\",\n\t\"ḉ\": \"c\",\n\t\"è\": \"e\",\n\t\"é\": \"e\",\n\t\"ê\": \"e\",\n\t\"ë\": \"e\",\n\t\"ế\": \"e\",\n\t\"ḗ\": \"e\",\n\t\"ề\": \"e\",\n\t\"ḕ\": \"e\",\n\t\"ḝ\": \"e\",\n\t\"ȇ\": \"e\",\n\t\"ẻ\": \"e\",\n\t\"ẽ\": \"e\",\n\t\"ẹ\": \"e\",\n\t\"ể\": \"e\",\n\t\"ễ\": \"e\",\n\t\"ệ\": \"e\",\n\t\"ì\": \"i\",\n\t\"í\": \"i\",\n\t\"î\": \"i\",\n\t\"ï\": \"i\",\n\t\"ḯ\": \"i\",\n\t\"ȋ\": \"i\",\n\t\"ỉ\": \"i\",\n\t\"ị\": \"i\",\n\t\"ð\": \"d\",\n\t\"ñ\": \"n\",\n\t\"ò\": \"o\",\n\t\"ó\": \"o\",\n\t\"ô\": \"o\",\n\t\"õ\": \"o\",\n\t\"ö\": \"o\",\n\t\"ø\": \"o\",\n\t\"ố\": \"o\",\n\t\"ṍ\": \"o\",\n\t\"ṓ\": \"o\",\n\t\"ȏ\": \"o\",\n\t\"ỏ\": \"o\",\n\t\"ọ\": \"o\",\n\t\"ổ\": \"o\",\n\t\"ỗ\": \"o\",\n\t\"ộ\": \"o\",\n\t\"ờ\": \"o\",\n\t\"ở\": \"o\",\n\t\"ỡ\": \"o\",\n\t\"ớ\": \"o\",\n\t\"ợ\": \"o\",\n\t\"ù\": \"u\",\n\t\"ú\": \"u\",\n\t\"û\": \"u\",\n\t\"ü\": \"u\",\n\t\"ủ\": \"u\",\n\t\"ụ\": \"u\",\n\t\"ử\": \"u\",\n\t\"ữ\": \"u\",\n\t\"ự\": \"u\",\n\t\"ý\": \"y\",\n\t\"ÿ\": \"y\",\n\t\"Ā\": \"A\",\n\t\"ā\": \"a\",\n\t\"Ă\": \"A\",\n\t\"ă\": \"a\",\n\t\"Ą\": \"A\",\n\t\"ą\": \"a\",\n\t\"Ć\": \"C\",\n\t\"ć\": \"c\",\n\t\"Ĉ\": \"C\",\n\t\"ĉ\": \"c\",\n\t\"Ċ\": \"C\",\n\t\"ċ\": \"c\",\n\t\"Č\": \"C\",\n\t\"č\": \"c\",\n\t\"C̆\": \"C\",\n\t\"c̆\": \"c\",\n\t\"Ď\": \"D\",\n\t\"ď\": \"d\",\n\t\"Đ\": \"D\",\n\t\"đ\": \"d\",\n\t\"Ē\": \"E\",\n\t\"ē\": \"e\",\n\t\"Ĕ\": \"E\",\n\t\"ĕ\": \"e\",\n\t\"Ė\": \"E\",\n\t\"ė\": \"e\",\n\t\"Ę\": \"E\",\n\t\"ę\": \"e\",\n\t\"Ě\": \"E\",\n\t\"ě\": \"e\",\n\t\"Ĝ\": \"G\",\n\t\"Ǵ\": \"G\",\n\t\"ĝ\": \"g\",\n\t\"ǵ\": \"g\",\n\t\"Ğ\": \"G\",\n\t\"ğ\": \"g\",\n\t\"Ġ\": \"G\",\n\t\"ġ\": \"g\",\n\t\"Ģ\": \"G\",\n\t\"ģ\": \"g\",\n\t\"Ĥ\": \"H\",\n\t\"ĥ\": \"h\",\n\t\"Ħ\": \"H\",\n\t\"ħ\": \"h\",\n\t\"Ḫ\": \"H\",\n\t\"ḫ\": \"h\",\n\t\"Ĩ\": \"I\",\n\t\"ĩ\": \"i\",\n\t\"Ī\": \"I\",\n\t\"ī\": \"i\",\n\t\"Ĭ\": \"I\",\n\t\"ĭ\": \"i\",\n\t\"Į\": \"I\",\n\t\"į\": \"i\",\n\t\"İ\": \"I\",\n\t\"ı\": \"i\",\n\t\"Ĳ\": \"IJ\",\n\t\"ĳ\": \"ij\",\n\t\"Ĵ\": \"J\",\n\t\"ĵ\": \"j\",\n\t\"Ķ\": \"K\",\n\t\"ķ\": \"k\",\n\t\"Ḱ\": \"K\",\n\t\"ḱ\": \"k\",\n\t\"K̆\": \"K\",\n\t\"k̆\": \"k\",\n\t\"Ĺ\": \"L\",\n\t\"ĺ\": \"l\",\n\t\"Ļ\": \"L\",\n\t\"ļ\": \"l\",\n\t\"Ľ\": \"L\",\n\t\"ľ\": \"l\",\n\t\"Ŀ\": \"L\",\n\t\"ŀ\": \"l\",\n\t\"Ł\": \"l\",\n\t\"ł\": \"l\",\n\t\"Ḿ\": \"M\",\n\t\"ḿ\": \"m\",\n\t\"M̆\": \"M\",\n\t\"m̆\": \"m\",\n\t\"Ń\": \"N\",\n\t\"ń\": \"n\",\n\t\"Ņ\": \"N\",\n\t\"ņ\": \"n\",\n\t\"Ň\": \"N\",\n\t\"ň\": \"n\",\n\t\"ŉ\": \"n\",\n\t\"N̆\": \"N\",\n\t\"n̆\": \"n\",\n\t\"Ō\": \"O\",\n\t\"ō\": \"o\",\n\t\"Ŏ\": \"O\",\n\t\"ŏ\": \"o\",\n\t\"Ő\": \"O\",\n\t\"ő\": \"o\",\n\t\"Œ\": \"OE\",\n\t\"œ\": \"oe\",\n\t\"P̆\": \"P\",\n\t\"p̆\": \"p\",\n\t\"Ŕ\": \"R\",\n\t\"ŕ\": \"r\",\n\t\"Ŗ\": \"R\",\n\t\"ŗ\": \"r\",\n\t\"Ř\": \"R\",\n\t\"ř\": \"r\",\n\t\"R̆\": \"R\",\n\t\"r̆\": \"r\",\n\t\"Ȓ\": \"R\",\n\t\"ȓ\": \"r\",\n\t\"Ś\": \"S\",\n\t\"ś\": \"s\",\n\t\"Ŝ\": \"S\",\n\t\"ŝ\": \"s\",\n\t\"Ş\": \"S\",\n\t\"Ș\": \"S\",\n\t\"ș\": \"s\",\n\t\"ş\": \"s\",\n\t\"Š\": \"S\",\n\t\"š\": \"s\",\n\t\"Ţ\": \"T\",\n\t\"ţ\": \"t\",\n\t\"ț\": \"t\",\n\t\"Ț\": \"T\",\n\t\"Ť\": \"T\",\n\t\"ť\": \"t\",\n\t\"Ŧ\": \"T\",\n\t\"ŧ\": \"t\",\n\t\"T̆\": \"T\",\n\t\"t̆\": \"t\",\n\t\"Ũ\": \"U\",\n\t\"ũ\": \"u\",\n\t\"Ū\": \"U\",\n\t\"ū\": \"u\",\n\t\"Ŭ\": \"U\",\n\t\"ŭ\": \"u\",\n\t\"Ů\": \"U\",\n\t\"ů\": \"u\",\n\t\"Ű\": \"U\",\n\t\"ű\": \"u\",\n\t\"Ų\": \"U\",\n\t\"ų\": \"u\",\n\t\"Ȗ\": \"U\",\n\t\"ȗ\": \"u\",\n\t\"V̆\": \"V\",\n\t\"v̆\": \"v\",\n\t\"Ŵ\": \"W\",\n\t\"ŵ\": \"w\",\n\t\"Ẃ\": \"W\",\n\t\"ẃ\": \"w\",\n\t\"X̆\": \"X\",\n\t\"x̆\": \"x\",\n\t\"Ŷ\": \"Y\",\n\t\"ŷ\": \"y\",\n\t\"Ÿ\": \"Y\",\n\t\"Y̆\": \"Y\",\n\t\"y̆\": \"y\",\n\t\"Ź\": \"Z\",\n\t\"ź\": \"z\",\n\t\"Ż\": \"Z\",\n\t\"ż\": \"z\",\n\t\"Ž\": \"Z\",\n\t\"ž\": \"z\",\n\t\"ſ\": \"s\",\n\t\"ƒ\": \"f\",\n\t\"Ơ\": \"O\",\n\t\"ơ\": \"o\",\n\t\"Ư\": \"U\",\n\t\"ư\": \"u\",\n\t\"Ǎ\": \"A\",\n\t\"ǎ\": \"a\",\n\t\"Ǐ\": \"I\",\n\t\"ǐ\": \"i\",\n\t\"Ǒ\": \"O\",\n\t\"ǒ\": \"o\",\n\t\"Ǔ\": \"U\",\n\t\"ǔ\": \"u\",\n\t\"Ǖ\": \"U\",\n\t\"ǖ\": \"u\",\n\t\"Ǘ\": \"U\",\n\t\"ǘ\": \"u\",\n\t\"Ǚ\": \"U\",\n\t\"ǚ\": \"u\",\n\t\"Ǜ\": \"U\",\n\t\"ǜ\": \"u\",\n\t\"Ứ\": \"U\",\n\t\"ứ\": \"u\",\n\t\"Ṹ\": \"U\",\n\t\"ṹ\": \"u\",\n\t\"Ǻ\": \"A\",\n\t\"ǻ\": \"a\",\n\t\"Ǽ\": \"AE\",\n\t\"ǽ\": \"ae\",\n\t\"Ǿ\": \"O\",\n\t\"ǿ\": \"o\",\n\t\"Þ\": \"TH\",\n\t\"þ\": \"th\",\n\t\"Ṕ\": \"P\",\n\t\"ṕ\": \"p\",\n\t\"Ṥ\": \"S\",\n\t\"ṥ\": \"s\",\n\t\"X́\": \"X\",\n\t\"x́\": \"x\",\n\t\"Ѓ\": \"Г\",\n\t\"ѓ\": \"г\",\n\t\"Ќ\": \"К\",\n\t\"ќ\": \"к\",\n\t\"A̋\": \"A\",\n\t\"a̋\": \"a\",\n\t\"E̋\": \"E\",\n\t\"e̋\": \"e\",\n\t\"I̋\": \"I\",\n\t\"i̋\": \"i\",\n\t\"Ǹ\": \"N\",\n\t\"ǹ\": \"n\",\n\t\"Ồ\": \"O\",\n\t\"ồ\": \"o\",\n\t\"Ṑ\": \"O\",\n\t\"ṑ\": \"o\",\n\t\"Ừ\": \"U\",\n\t\"ừ\": \"u\",\n\t\"Ẁ\": \"W\",\n\t\"ẁ\": \"w\",\n\t\"Ỳ\": \"Y\",\n\t\"ỳ\": \"y\",\n\t\"Ȁ\": \"A\",\n\t\"ȁ\": \"a\",\n\t\"Ȅ\": \"E\",\n\t\"ȅ\": \"e\",\n\t\"Ȉ\": \"I\",\n\t\"ȉ\": \"i\",\n\t\"Ȍ\": \"O\",\n\t\"ȍ\": \"o\",\n\t\"Ȑ\": \"R\",\n\t\"ȑ\": \"r\",\n\t\"Ȕ\": \"U\",\n\t\"ȕ\": \"u\",\n\t\"B̌\": \"B\",\n\t\"b̌\": \"b\",\n\t\"Č̣\": \"C\",\n\t\"č̣\": \"c\",\n\t\"Ê̌\": \"E\",\n\t\"ê̌\": \"e\",\n\t\"F̌\": \"F\",\n\t\"f̌\": \"f\",\n\t\"Ǧ\": \"G\",\n\t\"ǧ\": \"g\",\n\t\"Ȟ\": \"H\",\n\t\"ȟ\": \"h\",\n\t\"J̌\": \"J\",\n\t\"ǰ\": \"j\",\n\t\"Ǩ\": \"K\",\n\t\"ǩ\": \"k\",\n\t\"M̌\": \"M\",\n\t\"m̌\": \"m\",\n\t\"P̌\": \"P\",\n\t\"p̌\": \"p\",\n\t\"Q̌\": \"Q\",\n\t\"q̌\": \"q\",\n\t\"Ř̩\": \"R\",\n\t\"ř̩\": \"r\",\n\t\"Ṧ\": \"S\",\n\t\"ṧ\": \"s\",\n\t\"V̌\": \"V\",\n\t\"v̌\": \"v\",\n\t\"W̌\": \"W\",\n\t\"w̌\": \"w\",\n\t\"X̌\": \"X\",\n\t\"x̌\": \"x\",\n\t\"Y̌\": \"Y\",\n\t\"y̌\": \"y\",\n\t\"A̧\": \"A\",\n\t\"a̧\": \"a\",\n\t\"B̧\": \"B\",\n\t\"b̧\": \"b\",\n\t\"Ḑ\": \"D\",\n\t\"ḑ\": \"d\",\n\t\"Ȩ\": \"E\",\n\t\"ȩ\": \"e\",\n\t\"Ɛ̧\": \"E\",\n\t\"ɛ̧\": \"e\",\n\t\"Ḩ\": \"H\",\n\t\"ḩ\": \"h\",\n\t\"I̧\": \"I\",\n\t\"i̧\": \"i\",\n\t\"Ɨ̧\": \"I\",\n\t\"ɨ̧\": \"i\",\n\t\"M̧\": \"M\",\n\t\"m̧\": \"m\",\n\t\"O̧\": \"O\",\n\t\"o̧\": \"o\",\n\t\"Q̧\": \"Q\",\n\t\"q̧\": \"q\",\n\t\"U̧\": \"U\",\n\t\"u̧\": \"u\",\n\t\"X̧\": \"X\",\n\t\"x̧\": \"x\",\n\t\"Z̧\": \"Z\",\n\t\"z̧\": \"z\",\n\t\"й\":\"и\",\n\t\"Й\":\"И\",\n\t\"ё\":\"е\",\n\t\"Ё\":\"Е\",\n};\n\nvar chars = Object.keys(characterMap).join('|');\nvar allAccents = new RegExp(chars, 'g');\nvar firstAccent = new RegExp(chars, '');\n\nfunction matcher(match) {\n\treturn characterMap[match];\n}\n\nvar removeAccents = function(string) {\n\treturn string.replace(allAccents, matcher);\n};\n\nvar hasAccents = function(string) {\n\treturn !!string.match(firstAccent);\n};\n\nmodule.exports = removeAccents;\nmodule.exports.has = hasAccents;\nmodule.exports.remove = removeAccents;\n","module.exports = window[\"React\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blocks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"data\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"privateApis\"];","/**\n * WordPress dependencies\n */\nimport { __dangerousOptInToUnstableAPIsOnlyForCoreModules } from '@wordpress/private-apis';\nexport const { lock, unlock } =\n\t__dangerousOptInToUnstableAPIsOnlyForCoreModules(\n\t\t'I acknowledge private features are not for use in themes or plugins and doing so will break in the next version of WordPress.',\n\t\t'@wordpress/editor'\n\t);\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","/**\n * WordPress dependencies\n */\nimport { _x } from '@wordpress/i18n';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\n\nconst CONTENT = 'content';\n\nexport default {\n\tname: 'core/pattern-overrides',\n\tlabel: _x( 'Pattern Overrides', 'block bindings source' ),\n\tgetValue( { registry, clientId, attributeName } ) {\n\t\tconst { getBlockAttributes, getBlockParentsByBlockName } =\n\t\t\tregistry.select( blockEditorStore );\n\t\tconst currentBlockAttributes = getBlockAttributes( clientId );\n\t\tconst [ patternClientId ] = getBlockParentsByBlockName(\n\t\t\tclientId,\n\t\t\t'core/block',\n\t\t\ttrue\n\t\t);\n\n\t\tconst overridableValue =\n\t\t\tgetBlockAttributes( patternClientId )?.[ CONTENT ]?.[\n\t\t\t\tcurrentBlockAttributes?.metadata?.name\n\t\t\t]?.[ attributeName ];\n\n\t\t// If there is no pattern client ID, or it is not overwritten, return the default value.\n\t\tif ( ! patternClientId || overridableValue === undefined ) {\n\t\t\treturn currentBlockAttributes[ attributeName ];\n\t\t}\n\n\t\treturn overridableValue === '' ? undefined : overridableValue;\n\t},\n\tsetValues( { registry, clientId, attributes } ) {\n\t\tconst { getBlockAttributes, getBlockParentsByBlockName, getBlocks } =\n\t\t\tregistry.select( blockEditorStore );\n\t\tconst currentBlockAttributes = getBlockAttributes( clientId );\n\t\tconst blockName = currentBlockAttributes?.metadata?.name;\n\t\tif ( ! blockName ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst [ patternClientId ] = getBlockParentsByBlockName(\n\t\t\tclientId,\n\t\t\t'core/block',\n\t\t\ttrue\n\t\t);\n\n\t\t// If there is no pattern client ID, sync blocks with the same name and same attributes.\n\t\tif ( ! patternClientId ) {\n\t\t\tconst syncBlocksWithSameName = ( blocks ) => {\n\t\t\t\tfor ( const block of blocks ) {\n\t\t\t\t\tif ( block.attributes?.metadata?.name === blockName ) {\n\t\t\t\t\t\tregistry\n\t\t\t\t\t\t\t.dispatch( blockEditorStore )\n\t\t\t\t\t\t\t.updateBlockAttributes(\n\t\t\t\t\t\t\t\tblock.clientId,\n\t\t\t\t\t\t\t\tattributes\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tsyncBlocksWithSameName( block.innerBlocks );\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tsyncBlocksWithSameName( getBlocks() );\n\t\t\treturn;\n\t\t}\n\t\tconst currentBindingValue =\n\t\t\tgetBlockAttributes( patternClientId )?.[ CONTENT ];\n\t\tregistry\n\t\t\t.dispatch( blockEditorStore )\n\t\t\t.updateBlockAttributes( patternClientId, {\n\t\t\t\t[ CONTENT ]: {\n\t\t\t\t\t...currentBindingValue,\n\t\t\t\t\t[ blockName ]: {\n\t\t\t\t\t\t...currentBindingValue?.[ blockName ],\n\t\t\t\t\t\t...Object.entries( attributes ).reduce(\n\t\t\t\t\t\t\t( acc, [ key, value ] ) => {\n\t\t\t\t\t\t\t\t// TODO: We need a way to represent `undefined` in the serialized overrides.\n\t\t\t\t\t\t\t\t// Also see: https://github.com/WordPress/gutenberg/pull/57249#discussion_r1452987871\n\t\t\t\t\t\t\t\t// We use an empty string to represent undefined for now until\n\t\t\t\t\t\t\t\t// we support a richer format for overrides and the block bindings API.\n\t\t\t\t\t\t\t\tacc[ key ] = value === undefined ? '' : value;\n\t\t\t\t\t\t\t\treturn acc;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{}\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t} );\n\t},\n\tcanUserEditValue: () => true,\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"coreData\"];","/**\n * WordPress dependencies\n */\nimport { SETTINGS_DEFAULTS } from '@wordpress/block-editor';\n\n/**\n * The default post editor settings.\n *\n * @property {boolean|Array} allowedBlockTypes     Allowed block types\n * @property {boolean}       richEditingEnabled    Whether rich editing is enabled or not\n * @property {boolean}       codeEditingEnabled    Whether code editing is enabled or not\n * @property {boolean}       fontLibraryEnabled    Whether the font library is enabled or not.\n * @property {boolean}       enableCustomFields    Whether the WordPress custom fields are enabled or not.\n *                                                 true  = the user has opted to show the Custom Fields panel at the bottom of the editor.\n *                                                 false = the user has opted to hide the Custom Fields panel at the bottom of the editor.\n *                                                 undefined = the current environment does not support Custom Fields, so the option toggle in Preferences -> Panels to enable the Custom Fields panel is not displayed.\n * @property {number}        autosaveInterval      How often in seconds the post will be auto-saved via the REST API.\n * @property {number}        localAutosaveInterval How often in seconds the post will be backed up to sessionStorage.\n * @property {Array?}        availableTemplates    The available post templates\n * @property {boolean}       disablePostFormats    Whether or not the post formats are disabled\n * @property {Array?}        allowedMimeTypes      List of allowed mime types and file extensions\n * @property {number}        maxUploadFileSize     Maximum upload file size\n * @property {boolean}       supportsLayout        Whether the editor supports layouts.\n */\nexport const EDITOR_SETTINGS_DEFAULTS = {\n\t...SETTINGS_DEFAULTS,\n\n\trichEditingEnabled: true,\n\tcodeEditingEnabled: true,\n\tfontLibraryEnabled: true,\n\tenableCustomFields: undefined,\n\tdefaultRenderingMode: 'post-only',\n};\n","/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\nimport type { Action } from '@wordpress/dataviews';\n\ntype ReduxAction =\n\t| ReturnType< typeof import('./private-actions').registerEntityAction >\n\t| ReturnType< typeof import('./private-actions').unregisterEntityAction >;\n\nexport type ActionState = Record< string, Record< string, Action< any >[] > >;\nexport type State = {\n\tactions: ActionState;\n};\n\nfunction actions( state: ActionState = {}, action: ReduxAction ) {\n\tswitch ( action.type ) {\n\t\tcase 'REGISTER_ENTITY_ACTION':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ action.kind ]: {\n\t\t\t\t\t[ action.name ]: [\n\t\t\t\t\t\t...( state[ action.kind ]?.[ action.name ] ?? [] ),\n\t\t\t\t\t\taction.config,\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t};\n\t\tcase 'UNREGISTER_ENTITY_ACTION': {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ action.kind ]: (\n\t\t\t\t\tstate[ action.kind ]?.[ action.name ] ?? []\n\t\t\t\t).filter( ( _action ) => _action.id !== action.actionId ),\n\t\t\t};\n\t\t}\n\t}\n\n\treturn state;\n}\n\nexport default combineReducers( {\n\tactions,\n} );\n","/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { EDITOR_SETTINGS_DEFAULTS } from './defaults';\nimport dataviewsReducer from '../dataviews/store/reducer';\n\n/**\n * Returns a post attribute value, flattening nested rendered content using its\n * raw value in place of its original object form.\n *\n * @param {*} value Original value.\n *\n * @return {*} Raw value.\n */\nexport function getPostRawValue( value ) {\n\tif ( value && 'object' === typeof value && 'raw' in value ) {\n\t\treturn value.raw;\n\t}\n\n\treturn value;\n}\n\n/**\n * Returns true if the two object arguments have the same keys, or false\n * otherwise.\n *\n * @param {Object} a First object.\n * @param {Object} b Second object.\n *\n * @return {boolean} Whether the two objects have the same keys.\n */\nexport function hasSameKeys( a, b ) {\n\tconst keysA = Object.keys( a ).sort();\n\tconst keysB = Object.keys( b ).sort();\n\treturn (\n\t\tkeysA.length === keysB.length &&\n\t\tkeysA.every( ( key, index ) => keysB[ index ] === key )\n\t);\n}\n\n/**\n * Returns true if, given the currently dispatching action and the previously\n * dispatched action, the two actions are editing the same post property, or\n * false otherwise.\n *\n * @param {Object} action         Currently dispatching action.\n * @param {Object} previousAction Previously dispatched action.\n *\n * @return {boolean} Whether actions are updating the same post property.\n */\nexport function isUpdatingSamePostProperty( action, previousAction ) {\n\treturn (\n\t\taction.type === 'EDIT_POST' &&\n\t\thasSameKeys( action.edits, previousAction.edits )\n\t);\n}\n\n/**\n * Returns true if, given the currently dispatching action and the previously\n * dispatched action, the two actions are modifying the same property such that\n * undo history should be batched.\n *\n * @param {Object} action         Currently dispatching action.\n * @param {Object} previousAction Previously dispatched action.\n *\n * @return {boolean} Whether to overwrite present state.\n */\nexport function shouldOverwriteState( action, previousAction ) {\n\tif ( action.type === 'RESET_EDITOR_BLOCKS' ) {\n\t\treturn ! action.shouldCreateUndoLevel;\n\t}\n\n\tif ( ! previousAction || action.type !== previousAction.type ) {\n\t\treturn false;\n\t}\n\n\treturn isUpdatingSamePostProperty( action, previousAction );\n}\n\nexport function postId( state = null, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'SET_EDITED_POST':\n\t\t\treturn action.postId;\n\t}\n\n\treturn state;\n}\n\nexport function templateId( state = null, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'SET_CURRENT_TEMPLATE_ID':\n\t\t\treturn action.id;\n\t}\n\n\treturn state;\n}\n\nexport function postType( state = null, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'SET_EDITED_POST':\n\t\t\treturn action.postType;\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer returning whether the post blocks match the defined template or not.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {boolean} Updated state.\n */\nexport function template( state = { isValid: true }, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'SET_TEMPLATE_VALIDITY':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisValid: action.isValid,\n\t\t\t};\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer returning current network request state (whether a request to\n * the WP REST API is in progress, successful, or failed).\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function saving( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'REQUEST_POST_UPDATE_START':\n\t\tcase 'REQUEST_POST_UPDATE_FINISH':\n\t\t\treturn {\n\t\t\t\tpending: action.type === 'REQUEST_POST_UPDATE_START',\n\t\t\t\toptions: action.options || {},\n\t\t\t};\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer returning deleting post request state.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function deleting( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'REQUEST_POST_DELETE_START':\n\t\tcase 'REQUEST_POST_DELETE_FINISH':\n\t\t\treturn {\n\t\t\t\tpending: action.type === 'REQUEST_POST_DELETE_START',\n\t\t\t};\n\t}\n\n\treturn state;\n}\n\n/**\n * Post Lock State.\n *\n * @typedef {Object} PostLockState\n *\n * @property {boolean}  isLocked       Whether the post is locked.\n * @property {?boolean} isTakeover     Whether the post editing has been taken over.\n * @property {?boolean} activePostLock Active post lock value.\n * @property {?Object}  user           User that took over the post.\n */\n\n/**\n * Reducer returning the post lock status.\n *\n * @param {PostLockState} state  Current state.\n * @param {Object}        action Dispatched action.\n *\n * @return {PostLockState} Updated state.\n */\nexport function postLock( state = { isLocked: false }, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'UPDATE_POST_LOCK':\n\t\t\treturn action.lock;\n\t}\n\n\treturn state;\n}\n\n/**\n * Post saving lock.\n *\n * When post saving is locked, the post cannot be published or updated.\n *\n * @param {PostLockState} state  Current state.\n * @param {Object}        action Dispatched action.\n *\n * @return {PostLockState} Updated state.\n */\nexport function postSavingLock( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'LOCK_POST_SAVING':\n\t\t\treturn { ...state, [ action.lockName ]: true };\n\n\t\tcase 'UNLOCK_POST_SAVING': {\n\t\t\tconst { [ action.lockName ]: removedLockName, ...restState } =\n\t\t\t\tstate;\n\t\t\treturn restState;\n\t\t}\n\t}\n\treturn state;\n}\n\n/**\n * Post autosaving lock.\n *\n * When post autosaving is locked, the post will not autosave.\n *\n * @param {PostLockState} state  Current state.\n * @param {Object}        action Dispatched action.\n *\n * @return {PostLockState} Updated state.\n */\nexport function postAutosavingLock( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'LOCK_POST_AUTOSAVING':\n\t\t\treturn { ...state, [ action.lockName ]: true };\n\n\t\tcase 'UNLOCK_POST_AUTOSAVING': {\n\t\t\tconst { [ action.lockName ]: removedLockName, ...restState } =\n\t\t\t\tstate;\n\t\t\treturn restState;\n\t\t}\n\t}\n\treturn state;\n}\n\n/**\n * Reducer returning the post editor setting.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function editorSettings( state = EDITOR_SETTINGS_DEFAULTS, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'UPDATE_EDITOR_SETTINGS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...action.settings,\n\t\t\t};\n\t}\n\n\treturn state;\n}\n\nexport function renderingMode( state = 'post-only', action ) {\n\tswitch ( action.type ) {\n\t\tcase 'SET_RENDERING_MODE':\n\t\t\treturn action.mode;\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer returning the editing canvas device type.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function deviceType( state = 'Desktop', action ) {\n\tswitch ( action.type ) {\n\t\tcase 'SET_DEVICE_TYPE':\n\t\t\treturn action.deviceType;\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer storing the list of all programmatically removed panels.\n *\n * @param {Array}  state  Current state.\n * @param {Object} action Action object.\n *\n * @return {Array} Updated state.\n */\nexport function removedPanels( state = [], action ) {\n\tswitch ( action.type ) {\n\t\tcase 'REMOVE_PANEL':\n\t\t\tif ( ! state.includes( action.panelName ) ) {\n\t\t\t\treturn [ ...state, action.panelName ];\n\t\t\t}\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer to set the block inserter panel open or closed.\n *\n * Note: this reducer interacts with the list view panel reducer\n * to make sure that only one of the two panels is open at the same time.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n */\nexport function blockInserterPanel( state = false, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'SET_IS_LIST_VIEW_OPENED':\n\t\t\treturn action.isOpen ? false : state;\n\t\tcase 'SET_IS_INSERTER_OPENED':\n\t\t\treturn action.value;\n\t}\n\treturn state;\n}\n\n/**\n * Reducer to set the list view panel open or closed.\n *\n * Note: this reducer interacts with the inserter panel reducer\n * to make sure that only one of the two panels is open at the same time.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n */\nexport function listViewPanel( state = false, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'SET_IS_INSERTER_OPENED':\n\t\t\treturn action.value ? false : state;\n\t\tcase 'SET_IS_LIST_VIEW_OPENED':\n\t\t\treturn action.isOpen;\n\t}\n\treturn state;\n}\n\n/**\n * This reducer does nothing aside initializing a ref to the list view toggle.\n * We will have a unique ref per \"editor\" instance.\n *\n * @param {Object} state\n * @return {Object} Reference to the list view toggle button.\n */\nexport function listViewToggleRef( state = { current: null } ) {\n\treturn state;\n}\n\n/**\n * This reducer does nothing aside initializing a ref to the inserter sidebar toggle.\n * We will have a unique ref per \"editor\" instance.\n *\n * @param {Object} state\n * @return {Object} Reference to the inserter sidebar toggle button.\n */\nexport function inserterSidebarToggleRef( state = { current: null } ) {\n\treturn state;\n}\n\nexport function publishSidebarActive( state = false, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'OPEN_PUBLISH_SIDEBAR':\n\t\t\treturn true;\n\t\tcase 'CLOSE_PUBLISH_SIDEBAR':\n\t\t\treturn false;\n\t\tcase 'TOGGLE_PUBLISH_SIDEBAR':\n\t\t\treturn ! state;\n\t}\n\treturn state;\n}\n\nexport default combineReducers( {\n\tpostId,\n\tpostType,\n\ttemplateId,\n\tsaving,\n\tdeleting,\n\tpostLock,\n\ttemplate,\n\tpostSavingLock,\n\teditorSettings,\n\tpostAutosavingLock,\n\trenderingMode,\n\tdeviceType,\n\tremovedPanels,\n\tblockInserterPanel,\n\tinserterSidebarToggleRef,\n\tlistViewPanel,\n\tlistViewToggleRef,\n\tpublishSidebarActive,\n\tdataviews: dataviewsReducer,\n} );\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"date\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"url\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"deprecated\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"primitives\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"ReactJSXRuntime\"];","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst layout = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M18 5.5H6a.5.5 0 00-.5.5v3h13V6a.5.5 0 00-.5-.5zm.5 5H10v8h8a.5.5 0 00.5-.5v-7.5zm-10 0h-3V18a.5.5 0 00.5.5h2.5v-8zM6 4h12a2 2 0 012 2v12a2 2 0 01-2 2H6a2 2 0 01-2-2V6a2 2 0 012-2z\" />\n\t</SVG>\n);\n\nexport default layout;\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"preferences\"];","/**\n * Set of post properties for which edits should assume a merging behavior,\n * assuming an object value.\n *\n * @type {Set}\n */\nexport const EDIT_MERGE_PROPERTIES = new Set( [ 'meta' ] );\n\n/**\n * Constant for the store module (or reducer) key.\n *\n * @type {string}\n */\nexport const STORE_NAME = 'core/editor';\n\nexport const SAVE_POST_NOTICE_ID = 'SAVE_POST_NOTICE_ID';\nexport const TRASH_POST_NOTICE_ID = 'TRASH_POST_NOTICE_ID';\nexport const PERMALINK_POSTNAME_REGEX = /%(?:postname|pagename)%/;\nexport const ONE_MINUTE_IN_MS = 60 * 1000;\nexport const AUTOSAVE_PROPERTIES = [ 'title', 'excerpt', 'content' ];\nexport const TEMPLATE_PART_AREA_DEFAULT_CATEGORY = 'uncategorized';\nexport const TEMPLATE_POST_TYPE = 'wp_template';\nexport const TEMPLATE_PART_POST_TYPE = 'wp_template_part';\nexport const PATTERN_POST_TYPE = 'wp_block';\nexport const NAVIGATION_POST_TYPE = 'wp_navigation';\nexport const TEMPLATE_ORIGINS = {\n\tcustom: 'custom',\n\ttheme: 'theme',\n\tplugin: 'plugin',\n};\nexport const TEMPLATE_POST_TYPES = [ 'wp_template', 'wp_template_part' ];\nexport const GLOBAL_POST_TYPES = [\n\t...TEMPLATE_POST_TYPES,\n\t'wp_block',\n\t'wp_navigation',\n];\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst header = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M18.5 10.5H10v8h8a.5.5 0 00.5-.5v-7.5zm-10 0h-3V18a.5.5 0 00.5.5h2.5v-8zM6 4h12a2 2 0 012 2v12a2 2 0 01-2 2H6a2 2 0 01-2-2V6a2 2 0 012-2z\" />\n\t</SVG>\n);\n\nexport default header;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst footer = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path\n\t\t\tfillRule=\"evenodd\"\n\t\t\td=\"M18 5.5h-8v8h8.5V6a.5.5 0 00-.5-.5zm-9.5 8h-3V6a.5.5 0 01.5-.5h2.5v8zM6 4h12a2 2 0 012 2v12a2 2 0 01-2 2H6a2 2 0 01-2-2V6a2 2 0 012-2z\"\n\t\t/>\n\t</SVG>\n);\n\nexport default footer;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst sidebar = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M18 5.5H6a.5.5 0 00-.5.5v3h13V6a.5.5 0 00-.5-.5zm.5 5H10v8h8a.5.5 0 00.5-.5v-7.5zM6 4h12a2 2 0 012 2v12a2 2 0 01-2 2H6a2 2 0 01-2-2V6a2 2 0 012-2z\" />\n\t</SVG>\n);\n\nexport default sidebar;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst symbolFilled = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M21.3 10.8l-5.6-5.6c-.7-.7-1.8-.7-2.5 0l-5.6 5.6c-.7.7-.7 1.8 0 2.5l5.6 5.6c.3.3.8.5 1.2.5s.9-.2 1.2-.5l5.6-5.6c.8-.7.8-1.9.1-2.5zm-17.6 1L10 5.5l-1-1-6.3 6.3c-.7.7-.7 1.8 0 2.5L9 19.5l1.1-1.1-6.3-6.3c-.2 0-.2-.2-.1-.3z\" />\n\t</SVG>\n);\n\nexport default symbolFilled;\n","/**\n * WordPress dependencies\n */\nimport {\n\theader as headerIcon,\n\tfooter as footerIcon,\n\tsidebar as sidebarIcon,\n\tsymbolFilled as symbolFilledIcon,\n} from '@wordpress/icons';\n/**\n * Helper function to retrieve the corresponding icon by name.\n *\n * @param {string} iconName The name of the icon.\n *\n * @return {Object} The corresponding icon.\n */\nexport function getTemplatePartIcon( iconName ) {\n\tif ( 'header' === iconName ) {\n\t\treturn headerIcon;\n\t} else if ( 'footer' === iconName ) {\n\t\treturn footerIcon;\n\t} else if ( 'sidebar' === iconName ) {\n\t\treturn sidebarIcon;\n\t}\n\treturn symbolFilledIcon;\n}\n","/**\n * WordPress dependencies\n */\nimport {\n\tgetFreeformContentHandlerName,\n\tgetDefaultBlockName,\n\t__unstableSerializeAndClean,\n\tparse,\n} from '@wordpress/blocks';\nimport { isInTheFuture, getDate } from '@wordpress/date';\nimport { addQueryArgs, cleanForSlug } from '@wordpress/url';\nimport { createSelector, createRegistrySelector } from '@wordpress/data';\nimport deprecated from '@wordpress/deprecated';\nimport { Platform } from '@wordpress/element';\nimport { layout } from '@wordpress/icons';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { store as preferencesStore } from '@wordpress/preferences';\n\n/**\n * Internal dependencies\n */\nimport {\n\tEDIT_MERGE_PROPERTIES,\n\tPERMALINK_POSTNAME_REGEX,\n\tONE_MINUTE_IN_MS,\n\tAUTOSAVE_PROPERTIES,\n} from './constants';\nimport { getPostRawValue } from './reducer';\nimport { getTemplatePartIcon } from '../utils/get-template-part-icon';\n\n/**\n * Shared reference to an empty object for cases where it is important to avoid\n * returning a new object reference on every invocation, as in a connected or\n * other pure component which performs `shouldComponentUpdate` check on props.\n * This should be used as a last resort, since the normalized data should be\n * maintained by the reducer result in state.\n */\nconst EMPTY_OBJECT = {};\n\n/**\n * Returns true if any past editor history snapshots exist, or false otherwise.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether undo history exists.\n */\nexport const hasEditorUndo = createRegistrySelector( ( select ) => () => {\n\treturn select( coreStore ).hasUndo();\n} );\n\n/**\n * Returns true if any future editor history snapshots exist, or false\n * otherwise.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether redo history exists.\n */\nexport const hasEditorRedo = createRegistrySelector( ( select ) => () => {\n\treturn select( coreStore ).hasRedo();\n} );\n\n/**\n * Returns true if the currently edited post is yet to be saved, or false if\n * the post has been saved.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether the post is new.\n */\nexport function isEditedPostNew( state ) {\n\treturn getCurrentPost( state ).status === 'auto-draft';\n}\n\n/**\n * Returns true if content includes unsaved changes, or false otherwise.\n *\n * @param {Object} state Editor state.\n *\n * @return {boolean} Whether content includes unsaved changes.\n */\nexport function hasChangedContent( state ) {\n\tconst edits = getPostEdits( state );\n\treturn 'content' in edits;\n}\n\n/**\n * Returns true if there are unsaved values for the current edit session, or\n * false if the editing state matches the saved or new post.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether unsaved values exist.\n */\nexport const isEditedPostDirty = createRegistrySelector(\n\t( select ) => ( state ) => {\n\t\t// Edits should contain only fields which differ from the saved post (reset\n\t\t// at initial load and save complete). Thus, a non-empty edits state can be\n\t\t// inferred to contain unsaved values.\n\t\tconst postType = getCurrentPostType( state );\n\t\tconst postId = getCurrentPostId( state );\n\t\treturn select( coreStore ).hasEditsForEntityRecord(\n\t\t\t'postType',\n\t\t\tpostType,\n\t\t\tpostId\n\t\t);\n\t}\n);\n\n/**\n * Returns true if there are unsaved edits for entities other than\n * the editor's post, and false otherwise.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether there are edits or not.\n */\nexport const hasNonPostEntityChanges = createRegistrySelector(\n\t( select ) => ( state ) => {\n\t\tconst dirtyEntityRecords =\n\t\t\tselect( coreStore ).__experimentalGetDirtyEntityRecords();\n\t\tconst { type, id } = getCurrentPost( state );\n\t\treturn dirtyEntityRecords.some(\n\t\t\t( entityRecord ) =>\n\t\t\t\tentityRecord.kind !== 'postType' ||\n\t\t\t\tentityRecord.name !== type ||\n\t\t\t\tentityRecord.key !== id\n\t\t);\n\t}\n);\n\n/**\n * Returns true if there are no unsaved values for the current edit session and\n * if the currently edited post is new (has never been saved before).\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether new post and unsaved values exist.\n */\nexport function isCleanNewPost( state ) {\n\treturn ! isEditedPostDirty( state ) && isEditedPostNew( state );\n}\n\n/**\n * Returns the post currently being edited in its last known saved state, not\n * including unsaved edits. Returns an object containing relevant default post\n * values if the post has not yet been saved.\n *\n * @param {Object} state Global application state.\n *\n * @return {Object} Post object.\n */\nexport const getCurrentPost = createRegistrySelector(\n\t( select ) => ( state ) => {\n\t\tconst postId = getCurrentPostId( state );\n\t\tconst postType = getCurrentPostType( state );\n\n\t\tconst post = select( coreStore ).getRawEntityRecord(\n\t\t\t'postType',\n\t\t\tpostType,\n\t\t\tpostId\n\t\t);\n\t\tif ( post ) {\n\t\t\treturn post;\n\t\t}\n\n\t\t// This exists for compatibility with the previous selector behavior\n\t\t// which would guarantee an object return based on the editor reducer's\n\t\t// default empty object state.\n\t\treturn EMPTY_OBJECT;\n\t}\n);\n\n/**\n * Returns the post type of the post currently being edited.\n *\n * @param {Object} state Global application state.\n *\n * @return {string} Post type.\n */\nexport function getCurrentPostType( state ) {\n\treturn state.postType;\n}\n\n/**\n * Returns the ID of the post currently being edited, or null if the post has\n * not yet been saved.\n *\n * @param {Object} state Global application state.\n *\n * @return {?number} ID of current post.\n */\nexport function getCurrentPostId( state ) {\n\treturn state.postId;\n}\n\n/**\n * Returns the template ID currently being rendered/edited\n *\n * @param {Object} state Global application state.\n *\n * @return {string?} Template ID.\n */\nexport function getCurrentTemplateId( state ) {\n\treturn state.templateId;\n}\n\n/**\n * Returns the number of revisions of the post currently being edited.\n *\n * @param {Object} state Global application state.\n *\n * @return {number} Number of revisions.\n */\nexport function getCurrentPostRevisionsCount( state ) {\n\treturn (\n\t\tgetCurrentPost( state )._links?.[ 'version-history' ]?.[ 0 ]?.count ?? 0\n\t);\n}\n\n/**\n * Returns the last revision ID of the post currently being edited,\n * or null if the post has no revisions.\n *\n * @param {Object} state Global application state.\n *\n * @return {?number} ID of the last revision.\n */\nexport function getCurrentPostLastRevisionId( state ) {\n\treturn (\n\t\tgetCurrentPost( state )._links?.[ 'predecessor-version' ]?.[ 0 ]?.id ??\n\t\tnull\n\t);\n}\n\n/**\n * Returns any post values which have been changed in the editor but not yet\n * been saved.\n *\n * @param {Object} state Global application state.\n *\n * @return {Object} Object of key value pairs comprising unsaved edits.\n */\nexport const getPostEdits = createRegistrySelector( ( select ) => ( state ) => {\n\tconst postType = getCurrentPostType( state );\n\tconst postId = getCurrentPostId( state );\n\treturn (\n\t\tselect( coreStore ).getEntityRecordEdits(\n\t\t\t'postType',\n\t\t\tpostType,\n\t\t\tpostId\n\t\t) || EMPTY_OBJECT\n\t);\n} );\n\n/**\n * Returns an attribute value of the saved post.\n *\n * @param {Object} state         Global application state.\n * @param {string} attributeName Post attribute name.\n *\n * @return {*} Post attribute value.\n */\nexport function getCurrentPostAttribute( state, attributeName ) {\n\tswitch ( attributeName ) {\n\t\tcase 'type':\n\t\t\treturn getCurrentPostType( state );\n\n\t\tcase 'id':\n\t\t\treturn getCurrentPostId( state );\n\n\t\tdefault:\n\t\t\tconst post = getCurrentPost( state );\n\t\t\tif ( ! post.hasOwnProperty( attributeName ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn getPostRawValue( post[ attributeName ] );\n\t}\n}\n\n/**\n * Returns a single attribute of the post being edited, preferring the unsaved\n * edit if one exists, but merging with the attribute value for the last known\n * saved state of the post (this is needed for some nested attributes like meta).\n *\n * @param {Object} state         Global application state.\n * @param {string} attributeName Post attribute name.\n *\n * @return {*} Post attribute value.\n */\nconst getNestedEditedPostProperty = createSelector(\n\t( state, attributeName ) => {\n\t\tconst edits = getPostEdits( state );\n\t\tif ( ! edits.hasOwnProperty( attributeName ) ) {\n\t\t\treturn getCurrentPostAttribute( state, attributeName );\n\t\t}\n\n\t\treturn {\n\t\t\t...getCurrentPostAttribute( state, attributeName ),\n\t\t\t...edits[ attributeName ],\n\t\t};\n\t},\n\t( state, attributeName ) => [\n\t\tgetCurrentPostAttribute( state, attributeName ),\n\t\tgetPostEdits( state )[ attributeName ],\n\t]\n);\n\n/**\n * Returns a single attribute of the post being edited, preferring the unsaved\n * edit if one exists, but falling back to the attribute for the last known\n * saved state of the post.\n *\n * @param {Object} state         Global application state.\n * @param {string} attributeName Post attribute name.\n *\n * @return {*} Post attribute value.\n */\nexport function getEditedPostAttribute( state, attributeName ) {\n\t// Special cases.\n\tswitch ( attributeName ) {\n\t\tcase 'content':\n\t\t\treturn getEditedPostContent( state );\n\t}\n\n\t// Fall back to saved post value if not edited.\n\tconst edits = getPostEdits( state );\n\tif ( ! edits.hasOwnProperty( attributeName ) ) {\n\t\treturn getCurrentPostAttribute( state, attributeName );\n\t}\n\n\t// Merge properties are objects which contain only the patch edit in state,\n\t// and thus must be merged with the current post attribute.\n\tif ( EDIT_MERGE_PROPERTIES.has( attributeName ) ) {\n\t\treturn getNestedEditedPostProperty( state, attributeName );\n\t}\n\n\treturn edits[ attributeName ];\n}\n\n/**\n * Returns an attribute value of the current autosave revision for a post, or\n * null if there is no autosave for the post.\n *\n * @deprecated since 5.6. Callers should use the `getAutosave( postType, postId, userId )` selector\n * \t\t\t   from the '@wordpress/core-data' package and access properties on the returned\n * \t\t\t   autosave object using getPostRawValue.\n *\n * @param {Object} state         Global application state.\n * @param {string} attributeName Autosave attribute name.\n *\n * @return {*} Autosave attribute value.\n */\nexport const getAutosaveAttribute = createRegistrySelector(\n\t( select ) => ( state, attributeName ) => {\n\t\tif (\n\t\t\t! AUTOSAVE_PROPERTIES.includes( attributeName ) &&\n\t\t\tattributeName !== 'preview_link'\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst postType = getCurrentPostType( state );\n\n\t\t// Currently template autosaving is not supported.\n\t\tif ( postType === 'wp_template' ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst postId = getCurrentPostId( state );\n\t\tconst currentUserId = select( coreStore ).getCurrentUser()?.id;\n\t\tconst autosave = select( coreStore ).getAutosave(\n\t\t\tpostType,\n\t\t\tpostId,\n\t\t\tcurrentUserId\n\t\t);\n\n\t\tif ( autosave ) {\n\t\t\treturn getPostRawValue( autosave[ attributeName ] );\n\t\t}\n\t}\n);\n\n/**\n * Returns the current visibility of the post being edited, preferring the\n * unsaved value if different than the saved post. The return value is one of\n * \"private\", \"password\", or \"public\".\n *\n * @param {Object} state Global application state.\n *\n * @return {string} Post visibility.\n */\nexport function getEditedPostVisibility( state ) {\n\tconst status = getEditedPostAttribute( state, 'status' );\n\tif ( status === 'private' ) {\n\t\treturn 'private';\n\t}\n\n\tconst password = getEditedPostAttribute( state, 'password' );\n\tif ( password ) {\n\t\treturn 'password';\n\t}\n\n\treturn 'public';\n}\n\n/**\n * Returns true if post is pending review.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether current post is pending review.\n */\nexport function isCurrentPostPending( state ) {\n\treturn getCurrentPost( state ).status === 'pending';\n}\n\n/**\n * Return true if the current post has already been published.\n *\n * @param {Object}  state       Global application state.\n * @param {Object?} currentPost Explicit current post for bypassing registry selector.\n *\n * @return {boolean} Whether the post has been published.\n */\nexport function isCurrentPostPublished( state, currentPost ) {\n\tconst post = currentPost || getCurrentPost( state );\n\n\treturn (\n\t\t[ 'publish', 'private' ].indexOf( post.status ) !== -1 ||\n\t\t( post.status === 'future' &&\n\t\t\t! isInTheFuture(\n\t\t\t\tnew Date( Number( getDate( post.date ) ) - ONE_MINUTE_IN_MS )\n\t\t\t) )\n\t);\n}\n\n/**\n * Returns true if post is already scheduled.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether current post is scheduled to be posted.\n */\nexport function isCurrentPostScheduled( state ) {\n\treturn (\n\t\tgetCurrentPost( state ).status === 'future' &&\n\t\t! isCurrentPostPublished( state )\n\t);\n}\n\n/**\n * Return true if the post being edited can be published.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether the post can been published.\n */\nexport function isEditedPostPublishable( state ) {\n\tconst post = getCurrentPost( state );\n\n\t// TODO: Post being publishable should be superset of condition of post\n\t// being saveable. Currently this restriction is imposed at UI.\n\t//\n\t//  See: <PostPublishButton /> (`isButtonEnabled` assigned by `isSaveable`).\n\n\treturn (\n\t\tisEditedPostDirty( state ) ||\n\t\t[ 'publish', 'private', 'future' ].indexOf( post.status ) === -1\n\t);\n}\n\n/**\n * Returns true if the post can be saved, or false otherwise. A post must\n * contain a title, an excerpt, or non-empty content to be valid for save.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether the post can be saved.\n */\nexport function isEditedPostSaveable( state ) {\n\tif ( isSavingPost( state ) ) {\n\t\treturn false;\n\t}\n\n\t// TODO: Post should not be saveable if not dirty. Cannot be added here at\n\t// this time since posts where meta boxes are present can be saved even if\n\t// the post is not dirty. Currently this restriction is imposed at UI, but\n\t// should be moved here.\n\t//\n\t//  See: `isEditedPostPublishable` (includes `isEditedPostDirty` condition)\n\t//  See: <PostSavedState /> (`forceIsDirty` prop)\n\t//  See: <PostPublishButton /> (`forceIsDirty` prop)\n\t//  See: https://github.com/WordPress/gutenberg/pull/4184.\n\n\treturn (\n\t\t!! getEditedPostAttribute( state, 'title' ) ||\n\t\t!! getEditedPostAttribute( state, 'excerpt' ) ||\n\t\t! isEditedPostEmpty( state ) ||\n\t\tPlatform.OS === 'native'\n\t);\n}\n\n/**\n * Returns true if the edited post has content. A post has content if it has at\n * least one saveable block or otherwise has a non-empty content property\n * assigned.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether post has content.\n */\nexport const isEditedPostEmpty = createRegistrySelector(\n\t( select ) => ( state ) => {\n\t\t// While the condition of truthy content string is sufficient to determine\n\t\t// emptiness, testing saveable blocks length is a trivial operation. Since\n\t\t// this function can be called frequently, optimize for the fast case as a\n\t\t// condition of the mere existence of blocks. Note that the value of edited\n\t\t// content takes precedent over block content, and must fall through to the\n\t\t// default logic.\n\t\tconst postId = getCurrentPostId( state );\n\t\tconst postType = getCurrentPostType( state );\n\t\tconst record = select( coreStore ).getEditedEntityRecord(\n\t\t\t'postType',\n\t\t\tpostType,\n\t\t\tpostId\n\t\t);\n\t\tif ( typeof record.content !== 'function' ) {\n\t\t\treturn ! record.content;\n\t\t}\n\n\t\tconst blocks = getEditedPostAttribute( state, 'blocks' );\n\n\t\tif ( blocks.length === 0 ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Pierce the abstraction of the serializer in knowing that blocks are\n\t\t// joined with newlines such that even if every individual block\n\t\t// produces an empty save result, the serialized content is non-empty.\n\t\tif ( blocks.length > 1 ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// There are two conditions under which the optimization cannot be\n\t\t// assumed, and a fallthrough to getEditedPostContent must occur:\n\t\t//\n\t\t// 1. getBlocksForSerialization has special treatment in omitting a\n\t\t//    single unmodified default block.\n\t\t// 2. Comment delimiters are omitted for a freeform or unregistered\n\t\t//    block in its serialization. The freeform block specifically may\n\t\t//    produce an empty string in its saved output.\n\t\t//\n\t\t// For all other content, the single block is assumed to make a post\n\t\t// non-empty, if only by virtue of its own comment delimiters.\n\t\tconst blockName = blocks[ 0 ].name;\n\t\tif (\n\t\t\tblockName !== getDefaultBlockName() &&\n\t\t\tblockName !== getFreeformContentHandlerName()\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn ! getEditedPostContent( state );\n\t}\n);\n\n/**\n * Returns true if the post can be autosaved, or false otherwise.\n *\n * @param {Object} state    Global application state.\n * @param {Object} autosave A raw autosave object from the REST API.\n *\n * @return {boolean} Whether the post can be autosaved.\n */\nexport const isEditedPostAutosaveable = createRegistrySelector(\n\t( select ) => ( state ) => {\n\t\t// A post must contain a title, an excerpt, or non-empty content to be valid for autosaving.\n\t\tif ( ! isEditedPostSaveable( state ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// A post is not autosavable when there is a post autosave lock.\n\t\tif ( isPostAutosavingLocked( state ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst postType = getCurrentPostType( state );\n\n\t\t// Currently template autosaving is not supported.\n\t\tif ( postType === 'wp_template' ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst postId = getCurrentPostId( state );\n\t\tconst hasFetchedAutosave = select( coreStore ).hasFetchedAutosaves(\n\t\t\tpostType,\n\t\t\tpostId\n\t\t);\n\t\tconst currentUserId = select( coreStore ).getCurrentUser()?.id;\n\n\t\t// Disable reason - this line causes the side-effect of fetching the autosave\n\t\t// via a resolver, moving below the return would result in the autosave never\n\t\t// being fetched.\n\t\t// eslint-disable-next-line @wordpress/no-unused-vars-before-return\n\t\tconst autosave = select( coreStore ).getAutosave(\n\t\t\tpostType,\n\t\t\tpostId,\n\t\t\tcurrentUserId\n\t\t);\n\n\t\t// If any existing autosaves have not yet been fetched, this function is\n\t\t// unable to determine if the post is autosaveable, so return false.\n\t\tif ( ! hasFetchedAutosave ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// If we don't already have an autosave, the post is autosaveable.\n\t\tif ( ! autosave ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// To avoid an expensive content serialization, use the content dirtiness\n\t\t// flag in place of content field comparison against the known autosave.\n\t\t// This is not strictly accurate, and relies on a tolerance toward autosave\n\t\t// request failures for unnecessary saves.\n\t\tif ( hasChangedContent( state ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// If title, excerpt, or meta have changed, the post is autosaveable.\n\t\treturn [ 'title', 'excerpt', 'meta' ].some(\n\t\t\t( field ) =>\n\t\t\t\tgetPostRawValue( autosave[ field ] ) !==\n\t\t\t\tgetEditedPostAttribute( state, field )\n\t\t);\n\t}\n);\n\n/**\n * Return true if the post being edited is being scheduled. Preferring the\n * unsaved status values.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether the post has been published.\n */\nexport function isEditedPostBeingScheduled( state ) {\n\tconst date = getEditedPostAttribute( state, 'date' );\n\t// Offset the date by one minute (network latency).\n\tconst checkedDate = new Date(\n\t\tNumber( getDate( date ) ) - ONE_MINUTE_IN_MS\n\t);\n\n\treturn isInTheFuture( checkedDate );\n}\n\n/**\n * Returns whether the current post should be considered to have a \"floating\"\n * date (i.e. that it would publish \"Immediately\" rather than at a set time).\n *\n * Unlike in the PHP backend, the REST API returns a full date string for posts\n * where the 0000-00-00T00:00:00 placeholder is present in the database. To\n * infer that a post is set to publish \"Immediately\" we check whether the date\n * and modified date are the same.\n *\n * @param {Object} state Editor state.\n *\n * @return {boolean} Whether the edited post has a floating date value.\n */\nexport function isEditedPostDateFloating( state ) {\n\tconst date = getEditedPostAttribute( state, 'date' );\n\tconst modified = getEditedPostAttribute( state, 'modified' );\n\n\t// This should be the status of the persisted post\n\t// It shouldn't use the \"edited\" status otherwise it breaks the\n\t// inferred post data floating status\n\t// See https://github.com/WordPress/gutenberg/issues/28083.\n\tconst status = getCurrentPost( state ).status;\n\tif (\n\t\tstatus === 'draft' ||\n\t\tstatus === 'auto-draft' ||\n\t\tstatus === 'pending'\n\t) {\n\t\treturn date === modified || date === null;\n\t}\n\treturn false;\n}\n\n/**\n * Returns true if the post is currently being deleted, or false otherwise.\n *\n * @param {Object} state Editor state.\n *\n * @return {boolean} Whether post is being deleted.\n */\nexport function isDeletingPost( state ) {\n\treturn !! state.deleting.pending;\n}\n\n/**\n * Returns true if the post is currently being saved, or false otherwise.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether post is being saved.\n */\nexport function isSavingPost( state ) {\n\treturn !! state.saving.pending;\n}\n\n/**\n * Returns true if non-post entities are currently being saved, or false otherwise.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether non-post entities are being saved.\n */\nexport const isSavingNonPostEntityChanges = createRegistrySelector(\n\t( select ) => ( state ) => {\n\t\tconst entitiesBeingSaved =\n\t\t\tselect( coreStore ).__experimentalGetEntitiesBeingSaved();\n\t\tconst { type, id } = getCurrentPost( state );\n\t\treturn entitiesBeingSaved.some(\n\t\t\t( entityRecord ) =>\n\t\t\t\tentityRecord.kind !== 'postType' ||\n\t\t\t\tentityRecord.name !== type ||\n\t\t\t\tentityRecord.key !== id\n\t\t);\n\t}\n);\n\n/**\n * Returns true if a previous post save was attempted successfully, or false\n * otherwise.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether the post was saved successfully.\n */\nexport const didPostSaveRequestSucceed = createRegistrySelector(\n\t( select ) => ( state ) => {\n\t\tconst postType = getCurrentPostType( state );\n\t\tconst postId = getCurrentPostId( state );\n\t\treturn ! select( coreStore ).getLastEntitySaveError(\n\t\t\t'postType',\n\t\t\tpostType,\n\t\t\tpostId\n\t\t);\n\t}\n);\n\n/**\n * Returns true if a previous post save was attempted but failed, or false\n * otherwise.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether the post save failed.\n */\nexport const didPostSaveRequestFail = createRegistrySelector(\n\t( select ) => ( state ) => {\n\t\tconst postType = getCurrentPostType( state );\n\t\tconst postId = getCurrentPostId( state );\n\t\treturn !! select( coreStore ).getLastEntitySaveError(\n\t\t\t'postType',\n\t\t\tpostType,\n\t\t\tpostId\n\t\t);\n\t}\n);\n\n/**\n * Returns true if the post is autosaving, or false otherwise.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether the post is autosaving.\n */\nexport function isAutosavingPost( state ) {\n\treturn isSavingPost( state ) && Boolean( state.saving.options?.isAutosave );\n}\n\n/**\n * Returns true if the post is being previewed, or false otherwise.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether the post is being previewed.\n */\nexport function isPreviewingPost( state ) {\n\treturn isSavingPost( state ) && Boolean( state.saving.options?.isPreview );\n}\n\n/**\n * Returns the post preview link\n *\n * @param {Object} state Global application state.\n *\n * @return {string | undefined} Preview Link.\n */\nexport function getEditedPostPreviewLink( state ) {\n\tif ( state.saving.pending || isSavingPost( state ) ) {\n\t\treturn;\n\t}\n\n\tlet previewLink = getAutosaveAttribute( state, 'preview_link' );\n\t// Fix for issue: https://github.com/WordPress/gutenberg/issues/33616\n\t// If the post is draft, ignore the preview link from the autosave record,\n\t// because the preview could be a stale autosave if the post was switched from\n\t// published to draft.\n\t// See: https://github.com/WordPress/gutenberg/pull/37952.\n\tif ( ! previewLink || 'draft' === getCurrentPost( state ).status ) {\n\t\tpreviewLink = getEditedPostAttribute( state, 'link' );\n\t\tif ( previewLink ) {\n\t\t\tpreviewLink = addQueryArgs( previewLink, { preview: true } );\n\t\t}\n\t}\n\tconst featuredImageId = getEditedPostAttribute( state, 'featured_media' );\n\n\tif ( previewLink && featuredImageId ) {\n\t\treturn addQueryArgs( previewLink, { _thumbnail_id: featuredImageId } );\n\t}\n\n\treturn previewLink;\n}\n\n/**\n * Returns a suggested post format for the current post, inferred only if there\n * is a single block within the post and it is of a type known to match a\n * default post format. Returns null if the format cannot be determined.\n *\n * @return {?string} Suggested post format.\n */\nexport const getSuggestedPostFormat = createRegistrySelector(\n\t( select ) => () => {\n\t\tconst blocks = select( blockEditorStore ).getBlocks();\n\n\t\tif ( blocks.length > 2 ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet name;\n\t\t// If there is only one block in the content of the post grab its name\n\t\t// so we can derive a suitable post format from it.\n\t\tif ( blocks.length === 1 ) {\n\t\t\tname = blocks[ 0 ].name;\n\t\t\t// Check for core/embed `video` and `audio` eligible suggestions.\n\t\t\tif ( name === 'core/embed' ) {\n\t\t\t\tconst provider = blocks[ 0 ].attributes?.providerNameSlug;\n\t\t\t\tif ( [ 'youtube', 'vimeo' ].includes( provider ) ) {\n\t\t\t\t\tname = 'core/video';\n\t\t\t\t} else if ( [ 'spotify', 'soundcloud' ].includes( provider ) ) {\n\t\t\t\t\tname = 'core/audio';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// If there are two blocks in the content and the last one is a text blocks\n\t\t// grab the name of the first one to also suggest a post format from it.\n\t\tif ( blocks.length === 2 && blocks[ 1 ].name === 'core/paragraph' ) {\n\t\t\tname = blocks[ 0 ].name;\n\t\t}\n\n\t\t// We only convert to default post formats in core.\n\t\tswitch ( name ) {\n\t\t\tcase 'core/image':\n\t\t\t\treturn 'image';\n\t\t\tcase 'core/quote':\n\t\t\tcase 'core/pullquote':\n\t\t\t\treturn 'quote';\n\t\t\tcase 'core/gallery':\n\t\t\t\treturn 'gallery';\n\t\t\tcase 'core/video':\n\t\t\t\treturn 'video';\n\t\t\tcase 'core/audio':\n\t\t\t\treturn 'audio';\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n);\n\n/**\n * Returns the content of the post being edited.\n *\n * @param {Object} state Global application state.\n *\n * @return {string} Post content.\n */\nexport const getEditedPostContent = createRegistrySelector(\n\t( select ) => ( state ) => {\n\t\tconst postId = getCurrentPostId( state );\n\t\tconst postType = getCurrentPostType( state );\n\t\tconst record = select( coreStore ).getEditedEntityRecord(\n\t\t\t'postType',\n\t\t\tpostType,\n\t\t\tpostId\n\t\t);\n\t\tif ( record ) {\n\t\t\tif ( typeof record.content === 'function' ) {\n\t\t\t\treturn record.content( record );\n\t\t\t} else if ( record.blocks ) {\n\t\t\t\treturn __unstableSerializeAndClean( record.blocks );\n\t\t\t} else if ( record.content ) {\n\t\t\t\treturn record.content;\n\t\t\t}\n\t\t}\n\t\treturn '';\n\t}\n);\n\n/**\n * Returns true if the post is being published, or false otherwise.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether post is being published.\n */\nexport function isPublishingPost( state ) {\n\treturn (\n\t\tisSavingPost( state ) &&\n\t\t! isCurrentPostPublished( state ) &&\n\t\tgetEditedPostAttribute( state, 'status' ) === 'publish'\n\t);\n}\n\n/**\n * Returns whether the permalink is editable or not.\n *\n * @param {Object} state Editor state.\n *\n * @return {boolean} Whether or not the permalink is editable.\n */\nexport function isPermalinkEditable( state ) {\n\tconst permalinkTemplate = getEditedPostAttribute(\n\t\tstate,\n\t\t'permalink_template'\n\t);\n\n\treturn PERMALINK_POSTNAME_REGEX.test( permalinkTemplate );\n}\n\n/**\n * Returns the permalink for the post.\n *\n * @param {Object} state Editor state.\n *\n * @return {?string} The permalink, or null if the post is not viewable.\n */\nexport function getPermalink( state ) {\n\tconst permalinkParts = getPermalinkParts( state );\n\tif ( ! permalinkParts ) {\n\t\treturn null;\n\t}\n\n\tconst { prefix, postName, suffix } = permalinkParts;\n\n\tif ( isPermalinkEditable( state ) ) {\n\t\treturn prefix + postName + suffix;\n\t}\n\n\treturn prefix;\n}\n\n/**\n * Returns the slug for the post being edited, preferring a manually edited\n * value if one exists, then a sanitized version of the current post title, and\n * finally the post ID.\n *\n * @param {Object} state Editor state.\n *\n * @return {string} The current slug to be displayed in the editor\n */\nexport function getEditedPostSlug( state ) {\n\treturn (\n\t\tgetEditedPostAttribute( state, 'slug' ) ||\n\t\tcleanForSlug( getEditedPostAttribute( state, 'title' ) ) ||\n\t\tgetCurrentPostId( state )\n\t);\n}\n\n/**\n * Returns the permalink for a post, split into its three parts: the prefix,\n * the postName, and the suffix.\n *\n * @param {Object} state Editor state.\n *\n * @return {Object} An object containing the prefix, postName, and suffix for\n *                  the permalink, or null if the post is not viewable.\n */\nexport function getPermalinkParts( state ) {\n\tconst permalinkTemplate = getEditedPostAttribute(\n\t\tstate,\n\t\t'permalink_template'\n\t);\n\tif ( ! permalinkTemplate ) {\n\t\treturn null;\n\t}\n\n\tconst postName =\n\t\tgetEditedPostAttribute( state, 'slug' ) ||\n\t\tgetEditedPostAttribute( state, 'generated_slug' );\n\n\tconst [ prefix, suffix ] = permalinkTemplate.split(\n\t\tPERMALINK_POSTNAME_REGEX\n\t);\n\n\treturn {\n\t\tprefix,\n\t\tpostName,\n\t\tsuffix,\n\t};\n}\n\n/**\n * Returns whether the post is locked.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Is locked.\n */\nexport function isPostLocked( state ) {\n\treturn state.postLock.isLocked;\n}\n\n/**\n * Returns whether post saving is locked.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Is locked.\n */\nexport function isPostSavingLocked( state ) {\n\treturn Object.keys( state.postSavingLock ).length > 0;\n}\n\n/**\n * Returns whether post autosaving is locked.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Is locked.\n */\nexport function isPostAutosavingLocked( state ) {\n\treturn Object.keys( state.postAutosavingLock ).length > 0;\n}\n\n/**\n * Returns whether the edition of the post has been taken over.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Is post lock takeover.\n */\nexport function isPostLockTakeover( state ) {\n\treturn state.postLock.isTakeover;\n}\n\n/**\n * Returns details about the post lock user.\n *\n * @param {Object} state Global application state.\n *\n * @return {Object} A user object.\n */\nexport function getPostLockUser( state ) {\n\treturn state.postLock.user;\n}\n\n/**\n * Returns the active post lock.\n *\n * @param {Object} state Global application state.\n *\n * @return {Object} The lock object.\n */\nexport function getActivePostLock( state ) {\n\treturn state.postLock.activePostLock;\n}\n\n/**\n * Returns whether or not the user has the unfiltered_html capability.\n *\n * @param {Object} state Editor state.\n *\n * @return {boolean} Whether the user can or can't post unfiltered HTML.\n */\nexport function canUserUseUnfilteredHTML( state ) {\n\treturn Boolean(\n\t\tgetCurrentPost( state )._links?.hasOwnProperty(\n\t\t\t'wp:action-unfiltered-html'\n\t\t)\n\t);\n}\n\n/**\n * Returns whether the pre-publish panel should be shown\n * or skipped when the user clicks the \"publish\" button.\n *\n * @return {boolean} Whether the pre-publish panel should be shown or not.\n */\nexport const isPublishSidebarEnabled = createRegistrySelector(\n\t( select ) => () =>\n\t\t!! select( preferencesStore ).get( 'core', 'isPublishSidebarEnabled' )\n);\n\n/**\n * Return the current block list.\n *\n * @param {Object} state\n * @return {Array} Block list.\n */\nexport const getEditorBlocks = createSelector(\n\t( state ) => {\n\t\treturn (\n\t\t\tgetEditedPostAttribute( state, 'blocks' ) ||\n\t\t\tparse( getEditedPostContent( state ) )\n\t\t);\n\t},\n\t( state ) => [\n\t\tgetEditedPostAttribute( state, 'blocks' ),\n\t\tgetEditedPostContent( state ),\n\t]\n);\n\n/**\n * Returns true if the given panel was programmatically removed, or false otherwise.\n * All panels are not removed by default.\n *\n * @param {Object} state     Global application state.\n * @param {string} panelName A string that identifies the panel.\n *\n * @return {boolean} Whether or not the panel is removed.\n */\nexport function isEditorPanelRemoved( state, panelName ) {\n\treturn state.removedPanels.includes( panelName );\n}\n\n/**\n * Returns true if the given panel is enabled, or false otherwise. Panels are\n * enabled by default.\n *\n * @param {Object} state     Global application state.\n * @param {string} panelName A string that identifies the panel.\n *\n * @return {boolean} Whether or not the panel is enabled.\n */\nexport const isEditorPanelEnabled = createRegistrySelector(\n\t( select ) => ( state, panelName ) => {\n\t\t// For backward compatibility, we check edit-post\n\t\t// even though now this is in \"editor\" package.\n\t\tconst inactivePanels = select( preferencesStore ).get(\n\t\t\t'core',\n\t\t\t'inactivePanels'\n\t\t);\n\t\treturn (\n\t\t\t! isEditorPanelRemoved( state, panelName ) &&\n\t\t\t! inactivePanels?.includes( panelName )\n\t\t);\n\t}\n);\n\n/**\n * Returns true if the given panel is open, or false otherwise. Panels are\n * closed by default.\n *\n * @param {Object} state     Global application state.\n * @param {string} panelName A string that identifies the panel.\n *\n * @return {boolean} Whether or not the panel is open.\n */\nexport const isEditorPanelOpened = createRegistrySelector(\n\t( select ) => ( state, panelName ) => {\n\t\t// For backward compatibility, we check edit-post\n\t\t// even though now this is in \"editor\" package.\n\t\tconst openPanels = select( preferencesStore ).get(\n\t\t\t'core',\n\t\t\t'openPanels'\n\t\t);\n\t\treturn !! openPanels?.includes( panelName );\n\t}\n);\n\n/**\n * A block selection object.\n *\n * @typedef {Object} WPBlockSelection\n *\n * @property {string} clientId     A block client ID.\n * @property {string} attributeKey A block attribute key.\n * @property {number} offset       An attribute value offset, based on the rich\n *                                 text value. See `wp.richText.create`.\n */\n\n/**\n * Returns the current selection start.\n *\n * @param {Object} state\n * @return {WPBlockSelection} The selection start.\n *\n * @deprecated since Gutenberg 10.0.0.\n */\nexport function getEditorSelectionStart( state ) {\n\tdeprecated( \"select('core/editor').getEditorSelectionStart\", {\n\t\tsince: '5.8',\n\t\talternative: \"select('core/editor').getEditorSelection\",\n\t} );\n\treturn getEditedPostAttribute( state, 'selection' )?.selectionStart;\n}\n\n/**\n * Returns the current selection end.\n *\n * @param {Object} state\n * @return {WPBlockSelection} The selection end.\n *\n * @deprecated since Gutenberg 10.0.0.\n */\nexport function getEditorSelectionEnd( state ) {\n\tdeprecated( \"select('core/editor').getEditorSelectionStart\", {\n\t\tsince: '5.8',\n\t\talternative: \"select('core/editor').getEditorSelection\",\n\t} );\n\treturn getEditedPostAttribute( state, 'selection' )?.selectionEnd;\n}\n\n/**\n * Returns the current selection.\n *\n * @param {Object} state\n * @return {WPBlockSelection} The selection end.\n */\nexport function getEditorSelection( state ) {\n\treturn getEditedPostAttribute( state, 'selection' );\n}\n\n/**\n * Is the editor ready\n *\n * @param {Object} state\n * @return {boolean} is Ready.\n */\nexport function __unstableIsEditorReady( state ) {\n\treturn !! state.postId;\n}\n\n/**\n * Returns the post editor settings.\n *\n * @param {Object} state Editor state.\n *\n * @return {Object} The editor settings object.\n */\nexport function getEditorSettings( state ) {\n\treturn state.editorSettings;\n}\n\n/**\n * Returns the post editor's rendering mode.\n *\n * @param {Object} state Editor state.\n *\n * @return {string} Rendering mode.\n */\nexport function getRenderingMode( state ) {\n\treturn state.renderingMode;\n}\n\n/**\n * Returns the current editing canvas device type.\n *\n * @param {Object} state Global application state.\n *\n * @return {string} Device type.\n */\nexport function getDeviceType( state ) {\n\treturn state.deviceType;\n}\n\n/**\n * Returns true if the list view is opened.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether the list view is opened.\n */\nexport function isListViewOpened( state ) {\n\treturn state.listViewPanel;\n}\n\n/**\n * Returns true if the inserter is opened.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether the inserter is opened.\n */\nexport function isInserterOpened( state ) {\n\treturn !! state.blockInserterPanel;\n}\n\n/**\n * Returns the current editing mode.\n *\n * @param {Object} state Global application state.\n *\n * @return {string} Editing mode.\n */\nexport const getEditorMode = createRegistrySelector(\n\t( select ) => () =>\n\t\tselect( preferencesStore ).get( 'core', 'editorMode' ) ?? 'visual'\n);\n\n/*\n * Backward compatibility\n */\n\n/**\n * Returns state object prior to a specified optimist transaction ID, or `null`\n * if the transaction corresponding to the given ID cannot be found.\n *\n * @deprecated since Gutenberg 9.7.0.\n */\nexport function getStateBeforeOptimisticTransaction() {\n\tdeprecated( \"select('core/editor').getStateBeforeOptimisticTransaction\", {\n\t\tsince: '5.7',\n\t\thint: 'No state history is kept on this store anymore',\n\t} );\n\n\treturn null;\n}\n/**\n * Returns true if an optimistic transaction is pending commit, for which the\n * before state satisfies the given predicate function.\n *\n * @deprecated since Gutenberg 9.7.0.\n */\nexport function inSomeHistory() {\n\tdeprecated( \"select('core/editor').inSomeHistory\", {\n\t\tsince: '5.7',\n\t\thint: 'No state history is kept on this store anymore',\n\t} );\n\treturn false;\n}\n\nfunction getBlockEditorSelector( name ) {\n\treturn createRegistrySelector( ( select ) => ( state, ...args ) => {\n\t\tdeprecated( \"`wp.data.select( 'core/editor' ).\" + name + '`', {\n\t\t\tsince: '5.3',\n\t\t\talternative: \"`wp.data.select( 'core/block-editor' ).\" + name + '`',\n\t\t\tversion: '6.2',\n\t\t} );\n\n\t\treturn select( blockEditorStore )[ name ]( ...args );\n\t} );\n}\n\n/**\n * @see getBlockName in core/block-editor store.\n */\nexport const getBlockName = getBlockEditorSelector( 'getBlockName' );\n\n/**\n * @see isBlockValid in core/block-editor store.\n */\nexport const isBlockValid = getBlockEditorSelector( 'isBlockValid' );\n\n/**\n * @see getBlockAttributes in core/block-editor store.\n */\nexport const getBlockAttributes =\n\tgetBlockEditorSelector( 'getBlockAttributes' );\n\n/**\n * @see getBlock in core/block-editor store.\n */\nexport const getBlock = getBlockEditorSelector( 'getBlock' );\n\n/**\n * @see getBlocks in core/block-editor store.\n */\nexport const getBlocks = getBlockEditorSelector( 'getBlocks' );\n\n/**\n * @see getClientIdsOfDescendants in core/block-editor store.\n */\nexport const getClientIdsOfDescendants = getBlockEditorSelector(\n\t'getClientIdsOfDescendants'\n);\n\n/**\n * @see getClientIdsWithDescendants in core/block-editor store.\n */\nexport const getClientIdsWithDescendants = getBlockEditorSelector(\n\t'getClientIdsWithDescendants'\n);\n\n/**\n * @see getGlobalBlockCount in core/block-editor store.\n */\nexport const getGlobalBlockCount = getBlockEditorSelector(\n\t'getGlobalBlockCount'\n);\n\n/**\n * @see getBlocksByClientId in core/block-editor store.\n */\nexport const getBlocksByClientId = getBlockEditorSelector(\n\t'getBlocksByClientId'\n);\n\n/**\n * @see getBlockCount in core/block-editor store.\n */\nexport const getBlockCount = getBlockEditorSelector( 'getBlockCount' );\n\n/**\n * @see getBlockSelectionStart in core/block-editor store.\n */\nexport const getBlockSelectionStart = getBlockEditorSelector(\n\t'getBlockSelectionStart'\n);\n\n/**\n * @see getBlockSelectionEnd in core/block-editor store.\n */\nexport const getBlockSelectionEnd = getBlockEditorSelector(\n\t'getBlockSelectionEnd'\n);\n\n/**\n * @see getSelectedBlockCount in core/block-editor store.\n */\nexport const getSelectedBlockCount = getBlockEditorSelector(\n\t'getSelectedBlockCount'\n);\n\n/**\n * @see hasSelectedBlock in core/block-editor store.\n */\nexport const hasSelectedBlock = getBlockEditorSelector( 'hasSelectedBlock' );\n\n/**\n * @see getSelectedBlockClientId in core/block-editor store.\n */\nexport const getSelectedBlockClientId = getBlockEditorSelector(\n\t'getSelectedBlockClientId'\n);\n\n/**\n * @see getSelectedBlock in core/block-editor store.\n */\nexport const getSelectedBlock = getBlockEditorSelector( 'getSelectedBlock' );\n\n/**\n * @see getBlockRootClientId in core/block-editor store.\n */\nexport const getBlockRootClientId = getBlockEditorSelector(\n\t'getBlockRootClientId'\n);\n\n/**\n * @see getBlockHierarchyRootClientId in core/block-editor store.\n */\nexport const getBlockHierarchyRootClientId = getBlockEditorSelector(\n\t'getBlockHierarchyRootClientId'\n);\n\n/**\n * @see getAdjacentBlockClientId in core/block-editor store.\n */\nexport const getAdjacentBlockClientId = getBlockEditorSelector(\n\t'getAdjacentBlockClientId'\n);\n\n/**\n * @see getPreviousBlockClientId in core/block-editor store.\n */\nexport const getPreviousBlockClientId = getBlockEditorSelector(\n\t'getPreviousBlockClientId'\n);\n\n/**\n * @see getNextBlockClientId in core/block-editor store.\n */\nexport const getNextBlockClientId = getBlockEditorSelector(\n\t'getNextBlockClientId'\n);\n\n/**\n * @see getSelectedBlocksInitialCaretPosition in core/block-editor store.\n */\nexport const getSelectedBlocksInitialCaretPosition = getBlockEditorSelector(\n\t'getSelectedBlocksInitialCaretPosition'\n);\n\n/**\n * @see getMultiSelectedBlockClientIds in core/block-editor store.\n */\nexport const getMultiSelectedBlockClientIds = getBlockEditorSelector(\n\t'getMultiSelectedBlockClientIds'\n);\n\n/**\n * @see getMultiSelectedBlocks in core/block-editor store.\n */\nexport const getMultiSelectedBlocks = getBlockEditorSelector(\n\t'getMultiSelectedBlocks'\n);\n\n/**\n * @see getFirstMultiSelectedBlockClientId in core/block-editor store.\n */\nexport const getFirstMultiSelectedBlockClientId = getBlockEditorSelector(\n\t'getFirstMultiSelectedBlockClientId'\n);\n\n/**\n * @see getLastMultiSelectedBlockClientId in core/block-editor store.\n */\nexport const getLastMultiSelectedBlockClientId = getBlockEditorSelector(\n\t'getLastMultiSelectedBlockClientId'\n);\n\n/**\n * @see isFirstMultiSelectedBlock in core/block-editor store.\n */\nexport const isFirstMultiSelectedBlock = getBlockEditorSelector(\n\t'isFirstMultiSelectedBlock'\n);\n\n/**\n * @see isBlockMultiSelected in core/block-editor store.\n */\nexport const isBlockMultiSelected = getBlockEditorSelector(\n\t'isBlockMultiSelected'\n);\n\n/**\n * @see isAncestorMultiSelected in core/block-editor store.\n */\nexport const isAncestorMultiSelected = getBlockEditorSelector(\n\t'isAncestorMultiSelected'\n);\n\n/**\n * @see getMultiSelectedBlocksStartClientId in core/block-editor store.\n */\nexport const getMultiSelectedBlocksStartClientId = getBlockEditorSelector(\n\t'getMultiSelectedBlocksStartClientId'\n);\n\n/**\n * @see getMultiSelectedBlocksEndClientId in core/block-editor store.\n */\nexport const getMultiSelectedBlocksEndClientId = getBlockEditorSelector(\n\t'getMultiSelectedBlocksEndClientId'\n);\n\n/**\n * @see getBlockOrder in core/block-editor store.\n */\nexport const getBlockOrder = getBlockEditorSelector( 'getBlockOrder' );\n\n/**\n * @see getBlockIndex in core/block-editor store.\n */\nexport const getBlockIndex = getBlockEditorSelector( 'getBlockIndex' );\n\n/**\n * @see isBlockSelected in core/block-editor store.\n */\nexport const isBlockSelected = getBlockEditorSelector( 'isBlockSelected' );\n\n/**\n * @see hasSelectedInnerBlock in core/block-editor store.\n */\nexport const hasSelectedInnerBlock = getBlockEditorSelector(\n\t'hasSelectedInnerBlock'\n);\n\n/**\n * @see isBlockWithinSelection in core/block-editor store.\n */\nexport const isBlockWithinSelection = getBlockEditorSelector(\n\t'isBlockWithinSelection'\n);\n\n/**\n * @see hasMultiSelection in core/block-editor store.\n */\nexport const hasMultiSelection = getBlockEditorSelector( 'hasMultiSelection' );\n\n/**\n * @see isMultiSelecting in core/block-editor store.\n */\nexport const isMultiSelecting = getBlockEditorSelector( 'isMultiSelecting' );\n\n/**\n * @see isSelectionEnabled in core/block-editor store.\n */\nexport const isSelectionEnabled =\n\tgetBlockEditorSelector( 'isSelectionEnabled' );\n\n/**\n * @see getBlockMode in core/block-editor store.\n */\nexport const getBlockMode = getBlockEditorSelector( 'getBlockMode' );\n\n/**\n * @see isTyping in core/block-editor store.\n */\nexport const isTyping = getBlockEditorSelector( 'isTyping' );\n\n/**\n * @see isCaretWithinFormattedText in core/block-editor store.\n */\nexport const isCaretWithinFormattedText = getBlockEditorSelector(\n\t'isCaretWithinFormattedText'\n);\n\n/**\n * @see getBlockInsertionPoint in core/block-editor store.\n */\nexport const getBlockInsertionPoint = getBlockEditorSelector(\n\t'getBlockInsertionPoint'\n);\n\n/**\n * @see isBlockInsertionPointVisible in core/block-editor store.\n */\nexport const isBlockInsertionPointVisible = getBlockEditorSelector(\n\t'isBlockInsertionPointVisible'\n);\n\n/**\n * @see isValidTemplate in core/block-editor store.\n */\nexport const isValidTemplate = getBlockEditorSelector( 'isValidTemplate' );\n\n/**\n * @see getTemplate in core/block-editor store.\n */\nexport const getTemplate = getBlockEditorSelector( 'getTemplate' );\n\n/**\n * @see getTemplateLock in core/block-editor store.\n */\nexport const getTemplateLock = getBlockEditorSelector( 'getTemplateLock' );\n\n/**\n * @see canInsertBlockType in core/block-editor store.\n */\nexport const canInsertBlockType =\n\tgetBlockEditorSelector( 'canInsertBlockType' );\n\n/**\n * @see getInserterItems in core/block-editor store.\n */\nexport const getInserterItems = getBlockEditorSelector( 'getInserterItems' );\n\n/**\n * @see hasInserterItems in core/block-editor store.\n */\nexport const hasInserterItems = getBlockEditorSelector( 'hasInserterItems' );\n\n/**\n * @see getBlockListSettings in core/block-editor store.\n */\nexport const getBlockListSettings = getBlockEditorSelector(\n\t'getBlockListSettings'\n);\n\n/**\n * Returns the default template types.\n *\n * @param {Object} state Global application state.\n *\n * @return {Object} The template types.\n */\nexport function __experimentalGetDefaultTemplateTypes( state ) {\n\treturn getEditorSettings( state )?.defaultTemplateTypes;\n}\n\n/**\n * Returns the default template part areas.\n *\n * @param {Object} state Global application state.\n *\n * @return {Array} The template part areas.\n */\nexport const __experimentalGetDefaultTemplatePartAreas = createSelector(\n\t( state ) => {\n\t\tconst areas =\n\t\t\tgetEditorSettings( state )?.defaultTemplatePartAreas ?? [];\n\t\treturn areas.map( ( item ) => {\n\t\t\treturn { ...item, icon: getTemplatePartIcon( item.icon ) };\n\t\t} );\n\t},\n\t( state ) => [ getEditorSettings( state )?.defaultTemplatePartAreas ]\n);\n\n/**\n * Returns a default template type searched by slug.\n *\n * @param {Object} state Global application state.\n * @param {string} slug  The template type slug.\n *\n * @return {Object} The template type.\n */\nexport const __experimentalGetDefaultTemplateType = createSelector(\n\t( state, slug ) => {\n\t\tconst templateTypes = __experimentalGetDefaultTemplateTypes( state );\n\t\tif ( ! templateTypes ) {\n\t\t\treturn EMPTY_OBJECT;\n\t\t}\n\n\t\treturn (\n\t\t\tObject.values( templateTypes ).find(\n\t\t\t\t( type ) => type.slug === slug\n\t\t\t) ?? EMPTY_OBJECT\n\t\t);\n\t},\n\t( state ) => [ __experimentalGetDefaultTemplateTypes( state ) ]\n);\n\n/**\n * Given a template entity, return information about it which is ready to be\n * rendered, such as the title, description, and icon.\n *\n * @param {Object} state    Global application state.\n * @param {Object} template The template for which we need information.\n * @return {Object} Information about the template, including title, description, and icon.\n */\nexport const __experimentalGetTemplateInfo = createSelector(\n\t( state, template ) => {\n\t\tif ( ! template ) {\n\t\t\treturn EMPTY_OBJECT;\n\t\t}\n\n\t\tconst { description, slug, title, area } = template;\n\t\tconst { title: defaultTitle, description: defaultDescription } =\n\t\t\t__experimentalGetDefaultTemplateType( state, slug );\n\n\t\tconst templateTitle =\n\t\t\ttypeof title === 'string' ? title : title?.rendered;\n\t\tconst templateDescription =\n\t\t\ttypeof description === 'string' ? description : description?.raw;\n\t\tconst templateIcon =\n\t\t\t__experimentalGetDefaultTemplatePartAreas( state ).find(\n\t\t\t\t( item ) => area === item.area\n\t\t\t)?.icon || layout;\n\n\t\treturn {\n\t\t\ttitle:\n\t\t\t\ttemplateTitle && templateTitle !== slug\n\t\t\t\t\t? templateTitle\n\t\t\t\t\t: defaultTitle || slug,\n\t\t\tdescription: templateDescription || defaultDescription,\n\t\t\ticon: templateIcon,\n\t\t};\n\t},\n\t( state ) => [\n\t\t__experimentalGetDefaultTemplateTypes( state ),\n\t\t__experimentalGetDefaultTemplatePartAreas( state ),\n\t]\n);\n\n/**\n * Returns a post type label depending on the current post.\n *\n * @param {Object} state Global application state.\n *\n * @return {string|undefined} The post type label if available, otherwise undefined.\n */\nexport const getPostTypeLabel = createRegistrySelector(\n\t( select ) => ( state ) => {\n\t\tconst currentPostType = getCurrentPostType( state );\n\t\tconst postType = select( coreStore ).getPostType( currentPostType );\n\t\t// Disable reason: Post type labels object is shaped like this.\n\t\t// eslint-disable-next-line camelcase\n\t\treturn postType?.labels?.singular_name;\n\t}\n);\n\n/**\n * Returns true if the publish sidebar is opened.\n *\n * @param {Object} state Global application state\n *\n * @return {boolean} Whether the publish sidebar is open.\n */\nexport function isPublishSidebarOpened( state ) {\n\treturn state.publishSidebarActive;\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"a11y\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"apiFetch\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"notices\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"hooks\"];","/**\n * Function returning a sessionStorage key to set or retrieve a given post's\n * automatic session backup.\n *\n * Keys are crucially prefixed with 'wp-autosave-' so that wp-login.php's\n * `loggedout` handler can clear sessionStorage of any user-private content.\n *\n * @see https://github.com/WordPress/wordpress-develop/blob/6dad32d2aed47e6c0cf2aee8410645f6d7aba6bd/src/wp-login.php#L103\n *\n * @param {string}  postId    Post ID.\n * @param {boolean} isPostNew Whether post new.\n *\n * @return {string} sessionStorage key\n */\nfunction postKey( postId, isPostNew ) {\n\treturn `wp-autosave-block-editor-post-${\n\t\tisPostNew ? 'auto-draft' : postId\n\t}`;\n}\n\nexport function localAutosaveGet( postId, isPostNew ) {\n\treturn window.sessionStorage.getItem( postKey( postId, isPostNew ) );\n}\n\nexport function localAutosaveSet( postId, isPostNew, title, content, excerpt ) {\n\twindow.sessionStorage.setItem(\n\t\tpostKey( postId, isPostNew ),\n\t\tJSON.stringify( {\n\t\t\tpost_title: title,\n\t\t\tcontent,\n\t\t\texcerpt,\n\t\t} )\n\t);\n}\n\nexport function localAutosaveClear( postId, isPostNew ) {\n\twindow.sessionStorage.removeItem( postKey( postId, isPostNew ) );\n}\n","/**\n * WordPress dependencies\n */\nimport { speak } from '@wordpress/a11y';\nimport apiFetch from '@wordpress/api-fetch';\nimport deprecated from '@wordpress/deprecated';\nimport {\n\tparse,\n\tsynchronizeBlocksWithTemplate,\n\t__unstableSerializeAndClean,\n} from '@wordpress/blocks';\nimport { store as noticesStore } from '@wordpress/notices';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { applyFilters } from '@wordpress/hooks';\nimport { store as preferencesStore } from '@wordpress/preferences';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { TRASH_POST_NOTICE_ID } from './constants';\nimport { localAutosaveSet } from './local-autosave';\nimport {\n\tgetNotificationArgumentsForSaveSuccess,\n\tgetNotificationArgumentsForSaveFail,\n\tgetNotificationArgumentsForTrashFail,\n} from './utils/notice-builder';\n\n/**\n * Returns an action generator used in signalling that editor has initialized with\n * the specified post object and editor settings.\n *\n * @param {Object} post     Post object.\n * @param {Object} edits    Initial edited attributes object.\n * @param {Array?} template Block Template.\n */\nexport const setupEditor =\n\t( post, edits, template ) =>\n\t( { dispatch } ) => {\n\t\tdispatch.setEditedPost( post.type, post.id );\n\t\t// Apply a template for new posts only, if exists.\n\t\tconst isNewPost = post.status === 'auto-draft';\n\t\tif ( isNewPost && template ) {\n\t\t\t// In order to ensure maximum of a single parse during setup, edits are\n\t\t\t// included as part of editor setup action. Assume edited content as\n\t\t\t// canonical if provided, falling back to post.\n\t\t\tlet content;\n\t\t\tif ( 'content' in edits ) {\n\t\t\t\tcontent = edits.content;\n\t\t\t} else {\n\t\t\t\tcontent = post.content.raw;\n\t\t\t}\n\t\t\tlet blocks = parse( content );\n\t\t\tblocks = synchronizeBlocksWithTemplate( blocks, template );\n\t\t\tdispatch.resetEditorBlocks( blocks, {\n\t\t\t\t__unstableShouldCreateUndoLevel: false,\n\t\t\t} );\n\t\t}\n\t\tif (\n\t\t\tedits &&\n\t\t\tObject.values( edits ).some(\n\t\t\t\t( [ key, edit ] ) =>\n\t\t\t\t\tedit !== ( post[ key ]?.raw ?? post[ key ] )\n\t\t\t)\n\t\t) {\n\t\t\tdispatch.editPost( edits );\n\t\t}\n\t};\n\n/**\n * Returns an action object signalling that the editor is being destroyed and\n * that any necessary state or side-effect cleanup should occur.\n *\n * @deprecated\n *\n * @return {Object} Action object.\n */\nexport function __experimentalTearDownEditor() {\n\tdeprecated(\n\t\t\"wp.data.dispatch( 'core/editor' ).__experimentalTearDownEditor\",\n\t\t{\n\t\t\tsince: '6.5',\n\t\t}\n\t);\n\treturn { type: 'DO_NOTHING' };\n}\n\n/**\n * Returns an action object used in signalling that the latest version of the\n * post has been received, either by initialization or save.\n *\n * @deprecated Since WordPress 6.0.\n */\nexport function resetPost() {\n\tdeprecated( \"wp.data.dispatch( 'core/editor' ).resetPost\", {\n\t\tsince: '6.0',\n\t\tversion: '6.3',\n\t\talternative: 'Initialize the editor with the setupEditorState action',\n\t} );\n\treturn { type: 'DO_NOTHING' };\n}\n\n/**\n * Returns an action object used in signalling that a patch of updates for the\n * latest version of the post have been received.\n *\n * @return {Object} Action object.\n * @deprecated since Gutenberg 9.7.0.\n */\nexport function updatePost() {\n\tdeprecated( \"wp.data.dispatch( 'core/editor' ).updatePost\", {\n\t\tsince: '5.7',\n\t\talternative: 'Use the core entities store instead',\n\t} );\n\treturn {\n\t\ttype: 'DO_NOTHING',\n\t};\n}\n\n/**\n * Setup the editor state.\n *\n * @deprecated\n *\n * @param {Object} post Post object.\n */\nexport function setupEditorState( post ) {\n\tdeprecated( \"wp.data.dispatch( 'core/editor' ).setupEditorState\", {\n\t\tsince: '6.5',\n\t\talternative: \"wp.data.dispatch( 'core/editor' ).setEditedPost\",\n\t} );\n\treturn setEditedPost( post.type, post.id );\n}\n\n/**\n * Returns an action that sets the current post Type and post ID.\n *\n * @param {string} postType Post Type.\n * @param {string} postId   Post ID.\n *\n * @return {Object} Action object.\n */\nexport function setEditedPost( postType, postId ) {\n\treturn {\n\t\ttype: 'SET_EDITED_POST',\n\t\tpostType,\n\t\tpostId,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that attributes of the post have\n * been edited.\n *\n * @param {Object} edits   Post attributes to edit.\n * @param {Object} options Options for the edit.\n */\nexport const editPost =\n\t( edits, options ) =>\n\t( { select, registry } ) => {\n\t\tconst { id, type } = select.getCurrentPost();\n\t\tregistry\n\t\t\t.dispatch( coreStore )\n\t\t\t.editEntityRecord( 'postType', type, id, edits, options );\n\t};\n\n/**\n * Action for saving the current post in the editor.\n *\n * @param {Object} options\n */\nexport const savePost =\n\t( options = {} ) =>\n\tasync ( { select, dispatch, registry } ) => {\n\t\tif ( ! select.isEditedPostSaveable() ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst content = select.getEditedPostContent();\n\n\t\tif ( ! options.isAutosave ) {\n\t\t\tdispatch.editPost( { content }, { undoIgnore: true } );\n\t\t}\n\n\t\tconst previousRecord = select.getCurrentPost();\n\t\tconst edits = {\n\t\t\tid: previousRecord.id,\n\t\t\t...registry\n\t\t\t\t.select( coreStore )\n\t\t\t\t.getEntityRecordNonTransientEdits(\n\t\t\t\t\t'postType',\n\t\t\t\t\tpreviousRecord.type,\n\t\t\t\t\tpreviousRecord.id\n\t\t\t\t),\n\t\t\tcontent,\n\t\t};\n\t\tdispatch( { type: 'REQUEST_POST_UPDATE_START', options } );\n\t\tawait registry\n\t\t\t.dispatch( coreStore )\n\t\t\t.saveEntityRecord(\n\t\t\t\t'postType',\n\t\t\t\tpreviousRecord.type,\n\t\t\t\tedits,\n\t\t\t\toptions\n\t\t\t);\n\n\t\tlet error = registry\n\t\t\t.select( coreStore )\n\t\t\t.getLastEntitySaveError(\n\t\t\t\t'postType',\n\t\t\t\tpreviousRecord.type,\n\t\t\t\tpreviousRecord.id\n\t\t\t);\n\n\t\tif ( ! error ) {\n\t\t\tawait applyFilters(\n\t\t\t\t'editor.__unstableSavePost',\n\t\t\t\tPromise.resolve(),\n\t\t\t\toptions\n\t\t\t).catch( ( err ) => {\n\t\t\t\terror = err;\n\t\t\t} );\n\t\t}\n\t\tdispatch( { type: 'REQUEST_POST_UPDATE_FINISH', options } );\n\n\t\tif ( error ) {\n\t\t\tconst args = getNotificationArgumentsForSaveFail( {\n\t\t\t\tpost: previousRecord,\n\t\t\t\tedits,\n\t\t\t\terror,\n\t\t\t} );\n\t\t\tif ( args.length ) {\n\t\t\t\tregistry.dispatch( noticesStore ).createErrorNotice( ...args );\n\t\t\t}\n\t\t} else {\n\t\t\tconst updatedRecord = select.getCurrentPost();\n\t\t\tconst args = getNotificationArgumentsForSaveSuccess( {\n\t\t\t\tpreviousPost: previousRecord,\n\t\t\t\tpost: updatedRecord,\n\t\t\t\tpostType: await registry\n\t\t\t\t\t.resolveSelect( coreStore )\n\t\t\t\t\t.getPostType( updatedRecord.type ),\n\t\t\t\toptions,\n\t\t\t} );\n\t\t\tif ( args.length ) {\n\t\t\t\tregistry\n\t\t\t\t\t.dispatch( noticesStore )\n\t\t\t\t\t.createSuccessNotice( ...args );\n\t\t\t}\n\t\t\t// Make sure that any edits after saving create an undo level and are\n\t\t\t// considered for change detection.\n\t\t\tif ( ! options.isAutosave ) {\n\t\t\t\tregistry\n\t\t\t\t\t.dispatch( blockEditorStore )\n\t\t\t\t\t.__unstableMarkLastChangeAsPersistent();\n\t\t\t}\n\t\t}\n\t};\n\n/**\n * Action for refreshing the current post.\n *\n * @deprecated Since WordPress 6.0.\n */\nexport function refreshPost() {\n\tdeprecated( \"wp.data.dispatch( 'core/editor' ).refreshPost\", {\n\t\tsince: '6.0',\n\t\tversion: '6.3',\n\t\talternative: 'Use the core entities store instead',\n\t} );\n\treturn { type: 'DO_NOTHING' };\n}\n\n/**\n * Action for trashing the current post in the editor.\n */\nexport const trashPost =\n\t() =>\n\tasync ( { select, dispatch, registry } ) => {\n\t\tconst postTypeSlug = select.getCurrentPostType();\n\t\tconst postType = await registry\n\t\t\t.resolveSelect( coreStore )\n\t\t\t.getPostType( postTypeSlug );\n\t\tregistry.dispatch( noticesStore ).removeNotice( TRASH_POST_NOTICE_ID );\n\t\tconst { rest_base: restBase, rest_namespace: restNamespace = 'wp/v2' } =\n\t\t\tpostType;\n\t\tdispatch( { type: 'REQUEST_POST_DELETE_START' } );\n\t\ttry {\n\t\t\tconst post = select.getCurrentPost();\n\t\t\tawait apiFetch( {\n\t\t\t\tpath: `/${ restNamespace }/${ restBase }/${ post.id }`,\n\t\t\t\tmethod: 'DELETE',\n\t\t\t} );\n\n\t\t\tawait dispatch.savePost();\n\t\t} catch ( error ) {\n\t\t\tregistry\n\t\t\t\t.dispatch( noticesStore )\n\t\t\t\t.createErrorNotice(\n\t\t\t\t\t...getNotificationArgumentsForTrashFail( { error } )\n\t\t\t\t);\n\t\t}\n\t\tdispatch( { type: 'REQUEST_POST_DELETE_FINISH' } );\n\t};\n\n/**\n * Action that autosaves the current post.  This\n * includes server-side autosaving (default) and client-side (a.k.a. local)\n * autosaving (e.g. on the Web, the post might be committed to Session\n * Storage).\n *\n * @param {Object?} options Extra flags to identify the autosave.\n */\nexport const autosave =\n\t( { local = false, ...options } = {} ) =>\n\tasync ( { select, dispatch } ) => {\n\t\tconst post = select.getCurrentPost();\n\n\t\t// Currently template autosaving is not supported.\n\t\tif ( post.type === 'wp_template' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( local ) {\n\t\t\tconst isPostNew = select.isEditedPostNew();\n\t\t\tconst title = select.getEditedPostAttribute( 'title' );\n\t\t\tconst content = select.getEditedPostAttribute( 'content' );\n\t\t\tconst excerpt = select.getEditedPostAttribute( 'excerpt' );\n\t\t\tlocalAutosaveSet( post.id, isPostNew, title, content, excerpt );\n\t\t} else {\n\t\t\tawait dispatch.savePost( { isAutosave: true, ...options } );\n\t\t}\n\t};\n\nexport const __unstableSaveForPreview =\n\t( { forceIsAutosaveable } = {} ) =>\n\tasync ( { select, dispatch } ) => {\n\t\tif (\n\t\t\t( forceIsAutosaveable || select.isEditedPostAutosaveable() ) &&\n\t\t\t! select.isPostLocked()\n\t\t) {\n\t\t\tconst isDraft = [ 'draft', 'auto-draft' ].includes(\n\t\t\t\tselect.getEditedPostAttribute( 'status' )\n\t\t\t);\n\t\t\tif ( isDraft ) {\n\t\t\t\tawait dispatch.savePost( { isPreview: true } );\n\t\t\t} else {\n\t\t\t\tawait dispatch.autosave( { isPreview: true } );\n\t\t\t}\n\t\t}\n\n\t\treturn select.getEditedPostPreviewLink();\n\t};\n\n/**\n * Action that restores last popped state in undo history.\n */\nexport const redo =\n\t() =>\n\t( { registry } ) => {\n\t\tregistry.dispatch( coreStore ).redo();\n\t};\n\n/**\n * Action that pops a record from undo history and undoes the edit.\n */\nexport const undo =\n\t() =>\n\t( { registry } ) => {\n\t\tregistry.dispatch( coreStore ).undo();\n\t};\n\n/**\n * Action that creates an undo history record.\n *\n * @deprecated Since WordPress 6.0\n */\nexport function createUndoLevel() {\n\tdeprecated( \"wp.data.dispatch( 'core/editor' ).createUndoLevel\", {\n\t\tsince: '6.0',\n\t\tversion: '6.3',\n\t\talternative: 'Use the core entities store instead',\n\t} );\n\treturn { type: 'DO_NOTHING' };\n}\n\n/**\n * Action that locks the editor.\n *\n * @param {Object} lock Details about the post lock status, user, and nonce.\n * @return {Object} Action object.\n */\nexport function updatePostLock( lock ) {\n\treturn {\n\t\ttype: 'UPDATE_POST_LOCK',\n\t\tlock,\n\t};\n}\n\n/**\n * Enable the publish sidebar.\n */\nexport const enablePublishSidebar =\n\t() =>\n\t( { registry } ) => {\n\t\tregistry\n\t\t\t.dispatch( preferencesStore )\n\t\t\t.set( 'core', 'isPublishSidebarEnabled', true );\n\t};\n\n/**\n * Disables the publish sidebar.\n */\nexport const disablePublishSidebar =\n\t() =>\n\t( { registry } ) => {\n\t\tregistry\n\t\t\t.dispatch( preferencesStore )\n\t\t\t.set( 'core', 'isPublishSidebarEnabled', false );\n\t};\n\n/**\n * Action that locks post saving.\n *\n * @param {string} lockName The lock name.\n *\n * @example\n * ```\n * const { subscribe } = wp.data;\n *\n * const initialPostStatus = wp.data.select( 'core/editor' ).getEditedPostAttribute( 'status' );\n *\n * // Only allow publishing posts that are set to a future date.\n * if ( 'publish' !== initialPostStatus ) {\n *\n * \t// Track locking.\n * \tlet locked = false;\n *\n * \t// Watch for the publish event.\n * \tlet unssubscribe = subscribe( () => {\n * \t\tconst currentPostStatus = wp.data.select( 'core/editor' ).getEditedPostAttribute( 'status' );\n * \t\tif ( 'publish' !== currentPostStatus ) {\n *\n * \t\t\t// Compare the post date to the current date, lock the post if the date isn't in the future.\n * \t\t\tconst postDate = new Date( wp.data.select( 'core/editor' ).getEditedPostAttribute( 'date' ) );\n * \t\t\tconst currentDate = new Date();\n * \t\t\tif ( postDate.getTime() <= currentDate.getTime() ) {\n * \t\t\t\tif ( ! locked ) {\n * \t\t\t\t\tlocked = true;\n * \t\t\t\t\twp.data.dispatch( 'core/editor' ).lockPostSaving( 'futurelock' );\n * \t\t\t\t}\n * \t\t\t} else {\n * \t\t\t\tif ( locked ) {\n * \t\t\t\t\tlocked = false;\n * \t\t\t\t\twp.data.dispatch( 'core/editor' ).unlockPostSaving( 'futurelock' );\n * \t\t\t\t}\n * \t\t\t}\n * \t\t}\n * \t} );\n * }\n * ```\n *\n * @return {Object} Action object\n */\nexport function lockPostSaving( lockName ) {\n\treturn {\n\t\ttype: 'LOCK_POST_SAVING',\n\t\tlockName,\n\t};\n}\n\n/**\n * Action that unlocks post saving.\n *\n * @param {string} lockName The lock name.\n *\n * @example\n * ```\n * // Unlock post saving with the lock key `mylock`:\n * wp.data.dispatch( 'core/editor' ).unlockPostSaving( 'mylock' );\n * ```\n *\n * @return {Object} Action object\n */\nexport function unlockPostSaving( lockName ) {\n\treturn {\n\t\ttype: 'UNLOCK_POST_SAVING',\n\t\tlockName,\n\t};\n}\n\n/**\n * Action that locks post autosaving.\n *\n * @param {string} lockName The lock name.\n *\n * @example\n * ```\n * // Lock post autosaving with the lock key `mylock`:\n * wp.data.dispatch( 'core/editor' ).lockPostAutosaving( 'mylock' );\n * ```\n *\n * @return {Object} Action object\n */\nexport function lockPostAutosaving( lockName ) {\n\treturn {\n\t\ttype: 'LOCK_POST_AUTOSAVING',\n\t\tlockName,\n\t};\n}\n\n/**\n * Action that unlocks post autosaving.\n *\n * @param {string} lockName The lock name.\n *\n * @example\n * ```\n * // Unlock post saving with the lock key `mylock`:\n * wp.data.dispatch( 'core/editor' ).unlockPostAutosaving( 'mylock' );\n * ```\n *\n * @return {Object} Action object\n */\nexport function unlockPostAutosaving( lockName ) {\n\treturn {\n\t\ttype: 'UNLOCK_POST_AUTOSAVING',\n\t\tlockName,\n\t};\n}\n\n/**\n * Returns an action object used to signal that the blocks have been updated.\n *\n * @param {Array}   blocks  Block Array.\n * @param {?Object} options Optional options.\n */\nexport const resetEditorBlocks =\n\t( blocks, options = {} ) =>\n\t( { select, dispatch, registry } ) => {\n\t\tconst { __unstableShouldCreateUndoLevel, selection } = options;\n\t\tconst edits = { blocks, selection };\n\n\t\tif ( __unstableShouldCreateUndoLevel !== false ) {\n\t\t\tconst { id, type } = select.getCurrentPost();\n\t\t\tconst noChange =\n\t\t\t\tregistry\n\t\t\t\t\t.select( coreStore )\n\t\t\t\t\t.getEditedEntityRecord( 'postType', type, id ).blocks ===\n\t\t\t\tedits.blocks;\n\t\t\tif ( noChange ) {\n\t\t\t\tregistry\n\t\t\t\t\t.dispatch( coreStore )\n\t\t\t\t\t.__unstableCreateUndoLevel( 'postType', type, id );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// We create a new function here on every persistent edit\n\t\t\t// to make sure the edit makes the post dirty and creates\n\t\t\t// a new undo level.\n\t\t\tedits.content = ( { blocks: blocksForSerialization = [] } ) =>\n\t\t\t\t__unstableSerializeAndClean( blocksForSerialization );\n\t\t}\n\n\t\tdispatch.editPost( edits );\n\t};\n\n/*\n * Returns an action object used in signalling that the post editor settings have been updated.\n *\n * @param {Object} settings Updated settings\n *\n * @return {Object} Action object\n */\nexport function updateEditorSettings( settings ) {\n\treturn {\n\t\ttype: 'UPDATE_EDITOR_SETTINGS',\n\t\tsettings,\n\t};\n}\n\n/**\n * Returns an action used to set the rendering mode of the post editor. We support multiple rendering modes:\n *\n * -   `post-only`: This mode extracts the post blocks from the template and renders only those. The idea is to allow the user to edit the post/page in isolation without the wrapping template.\n * -   `template-locked`: This mode renders both the template and the post blocks but the template blocks are locked and can't be edited. The post blocks are editable.\n *\n * @param {string} mode Mode (one of 'post-only' or 'template-locked').\n */\nexport const setRenderingMode =\n\t( mode ) =>\n\t( { dispatch, registry, select } ) => {\n\t\tif ( select.__unstableIsEditorReady() ) {\n\t\t\t// We clear the block selection but we also need to clear the selection from the core store.\n\t\t\tregistry.dispatch( blockEditorStore ).clearSelectedBlock();\n\t\t\tdispatch.editPost( { selection: undefined }, { undoIgnore: true } );\n\t\t}\n\n\t\tdispatch( {\n\t\t\ttype: 'SET_RENDERING_MODE',\n\t\t\tmode,\n\t\t} );\n\t};\n\n/**\n * Action that changes the width of the editing canvas.\n *\n * @param {string} deviceType\n *\n * @return {Object} Action object.\n */\nexport function setDeviceType( deviceType ) {\n\treturn {\n\t\ttype: 'SET_DEVICE_TYPE',\n\t\tdeviceType,\n\t};\n}\n\n/**\n * Returns an action object used to enable or disable a panel in the editor.\n *\n * @param {string} panelName A string that identifies the panel to enable or disable.\n *\n * @return {Object} Action object.\n */\nexport const toggleEditorPanelEnabled =\n\t( panelName ) =>\n\t( { registry } ) => {\n\t\tconst inactivePanels =\n\t\t\tregistry\n\t\t\t\t.select( preferencesStore )\n\t\t\t\t.get( 'core', 'inactivePanels' ) ?? [];\n\n\t\tconst isPanelInactive = !! inactivePanels?.includes( panelName );\n\n\t\t// If the panel is inactive, remove it to enable it, else add it to\n\t\t// make it inactive.\n\t\tlet updatedInactivePanels;\n\t\tif ( isPanelInactive ) {\n\t\t\tupdatedInactivePanels = inactivePanels.filter(\n\t\t\t\t( invactivePanelName ) => invactivePanelName !== panelName\n\t\t\t);\n\t\t} else {\n\t\t\tupdatedInactivePanels = [ ...inactivePanels, panelName ];\n\t\t}\n\n\t\tregistry\n\t\t\t.dispatch( preferencesStore )\n\t\t\t.set( 'core', 'inactivePanels', updatedInactivePanels );\n\t};\n\n/**\n * Opens a closed panel and closes an open panel.\n *\n * @param {string} panelName A string that identifies the panel to open or close.\n */\nexport const toggleEditorPanelOpened =\n\t( panelName ) =>\n\t( { registry } ) => {\n\t\tconst openPanels =\n\t\t\tregistry.select( preferencesStore ).get( 'core', 'openPanels' ) ??\n\t\t\t[];\n\n\t\tconst isPanelOpen = !! openPanels?.includes( panelName );\n\n\t\t// If the panel is open, remove it to close it, else add it to\n\t\t// make it open.\n\t\tlet updatedOpenPanels;\n\t\tif ( isPanelOpen ) {\n\t\t\tupdatedOpenPanels = openPanels.filter(\n\t\t\t\t( openPanelName ) => openPanelName !== panelName\n\t\t\t);\n\t\t} else {\n\t\t\tupdatedOpenPanels = [ ...openPanels, panelName ];\n\t\t}\n\n\t\tregistry\n\t\t\t.dispatch( preferencesStore )\n\t\t\t.set( 'core', 'openPanels', updatedOpenPanels );\n\t};\n\n/**\n * Returns an action object used to remove a panel from the editor.\n *\n * @param {string} panelName A string that identifies the panel to remove.\n *\n * @return {Object} Action object.\n */\nexport function removeEditorPanel( panelName ) {\n\treturn {\n\t\ttype: 'REMOVE_PANEL',\n\t\tpanelName,\n\t};\n}\n\n/**\n * Returns an action object used to open/close the inserter.\n *\n * @param {boolean|Object} value                Whether the inserter should be\n *                                              opened (true) or closed (false).\n *                                              To specify an insertion point,\n *                                              use an object.\n * @param {string}         value.rootClientId   The root client ID to insert at.\n * @param {number}         value.insertionIndex The index to insert at.\n *\n * @return {Object} Action object.\n */\nexport function setIsInserterOpened( value ) {\n\treturn {\n\t\ttype: 'SET_IS_INSERTER_OPENED',\n\t\tvalue,\n\t};\n}\n\n/**\n * Returns an action object used to open/close the list view.\n *\n * @param {boolean} isOpen A boolean representing whether the list view should be opened or closed.\n * @return {Object} Action object.\n */\nexport function setIsListViewOpened( isOpen ) {\n\treturn {\n\t\ttype: 'SET_IS_LIST_VIEW_OPENED',\n\t\tisOpen,\n\t};\n}\n\n/**\n * Action that toggles Distraction free mode.\n * Distraction free mode expects there are no sidebars, as due to the\n * z-index values set, you can't close sidebars.\n */\nexport const toggleDistractionFree =\n\t() =>\n\t( { dispatch, registry } ) => {\n\t\tconst isDistractionFree = registry\n\t\t\t.select( preferencesStore )\n\t\t\t.get( 'core', 'distractionFree' );\n\t\tif ( isDistractionFree ) {\n\t\t\tregistry\n\t\t\t\t.dispatch( preferencesStore )\n\t\t\t\t.set( 'core', 'fixedToolbar', false );\n\t\t}\n\t\tif ( ! isDistractionFree ) {\n\t\t\tregistry.batch( () => {\n\t\t\t\tregistry\n\t\t\t\t\t.dispatch( preferencesStore )\n\t\t\t\t\t.set( 'core', 'fixedToolbar', true );\n\t\t\t\tdispatch.setIsInserterOpened( false );\n\t\t\t\tdispatch.setIsListViewOpened( false );\n\t\t\t} );\n\t\t}\n\t\tregistry.batch( () => {\n\t\t\tregistry\n\t\t\t\t.dispatch( preferencesStore )\n\t\t\t\t.set( 'core', 'distractionFree', ! isDistractionFree );\n\t\t\tregistry\n\t\t\t\t.dispatch( noticesStore )\n\t\t\t\t.createInfoNotice(\n\t\t\t\t\tisDistractionFree\n\t\t\t\t\t\t? __( 'Distraction free off.' )\n\t\t\t\t\t\t: __( 'Distraction free on.' ),\n\t\t\t\t\t{\n\t\t\t\t\t\tid: 'core/editor/distraction-free-mode/notice',\n\t\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t\t\tactions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: __( 'Undo' ),\n\t\t\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\t\t\tregistry.batch( () => {\n\t\t\t\t\t\t\t\t\t\tregistry\n\t\t\t\t\t\t\t\t\t\t\t.dispatch( preferencesStore )\n\t\t\t\t\t\t\t\t\t\t\t.set(\n\t\t\t\t\t\t\t\t\t\t\t\t'core',\n\t\t\t\t\t\t\t\t\t\t\t\t'fixedToolbar',\n\t\t\t\t\t\t\t\t\t\t\t\tisDistractionFree ? true : false\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tregistry\n\t\t\t\t\t\t\t\t\t\t\t.dispatch( preferencesStore )\n\t\t\t\t\t\t\t\t\t\t\t.toggle(\n\t\t\t\t\t\t\t\t\t\t\t\t'core',\n\t\t\t\t\t\t\t\t\t\t\t\t'distractionFree'\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t} );\n\t};\n\n/**\n * Triggers an action used to switch editor mode.\n *\n * @param {string} mode The editor mode.\n */\nexport const switchEditorMode =\n\t( mode ) =>\n\t( { dispatch, registry } ) => {\n\t\tregistry.dispatch( preferencesStore ).set( 'core', 'editorMode', mode );\n\n\t\t// Unselect blocks when we switch to a non visual mode.\n\t\tif ( mode !== 'visual' ) {\n\t\t\tregistry.dispatch( blockEditorStore ).clearSelectedBlock();\n\t\t}\n\n\t\tif ( mode === 'visual' ) {\n\t\t\tspeak( __( 'Visual editor selected' ), 'assertive' );\n\t\t} else if ( mode === 'text' ) {\n\t\t\tconst isDistractionFree = registry\n\t\t\t\t.select( preferencesStore )\n\t\t\t\t.get( 'core', 'distractionFree' );\n\t\t\tif ( isDistractionFree ) {\n\t\t\t\tdispatch.toggleDistractionFree();\n\t\t\t}\n\t\t\tspeak( __( 'Code editor selected' ), 'assertive' );\n\t\t}\n\t};\n\n/**\n * Returns an action object used in signalling that the user opened the publish\n * sidebar.\n *\n * @return {Object} Action object\n */\nexport function openPublishSidebar() {\n\treturn {\n\t\ttype: 'OPEN_PUBLISH_SIDEBAR',\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the user closed the\n * publish sidebar.\n *\n * @return {Object} Action object.\n */\nexport function closePublishSidebar() {\n\treturn {\n\t\ttype: 'CLOSE_PUBLISH_SIDEBAR',\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the user toggles the publish sidebar.\n *\n * @return {Object} Action object\n */\nexport function togglePublishSidebar() {\n\treturn {\n\t\ttype: 'TOGGLE_PUBLISH_SIDEBAR',\n\t};\n}\n\n/**\n * Backward compatibility\n */\n\nconst getBlockEditorAction =\n\t( name ) =>\n\t( ...args ) =>\n\t( { registry } ) => {\n\t\tdeprecated( \"`wp.data.dispatch( 'core/editor' ).\" + name + '`', {\n\t\t\tsince: '5.3',\n\t\t\talternative:\n\t\t\t\t\"`wp.data.dispatch( 'core/block-editor' ).\" + name + '`',\n\t\t\tversion: '6.2',\n\t\t} );\n\t\tregistry.dispatch( blockEditorStore )[ name ]( ...args );\n\t};\n\n/**\n * @see resetBlocks in core/block-editor store.\n */\nexport const resetBlocks = getBlockEditorAction( 'resetBlocks' );\n\n/**\n * @see receiveBlocks in core/block-editor store.\n */\nexport const receiveBlocks = getBlockEditorAction( 'receiveBlocks' );\n\n/**\n * @see updateBlock in core/block-editor store.\n */\nexport const updateBlock = getBlockEditorAction( 'updateBlock' );\n\n/**\n * @see updateBlockAttributes in core/block-editor store.\n */\nexport const updateBlockAttributes = getBlockEditorAction(\n\t'updateBlockAttributes'\n);\n\n/**\n * @see selectBlock in core/block-editor store.\n */\nexport const selectBlock = getBlockEditorAction( 'selectBlock' );\n\n/**\n * @see startMultiSelect in core/block-editor store.\n */\nexport const startMultiSelect = getBlockEditorAction( 'startMultiSelect' );\n\n/**\n * @see stopMultiSelect in core/block-editor store.\n */\nexport const stopMultiSelect = getBlockEditorAction( 'stopMultiSelect' );\n\n/**\n * @see multiSelect in core/block-editor store.\n */\nexport const multiSelect = getBlockEditorAction( 'multiSelect' );\n\n/**\n * @see clearSelectedBlock in core/block-editor store.\n */\nexport const clearSelectedBlock = getBlockEditorAction( 'clearSelectedBlock' );\n\n/**\n * @see toggleSelection in core/block-editor store.\n */\nexport const toggleSelection = getBlockEditorAction( 'toggleSelection' );\n\n/**\n * @see replaceBlocks in core/block-editor store.\n */\nexport const replaceBlocks = getBlockEditorAction( 'replaceBlocks' );\n\n/**\n * @see replaceBlock in core/block-editor store.\n */\nexport const replaceBlock = getBlockEditorAction( 'replaceBlock' );\n\n/**\n * @see moveBlocksDown in core/block-editor store.\n */\nexport const moveBlocksDown = getBlockEditorAction( 'moveBlocksDown' );\n\n/**\n * @see moveBlocksUp in core/block-editor store.\n */\nexport const moveBlocksUp = getBlockEditorAction( 'moveBlocksUp' );\n\n/**\n * @see moveBlockToPosition in core/block-editor store.\n */\nexport const moveBlockToPosition = getBlockEditorAction(\n\t'moveBlockToPosition'\n);\n\n/**\n * @see insertBlock in core/block-editor store.\n */\nexport const insertBlock = getBlockEditorAction( 'insertBlock' );\n\n/**\n * @see insertBlocks in core/block-editor store.\n */\nexport const insertBlocks = getBlockEditorAction( 'insertBlocks' );\n\n/**\n * @see showInsertionPoint in core/block-editor store.\n */\nexport const showInsertionPoint = getBlockEditorAction( 'showInsertionPoint' );\n\n/**\n * @see hideInsertionPoint in core/block-editor store.\n */\nexport const hideInsertionPoint = getBlockEditorAction( 'hideInsertionPoint' );\n\n/**\n * @see setTemplateValidity in core/block-editor store.\n */\nexport const setTemplateValidity = getBlockEditorAction(\n\t'setTemplateValidity'\n);\n\n/**\n * @see synchronizeTemplate in core/block-editor store.\n */\nexport const synchronizeTemplate = getBlockEditorAction(\n\t'synchronizeTemplate'\n);\n\n/**\n * @see mergeBlocks in core/block-editor store.\n */\nexport const mergeBlocks = getBlockEditorAction( 'mergeBlocks' );\n\n/**\n * @see removeBlocks in core/block-editor store.\n */\nexport const removeBlocks = getBlockEditorAction( 'removeBlocks' );\n\n/**\n * @see removeBlock in core/block-editor store.\n */\nexport const removeBlock = getBlockEditorAction( 'removeBlock' );\n\n/**\n * @see toggleBlockMode in core/block-editor store.\n */\nexport const toggleBlockMode = getBlockEditorAction( 'toggleBlockMode' );\n\n/**\n * @see startTyping in core/block-editor store.\n */\nexport const startTyping = getBlockEditorAction( 'startTyping' );\n\n/**\n * @see stopTyping in core/block-editor store.\n */\nexport const stopTyping = getBlockEditorAction( 'stopTyping' );\n\n/**\n * @see enterFormattedText in core/block-editor store.\n */\nexport const enterFormattedText = getBlockEditorAction( 'enterFormattedText' );\n\n/**\n * @see exitFormattedText in core/block-editor store.\n */\nexport const exitFormattedText = getBlockEditorAction( 'exitFormattedText' );\n\n/**\n * @see insertDefaultBlock in core/block-editor store.\n */\nexport const insertDefaultBlock = getBlockEditorAction( 'insertDefaultBlock' );\n\n/**\n * @see updateBlockListSettings in core/block-editor store.\n */\nexport const updateBlockListSettings = getBlockEditorAction(\n\t'updateBlockListSettings'\n);\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { SAVE_POST_NOTICE_ID, TRASH_POST_NOTICE_ID } from '../constants';\n\n/**\n * Builds the arguments for a success notification dispatch.\n *\n * @param {Object} data Incoming data to build the arguments from.\n *\n * @return {Array} Arguments for dispatch. An empty array signals no\n *                 notification should be sent.\n */\nexport function getNotificationArgumentsForSaveSuccess( data ) {\n\tconst { previousPost, post, postType } = data;\n\t// Autosaves are neither shown a notice nor redirected.\n\tif ( data.options?.isAutosave ) {\n\t\treturn [];\n\t}\n\n\tconst publishStatus = [ 'publish', 'private', 'future' ];\n\tconst isPublished = publishStatus.includes( previousPost.status );\n\tconst willPublish = publishStatus.includes( post.status );\n\tconst willTrash =\n\t\tpost.status === 'trash' && previousPost.status !== 'trash';\n\n\tlet noticeMessage;\n\tlet shouldShowLink = postType?.viewable ?? false;\n\tlet isDraft;\n\n\t// Always should a notice, which will be spoken for accessibility.\n\tif ( willTrash ) {\n\t\tnoticeMessage = postType.labels.item_trashed;\n\t\tshouldShowLink = false;\n\t} else if ( ! isPublished && ! willPublish ) {\n\t\t// If saving a non-published post, don't show notice.\n\t\tnoticeMessage = __( 'Draft saved.' );\n\t\tisDraft = true;\n\t} else if ( isPublished && ! willPublish ) {\n\t\t// If undoing publish status, show specific notice.\n\t\tnoticeMessage = postType.labels.item_reverted_to_draft;\n\t\tshouldShowLink = false;\n\t} else if ( ! isPublished && willPublish ) {\n\t\t// If publishing or scheduling a post, show the corresponding\n\t\t// publish message.\n\t\tnoticeMessage = {\n\t\t\tpublish: postType.labels.item_published,\n\t\t\tprivate: postType.labels.item_published_privately,\n\t\t\tfuture: postType.labels.item_scheduled,\n\t\t}[ post.status ];\n\t} else {\n\t\t// Generic fallback notice.\n\t\tnoticeMessage = postType.labels.item_updated;\n\t}\n\n\tconst actions = [];\n\tif ( shouldShowLink ) {\n\t\tactions.push( {\n\t\t\tlabel: isDraft ? __( 'View Preview' ) : postType.labels.view_item,\n\t\t\turl: post.link,\n\t\t} );\n\t}\n\treturn [\n\t\tnoticeMessage,\n\t\t{\n\t\t\tid: SAVE_POST_NOTICE_ID,\n\t\t\ttype: 'snackbar',\n\t\t\tactions,\n\t\t},\n\t];\n}\n\n/**\n * Builds the fail notification arguments for dispatch.\n *\n * @param {Object} data Incoming data to build the arguments with.\n *\n * @return {Array} Arguments for dispatch. An empty array signals no\n *                 notification should be sent.\n */\nexport function getNotificationArgumentsForSaveFail( data ) {\n\tconst { post, edits, error } = data;\n\tif ( error && 'rest_autosave_no_changes' === error.code ) {\n\t\t// Autosave requested a new autosave, but there were no changes. This shouldn't\n\t\t// result in an error notice for the user.\n\t\treturn [];\n\t}\n\n\tconst publishStatus = [ 'publish', 'private', 'future' ];\n\tconst isPublished = publishStatus.indexOf( post.status ) !== -1;\n\t// If the post was being published, we show the corresponding publish error message\n\t// Unless we publish an \"updating failed\" message.\n\tconst messages = {\n\t\tpublish: __( 'Publishing failed.' ),\n\t\tprivate: __( 'Publishing failed.' ),\n\t\tfuture: __( 'Scheduling failed.' ),\n\t};\n\tlet noticeMessage =\n\t\t! isPublished && publishStatus.indexOf( edits.status ) !== -1\n\t\t\t? messages[ edits.status ]\n\t\t\t: __( 'Updating failed.' );\n\n\t// Check if message string contains HTML. Notice text is currently only\n\t// supported as plaintext, and stripping the tags may muddle the meaning.\n\tif ( error.message && ! /<\\/?[^>]*>/.test( error.message ) ) {\n\t\tnoticeMessage = [ noticeMessage, error.message ].join( ' ' );\n\t}\n\treturn [\n\t\tnoticeMessage,\n\t\t{\n\t\t\tid: SAVE_POST_NOTICE_ID,\n\t\t},\n\t];\n}\n\n/**\n * Builds the trash fail notification arguments for dispatch.\n *\n * @param {Object} data\n *\n * @return {Array} Arguments for dispatch.\n */\nexport function getNotificationArgumentsForTrashFail( data ) {\n\treturn [\n\t\tdata.error.message && data.error.code !== 'unknown_error'\n\t\t\t? data.error.message\n\t\t\t: __( 'Trashing failed' ),\n\t\t{\n\t\t\tid: TRASH_POST_NOTICE_ID,\n\t\t},\n\t];\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"htmlEntities\"];","/**\n * Internal dependencies\n */\nimport { TEMPLATE_ORIGINS } from '../constants';\n\n// Copy of the function from packages/edit-site/src/utils/is-template-revertable.js\n\n/**\n * Check if a template is revertable to its original theme-provided template file.\n *\n * @param {Object} template The template entity to check.\n * @return {boolean} Whether the template is revertable.\n */\nexport default function isTemplateRevertable( template ) {\n\tif ( ! template ) {\n\t\treturn false;\n\t}\n\t/* eslint-disable camelcase */\n\treturn (\n\t\ttemplate?.source === TEMPLATE_ORIGINS.custom && template?.has_theme_file\n\t);\n\t/* eslint-enable camelcase */\n}\n","/**\n * WordPress dependencies\n */\nimport type { Action, AnyItem } from '@wordpress/dataviews';\n\nexport function registerEntityAction< Item extends AnyItem >(\n\tkind: string,\n\tname: string,\n\tconfig: Action< Item >\n) {\n\treturn {\n\t\ttype: 'REGISTER_ENTITY_ACTION' as const,\n\t\tkind,\n\t\tname,\n\t\tconfig,\n\t};\n}\n\nexport function unregisterEntityAction(\n\tkind: string,\n\tname: string,\n\tactionId: string\n) {\n\treturn {\n\t\ttype: 'UNREGISTER_ENTITY_ACTION' as const,\n\t\tkind,\n\t\tname,\n\t\tactionId,\n\t};\n}\n","/**\n * WordPress dependencies\n */\nimport { store as coreStore } from '@wordpress/core-data';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { store as noticesStore } from '@wordpress/notices';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { store as preferencesStore } from '@wordpress/preferences';\nimport { addQueryArgs } from '@wordpress/url';\nimport apiFetch from '@wordpress/api-fetch';\nimport { parse, __unstableSerializeAndClean } from '@wordpress/blocks';\nimport { decodeEntities } from '@wordpress/html-entities';\n\n/**\n * Internal dependencies\n */\nimport isTemplateRevertable from './utils/is-template-revertable';\nexport * from '../dataviews/store/private-actions';\n\n/**\n * Returns an action object used to set which template is currently being used/edited.\n *\n * @param {string} id Template Id.\n *\n * @return {Object} Action object.\n */\nexport function setCurrentTemplateId( id ) {\n\treturn {\n\t\ttype: 'SET_CURRENT_TEMPLATE_ID',\n\t\tid,\n\t};\n}\n\n/**\n * Create a block based template.\n *\n * @param {Object?} template Template to create and assign.\n */\nexport const createTemplate =\n\t( template ) =>\n\tasync ( { select, dispatch, registry } ) => {\n\t\tconst savedTemplate = await registry\n\t\t\t.dispatch( coreStore )\n\t\t\t.saveEntityRecord( 'postType', 'wp_template', template );\n\t\tregistry\n\t\t\t.dispatch( coreStore )\n\t\t\t.editEntityRecord(\n\t\t\t\t'postType',\n\t\t\t\tselect.getCurrentPostType(),\n\t\t\t\tselect.getCurrentPostId(),\n\t\t\t\t{\n\t\t\t\t\ttemplate: savedTemplate.slug,\n\t\t\t\t}\n\t\t\t);\n\t\tregistry\n\t\t\t.dispatch( noticesStore )\n\t\t\t.createSuccessNotice(\n\t\t\t\t__( \"Custom template created. You're in template mode now.\" ),\n\t\t\t\t{\n\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t\tactions: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: __( 'Go back' ),\n\t\t\t\t\t\t\tonClick: () =>\n\t\t\t\t\t\t\t\tdispatch.setRenderingMode(\n\t\t\t\t\t\t\t\t\tselect.getEditorSettings()\n\t\t\t\t\t\t\t\t\t\t.defaultRenderingMode\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t}\n\t\t\t);\n\t\treturn savedTemplate;\n\t};\n\n/**\n * Update the provided block types to be visible.\n *\n * @param {string[]} blockNames Names of block types to show.\n */\nexport const showBlockTypes =\n\t( blockNames ) =>\n\t( { registry } ) => {\n\t\tconst existingBlockNames =\n\t\t\tregistry\n\t\t\t\t.select( preferencesStore )\n\t\t\t\t.get( 'core', 'hiddenBlockTypes' ) ?? [];\n\n\t\tconst newBlockNames = existingBlockNames.filter(\n\t\t\t( type ) =>\n\t\t\t\t! (\n\t\t\t\t\tArray.isArray( blockNames ) ? blockNames : [ blockNames ]\n\t\t\t\t).includes( type )\n\t\t);\n\n\t\tregistry\n\t\t\t.dispatch( preferencesStore )\n\t\t\t.set( 'core', 'hiddenBlockTypes', newBlockNames );\n\t};\n\n/**\n * Update the provided block types to be hidden.\n *\n * @param {string[]} blockNames Names of block types to hide.\n */\nexport const hideBlockTypes =\n\t( blockNames ) =>\n\t( { registry } ) => {\n\t\tconst existingBlockNames =\n\t\t\tregistry\n\t\t\t\t.select( preferencesStore )\n\t\t\t\t.get( 'core', 'hiddenBlockTypes' ) ?? [];\n\n\t\tconst mergedBlockNames = new Set( [\n\t\t\t...existingBlockNames,\n\t\t\t...( Array.isArray( blockNames ) ? blockNames : [ blockNames ] ),\n\t\t] );\n\n\t\tregistry\n\t\t\t.dispatch( preferencesStore )\n\t\t\t.set( 'core', 'hiddenBlockTypes', [ ...mergedBlockNames ] );\n\t};\n\n/**\n * Save entity records marked as dirty.\n *\n * @param {Object}   options                      Options for the action.\n * @param {Function} [options.onSave]             Callback when saving happens.\n * @param {object[]} [options.dirtyEntityRecords] Array of dirty entities.\n * @param {object[]} [options.entitiesToSkip]     Array of entities to skip saving.\n * @param {Function} [options.close]              Callback when the actions is called. It should be consolidated with `onSave`.\n */\nexport const saveDirtyEntities =\n\t( { onSave, dirtyEntityRecords = [], entitiesToSkip = [], close } = {} ) =>\n\t( { registry } ) => {\n\t\tconst PUBLISH_ON_SAVE_ENTITIES = [\n\t\t\t{ kind: 'postType', name: 'wp_navigation' },\n\t\t];\n\t\tconst saveNoticeId = 'site-editor-save-success';\n\t\tconst homeUrl = registry.select( coreStore ).getUnstableBase()?.home;\n\t\tregistry.dispatch( noticesStore ).removeNotice( saveNoticeId );\n\t\tconst entitiesToSave = dirtyEntityRecords.filter(\n\t\t\t( { kind, name, key, property } ) => {\n\t\t\t\treturn ! entitiesToSkip.some(\n\t\t\t\t\t( elt ) =>\n\t\t\t\t\t\telt.kind === kind &&\n\t\t\t\t\t\telt.name === name &&\n\t\t\t\t\t\telt.key === key &&\n\t\t\t\t\t\telt.property === property\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t\tclose?.( entitiesToSave );\n\t\tconst siteItemsToSave = [];\n\t\tconst pendingSavedRecords = [];\n\t\tentitiesToSave.forEach( ( { kind, name, key, property } ) => {\n\t\t\tif ( 'root' === kind && 'site' === name ) {\n\t\t\t\tsiteItemsToSave.push( property );\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tPUBLISH_ON_SAVE_ENTITIES.some(\n\t\t\t\t\t\t( typeToPublish ) =>\n\t\t\t\t\t\t\ttypeToPublish.kind === kind &&\n\t\t\t\t\t\t\ttypeToPublish.name === name\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tregistry\n\t\t\t\t\t\t.dispatch( coreStore )\n\t\t\t\t\t\t.editEntityRecord( kind, name, key, {\n\t\t\t\t\t\t\tstatus: 'publish',\n\t\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\tpendingSavedRecords.push(\n\t\t\t\t\tregistry\n\t\t\t\t\t\t.dispatch( coreStore )\n\t\t\t\t\t\t.saveEditedEntityRecord( kind, name, key )\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\t\tif ( siteItemsToSave.length ) {\n\t\t\tpendingSavedRecords.push(\n\t\t\t\tregistry\n\t\t\t\t\t.dispatch( coreStore )\n\t\t\t\t\t.__experimentalSaveSpecifiedEntityEdits(\n\t\t\t\t\t\t'root',\n\t\t\t\t\t\t'site',\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tsiteItemsToSave\n\t\t\t\t\t)\n\t\t\t);\n\t\t}\n\t\tregistry\n\t\t\t.dispatch( blockEditorStore )\n\t\t\t.__unstableMarkLastChangeAsPersistent();\n\t\tPromise.all( pendingSavedRecords )\n\t\t\t.then( ( values ) => {\n\t\t\t\treturn onSave ? onSave( values ) : values;\n\t\t\t} )\n\t\t\t.then( ( values ) => {\n\t\t\t\tif (\n\t\t\t\t\tvalues.some( ( value ) => typeof value === 'undefined' )\n\t\t\t\t) {\n\t\t\t\t\tregistry\n\t\t\t\t\t\t.dispatch( noticesStore )\n\t\t\t\t\t\t.createErrorNotice( __( 'Saving failed.' ) );\n\t\t\t\t} else {\n\t\t\t\t\tregistry\n\t\t\t\t\t\t.dispatch( noticesStore )\n\t\t\t\t\t\t.createSuccessNotice( __( 'Site updated.' ), {\n\t\t\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t\t\t\tid: saveNoticeId,\n\t\t\t\t\t\t\tactions: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: __( 'View site' ),\n\t\t\t\t\t\t\t\t\turl: homeUrl,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.catch( ( error ) =>\n\t\t\t\tregistry\n\t\t\t\t\t.dispatch( noticesStore )\n\t\t\t\t\t.createErrorNotice(\n\t\t\t\t\t\t`${ __( 'Saving failed.' ) } ${ error }`\n\t\t\t\t\t)\n\t\t\t);\n\t};\n\n/**\n * Reverts a template to its original theme-provided file.\n *\n * @param {Object}  template            The template to revert.\n * @param {Object}  [options]\n * @param {boolean} [options.allowUndo] Whether to allow the user to undo\n *                                      reverting the template. Default true.\n */\nexport const revertTemplate =\n\t( template, { allowUndo = true } = {} ) =>\n\tasync ( { registry } ) => {\n\t\tconst noticeId = 'edit-site-template-reverted';\n\t\tregistry.dispatch( noticesStore ).removeNotice( noticeId );\n\t\tif ( ! isTemplateRevertable( template ) ) {\n\t\t\tregistry\n\t\t\t\t.dispatch( noticesStore )\n\t\t\t\t.createErrorNotice( __( 'This template is not revertable.' ), {\n\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t} );\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tconst templateEntityConfig = registry\n\t\t\t\t.select( coreStore )\n\t\t\t\t.getEntityConfig( 'postType', template.type );\n\n\t\t\tif ( ! templateEntityConfig ) {\n\t\t\t\tregistry\n\t\t\t\t\t.dispatch( noticesStore )\n\t\t\t\t\t.createErrorNotice(\n\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t'The editor has encountered an unexpected error. Please reload.'\n\t\t\t\t\t\t),\n\t\t\t\t\t\t{ type: 'snackbar' }\n\t\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst fileTemplatePath = addQueryArgs(\n\t\t\t\t`${ templateEntityConfig.baseURL }/${ template.id }`,\n\t\t\t\t{ context: 'edit', source: 'theme' }\n\t\t\t);\n\n\t\t\tconst fileTemplate = await apiFetch( { path: fileTemplatePath } );\n\t\t\tif ( ! fileTemplate ) {\n\t\t\t\tregistry\n\t\t\t\t\t.dispatch( noticesStore )\n\t\t\t\t\t.createErrorNotice(\n\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t'The editor has encountered an unexpected error. Please reload.'\n\t\t\t\t\t\t),\n\t\t\t\t\t\t{ type: 'snackbar' }\n\t\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst serializeBlocks = ( {\n\t\t\t\tblocks: blocksForSerialization = [],\n\t\t\t} ) => __unstableSerializeAndClean( blocksForSerialization );\n\n\t\t\tconst edited = registry\n\t\t\t\t.select( coreStore )\n\t\t\t\t.getEditedEntityRecord(\n\t\t\t\t\t'postType',\n\t\t\t\t\ttemplate.type,\n\t\t\t\t\ttemplate.id\n\t\t\t\t);\n\n\t\t\t// We are fixing up the undo level here to make sure we can undo\n\t\t\t// the revert in the header toolbar correctly.\n\t\t\tregistry.dispatch( coreStore ).editEntityRecord(\n\t\t\t\t'postType',\n\t\t\t\ttemplate.type,\n\t\t\t\ttemplate.id,\n\t\t\t\t{\n\t\t\t\t\tcontent: serializeBlocks, // Required to make the `undo` behave correctly.\n\t\t\t\t\tblocks: edited.blocks, // Required to revert the blocks in the editor.\n\t\t\t\t\tsource: 'custom', // required to avoid turning the editor into a dirty state\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tundoIgnore: true, // Required to merge this edit with the last undo level.\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tconst blocks = parse( fileTemplate?.content?.raw );\n\t\t\tregistry\n\t\t\t\t.dispatch( coreStore )\n\t\t\t\t.editEntityRecord( 'postType', template.type, fileTemplate.id, {\n\t\t\t\t\tcontent: serializeBlocks,\n\t\t\t\t\tblocks,\n\t\t\t\t\tsource: 'theme',\n\t\t\t\t} );\n\n\t\t\tif ( allowUndo ) {\n\t\t\t\tconst undoRevert = () => {\n\t\t\t\t\tregistry\n\t\t\t\t\t\t.dispatch( coreStore )\n\t\t\t\t\t\t.editEntityRecord(\n\t\t\t\t\t\t\t'postType',\n\t\t\t\t\t\t\ttemplate.type,\n\t\t\t\t\t\t\tedited.id,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcontent: serializeBlocks,\n\t\t\t\t\t\t\t\tblocks: edited.blocks,\n\t\t\t\t\t\t\t\tsource: 'custom',\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\tregistry\n\t\t\t\t\t.dispatch( noticesStore )\n\t\t\t\t\t.createSuccessNotice( __( 'Template reset.' ), {\n\t\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t\t\tid: noticeId,\n\t\t\t\t\t\tactions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: __( 'Undo' ),\n\t\t\t\t\t\t\t\tonClick: undoRevert,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t} );\n\t\t\t}\n\t\t} catch ( error ) {\n\t\t\tconst errorMessage =\n\t\t\t\terror.message && error.code !== 'unknown_error'\n\t\t\t\t\t? error.message\n\t\t\t\t\t: __( 'Template revert failed. Please reload.' );\n\t\t\tregistry\n\t\t\t\t.dispatch( noticesStore )\n\t\t\t\t.createErrorNotice( errorMessage, { type: 'snackbar' } );\n\t\t}\n\t};\n\n/**\n * Action that removes an array of templates, template parts or patterns.\n *\n * @param {Array} items An array of template,template part or pattern objects to remove.\n */\nexport const removeTemplates =\n\t( items ) =>\n\tasync ( { registry } ) => {\n\t\tconst isResetting = items.every(\n\t\t\t( item ) =>\n\t\t\t\t!! item &&\n\t\t\t\t( item.has_theme_file ||\n\t\t\t\t\t( item.templatePart && item.templatePart.has_theme_file ) )\n\t\t);\n\n\t\tconst promiseResult = await Promise.allSettled(\n\t\t\titems.map( ( item ) => {\n\t\t\t\treturn registry\n\t\t\t\t\t.dispatch( coreStore )\n\t\t\t\t\t.deleteEntityRecord(\n\t\t\t\t\t\t'postType',\n\t\t\t\t\t\titem.type,\n\t\t\t\t\t\titem.id,\n\t\t\t\t\t\t{ force: true },\n\t\t\t\t\t\t{ throwOnError: true }\n\t\t\t\t\t);\n\t\t\t} )\n\t\t);\n\n\t\t// If all the promises were fulfilled with sucess.\n\t\tif ( promiseResult.every( ( { status } ) => status === 'fulfilled' ) ) {\n\t\t\tlet successMessage;\n\n\t\t\tif ( items.length === 1 ) {\n\t\t\t\t// Depending on how the entity was retrieved its title might be\n\t\t\t\t// an object or simple string.\n\t\t\t\tconst title =\n\t\t\t\t\ttypeof items[ 0 ].title === 'string'\n\t\t\t\t\t\t? items[ 0 ].title\n\t\t\t\t\t\t: items[ 0 ].title?.rendered;\n\t\t\t\tsuccessMessage = isResetting\n\t\t\t\t\t? sprintf(\n\t\t\t\t\t\t\t/* translators: The template/part's name. */\n\t\t\t\t\t\t\t__( '\"%s\" reset.' ),\n\t\t\t\t\t\t\tdecodeEntities( title )\n\t\t\t\t\t  )\n\t\t\t\t\t: sprintf(\n\t\t\t\t\t\t\t/* translators: The template/part's name. */\n\t\t\t\t\t\t\t__( '\"%s\" deleted.' ),\n\t\t\t\t\t\t\tdecodeEntities( title )\n\t\t\t\t\t  );\n\t\t\t} else {\n\t\t\t\tsuccessMessage = isResetting\n\t\t\t\t\t? __( 'Items reset.' )\n\t\t\t\t\t: __( 'Items deleted.' );\n\t\t\t}\n\n\t\t\tregistry\n\t\t\t\t.dispatch( noticesStore )\n\t\t\t\t.createSuccessNotice( successMessage, {\n\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t\tid: 'editor-template-deleted-success',\n\t\t\t\t} );\n\t\t} else {\n\t\t\t// If there was at lease one failure.\n\t\t\tlet errorMessage;\n\t\t\t// If we were trying to delete a single template.\n\t\t\tif ( promiseResult.length === 1 ) {\n\t\t\t\tif ( promiseResult[ 0 ].reason?.message ) {\n\t\t\t\t\terrorMessage = promiseResult[ 0 ].reason.message;\n\t\t\t\t} else {\n\t\t\t\t\terrorMessage = isResetting\n\t\t\t\t\t\t? __( 'An error occurred while reverting the item.' )\n\t\t\t\t\t\t: __( 'An error occurred while deleting the item.' );\n\t\t\t\t}\n\t\t\t\t// If we were trying to delete a multiple templates\n\t\t\t} else {\n\t\t\t\tconst errorMessages = new Set();\n\t\t\t\tconst failedPromises = promiseResult.filter(\n\t\t\t\t\t( { status } ) => status === 'rejected'\n\t\t\t\t);\n\t\t\t\tfor ( const failedPromise of failedPromises ) {\n\t\t\t\t\tif ( failedPromise.reason?.message ) {\n\t\t\t\t\t\terrorMessages.add( failedPromise.reason.message );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ( errorMessages.size === 0 ) {\n\t\t\t\t\terrorMessage = __(\n\t\t\t\t\t\t'An error occurred while deleting the items.'\n\t\t\t\t\t);\n\t\t\t\t} else if ( errorMessages.size === 1 ) {\n\t\t\t\t\terrorMessage = isResetting\n\t\t\t\t\t\t? sprintf(\n\t\t\t\t\t\t\t\t/* translators: %s: an error message */\n\t\t\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t\t\t'An error occurred while reverting the items: %s'\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t[ ...errorMessages ][ 0 ]\n\t\t\t\t\t\t  )\n\t\t\t\t\t\t: sprintf(\n\t\t\t\t\t\t\t\t/* translators: %s: an error message */\n\t\t\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t\t\t'An error occurred while deleting the items: %s'\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t[ ...errorMessages ][ 0 ]\n\t\t\t\t\t\t  );\n\t\t\t\t} else {\n\t\t\t\t\terrorMessage = isResetting\n\t\t\t\t\t\t? sprintf(\n\t\t\t\t\t\t\t\t/* translators: %s: a list of comma separated error messages */\n\t\t\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t\t\t'Some errors occurred while reverting the items: %s'\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t[ ...errorMessages ].join( ',' )\n\t\t\t\t\t\t  )\n\t\t\t\t\t\t: sprintf(\n\t\t\t\t\t\t\t\t/* translators: %s: a list of comma separated error messages */\n\t\t\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t\t\t'Some errors occurred while deleting the items: %s'\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t[ ...errorMessages ].join( ',' )\n\t\t\t\t\t\t  );\n\t\t\t\t}\n\t\t\t}\n\t\t\tregistry\n\t\t\t\t.dispatch( noticesStore )\n\t\t\t\t.createErrorNotice( errorMessage, { type: 'snackbar' } );\n\t\t}\n\t};\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst symbol = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M21.3 10.8l-5.6-5.6c-.7-.7-1.8-.7-2.5 0l-5.6 5.6c-.7.7-.7 1.8 0 2.5l5.6 5.6c.3.3.8.5 1.2.5s.9-.2 1.2-.5l5.6-5.6c.8-.7.8-1.9.1-2.5zm-1 1.4l-5.6 5.6c-.1.1-.3.1-.4 0l-5.6-5.6c-.1-.1-.1-.3 0-.4l5.6-5.6s.1-.1.2-.1.1 0 .2.1l5.6 5.6c.1.1.1.3 0 .4zm-16.6-.4L10 5.5l-1-1-6.3 6.3c-.7.7-.7 1.8 0 2.5L9 19.5l1.1-1.1-6.3-6.3c-.2 0-.2-.2-.1-.3z\" />\n\t</SVG>\n);\n\nexport default symbol;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst navigation = (\n\t<SVG viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t<Path d=\"M12 4c-4.4 0-8 3.6-8 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8zm0 14.5c-3.6 0-6.5-2.9-6.5-6.5S8.4 5.5 12 5.5s6.5 2.9 6.5 6.5-2.9 6.5-6.5 6.5zM9 16l4.5-3L15 8.4l-4.5 3L9 16z\" />\n\t</SVG>\n);\n\nexport default navigation;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst page = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M15.5 7.5h-7V9h7V7.5Zm-7 3.5h7v1.5h-7V11Zm7 3.5h-7V16h7v-1.5Z\" />\n\t\t<Path d=\"M17 4H7a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2ZM7 5.5h10a.5.5 0 0 1 .5.5v12a.5.5 0 0 1-.5.5H7a.5.5 0 0 1-.5-.5V6a.5.5 0 0 1 .5-.5Z\" />\n\t</SVG>\n);\n\nexport default page;\n","/**\n * WordPress dependencies\n */\nimport { Path, SVG } from '@wordpress/primitives';\n\nconst verse = (\n\t<SVG viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t<Path d=\"M17.8 2l-.9.3c-.1 0-3.6 1-5.2 2.1C10 5.5 9.3 6.5 8.9 7.1c-.6.9-1.7 4.7-1.7 6.3l-.9 2.3c-.2.4 0 .8.4 1 .1 0 .2.1.3.1.3 0 .6-.2.7-.5l.6-1.5c.3 0 .7-.1 1.2-.2.7-.1 1.4-.3 2.2-.5.8-.2 1.6-.5 2.4-.8.7-.3 1.4-.7 1.9-1.2s.8-1.2 1-1.9c.2-.7.3-1.6.4-2.4.1-.8.1-1.7.2-2.5 0-.8.1-1.5.2-2.1V2zm-1.9 5.6c-.1.8-.2 1.5-.3 2.1-.2.6-.4 1-.6 1.3-.3.3-.8.6-1.4.9-.7.3-1.4.5-2.2.8-.6.2-1.3.3-1.8.4L15 7.5c.3-.3.6-.7 1-1.1 0 .4 0 .8-.1 1.2zM6 20h8v-1.5H6V20z\" />\n\t</SVG>\n);\n\nexport default verse;\n","/**\n * External dependencies\n */\nimport memoize from 'memize';\n\n/**\n * WordPress dependencies\n */\nimport { isTemplatePart } from '@wordpress/blocks';\n\nconst EMPTY_ARRAY = [];\n\n/**\n * Get a flattened and filtered list of template parts and the matching block for that template part.\n *\n * Takes a list of blocks defined within a template, and a list of template parts, and returns a\n * flattened list of template parts and the matching block for that template part.\n *\n * @param {Array}  blocks        Blocks to flatten.\n * @param {?Array} templateParts Available template parts.\n * @return {Array} An array of template parts and their blocks.\n */\nfunction getFilteredTemplatePartBlocks( blocks = EMPTY_ARRAY, templateParts ) {\n\tconst templatePartsById = templateParts\n\t\t? // Key template parts by their ID.\n\t\t  templateParts.reduce(\n\t\t\t\t( newTemplateParts, part ) => ( {\n\t\t\t\t\t...newTemplateParts,\n\t\t\t\t\t[ part.id ]: part,\n\t\t\t\t} ),\n\t\t\t\t{}\n\t\t  )\n\t\t: {};\n\n\tconst result = [];\n\n\t// Iterate over all blocks, recursing into inner blocks.\n\t// Output will be based on a depth-first traversal.\n\tconst stack = [ ...blocks ];\n\twhile ( stack.length ) {\n\t\tconst { innerBlocks, ...block } = stack.shift();\n\t\t// Place inner blocks at the beginning of the stack to preserve order.\n\t\tstack.unshift( ...innerBlocks );\n\n\t\tif ( isTemplatePart( block ) ) {\n\t\t\tconst {\n\t\t\t\tattributes: { theme, slug },\n\t\t\t} = block;\n\t\t\tconst templatePartId = `${ theme }//${ slug }`;\n\t\t\tconst templatePart = templatePartsById[ templatePartId ];\n\n\t\t\t// Only add to output if the found template part block is in the list of available template parts.\n\t\t\tif ( templatePart ) {\n\t\t\t\tresult.push( {\n\t\t\t\t\ttemplatePart,\n\t\t\t\t\tblock,\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n}\n\nconst memoizedGetFilteredTemplatePartBlocks = memoize(\n\tgetFilteredTemplatePartBlocks\n);\n\nexport { memoizedGetFilteredTemplatePartBlocks as getFilteredTemplatePartBlocks };\n","/**\n * Memize options object.\n *\n * @typedef MemizeOptions\n *\n * @property {number} [maxSize] Maximum size of the cache.\n */\n\n/**\n * Internal cache entry.\n *\n * @typedef MemizeCacheNode\n *\n * @property {?MemizeCacheNode|undefined} [prev] Previous node.\n * @property {?MemizeCacheNode|undefined} [next] Next node.\n * @property {Array<*>}                   args   Function arguments for cache\n *                                               entry.\n * @property {*}                          val    Function result.\n */\n\n/**\n * Properties of the enhanced function for controlling cache.\n *\n * @typedef MemizeMemoizedFunction\n *\n * @property {()=>void} clear Clear the cache.\n */\n\n/**\n * Accepts a function to be memoized, and returns a new memoized function, with\n * optional options.\n *\n * @template {(...args: any[]) => any} F\n *\n * @param {F}             fn        Function to memoize.\n * @param {MemizeOptions} [options] Options object.\n *\n * @return {((...args: Parameters<F>) => ReturnType<F>) & MemizeMemoizedFunction} Memoized function.\n */\nfunction memize(fn, options) {\n\tvar size = 0;\n\n\t/** @type {?MemizeCacheNode|undefined} */\n\tvar head;\n\n\t/** @type {?MemizeCacheNode|undefined} */\n\tvar tail;\n\n\toptions = options || {};\n\n\tfunction memoized(/* ...args */) {\n\t\tvar node = head,\n\t\t\tlen = arguments.length,\n\t\t\targs,\n\t\t\ti;\n\n\t\tsearchCache: while (node) {\n\t\t\t// Perform a shallow equality test to confirm that whether the node\n\t\t\t// under test is a candidate for the arguments passed. Two arrays\n\t\t\t// are shallowly equal if their length matches and each entry is\n\t\t\t// strictly equal between the two sets. Avoid abstracting to a\n\t\t\t// function which could incur an arguments leaking deoptimization.\n\n\t\t\t// Check whether node arguments match arguments length\n\t\t\tif (node.args.length !== arguments.length) {\n\t\t\t\tnode = node.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Check whether node arguments match arguments values\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tif (node.args[i] !== arguments[i]) {\n\t\t\t\t\tnode = node.next;\n\t\t\t\t\tcontinue searchCache;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// At this point we can assume we've found a match\n\n\t\t\t// Surface matched node to head if not already\n\t\t\tif (node !== head) {\n\t\t\t\t// As tail, shift to previous. Must only shift if not also\n\t\t\t\t// head, since if both head and tail, there is no previous.\n\t\t\t\tif (node === tail) {\n\t\t\t\t\ttail = node.prev;\n\t\t\t\t}\n\n\t\t\t\t// Adjust siblings to point to each other. If node was tail,\n\t\t\t\t// this also handles new tail's empty `next` assignment.\n\t\t\t\t/** @type {MemizeCacheNode} */ (node.prev).next = node.next;\n\t\t\t\tif (node.next) {\n\t\t\t\t\tnode.next.prev = node.prev;\n\t\t\t\t}\n\n\t\t\t\tnode.next = head;\n\t\t\t\tnode.prev = null;\n\t\t\t\t/** @type {MemizeCacheNode} */ (head).prev = node;\n\t\t\t\thead = node;\n\t\t\t}\n\n\t\t\t// Return immediately\n\t\t\treturn node.val;\n\t\t}\n\n\t\t// No cached value found. Continue to insertion phase:\n\n\t\t// Create a copy of arguments (avoid leaking deoptimization)\n\t\targs = new Array(len);\n\t\tfor (i = 0; i < len; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\n\t\tnode = {\n\t\t\targs: args,\n\n\t\t\t// Generate the result from original function\n\t\t\tval: fn.apply(null, args),\n\t\t};\n\n\t\t// Don't need to check whether node is already head, since it would\n\t\t// have been returned above already if it was\n\n\t\t// Shift existing head down list\n\t\tif (head) {\n\t\t\thead.prev = node;\n\t\t\tnode.next = head;\n\t\t} else {\n\t\t\t// If no head, follows that there's no tail (at initial or reset)\n\t\t\ttail = node;\n\t\t}\n\n\t\t// Trim tail if we're reached max size and are pending cache insertion\n\t\tif (size === /** @type {MemizeOptions} */ (options).maxSize) {\n\t\t\ttail = /** @type {MemizeCacheNode} */ (tail).prev;\n\t\t\t/** @type {MemizeCacheNode} */ (tail).next = null;\n\t\t} else {\n\t\t\tsize++;\n\t\t}\n\n\t\thead = node;\n\n\t\treturn node.val;\n\t}\n\n\tmemoized.clear = function () {\n\t\thead = null;\n\t\ttail = null;\n\t\tsize = 0;\n\t};\n\n\t// Ignore reason: There's not a clear solution to create an intersection of\n\t// the function with additional properties, where the goal is to retain the\n\t// function signature of the incoming argument and add control properties\n\t// on the return value.\n\n\t// @ts-ignore\n\treturn memoized;\n}\n\nexport { memize as default };\n","/**\n * WordPress dependencies\n */\nimport type { Action } from '@wordpress/dataviews';\n\n/**\n * Internal dependencies\n */\nimport type { State } from './reducer';\n\nconst EMPTY_ARRAY: Action< any >[] = [];\n\nexport function getEntityActions( state: State, kind: string, name: string ) {\n\treturn state.actions[ kind ]?.[ name ] ?? EMPTY_ARRAY;\n}\n","/**\n * External dependencies\n */\nimport fastDeepEqual from 'fast-deep-equal';\n\n/**\n * WordPress dependencies\n */\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { createSelector, createRegistrySelector } from '@wordpress/data';\nimport {\n\tlayout,\n\tsymbol,\n\tnavigation,\n\tpage as pageIcon,\n\tverse,\n} from '@wordpress/icons';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport {\n\tgetRenderingMode,\n\tgetCurrentPost,\n\t__experimentalGetDefaultTemplatePartAreas,\n} from './selectors';\nimport { TEMPLATE_PART_POST_TYPE } from './constants';\nimport { getFilteredTemplatePartBlocks } from './utils/get-filtered-template-parts';\nimport { getEntityActions as _getEntityActions } from '../dataviews/store/private-selectors';\n\nconst EMPTY_INSERTION_POINT = {\n\trootClientId: undefined,\n\tinsertionIndex: undefined,\n\tfilterValue: undefined,\n};\n\n/**\n * Get the insertion point for the inserter.\n *\n * @param {Object} state Global application state.\n *\n * @return {Object} The root client ID, index to insert at and starting filter value.\n */\nexport const getInsertionPoint = createRegistrySelector( ( select ) =>\n\tcreateSelector(\n\t\t( state ) => {\n\t\t\tif ( typeof state.blockInserterPanel === 'object' ) {\n\t\t\t\treturn state.blockInserterPanel;\n\t\t\t}\n\n\t\t\tif ( getRenderingMode( state ) === 'template-locked' ) {\n\t\t\t\tconst [ postContentClientId ] =\n\t\t\t\t\tselect( blockEditorStore ).getBlocksByName(\n\t\t\t\t\t\t'core/post-content'\n\t\t\t\t\t);\n\t\t\t\tif ( postContentClientId ) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\trootClientId: postContentClientId,\n\t\t\t\t\t\tinsertionIndex: undefined,\n\t\t\t\t\t\tfilterValue: undefined,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn EMPTY_INSERTION_POINT;\n\t\t},\n\t\t( state ) => {\n\t\t\tconst [ postContentClientId ] =\n\t\t\t\tselect( blockEditorStore ).getBlocksByName(\n\t\t\t\t\t'core/post-content'\n\t\t\t\t);\n\t\t\treturn [\n\t\t\t\tstate.blockInserterPanel,\n\t\t\t\tgetRenderingMode( state ),\n\t\t\t\tpostContentClientId,\n\t\t\t];\n\t\t}\n\t)\n);\n\nexport function getListViewToggleRef( state ) {\n\treturn state.listViewToggleRef;\n}\nexport function getInserterSidebarToggleRef( state ) {\n\treturn state.inserterSidebarToggleRef;\n}\nconst CARD_ICONS = {\n\twp_block: symbol,\n\twp_navigation: navigation,\n\tpage: pageIcon,\n\tpost: verse,\n};\n\nexport const getPostIcon = createRegistrySelector(\n\t( select ) => ( state, postType, options ) => {\n\t\t{\n\t\t\tif (\n\t\t\t\tpostType === 'wp_template_part' ||\n\t\t\t\tpostType === 'wp_template'\n\t\t\t) {\n\t\t\t\treturn (\n\t\t\t\t\t__experimentalGetDefaultTemplatePartAreas( state ).find(\n\t\t\t\t\t\t( item ) => options.area === item.area\n\t\t\t\t\t)?.icon || layout\n\t\t\t\t);\n\t\t\t}\n\t\t\tif ( CARD_ICONS[ postType ] ) {\n\t\t\t\treturn CARD_ICONS[ postType ];\n\t\t\t}\n\t\t\tconst postTypeEntity = select( coreStore ).getPostType( postType );\n\t\t\t// `icon` is the `menu_icon` property of a post type. We\n\t\t\t// only handle `dashicons` for now, even if the `menu_icon`\n\t\t\t// also supports urls and svg as values.\n\t\t\tif ( postTypeEntity?.icon?.startsWith( 'dashicons-' ) ) {\n\t\t\t\treturn postTypeEntity.icon.slice( 10 );\n\t\t\t}\n\t\t\treturn pageIcon;\n\t\t}\n\t}\n);\n\n/**\n * Returns the template parts and their blocks for the current edited template.\n *\n * @param {Object} state Global application state.\n * @return {Array} Template parts and their blocks in an array.\n */\nexport const getCurrentTemplateTemplateParts = createRegistrySelector(\n\t( select ) => () => {\n\t\tconst templateParts = select( coreStore ).getEntityRecords(\n\t\t\t'postType',\n\t\t\tTEMPLATE_PART_POST_TYPE,\n\t\t\t{ per_page: -1 }\n\t\t);\n\n\t\tconst clientIds =\n\t\t\tselect( blockEditorStore ).getBlocksByName( 'core/template-part' );\n\t\tconst blocks =\n\t\t\tselect( blockEditorStore ).getBlocksByClientId( clientIds );\n\n\t\treturn getFilteredTemplatePartBlocks( blocks, templateParts );\n\t}\n);\n\n/**\n * Returns true if there are unsaved changes to the\n * post's meta fields, and false otherwise.\n *\n * @param {Object} state    Global application state.\n * @param {string} postType The post type of the post.\n * @param {number} postId   The ID of the post.\n *\n * @return {boolean} Whether there are edits or not in the meta fields of the relevant post.\n */\nexport const hasPostMetaChanges = createRegistrySelector(\n\t( select ) => ( state, postType, postId ) => {\n\t\tconst { type: currentPostType, id: currentPostId } =\n\t\t\tgetCurrentPost( state );\n\t\t// If no postType or postId is passed, use the current post.\n\t\tconst edits = select( coreStore ).getEntityRecordNonTransientEdits(\n\t\t\t'postType',\n\t\t\tpostType || currentPostType,\n\t\t\tpostId || currentPostId\n\t\t);\n\n\t\tif ( ! edits?.meta ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Compare if anything apart from `footnotes` has changed.\n\t\tconst originalPostMeta = select( coreStore ).getEntityRecord(\n\t\t\t'postType',\n\t\t\tpostType || currentPostType,\n\t\t\tpostId || currentPostId\n\t\t)?.meta;\n\n\t\treturn ! fastDeepEqual(\n\t\t\t{ ...originalPostMeta, footnotes: undefined },\n\t\t\t{ ...edits.meta, footnotes: undefined }\n\t\t);\n\t}\n);\n\nexport function getEntityActions( state, ...args ) {\n\treturn _getEntityActions( state.dataviews, ...args );\n}\n","/**\n * WordPress dependencies\n */\nimport { createReduxStore, register } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport reducer from './reducer';\nimport * as selectors from './selectors';\nimport * as actions from './actions';\nimport * as privateActions from './private-actions';\nimport * as privateSelectors from './private-selectors';\nimport { STORE_NAME } from './constants';\nimport { unlock } from '../lock-unlock';\n\n/**\n * Post editor data store configuration.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/data/README.md#registerStore\n *\n * @type {Object}\n */\nexport const storeConfig = {\n\treducer,\n\tselectors,\n\tactions,\n};\n\n/**\n * Store definition for the editor namespace.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/data/README.md#createReduxStore\n *\n * @type {Object}\n */\nexport const store = createReduxStore( STORE_NAME, {\n\t...storeConfig,\n} );\n\nregister( store );\nunlock( store ).registerPrivateActions( privateActions );\nunlock( store ).registerPrivateSelectors( privateSelectors );\n","/**\n * WordPress dependencies\n */\nimport { store as coreDataStore } from '@wordpress/core-data';\nimport { _x } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../store';\n\nexport default {\n\tname: 'core/post-meta',\n\tlabel: _x( 'Post Meta', 'block bindings source' ),\n\tgetPlaceholder( { args } ) {\n\t\treturn args.key;\n\t},\n\tgetValue( { registry, context, args } ) {\n\t\treturn registry\n\t\t\t.select( coreDataStore )\n\t\t\t.getEditedEntityRecord(\n\t\t\t\t'postType',\n\t\t\t\tcontext?.postType,\n\t\t\t\tcontext?.postId\n\t\t\t).meta?.[ args.key ];\n\t},\n\tsetValue( { registry, context, args, value } ) {\n\t\tregistry\n\t\t\t.dispatch( coreDataStore )\n\t\t\t.editEntityRecord( 'postType', context?.postType, context?.postId, {\n\t\t\t\tmeta: {\n\t\t\t\t\t[ args.key ]: value,\n\t\t\t\t},\n\t\t\t} );\n\t},\n\tcanUserEditValue( { select, context, args } ) {\n\t\tconst postType =\n\t\t\tcontext?.postType || select( editorStore ).getCurrentPostType();\n\n\t\t// Check that editing is happening in the post editor and not a template.\n\t\tif ( postType === 'wp_template' ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check that the custom field is not protected and available in the REST API.\n\t\tconst isFieldExposed = !! select( coreDataStore ).getEntityRecord(\n\t\t\t'postType',\n\t\t\tpostType,\n\t\t\tcontext?.postId\n\t\t)?.meta?.[ args.key ];\n\n\t\tif ( ! isFieldExposed ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check that the user has the capability to edit post meta.\n\t\tconst canUserEdit = select( coreDataStore ).canUserEditEntityRecord(\n\t\t\t'postType',\n\t\t\tcontext?.postType,\n\t\t\tcontext?.postId\n\t\t);\n\t\tif ( ! canUserEdit ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n};\n","/**\n * WordPress dependencies\n */\nimport { store as blocksStore } from '@wordpress/blocks';\nimport { dispatch } from '@wordpress/data';\n/**\n * Internal dependencies\n */\nimport { unlock } from '../lock-unlock';\nimport patternOverrides from './pattern-overrides';\nimport postMeta from './post-meta';\n\nconst { registerBlockBindingsSource } = unlock( dispatch( blocksStore ) );\nregisterBlockBindingsSource( postMeta );\nregisterBlockBindingsSource( patternOverrides );\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"compose\"];","/**\n * WordPress dependencies\n */\nimport { useMemo } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/** @typedef {import('@wordpress/components').WPCompleter} WPCompleter */\n\nexport function getUserLabel( user ) {\n\tconst avatar =\n\t\tuser.avatar_urls && user.avatar_urls[ 24 ] ? (\n\t\t\t<img\n\t\t\t\tclassName=\"editor-autocompleters__user-avatar\"\n\t\t\t\talt=\"\"\n\t\t\t\tsrc={ user.avatar_urls[ 24 ] }\n\t\t\t/>\n\t\t) : (\n\t\t\t<span className=\"editor-autocompleters__no-avatar\"></span>\n\t\t);\n\n\treturn (\n\t\t<>\n\t\t\t{ avatar }\n\t\t\t<span className=\"editor-autocompleters__user-name\">\n\t\t\t\t{ user.name }\n\t\t\t</span>\n\t\t\t<span className=\"editor-autocompleters__user-slug\">\n\t\t\t\t{ user.slug }\n\t\t\t</span>\n\t\t</>\n\t);\n}\n\n/**\n * A user mentions completer.\n *\n * @type {WPCompleter}\n */\nexport default {\n\tname: 'users',\n\tclassName: 'editor-autocompleters__user',\n\ttriggerPrefix: '@',\n\n\tuseItems( filterValue ) {\n\t\tconst users = useSelect(\n\t\t\t( select ) => {\n\t\t\t\tconst { getUsers } = select( coreStore );\n\t\t\t\treturn getUsers( {\n\t\t\t\t\tcontext: 'view',\n\t\t\t\t\tsearch: encodeURIComponent( filterValue ),\n\t\t\t\t} );\n\t\t\t},\n\t\t\t[ filterValue ]\n\t\t);\n\n\t\tconst options = useMemo(\n\t\t\t() =>\n\t\t\t\tusers\n\t\t\t\t\t? users.map( ( user ) => ( {\n\t\t\t\t\t\t\tkey: `user-${ user.slug }`,\n\t\t\t\t\t\t\tvalue: user,\n\t\t\t\t\t\t\tlabel: getUserLabel( user ),\n\t\t\t\t\t  } ) )\n\t\t\t\t\t: [],\n\t\t\t[ users ]\n\t\t);\n\n\t\treturn [ options ];\n\t},\n\n\tgetOptionCompletion( user ) {\n\t\treturn `@${ user.slug }`;\n\t},\n};\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { useEntityProp } from '@wordpress/core-data';\nimport { useMemo } from '@wordpress/element';\nimport { createHigherOrderComponent } from '@wordpress/compose';\nimport { addFilter } from '@wordpress/hooks';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../store';\n\n/** @typedef {import('@wordpress/compose').WPHigherOrderComponent} WPHigherOrderComponent */\n/** @typedef {import('@wordpress/blocks').WPBlockSettings} WPBlockSettings */\n\n/**\n * Object whose keys are the names of block attributes, where each value\n * represents the meta key to which the block attribute is intended to save.\n *\n * @see https://developer.wordpress.org/reference/functions/register_meta/\n *\n * @typedef {Object<string,string>} WPMetaAttributeMapping\n */\n\n/**\n * Given a mapping of attribute names (meta source attributes) to their\n * associated meta key, returns a higher order component that overrides its\n * `attributes` and `setAttributes` props to sync any changes with the edited\n * post's meta keys.\n *\n * @param {WPMetaAttributeMapping} metaAttributes Meta attribute mapping.\n *\n * @return {WPHigherOrderComponent} Higher-order component.\n */\nconst createWithMetaAttributeSource = ( metaAttributes ) =>\n\tcreateHigherOrderComponent(\n\t\t( BlockEdit ) =>\n\t\t\t( { attributes, setAttributes, ...props } ) => {\n\t\t\t\tconst postType = useSelect(\n\t\t\t\t\t( select ) => select( editorStore ).getCurrentPostType(),\n\t\t\t\t\t[]\n\t\t\t\t);\n\t\t\t\tconst [ meta, setMeta ] = useEntityProp(\n\t\t\t\t\t'postType',\n\t\t\t\t\tpostType,\n\t\t\t\t\t'meta'\n\t\t\t\t);\n\n\t\t\t\tconst mergedAttributes = useMemo(\n\t\t\t\t\t() => ( {\n\t\t\t\t\t\t...attributes,\n\t\t\t\t\t\t...Object.fromEntries(\n\t\t\t\t\t\t\tObject.entries( metaAttributes ).map(\n\t\t\t\t\t\t\t\t( [ attributeKey, metaKey ] ) => [\n\t\t\t\t\t\t\t\t\tattributeKey,\n\t\t\t\t\t\t\t\t\tmeta[ metaKey ],\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t),\n\t\t\t\t\t} ),\n\t\t\t\t\t[ attributes, meta ]\n\t\t\t\t);\n\n\t\t\t\treturn (\n\t\t\t\t\t<BlockEdit\n\t\t\t\t\t\tattributes={ mergedAttributes }\n\t\t\t\t\t\tsetAttributes={ ( nextAttributes ) => {\n\t\t\t\t\t\t\tconst nextMeta = Object.fromEntries(\n\t\t\t\t\t\t\t\tObject.entries( nextAttributes ?? {} )\n\t\t\t\t\t\t\t\t\t.filter(\n\t\t\t\t\t\t\t\t\t\t// Filter to intersection of keys between the updated\n\t\t\t\t\t\t\t\t\t\t// attributes and those with an associated meta key.\n\t\t\t\t\t\t\t\t\t\t( [ key ] ) => key in metaAttributes\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t.map( ( [ attributeKey, value ] ) => [\n\t\t\t\t\t\t\t\t\t\t// Rename the keys to the expected meta key name.\n\t\t\t\t\t\t\t\t\t\tmetaAttributes[ attributeKey ],\n\t\t\t\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\t\t\t] )\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tif ( Object.entries( nextMeta ).length ) {\n\t\t\t\t\t\t\t\tsetMeta( nextMeta );\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tsetAttributes( nextAttributes );\n\t\t\t\t\t\t} }\n\t\t\t\t\t\t{ ...props }\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t},\n\t\t'withMetaAttributeSource'\n\t);\n\n/**\n * Filters a registered block's settings to enhance a block's `edit` component\n * to upgrade meta-sourced attributes to use the post's meta entity property.\n *\n * @param {WPBlockSettings} settings Registered block settings.\n *\n * @return {WPBlockSettings} Filtered block settings.\n */\nfunction shimAttributeSource( settings ) {\n\t/** @type {WPMetaAttributeMapping} */\n\tconst metaAttributes = Object.fromEntries(\n\t\tObject.entries( settings.attributes ?? {} )\n\t\t\t.filter( ( [ , { source } ] ) => source === 'meta' )\n\t\t\t.map( ( [ attributeKey, { meta } ] ) => [ attributeKey, meta ] )\n\t);\n\tif ( Object.entries( metaAttributes ).length ) {\n\t\tsettings.edit = createWithMetaAttributeSource( metaAttributes )(\n\t\t\tsettings.edit\n\t\t);\n\t}\n\n\treturn settings;\n}\n\naddFilter(\n\t'blocks.registerBlockType',\n\t'core/editor/custom-sources-backwards-compatibility/shim-attribute-source',\n\tshimAttributeSource\n);\n","/**\n * WordPress dependencies\n */\nimport { addFilter } from '@wordpress/hooks';\n\n/**\n * Internal dependencies\n */\nimport { userAutocompleter } from '../components';\n\nfunction setDefaultCompleters( completers = [] ) {\n\t// Provide copies so filters may directly modify them.\n\tcompleters.push( { ...userAutocompleter } );\n\n\treturn completers;\n}\n\naddFilter(\n\t'editor.Autocomplete.completers',\n\t'editor/autocompleters/set-default-completers',\n\tsetDefaultCompleters\n);\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"mediaUtils\"];","/**\n * WordPress dependencies\n */\nimport { addFilter } from '@wordpress/hooks';\nimport { MediaUpload } from '@wordpress/media-utils';\n\naddFilter(\n\t'editor.MediaUpload',\n\t'core/editor/components/media-upload',\n\t() => MediaUpload\n);\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"patterns\"];","/**\n * WordPress dependencies\n */\nimport { addFilter } from '@wordpress/hooks';\nimport { privateApis as patternsPrivateApis } from '@wordpress/patterns';\nimport { createHigherOrderComponent } from '@wordpress/compose';\nimport { useBlockEditingMode } from '@wordpress/block-editor';\nimport { useSelect } from '@wordpress/data';\nimport { store as blocksStore } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../store';\nimport { unlock } from '../lock-unlock';\n\nconst {\n\tPatternOverridesControls,\n\tResetOverridesControl,\n\tPatternOverridesBlockControls,\n\tPATTERN_TYPES,\n\tPARTIAL_SYNCING_SUPPORTED_BLOCKS,\n\tPATTERN_SYNC_TYPES,\n} = unlock( patternsPrivateApis );\n\n/**\n * Override the default edit UI to include a new block inspector control for\n * assigning a partial syncing controls to supported blocks in the pattern editor.\n * Currently, only the `core/paragraph` block is supported.\n *\n * @param {Component} BlockEdit Original component.\n *\n * @return {Component} Wrapped component.\n */\nconst withPatternOverrideControls = createHigherOrderComponent(\n\t( BlockEdit ) => ( props ) => {\n\t\tconst isSupportedBlock =\n\t\t\t!! PARTIAL_SYNCING_SUPPORTED_BLOCKS[ props.name ];\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<BlockEdit { ...props } />\n\t\t\t\t{ props.isSelected && isSupportedBlock && (\n\t\t\t\t\t<ControlsWithStoreSubscription { ...props } />\n\t\t\t\t) }\n\t\t\t\t{ isSupportedBlock && <PatternOverridesBlockControls /> }\n\t\t\t</>\n\t\t);\n\t}\n);\n\n// Split into a separate component to avoid a store subscription\n// on every block.\nfunction ControlsWithStoreSubscription( props ) {\n\tconst blockEditingMode = useBlockEditingMode();\n\tconst { hasPatternOverridesSource, isEditingSyncedPattern } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getBlockBindingsSource } = unlock( select( blocksStore ) );\n\t\t\tconst { getCurrentPostType, getEditedPostAttribute } =\n\t\t\t\tselect( editorStore );\n\n\t\t\treturn {\n\t\t\t\t// For editing link to the site editor if the theme and user permissions support it.\n\t\t\t\thasPatternOverridesSource: !! getBlockBindingsSource(\n\t\t\t\t\t'core/pattern-overrides'\n\t\t\t\t),\n\t\t\t\tisEditingSyncedPattern:\n\t\t\t\t\tgetCurrentPostType() === PATTERN_TYPES.user &&\n\t\t\t\t\tgetEditedPostAttribute( 'meta' )?.wp_pattern_sync_status !==\n\t\t\t\t\t\tPATTERN_SYNC_TYPES.unsynced &&\n\t\t\t\t\tgetEditedPostAttribute( 'wp_pattern_sync_status' ) !==\n\t\t\t\t\t\tPATTERN_SYNC_TYPES.unsynced,\n\t\t\t};\n\t\t},\n\t\t[]\n\t);\n\n\tconst bindings = props.attributes.metadata?.bindings;\n\tconst hasPatternBindings =\n\t\t!! bindings &&\n\t\tObject.values( bindings ).some(\n\t\t\t( binding ) => binding.source === 'core/pattern-overrides'\n\t\t);\n\n\tconst shouldShowPatternOverridesControls =\n\t\tisEditingSyncedPattern && blockEditingMode === 'default';\n\tconst shouldShowResetOverridesControl =\n\t\t! isEditingSyncedPattern &&\n\t\t!! props.attributes.metadata?.name &&\n\t\tblockEditingMode !== 'disabled' &&\n\t\thasPatternBindings;\n\n\tif ( ! hasPatternOverridesSource ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{ shouldShowPatternOverridesControls && (\n\t\t\t\t<PatternOverridesControls { ...props } />\n\t\t\t) }\n\t\t\t{ shouldShowResetOverridesControl && (\n\t\t\t\t<ResetOverridesControl { ...props } />\n\t\t\t) }\n\t\t</>\n\t);\n}\n\naddFilter(\n\t'editor.BlockEdit',\n\t'core/editor/with-pattern-override-controls',\n\twithPatternOverrideControls\n);\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"keyboardShortcuts\"];","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst check = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M16.7 7.1l-6.3 8.5-3.3-2.5-.9 1.2 4.5 3.4L17.9 8z\" />\n\t</SVG>\n);\n\nexport default check;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst starFilled = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M11.776 4.454a.25.25 0 01.448 0l2.069 4.192a.25.25 0 00.188.137l4.626.672a.25.25 0 01.139.426l-3.348 3.263a.25.25 0 00-.072.222l.79 4.607a.25.25 0 01-.362.263l-4.138-2.175a.25.25 0 00-.232 0l-4.138 2.175a.25.25 0 01-.363-.263l.79-4.607a.25.25 0 00-.071-.222L4.754 9.881a.25.25 0 01.139-.426l4.626-.672a.25.25 0 00.188-.137l2.069-4.192z\" />\n\t</SVG>\n);\n\nexport default starFilled;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst starEmpty = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path\n\t\t\tfillRule=\"evenodd\"\n\t\t\td=\"M9.706 8.646a.25.25 0 01-.188.137l-4.626.672a.25.25 0 00-.139.427l3.348 3.262a.25.25 0 01.072.222l-.79 4.607a.25.25 0 00.362.264l4.138-2.176a.25.25 0 01.233 0l4.137 2.175a.25.25 0 00.363-.263l-.79-4.607a.25.25 0 01.072-.222l3.347-3.262a.25.25 0 00-.139-.427l-4.626-.672a.25.25 0 01-.188-.137l-2.069-4.192a.25.25 0 00-.448 0L9.706 8.646zM12 7.39l-.948 1.921a1.75 1.75 0 01-1.317.957l-2.12.308 1.534 1.495c.412.402.6.982.503 1.55l-.362 2.11 1.896-.997a1.75 1.75 0 011.629 0l1.895.997-.362-2.11a1.75 1.75 0 01.504-1.55l1.533-1.495-2.12-.308a1.75 1.75 0 01-1.317-.957L12 7.39z\"\n\t\t\tclipRule=\"evenodd\"\n\t\t/>\n\t</SVG>\n);\n\nexport default starEmpty;\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"viewport\"];","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst closeSmall = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M12 13.06l3.712 3.713 1.061-1.06L13.061 12l3.712-3.712-1.06-1.06L12 10.938 8.288 7.227l-1.061 1.06L10.939 12l-3.712 3.712 1.06 1.061L12 13.061z\" />\n\t</SVG>\n);\n\nexport default closeSmall;\n","/**\n * WordPress dependencies\n */\nimport deprecated from '@wordpress/deprecated';\n\nexport function normalizeComplementaryAreaScope( scope ) {\n\tif ( [ 'core/edit-post', 'core/edit-site' ].includes( scope ) ) {\n\t\tdeprecated( `${ scope } interface scope`, {\n\t\t\talternative: 'core interface scope',\n\t\t\thint: 'core/edit-post and core/edit-site are merging.',\n\t\t\tversion: '6.6',\n\t\t} );\n\t\treturn 'core';\n\t}\n\n\treturn scope;\n}\n\nexport function normalizeComplementaryAreaName( scope, name ) {\n\tif ( scope === 'core' && name === 'edit-site/template' ) {\n\t\tdeprecated( `edit-site/template sidebar`, {\n\t\t\talternative: 'edit-post/document',\n\t\t\tversion: '6.6',\n\t\t} );\n\t\treturn 'edit-post/document';\n\t}\n\n\tif ( scope === 'core' && name === 'edit-site/block-inspector' ) {\n\t\tdeprecated( `edit-site/block-inspector sidebar`, {\n\t\t\talternative: 'edit-post/block',\n\t\t\tversion: '6.6',\n\t\t} );\n\t\treturn 'edit-post/block';\n\t}\n\n\treturn name;\n}\n","/**\n * WordPress dependencies\n */\nimport deprecated from '@wordpress/deprecated';\nimport { store as preferencesStore } from '@wordpress/preferences';\n\n/**\n * Internal dependencies\n */\nimport {\n\tnormalizeComplementaryAreaScope,\n\tnormalizeComplementaryAreaName,\n} from './deprecated';\n\n/**\n * Set a default complementary area.\n *\n * @param {string} scope Complementary area scope.\n * @param {string} area  Area identifier.\n *\n * @return {Object} Action object.\n */\nexport const setDefaultComplementaryArea = ( scope, area ) => {\n\tscope = normalizeComplementaryAreaScope( scope );\n\tarea = normalizeComplementaryAreaName( scope, area );\n\treturn {\n\t\ttype: 'SET_DEFAULT_COMPLEMENTARY_AREA',\n\t\tscope,\n\t\tarea,\n\t};\n};\n\n/**\n * Enable the complementary area.\n *\n * @param {string} scope Complementary area scope.\n * @param {string} area  Area identifier.\n */\nexport const enableComplementaryArea =\n\t( scope, area ) =>\n\t( { registry, dispatch } ) => {\n\t\t// Return early if there's no area.\n\t\tif ( ! area ) {\n\t\t\treturn;\n\t\t}\n\t\tscope = normalizeComplementaryAreaScope( scope );\n\t\tarea = normalizeComplementaryAreaName( scope, area );\n\n\t\tconst isComplementaryAreaVisible = registry\n\t\t\t.select( preferencesStore )\n\t\t\t.get( scope, 'isComplementaryAreaVisible' );\n\n\t\tif ( ! isComplementaryAreaVisible ) {\n\t\t\tregistry\n\t\t\t\t.dispatch( preferencesStore )\n\t\t\t\t.set( scope, 'isComplementaryAreaVisible', true );\n\t\t}\n\n\t\tdispatch( {\n\t\t\ttype: 'ENABLE_COMPLEMENTARY_AREA',\n\t\t\tscope,\n\t\t\tarea,\n\t\t} );\n\t};\n\n/**\n * Disable the complementary area.\n *\n * @param {string} scope Complementary area scope.\n */\nexport const disableComplementaryArea =\n\t( scope ) =>\n\t( { registry } ) => {\n\t\tscope = normalizeComplementaryAreaScope( scope );\n\t\tconst isComplementaryAreaVisible = registry\n\t\t\t.select( preferencesStore )\n\t\t\t.get( scope, 'isComplementaryAreaVisible' );\n\n\t\tif ( isComplementaryAreaVisible ) {\n\t\t\tregistry\n\t\t\t\t.dispatch( preferencesStore )\n\t\t\t\t.set( scope, 'isComplementaryAreaVisible', false );\n\t\t}\n\t};\n\n/**\n * Pins an item.\n *\n * @param {string} scope Item scope.\n * @param {string} item  Item identifier.\n *\n * @return {Object} Action object.\n */\nexport const pinItem =\n\t( scope, item ) =>\n\t( { registry } ) => {\n\t\t// Return early if there's no item.\n\t\tif ( ! item ) {\n\t\t\treturn;\n\t\t}\n\n\t\tscope = normalizeComplementaryAreaScope( scope );\n\t\titem = normalizeComplementaryAreaName( scope, item );\n\t\tconst pinnedItems = registry\n\t\t\t.select( preferencesStore )\n\t\t\t.get( scope, 'pinnedItems' );\n\n\t\t// The item is already pinned, there's nothing to do.\n\t\tif ( pinnedItems?.[ item ] === true ) {\n\t\t\treturn;\n\t\t}\n\n\t\tregistry.dispatch( preferencesStore ).set( scope, 'pinnedItems', {\n\t\t\t...pinnedItems,\n\t\t\t[ item ]: true,\n\t\t} );\n\t};\n\n/**\n * Unpins an item.\n *\n * @param {string} scope Item scope.\n * @param {string} item  Item identifier.\n */\nexport const unpinItem =\n\t( scope, item ) =>\n\t( { registry } ) => {\n\t\t// Return early if there's no item.\n\t\tif ( ! item ) {\n\t\t\treturn;\n\t\t}\n\n\t\tscope = normalizeComplementaryAreaScope( scope );\n\t\titem = normalizeComplementaryAreaName( scope, item );\n\t\tconst pinnedItems = registry\n\t\t\t.select( preferencesStore )\n\t\t\t.get( scope, 'pinnedItems' );\n\n\t\tregistry.dispatch( preferencesStore ).set( scope, 'pinnedItems', {\n\t\t\t...pinnedItems,\n\t\t\t[ item ]: false,\n\t\t} );\n\t};\n\n/**\n * Returns an action object used in signalling that a feature should be toggled.\n *\n * @param {string} scope       The feature scope (e.g. core/edit-post).\n * @param {string} featureName The feature name.\n */\nexport function toggleFeature( scope, featureName ) {\n\treturn function ( { registry } ) {\n\t\tdeprecated( `dispatch( 'core/interface' ).toggleFeature`, {\n\t\t\tsince: '6.0',\n\t\t\talternative: `dispatch( 'core/preferences' ).toggle`,\n\t\t} );\n\n\t\tregistry.dispatch( preferencesStore ).toggle( scope, featureName );\n\t};\n}\n\n/**\n * Returns an action object used in signalling that a feature should be set to\n * a true or false value\n *\n * @param {string}  scope       The feature scope (e.g. core/edit-post).\n * @param {string}  featureName The feature name.\n * @param {boolean} value       The value to set.\n *\n * @return {Object} Action object.\n */\nexport function setFeatureValue( scope, featureName, value ) {\n\treturn function ( { registry } ) {\n\t\tdeprecated( `dispatch( 'core/interface' ).setFeatureValue`, {\n\t\t\tsince: '6.0',\n\t\t\talternative: `dispatch( 'core/preferences' ).set`,\n\t\t} );\n\n\t\tregistry\n\t\t\t.dispatch( preferencesStore )\n\t\t\t.set( scope, featureName, !! value );\n\t};\n}\n\n/**\n * Returns an action object used in signalling that defaults should be set for features.\n *\n * @param {string}                  scope    The feature scope (e.g. core/edit-post).\n * @param {Object<string, boolean>} defaults A key/value map of feature names to values.\n *\n * @return {Object} Action object.\n */\nexport function setFeatureDefaults( scope, defaults ) {\n\treturn function ( { registry } ) {\n\t\tdeprecated( `dispatch( 'core/interface' ).setFeatureDefaults`, {\n\t\t\tsince: '6.0',\n\t\t\talternative: `dispatch( 'core/preferences' ).setDefaults`,\n\t\t} );\n\n\t\tregistry.dispatch( preferencesStore ).setDefaults( scope, defaults );\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the user opened a modal.\n *\n * @param {string} name A string that uniquely identifies the modal.\n *\n * @return {Object} Action object.\n */\nexport function openModal( name ) {\n\treturn {\n\t\ttype: 'OPEN_MODAL',\n\t\tname,\n\t};\n}\n\n/**\n * Returns an action object signalling that the user closed a modal.\n *\n * @return {Object} Action object.\n */\nexport function closeModal() {\n\treturn {\n\t\ttype: 'CLOSE_MODAL',\n\t};\n}\n","/**\n * WordPress dependencies\n */\nimport { createRegistrySelector } from '@wordpress/data';\nimport deprecated from '@wordpress/deprecated';\nimport { store as preferencesStore } from '@wordpress/preferences';\n\n/**\n * Internal dependencies\n */\nimport {\n\tnormalizeComplementaryAreaScope,\n\tnormalizeComplementaryAreaName,\n} from './deprecated';\n\n/**\n * Returns the complementary area that is active in a given scope.\n *\n * @param {Object} state Global application state.\n * @param {string} scope Item scope.\n *\n * @return {string | null | undefined} The complementary area that is active in the given scope.\n */\nexport const getActiveComplementaryArea = createRegistrySelector(\n\t( select ) => ( state, scope ) => {\n\t\tscope = normalizeComplementaryAreaScope( scope );\n\t\tconst isComplementaryAreaVisible = select( preferencesStore ).get(\n\t\t\tscope,\n\t\t\t'isComplementaryAreaVisible'\n\t\t);\n\n\t\t// Return `undefined` to indicate that the user has never toggled\n\t\t// visibility, this is the vanilla default. Other code relies on this\n\t\t// nuance in the return value.\n\t\tif ( isComplementaryAreaVisible === undefined ) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Return `null` to indicate the user hid the complementary area.\n\t\tif ( isComplementaryAreaVisible === false ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn state?.complementaryAreas?.[ scope ];\n\t}\n);\n\nexport const isComplementaryAreaLoading = createRegistrySelector(\n\t( select ) => ( state, scope ) => {\n\t\tscope = normalizeComplementaryAreaScope( scope );\n\t\tconst isVisible = select( preferencesStore ).get(\n\t\t\tscope,\n\t\t\t'isComplementaryAreaVisible'\n\t\t);\n\t\tconst identifier = state?.complementaryAreas?.[ scope ];\n\n\t\treturn isVisible && identifier === undefined;\n\t}\n);\n\n/**\n * Returns a boolean indicating if an item is pinned or not.\n *\n * @param {Object} state Global application state.\n * @param {string} scope Scope.\n * @param {string} item  Item to check.\n *\n * @return {boolean} True if the item is pinned and false otherwise.\n */\nexport const isItemPinned = createRegistrySelector(\n\t( select ) => ( state, scope, item ) => {\n\t\tscope = normalizeComplementaryAreaScope( scope );\n\t\titem = normalizeComplementaryAreaName( scope, item );\n\t\tconst pinnedItems = select( preferencesStore ).get(\n\t\t\tscope,\n\t\t\t'pinnedItems'\n\t\t);\n\t\treturn pinnedItems?.[ item ] ?? true;\n\t}\n);\n\n/**\n * Returns a boolean indicating whether a feature is active for a particular\n * scope.\n *\n * @param {Object} state       The store state.\n * @param {string} scope       The scope of the feature (e.g. core/edit-post).\n * @param {string} featureName The name of the feature.\n *\n * @return {boolean} Is the feature enabled?\n */\nexport const isFeatureActive = createRegistrySelector(\n\t( select ) => ( state, scope, featureName ) => {\n\t\tdeprecated(\n\t\t\t`select( 'core/interface' ).isFeatureActive( scope, featureName )`,\n\t\t\t{\n\t\t\t\tsince: '6.0',\n\t\t\t\talternative: `select( 'core/preferences' ).get( scope, featureName )`,\n\t\t\t}\n\t\t);\n\n\t\treturn !! select( preferencesStore ).get( scope, featureName );\n\t}\n);\n\n/**\n * Returns true if a modal is active, or false otherwise.\n *\n * @param {Object} state     Global application state.\n * @param {string} modalName A string that uniquely identifies the modal.\n *\n * @return {boolean} Whether the modal is active.\n */\nexport function isModalActive( state, modalName ) {\n\treturn state.activeModal === modalName;\n}\n","/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\n\nexport function complementaryAreas( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'SET_DEFAULT_COMPLEMENTARY_AREA': {\n\t\t\tconst { scope, area } = action;\n\n\t\t\t// If there's already an area, don't overwrite it.\n\t\t\tif ( state[ scope ] ) {\n\t\t\t\treturn state;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ scope ]: area,\n\t\t\t};\n\t\t}\n\t\tcase 'ENABLE_COMPLEMENTARY_AREA': {\n\t\t\tconst { scope, area } = action;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ scope ]: area,\n\t\t\t};\n\t\t}\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer for storing the name of the open modal, or null if no modal is open.\n *\n * @param {Object} state  Previous state.\n * @param {Object} action Action object containing the `name` of the modal\n *\n * @return {Object} Updated state\n */\nexport function activeModal( state = null, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'OPEN_MODAL':\n\t\t\treturn action.name;\n\t\tcase 'CLOSE_MODAL':\n\t\t\treturn null;\n\t}\n\n\treturn state;\n}\n\nexport default combineReducers( {\n\tcomplementaryAreas,\n\tactiveModal,\n} );\n","/**\n * WordPress dependencies\n */\nimport { createReduxStore, register } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport * as actions from './actions';\nimport * as selectors from './selectors';\nimport reducer from './reducer';\nimport { STORE_NAME } from './constants';\n\n/**\n * Store definition for the interface namespace.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/data/README.md#createReduxStore\n *\n * @type {Object}\n */\nexport const store = createReduxStore( STORE_NAME, {\n\treducer,\n\tactions,\n\tselectors,\n} );\n\n// Once we build a more generic persistence plugin that works across types of stores\n// we'd be able to replace this with a register call.\nregister( store );\n","/**\n * The identifier for the data store.\n *\n * @type {string}\n */\nexport const STORE_NAME = 'core/interface';\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"plugins\"];","/**\n * WordPress dependencies\n */\nimport { withPluginContext } from '@wordpress/plugins';\n\nexport default withPluginContext( ( context, ownProps ) => {\n\treturn {\n\t\ticon: ownProps.icon || context.icon,\n\t\tidentifier:\n\t\t\townProps.identifier || `${ context.name }/${ ownProps.name }`,\n\t};\n} );\n","/**\n * WordPress dependencies\n */\nimport { Button } from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as interfaceStore } from '../../store';\nimport complementaryAreaContext from '../complementary-area-context';\n\nfunction ComplementaryAreaToggle( {\n\tas = Button,\n\tscope,\n\tidentifier,\n\ticon,\n\tselectedIcon,\n\tname,\n\t...props\n} ) {\n\tconst ComponentToUse = as;\n\tconst isSelected = useSelect(\n\t\t( select ) =>\n\t\t\tselect( interfaceStore ).getActiveComplementaryArea( scope ) ===\n\t\t\tidentifier,\n\t\t[ identifier, scope ]\n\t);\n\tconst { enableComplementaryArea, disableComplementaryArea } =\n\t\tuseDispatch( interfaceStore );\n\treturn (\n\t\t<ComponentToUse\n\t\t\ticon={ selectedIcon && isSelected ? selectedIcon : icon }\n\t\t\taria-controls={ identifier.replace( '/', ':' ) }\n\t\t\tonClick={ () => {\n\t\t\t\tif ( isSelected ) {\n\t\t\t\t\tdisableComplementaryArea( scope );\n\t\t\t\t} else {\n\t\t\t\t\tenableComplementaryArea( scope, identifier );\n\t\t\t\t}\n\t\t\t} }\n\t\t\t{ ...props }\n\t\t/>\n\t);\n}\n\nexport default complementaryAreaContext( ComplementaryAreaToggle );\n","/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * WordPress dependencies\n */\nimport { closeSmall } from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport ComplementaryAreaToggle from '../complementary-area-toggle';\n\nconst ComplementaryAreaHeader = ( {\n\tsmallScreenTitle,\n\tchildren,\n\tclassName,\n\ttoggleButtonProps,\n} ) => {\n\tconst toggleButton = (\n\t\t<ComplementaryAreaToggle icon={ closeSmall } { ...toggleButtonProps } />\n\t);\n\treturn (\n\t\t<>\n\t\t\t<div className=\"components-panel__header interface-complementary-area-header__small\">\n\t\t\t\t{ smallScreenTitle && (\n\t\t\t\t\t<h2 className=\"interface-complementary-area-header__small-title\">\n\t\t\t\t\t\t{ smallScreenTitle }\n\t\t\t\t\t</h2>\n\t\t\t\t) }\n\t\t\t\t{ toggleButton }\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName={ clsx(\n\t\t\t\t\t'components-panel__header',\n\t\t\t\t\t'interface-complementary-area-header',\n\t\t\t\t\tclassName\n\t\t\t\t) }\n\t\t\t\ttabIndex={ -1 }\n\t\t\t>\n\t\t\t\t{ children }\n\t\t\t\t{ toggleButton }\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default ComplementaryAreaHeader;\n","/**\n * WordPress dependencies\n */\nimport { ButtonGroup, Button, Slot, Fill } from '@wordpress/components';\nimport { Children } from '@wordpress/element';\n\nconst noop = () => {};\n\nfunction ActionItemSlot( {\n\tname,\n\tas: Component = ButtonGroup,\n\tfillProps = {},\n\tbubblesVirtually,\n\t...props\n} ) {\n\treturn (\n\t\t<Slot\n\t\t\tname={ name }\n\t\t\tbubblesVirtually={ bubblesVirtually }\n\t\t\tfillProps={ fillProps }\n\t\t>\n\t\t\t{ ( fills ) => {\n\t\t\t\tif ( ! Children.toArray( fills ).length ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\t// Special handling exists for backward compatibility.\n\t\t\t\t// It ensures that menu items created by plugin authors aren't\n\t\t\t\t// duplicated with automatically injected menu items coming\n\t\t\t\t// from pinnable plugin sidebars.\n\t\t\t\t// @see https://github.com/WordPress/gutenberg/issues/14457\n\t\t\t\tconst initializedByPlugins = [];\n\t\t\t\tChildren.forEach(\n\t\t\t\t\tfills,\n\t\t\t\t\t( {\n\t\t\t\t\t\tprops: { __unstableExplicitMenuItem, __unstableTarget },\n\t\t\t\t\t} ) => {\n\t\t\t\t\t\tif ( __unstableTarget && __unstableExplicitMenuItem ) {\n\t\t\t\t\t\t\tinitializedByPlugins.push( __unstableTarget );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tconst children = Children.map( fills, ( child ) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\t! child.props.__unstableExplicitMenuItem &&\n\t\t\t\t\t\tinitializedByPlugins.includes(\n\t\t\t\t\t\t\tchild.props.__unstableTarget\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\treturn child;\n\t\t\t\t} );\n\n\t\t\t\treturn <Component { ...props }>{ children }</Component>;\n\t\t\t} }\n\t\t</Slot>\n\t);\n}\n\nfunction ActionItem( { name, as: Component = Button, onClick, ...props } ) {\n\treturn (\n\t\t<Fill name={ name }>\n\t\t\t{ ( { onClick: fpOnClick } ) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Component\n\t\t\t\t\t\tonClick={\n\t\t\t\t\t\t\tonClick || fpOnClick\n\t\t\t\t\t\t\t\t? ( ...args ) => {\n\t\t\t\t\t\t\t\t\t\t( onClick || noop )( ...args );\n\t\t\t\t\t\t\t\t\t\t( fpOnClick || noop )( ...args );\n\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{ ...props }\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t} }\n\t\t</Fill>\n\t);\n}\n\nActionItem.Slot = ActionItemSlot;\n\nexport default ActionItem;\n","/**\n * WordPress dependencies\n */\nimport { check } from '@wordpress/icons';\nimport { MenuItem } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport ComplementaryAreaToggle from '../complementary-area-toggle';\nimport ActionItem from '../action-item';\n\nconst PluginsMenuItem = ( {\n\t// Menu item is marked with unstable prop for backward compatibility.\n\t// They are removed so they don't leak to DOM elements.\n\t// @see https://github.com/WordPress/gutenberg/issues/14457\n\t__unstableExplicitMenuItem,\n\t__unstableTarget,\n\t...restProps\n} ) => <MenuItem { ...restProps } />;\n\nexport default function ComplementaryAreaMoreMenuItem( {\n\tscope,\n\ttarget,\n\t__unstableExplicitMenuItem,\n\t...props\n} ) {\n\treturn (\n\t\t<ComplementaryAreaToggle\n\t\t\tas={ ( toggleProps ) => {\n\t\t\t\treturn (\n\t\t\t\t\t<ActionItem\n\t\t\t\t\t\t__unstableExplicitMenuItem={\n\t\t\t\t\t\t\t__unstableExplicitMenuItem\n\t\t\t\t\t\t}\n\t\t\t\t\t\t__unstableTarget={ `${ scope }/${ target }` }\n\t\t\t\t\t\tas={ PluginsMenuItem }\n\t\t\t\t\t\tname={ `${ scope }/plugin-more-menu` }\n\t\t\t\t\t\t{ ...toggleProps }\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t} }\n\t\t\trole=\"menuitemcheckbox\"\n\t\t\tselectedIcon={ check }\n\t\t\tname={ target }\n\t\t\tscope={ scope }\n\t\t\t{ ...props }\n\t\t/>\n\t);\n}\n","/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * WordPress dependencies\n */\nimport { Slot, Fill } from '@wordpress/components';\n\nfunction PinnedItems( { scope, ...props } ) {\n\treturn <Fill name={ `PinnedItems/${ scope }` } { ...props } />;\n}\n\nfunction PinnedItemsSlot( { scope, className, ...props } ) {\n\treturn (\n\t\t<Slot name={ `PinnedItems/${ scope }` } { ...props }>\n\t\t\t{ ( fills ) =>\n\t\t\t\tfills?.length > 0 && (\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={ clsx(\n\t\t\t\t\t\t\tclassName,\n\t\t\t\t\t\t\t'interface-pinned-items'\n\t\t\t\t\t\t) }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ fills }\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t</Slot>\n\t);\n}\n\nPinnedItems.Slot = PinnedItemsSlot;\n\nexport default PinnedItems;\n","/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tButton,\n\tPanel,\n\tSlot,\n\tFill,\n\t__unstableMotion as motion,\n\t__unstableAnimatePresence as AnimatePresence,\n} from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\nimport { check, starEmpty, starFilled } from '@wordpress/icons';\nimport { useEffect, useRef, useState } from '@wordpress/element';\nimport { store as viewportStore } from '@wordpress/viewport';\nimport { store as preferencesStore } from '@wordpress/preferences';\nimport {\n\tuseReducedMotion,\n\tuseViewportMatch,\n\tusePrevious,\n} from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport ComplementaryAreaHeader from '../complementary-area-header';\nimport ComplementaryAreaMoreMenuItem from '../complementary-area-more-menu-item';\nimport ComplementaryAreaToggle from '../complementary-area-toggle';\nimport withComplementaryAreaContext from '../complementary-area-context';\nimport PinnedItems from '../pinned-items';\nimport { store as interfaceStore } from '../../store';\n\nconst ANIMATION_DURATION = 0.3;\n\nfunction ComplementaryAreaSlot( { scope, ...props } ) {\n\treturn <Slot name={ `ComplementaryArea/${ scope }` } { ...props } />;\n}\n\nconst SIDEBAR_WIDTH = 280;\nconst variants = {\n\topen: { width: SIDEBAR_WIDTH },\n\tclosed: { width: 0 },\n\tmobileOpen: { width: '100vw' },\n};\n\nfunction ComplementaryAreaFill( {\n\tactiveArea,\n\tisActive,\n\tscope,\n\tchildren,\n\tclassName,\n\tid,\n} ) {\n\tconst disableMotion = useReducedMotion();\n\tconst isMobileViewport = useViewportMatch( 'medium', '<' );\n\t// This is used to delay the exit animation to the next tick.\n\t// The reason this is done is to allow us to apply the right transition properties\n\t// When we switch from an open sidebar to another open sidebar.\n\t// we don't want to animate in this case.\n\tconst previousActiveArea = usePrevious( activeArea );\n\tconst previousIsActive = usePrevious( isActive );\n\tconst [ , setState ] = useState( {} );\n\tuseEffect( () => {\n\t\tsetState( {} );\n\t}, [ isActive ] );\n\tconst transition = {\n\t\ttype: 'tween',\n\t\tduration:\n\t\t\tdisableMotion ||\n\t\t\tisMobileViewport ||\n\t\t\t( !! previousActiveArea &&\n\t\t\t\t!! activeArea &&\n\t\t\t\tactiveArea !== previousActiveArea )\n\t\t\t\t? 0\n\t\t\t\t: ANIMATION_DURATION,\n\t\tease: [ 0.6, 0, 0.4, 1 ],\n\t};\n\n\treturn (\n\t\t<Fill name={ `ComplementaryArea/${ scope }` }>\n\t\t\t<AnimatePresence initial={ false }>\n\t\t\t\t{ ( previousIsActive || isActive ) && (\n\t\t\t\t\t<motion.div\n\t\t\t\t\t\tvariants={ variants }\n\t\t\t\t\t\tinitial=\"closed\"\n\t\t\t\t\t\tanimate={ isMobileViewport ? 'mobileOpen' : 'open' }\n\t\t\t\t\t\texit=\"closed\"\n\t\t\t\t\t\ttransition={ transition }\n\t\t\t\t\t\tclassName=\"interface-complementary-area__fill\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tid={ id }\n\t\t\t\t\t\t\tclassName={ className }\n\t\t\t\t\t\t\tstyle={ {\n\t\t\t\t\t\t\t\twidth: isMobileViewport\n\t\t\t\t\t\t\t\t\t? '100vw'\n\t\t\t\t\t\t\t\t\t: SIDEBAR_WIDTH,\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ children }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</motion.div>\n\t\t\t\t) }\n\t\t\t</AnimatePresence>\n\t\t</Fill>\n\t);\n}\n\nfunction useAdjustComplementaryListener(\n\tscope,\n\tidentifier,\n\tactiveArea,\n\tisActive,\n\tisSmall\n) {\n\tconst previousIsSmall = useRef( false );\n\tconst shouldOpenWhenNotSmall = useRef( false );\n\tconst { enableComplementaryArea, disableComplementaryArea } =\n\t\tuseDispatch( interfaceStore );\n\tuseEffect( () => {\n\t\t// If the complementary area is active and the editor is switching from\n\t\t// a big to a small window size.\n\t\tif ( isActive && isSmall && ! previousIsSmall.current ) {\n\t\t\tdisableComplementaryArea( scope );\n\t\t\t// Flag the complementary area to be reopened when the window size\n\t\t\t// goes from small to big.\n\t\t\tshouldOpenWhenNotSmall.current = true;\n\t\t} else if (\n\t\t\t// If there is a flag indicating the complementary area should be\n\t\t\t// enabled when we go from small to big window size and we are going\n\t\t\t// from a small to big window size.\n\t\t\tshouldOpenWhenNotSmall.current &&\n\t\t\t! isSmall &&\n\t\t\tpreviousIsSmall.current\n\t\t) {\n\t\t\t// Remove the flag indicating the complementary area should be\n\t\t\t// enabled.\n\t\t\tshouldOpenWhenNotSmall.current = false;\n\t\t\tenableComplementaryArea( scope, identifier );\n\t\t} else if (\n\t\t\t// If the flag is indicating the current complementary should be\n\t\t\t// reopened but another complementary area becomes active, remove\n\t\t\t// the flag.\n\t\t\tshouldOpenWhenNotSmall.current &&\n\t\t\tactiveArea &&\n\t\t\tactiveArea !== identifier\n\t\t) {\n\t\t\tshouldOpenWhenNotSmall.current = false;\n\t\t}\n\t\tif ( isSmall !== previousIsSmall.current ) {\n\t\t\tpreviousIsSmall.current = isSmall;\n\t\t}\n\t}, [\n\t\tisActive,\n\t\tisSmall,\n\t\tscope,\n\t\tidentifier,\n\t\tactiveArea,\n\t\tdisableComplementaryArea,\n\t\tenableComplementaryArea,\n\t] );\n}\n\nfunction ComplementaryArea( {\n\tchildren,\n\tclassName,\n\tcloseLabel = __( 'Close plugin' ),\n\tidentifier,\n\theader,\n\theaderClassName,\n\ticon,\n\tisPinnable = true,\n\tpanelClassName,\n\tscope,\n\tname,\n\tsmallScreenTitle,\n\ttitle,\n\ttoggleShortcut,\n\tisActiveByDefault,\n} ) {\n\t// This state is used to delay the rendering of the Fill\n\t// until the initial effect runs.\n\t// This prevents the animation from running on mount if\n\t// the complementary area is active by default.\n\tconst [ isReady, setIsReady ] = useState( false );\n\tconst {\n\t\tisLoading,\n\t\tisActive,\n\t\tisPinned,\n\t\tactiveArea,\n\t\tisSmall,\n\t\tisLarge,\n\t\tshowIconLabels,\n\t} = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetActiveComplementaryArea,\n\t\t\t\tisComplementaryAreaLoading,\n\t\t\t\tisItemPinned,\n\t\t\t} = select( interfaceStore );\n\t\t\tconst { get } = select( preferencesStore );\n\n\t\t\tconst _activeArea = getActiveComplementaryArea( scope );\n\n\t\t\treturn {\n\t\t\t\tisLoading: isComplementaryAreaLoading( scope ),\n\t\t\t\tisActive: _activeArea === identifier,\n\t\t\t\tisPinned: isItemPinned( scope, identifier ),\n\t\t\t\tactiveArea: _activeArea,\n\t\t\t\tisSmall: select( viewportStore ).isViewportMatch( '< medium' ),\n\t\t\t\tisLarge: select( viewportStore ).isViewportMatch( 'large' ),\n\t\t\t\tshowIconLabels: get( 'core', 'showIconLabels' ),\n\t\t\t};\n\t\t},\n\t\t[ identifier, scope ]\n\t);\n\tuseAdjustComplementaryListener(\n\t\tscope,\n\t\tidentifier,\n\t\tactiveArea,\n\t\tisActive,\n\t\tisSmall\n\t);\n\tconst {\n\t\tenableComplementaryArea,\n\t\tdisableComplementaryArea,\n\t\tpinItem,\n\t\tunpinItem,\n\t} = useDispatch( interfaceStore );\n\n\tuseEffect( () => {\n\t\t// Set initial visibility: For large screens, enable if it's active by\n\t\t// default. For small screens, always initially disable.\n\t\tif ( isActiveByDefault && activeArea === undefined && ! isSmall ) {\n\t\t\tenableComplementaryArea( scope, identifier );\n\t\t} else if ( activeArea === undefined && isSmall ) {\n\t\t\tdisableComplementaryArea( scope, identifier );\n\t\t}\n\t\tsetIsReady( true );\n\t}, [\n\t\tactiveArea,\n\t\tisActiveByDefault,\n\t\tscope,\n\t\tidentifier,\n\t\tisSmall,\n\t\tenableComplementaryArea,\n\t\tdisableComplementaryArea,\n\t] );\n\n\tif ( ! isReady ) {\n\t\treturn;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{ isPinnable && (\n\t\t\t\t<PinnedItems scope={ scope }>\n\t\t\t\t\t{ isPinned && (\n\t\t\t\t\t\t<ComplementaryAreaToggle\n\t\t\t\t\t\t\tscope={ scope }\n\t\t\t\t\t\t\tidentifier={ identifier }\n\t\t\t\t\t\t\tisPressed={\n\t\t\t\t\t\t\t\tisActive && ( ! showIconLabels || isLarge )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\taria-expanded={ isActive }\n\t\t\t\t\t\t\taria-disabled={ isLoading }\n\t\t\t\t\t\t\tlabel={ title }\n\t\t\t\t\t\t\ticon={ showIconLabels ? check : icon }\n\t\t\t\t\t\t\tshowTooltip={ ! showIconLabels }\n\t\t\t\t\t\t\tvariant={ showIconLabels ? 'tertiary' : undefined }\n\t\t\t\t\t\t\tsize=\"compact\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</PinnedItems>\n\t\t\t) }\n\t\t\t{ name && isPinnable && (\n\t\t\t\t<ComplementaryAreaMoreMenuItem\n\t\t\t\t\ttarget={ name }\n\t\t\t\t\tscope={ scope }\n\t\t\t\t\ticon={ icon }\n\t\t\t\t>\n\t\t\t\t\t{ title }\n\t\t\t\t</ComplementaryAreaMoreMenuItem>\n\t\t\t) }\n\t\t\t<ComplementaryAreaFill\n\t\t\t\tactiveArea={ activeArea }\n\t\t\t\tisActive={ isActive }\n\t\t\t\tclassName={ clsx( 'interface-complementary-area', className ) }\n\t\t\t\tscope={ scope }\n\t\t\t\tid={ identifier.replace( '/', ':' ) }\n\t\t\t>\n\t\t\t\t<ComplementaryAreaHeader\n\t\t\t\t\tclassName={ headerClassName }\n\t\t\t\t\tcloseLabel={ closeLabel }\n\t\t\t\t\tonClose={ () => disableComplementaryArea( scope ) }\n\t\t\t\t\tsmallScreenTitle={ smallScreenTitle }\n\t\t\t\t\ttoggleButtonProps={ {\n\t\t\t\t\t\tlabel: closeLabel,\n\t\t\t\t\t\tsize: 'small',\n\t\t\t\t\t\tshortcut: toggleShortcut,\n\t\t\t\t\t\tscope,\n\t\t\t\t\t\tidentifier,\n\t\t\t\t\t} }\n\t\t\t\t>\n\t\t\t\t\t{ header || (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<h2 className=\"interface-complementary-area-header__title\">\n\t\t\t\t\t\t\t\t{ title }\n\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t{ isPinnable && (\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tclassName=\"interface-complementary-area__pin-unpin-item\"\n\t\t\t\t\t\t\t\t\ticon={ isPinned ? starFilled : starEmpty }\n\t\t\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t\t\t\tisPinned\n\t\t\t\t\t\t\t\t\t\t\t? __( 'Unpin from toolbar' )\n\t\t\t\t\t\t\t\t\t\t\t: __( 'Pin to toolbar' )\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tonClick={ () =>\n\t\t\t\t\t\t\t\t\t\t( isPinned ? unpinItem : pinItem )(\n\t\t\t\t\t\t\t\t\t\t\tscope,\n\t\t\t\t\t\t\t\t\t\t\tidentifier\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tisPressed={ isPinned }\n\t\t\t\t\t\t\t\t\taria-expanded={ isPinned }\n\t\t\t\t\t\t\t\t\tsize=\"compact\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</>\n\t\t\t\t\t) }\n\t\t\t\t</ComplementaryAreaHeader>\n\t\t\t\t<Panel className={ panelClassName }>{ children }</Panel>\n\t\t\t</ComplementaryAreaFill>\n\t\t</>\n\t);\n}\n\nconst ComplementaryAreaWrapped =\n\twithComplementaryAreaContext( ComplementaryArea );\n\nComplementaryAreaWrapped.Slot = ComplementaryAreaSlot;\n\nexport default ComplementaryAreaWrapped;\n","/**\n * WordPress dependencies\n */\nimport { useEffect } from '@wordpress/element';\n\nconst FullscreenMode = ( { isActive } ) => {\n\tuseEffect( () => {\n\t\tlet isSticky = false;\n\t\t// `is-fullscreen-mode` is set in PHP as a body class by Gutenberg, and this causes\n\t\t// `sticky-menu` to be applied by WordPress and prevents the admin menu being scrolled\n\t\t// even if `is-fullscreen-mode` is then removed. Let's remove `sticky-menu` here as\n\t\t// a consequence of the FullscreenMode setup.\n\t\tif ( document.body.classList.contains( 'sticky-menu' ) ) {\n\t\t\tisSticky = true;\n\t\t\tdocument.body.classList.remove( 'sticky-menu' );\n\t\t}\n\n\t\treturn () => {\n\t\t\tif ( isSticky ) {\n\t\t\t\tdocument.body.classList.add( 'sticky-menu' );\n\t\t\t}\n\t\t};\n\t}, [] );\n\n\tuseEffect( () => {\n\t\tif ( isActive ) {\n\t\t\tdocument.body.classList.add( 'is-fullscreen-mode' );\n\t\t} else {\n\t\t\tdocument.body.classList.remove( 'is-fullscreen-mode' );\n\t\t}\n\n\t\treturn () => {\n\t\t\tif ( isActive ) {\n\t\t\t\tdocument.body.classList.remove( 'is-fullscreen-mode' );\n\t\t\t}\n\t\t};\n\t}, [ isActive ] );\n\n\treturn null;\n};\nexport default FullscreenMode;\n","/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\nexport default function NavigableRegion( {\n\tchildren,\n\tclassName,\n\tariaLabel,\n\tas: Tag = 'div',\n\t...props\n} ) {\n\treturn (\n\t\t<Tag\n\t\t\tclassName={ clsx( 'interface-navigable-region', className ) }\n\t\t\taria-label={ ariaLabel }\n\t\t\trole=\"region\"\n\t\t\ttabIndex=\"-1\"\n\t\t\t{ ...props }\n\t\t>\n\t\t\t{ children }\n\t\t</Tag>\n\t);\n}\n","/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * WordPress dependencies\n */\nimport { forwardRef, useEffect } from '@wordpress/element';\nimport {\n\t__unstableUseNavigateRegions as useNavigateRegions,\n\t__unstableMotion as motion,\n\t__unstableAnimatePresence as AnimatePresence,\n} from '@wordpress/components';\nimport { __, _x } from '@wordpress/i18n';\nimport {\n\tuseMergeRefs,\n\tuseReducedMotion,\n\tuseViewportMatch,\n\tuseResizeObserver,\n} from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport NavigableRegion from '../navigable-region';\n\nconst ANIMATION_DURATION = 0.25;\nconst commonTransition = {\n\ttype: 'tween',\n\tduration: ANIMATION_DURATION,\n\tease: [ 0.6, 0, 0.4, 1 ],\n};\n\nfunction useHTMLClass( className ) {\n\tuseEffect( () => {\n\t\tconst element =\n\t\t\tdocument && document.querySelector( `html:not(.${ className })` );\n\t\tif ( ! element ) {\n\t\t\treturn;\n\t\t}\n\t\telement.classList.toggle( className );\n\t\treturn () => {\n\t\t\telement.classList.toggle( className );\n\t\t};\n\t}, [ className ] );\n}\n\nconst headerVariants = {\n\thidden: { opacity: 1, marginTop: -60 },\n\tvisible: { opacity: 1, marginTop: 0 },\n\tdistractionFreeHover: {\n\t\topacity: 1,\n\t\tmarginTop: 0,\n\t\ttransition: {\n\t\t\t...commonTransition,\n\t\t\tdelay: 0.2,\n\t\t\tdelayChildren: 0.2,\n\t\t},\n\t},\n\tdistractionFreeHidden: {\n\t\topacity: 0,\n\t\tmarginTop: -60,\n\t},\n\tdistractionFreeDisabled: {\n\t\topacity: 0,\n\t\tmarginTop: 0,\n\t\ttransition: {\n\t\t\t...commonTransition,\n\t\t\tdelay: 0.8,\n\t\t\tdelayChildren: 0.8,\n\t\t},\n\t},\n};\n\nfunction InterfaceSkeleton(\n\t{\n\t\tisDistractionFree,\n\t\tfooter,\n\t\theader,\n\t\teditorNotices,\n\t\tsidebar,\n\t\tsecondarySidebar,\n\t\tcontent,\n\t\tactions,\n\t\tlabels,\n\t\tclassName,\n\t\tenableRegionNavigation = true,\n\t\t// Todo: does this need to be a prop.\n\t\t// Can we use a dependency to keyboard-shortcuts directly?\n\t\tshortcuts,\n\t},\n\tref\n) {\n\tconst [ secondarySidebarResizeListener, secondarySidebarSize ] =\n\t\tuseResizeObserver();\n\tconst isMobileViewport = useViewportMatch( 'medium', '<' );\n\tconst disableMotion = useReducedMotion();\n\tconst defaultTransition = {\n\t\ttype: 'tween',\n\t\tduration: disableMotion ? 0 : ANIMATION_DURATION,\n\t\tease: [ 0.6, 0, 0.4, 1 ],\n\t};\n\tconst navigateRegionsProps = useNavigateRegions( shortcuts );\n\tuseHTMLClass( 'interface-interface-skeleton__html-container' );\n\n\tconst defaultLabels = {\n\t\t/* translators: accessibility text for the top bar landmark region. */\n\t\theader: _x( 'Header', 'header landmark area' ),\n\t\t/* translators: accessibility text for the content landmark region. */\n\t\tbody: __( 'Content' ),\n\t\t/* translators: accessibility text for the secondary sidebar landmark region. */\n\t\tsecondarySidebar: __( 'Block Library' ),\n\t\t/* translators: accessibility text for the settings landmark region. */\n\t\tsidebar: __( 'Settings' ),\n\t\t/* translators: accessibility text for the publish landmark region. */\n\t\tactions: __( 'Publish' ),\n\t\t/* translators: accessibility text for the footer landmark region. */\n\t\tfooter: __( 'Footer' ),\n\t};\n\n\tconst mergedLabels = { ...defaultLabels, ...labels };\n\n\treturn (\n\t\t<div\n\t\t\t{ ...( enableRegionNavigation ? navigateRegionsProps : {} ) }\n\t\t\tref={ useMergeRefs( [\n\t\t\t\tref,\n\t\t\t\tenableRegionNavigation ? navigateRegionsProps.ref : undefined,\n\t\t\t] ) }\n\t\t\tclassName={ clsx(\n\t\t\t\tclassName,\n\t\t\t\t'interface-interface-skeleton',\n\t\t\t\tnavigateRegionsProps.className,\n\t\t\t\t!! footer && 'has-footer'\n\t\t\t) }\n\t\t>\n\t\t\t<div className=\"interface-interface-skeleton__editor\">\n\t\t\t\t<AnimatePresence initial={ false }>\n\t\t\t\t\t{ !! header && (\n\t\t\t\t\t\t<NavigableRegion\n\t\t\t\t\t\t\tas={ motion.div }\n\t\t\t\t\t\t\tclassName=\"interface-interface-skeleton__header\"\n\t\t\t\t\t\t\taria-label={ mergedLabels.header }\n\t\t\t\t\t\t\tinitial={\n\t\t\t\t\t\t\t\tisDistractionFree\n\t\t\t\t\t\t\t\t\t? 'distractionFreeHidden'\n\t\t\t\t\t\t\t\t\t: 'hidden'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\twhileHover={\n\t\t\t\t\t\t\t\tisDistractionFree\n\t\t\t\t\t\t\t\t\t? 'distractionFreeHover'\n\t\t\t\t\t\t\t\t\t: 'visible'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tanimate={\n\t\t\t\t\t\t\t\tisDistractionFree\n\t\t\t\t\t\t\t\t\t? 'distractionFreeDisabled'\n\t\t\t\t\t\t\t\t\t: 'visible'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\texit={\n\t\t\t\t\t\t\t\tisDistractionFree\n\t\t\t\t\t\t\t\t\t? 'distractionFreeHidden'\n\t\t\t\t\t\t\t\t\t: 'hidden'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvariants={ headerVariants }\n\t\t\t\t\t\t\ttransition={ defaultTransition }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ header }\n\t\t\t\t\t\t</NavigableRegion>\n\t\t\t\t\t) }\n\t\t\t\t</AnimatePresence>\n\t\t\t\t{ isDistractionFree && (\n\t\t\t\t\t<div className=\"interface-interface-skeleton__header\">\n\t\t\t\t\t\t{ editorNotices }\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\t\t\t\t<div className=\"interface-interface-skeleton__body\">\n\t\t\t\t\t<AnimatePresence initial={ false }>\n\t\t\t\t\t\t{ !! secondarySidebar && (\n\t\t\t\t\t\t\t<NavigableRegion\n\t\t\t\t\t\t\t\tclassName=\"interface-interface-skeleton__secondary-sidebar\"\n\t\t\t\t\t\t\t\tariaLabel={ mergedLabels.secondarySidebar }\n\t\t\t\t\t\t\t\tas={ motion.div }\n\t\t\t\t\t\t\t\tinitial=\"closed\"\n\t\t\t\t\t\t\t\tanimate={\n\t\t\t\t\t\t\t\t\tisMobileViewport ? 'mobileOpen' : 'open'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\texit=\"closed\"\n\t\t\t\t\t\t\t\tvariants={ {\n\t\t\t\t\t\t\t\t\topen: { width: secondarySidebarSize.width },\n\t\t\t\t\t\t\t\t\tclosed: { width: 0 },\n\t\t\t\t\t\t\t\t\tmobileOpen: { width: '100vw' },\n\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\ttransition={ defaultTransition }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tstyle={ {\n\t\t\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\t\t\twidth: isMobileViewport\n\t\t\t\t\t\t\t\t\t\t\t? '100vw'\n\t\t\t\t\t\t\t\t\t\t\t: 'fit-content',\n\t\t\t\t\t\t\t\t\t\theight: '100%',\n\t\t\t\t\t\t\t\t\t\tright: 0,\n\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{ secondarySidebarResizeListener }\n\t\t\t\t\t\t\t\t\t{ secondarySidebar }\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</NavigableRegion>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</AnimatePresence>\n\t\t\t\t\t<NavigableRegion\n\t\t\t\t\t\tclassName=\"interface-interface-skeleton__content\"\n\t\t\t\t\t\tariaLabel={ mergedLabels.body }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ content }\n\t\t\t\t\t</NavigableRegion>\n\t\t\t\t\t{ !! sidebar && (\n\t\t\t\t\t\t<NavigableRegion\n\t\t\t\t\t\t\tclassName=\"interface-interface-skeleton__sidebar\"\n\t\t\t\t\t\t\tariaLabel={ mergedLabels.sidebar }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ sidebar }\n\t\t\t\t\t\t</NavigableRegion>\n\t\t\t\t\t) }\n\t\t\t\t\t{ !! actions && (\n\t\t\t\t\t\t<NavigableRegion\n\t\t\t\t\t\t\tclassName=\"interface-interface-skeleton__actions\"\n\t\t\t\t\t\t\tariaLabel={ mergedLabels.actions }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ actions }\n\t\t\t\t\t\t</NavigableRegion>\n\t\t\t\t\t) }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{ !! footer && (\n\t\t\t\t<NavigableRegion\n\t\t\t\t\tclassName=\"interface-interface-skeleton__footer\"\n\t\t\t\t\tariaLabel={ mergedLabels.footer }\n\t\t\t\t>\n\t\t\t\t\t{ footer }\n\t\t\t\t</NavigableRegion>\n\t\t\t) }\n\t\t</div>\n\t);\n}\n\nexport default forwardRef( InterfaceSkeleton );\n","/**\n * WordPress dependencies\n */\nimport { useShortcut } from '@wordpress/keyboard-shortcuts';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { store as interfaceStore } from '@wordpress/interface';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\n/**\n * Handles the keyboard shortcuts for the editor.\n *\n * It provides functionality for various keyboard shortcuts such as toggling editor mode,\n * toggling distraction-free mode, undo/redo, saving the post, toggling list view,\n * and toggling the sidebar.\n */\nexport default function EditorKeyboardShortcuts() {\n\tconst isModeToggleDisabled = useSelect( ( select ) => {\n\t\tconst { richEditingEnabled, codeEditingEnabled } =\n\t\t\tselect( editorStore ).getEditorSettings();\n\t\treturn ! richEditingEnabled || ! codeEditingEnabled;\n\t}, [] );\n\tconst { getBlockSelectionStart } = useSelect( blockEditorStore );\n\tconst { getActiveComplementaryArea } = useSelect( interfaceStore );\n\tconst { enableComplementaryArea, disableComplementaryArea } =\n\t\tuseDispatch( interfaceStore );\n\tconst {\n\t\tredo,\n\t\tundo,\n\t\tsavePost,\n\t\tsetIsListViewOpened,\n\t\tswitchEditorMode,\n\t\ttoggleDistractionFree,\n\t} = useDispatch( editorStore );\n\tconst {\n\t\tisEditedPostDirty,\n\t\tisPostSavingLocked,\n\t\tisListViewOpened,\n\t\tgetEditorMode,\n\t} = useSelect( editorStore );\n\n\tuseShortcut(\n\t\t'core/editor/toggle-mode',\n\t\t() => {\n\t\t\tswitchEditorMode(\n\t\t\t\tgetEditorMode() === 'visual' ? 'text' : 'visual'\n\t\t\t);\n\t\t},\n\t\t{\n\t\t\tisDisabled: isModeToggleDisabled,\n\t\t}\n\t);\n\n\tuseShortcut( 'core/editor/toggle-distraction-free', () => {\n\t\ttoggleDistractionFree();\n\t} );\n\n\tuseShortcut( 'core/editor/undo', ( event ) => {\n\t\tundo();\n\t\tevent.preventDefault();\n\t} );\n\n\tuseShortcut( 'core/editor/redo', ( event ) => {\n\t\tredo();\n\t\tevent.preventDefault();\n\t} );\n\n\tuseShortcut( 'core/editor/save', ( event ) => {\n\t\tevent.preventDefault();\n\n\t\t/**\n\t\t * Do not save the post if post saving is locked.\n\t\t */\n\t\tif ( isPostSavingLocked() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO: This should be handled in the `savePost` effect in\n\t\t// considering `isSaveable`. See note on `isEditedPostSaveable`\n\t\t// selector about dirtiness and meta-boxes.\n\t\t//\n\t\t// See: `isEditedPostSaveable`\n\t\tif ( ! isEditedPostDirty() ) {\n\t\t\treturn;\n\t\t}\n\n\t\tsavePost();\n\t} );\n\n\t// Only opens the list view. Other functionality for this shortcut happens in the rendered sidebar.\n\tuseShortcut( 'core/editor/toggle-list-view', ( event ) => {\n\t\tif ( ! isListViewOpened() ) {\n\t\t\tevent.preventDefault();\n\t\t\tsetIsListViewOpened( true );\n\t\t}\n\t} );\n\n\tuseShortcut( 'core/editor/toggle-sidebar', ( event ) => {\n\t\t// This shortcut has no known clashes, but use preventDefault to prevent any\n\t\t// obscure shortcuts from triggering.\n\t\tevent.preventDefault();\n\t\tconst isEditorSidebarOpened = [\n\t\t\t'edit-post/document',\n\t\t\t'edit-post/block',\n\t\t].includes( getActiveComplementaryArea( 'core' ) );\n\n\t\tif ( isEditorSidebarOpened ) {\n\t\t\tdisableComplementaryArea( 'core' );\n\t\t} else {\n\t\t\tconst sidebarToOpen = getBlockSelectionStart()\n\t\t\t\t? 'edit-post/block'\n\t\t\t\t: 'edit-post/document';\n\t\t\tenableComplementaryArea( 'core', sidebarToOpen );\n\t\t}\n\t} );\n\n\treturn null;\n}\n","/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { compose } from '@wordpress/compose';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nexport class AutosaveMonitor extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tthis.needsAutosave = !! ( props.isDirty && props.isAutosaveable );\n\t}\n\n\tcomponentDidMount() {\n\t\tif ( ! this.props.disableIntervalChecks ) {\n\t\t\tthis.setAutosaveTimer();\n\t\t}\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tif ( this.props.disableIntervalChecks ) {\n\t\t\tif ( this.props.editsReference !== prevProps.editsReference ) {\n\t\t\t\tthis.props.autosave();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.props.interval !== prevProps.interval ) {\n\t\t\tclearTimeout( this.timerId );\n\t\t\tthis.setAutosaveTimer();\n\t\t}\n\n\t\tif ( ! this.props.isDirty ) {\n\t\t\tthis.needsAutosave = false;\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.props.isAutosaving && ! prevProps.isAutosaving ) {\n\t\t\tthis.needsAutosave = false;\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.props.editsReference !== prevProps.editsReference ) {\n\t\t\tthis.needsAutosave = true;\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearTimeout( this.timerId );\n\t}\n\n\tsetAutosaveTimer( timeout = this.props.interval * 1000 ) {\n\t\tthis.timerId = setTimeout( () => {\n\t\t\tthis.autosaveTimerHandler();\n\t\t}, timeout );\n\t}\n\n\tautosaveTimerHandler() {\n\t\tif ( ! this.props.isAutosaveable ) {\n\t\t\tthis.setAutosaveTimer( 1000 );\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.needsAutosave ) {\n\t\t\tthis.needsAutosave = false;\n\t\t\tthis.props.autosave();\n\t\t}\n\n\t\tthis.setAutosaveTimer();\n\t}\n\n\trender() {\n\t\treturn null;\n\t}\n}\n\n/**\n * Monitors the changes made to the edited post and triggers autosave if necessary.\n *\n * The logic is straightforward: a check is performed every `props.interval` seconds. If any changes are detected, `props.autosave()` is called.\n * The time between the change and the autosave varies but is no larger than `props.interval` seconds. Refer to the code below for more details, such as\n * the specific way of detecting changes.\n *\n * There are two caveats:\n * * If `props.isAutosaveable` happens to be false at a time of checking for changes, the check is retried every second.\n * * The timer may be disabled by setting `props.disableIntervalChecks` to `true`. In that mode, any change will immediately trigger `props.autosave()`.\n *\n * @param {Object}   props                       - The properties passed to the component.\n * @param {Function} props.autosave              - The function to call when changes need to be saved.\n * @param {number}   props.interval              - The maximum time in seconds between an unsaved change and an autosave.\n * @param {boolean}  props.isAutosaveable        - If false, the check for changes is retried every second.\n * @param {boolean}  props.disableIntervalChecks - If true, disables the timer and any change will immediately trigger `props.autosave()`.\n * @param {boolean}  props.isDirty               - Indicates if there are unsaved changes.\n *\n * @example\n * ```jsx\n * <AutosaveMonitor interval={30000} />\n * ```\n */\nexport default compose( [\n\twithSelect( ( select, ownProps ) => {\n\t\tconst { getReferenceByDistinctEdits } = select( coreStore );\n\n\t\tconst {\n\t\t\tisEditedPostDirty,\n\t\t\tisEditedPostAutosaveable,\n\t\t\tisAutosavingPost,\n\t\t\tgetEditorSettings,\n\t\t} = select( editorStore );\n\n\t\tconst { interval = getEditorSettings().autosaveInterval } = ownProps;\n\n\t\treturn {\n\t\t\teditsReference: getReferenceByDistinctEdits(),\n\t\t\tisDirty: isEditedPostDirty(),\n\t\t\tisAutosaveable: isEditedPostAutosaveable(),\n\t\t\tisAutosaving: isAutosavingPost(),\n\t\t\tinterval,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, ownProps ) => ( {\n\t\tautosave() {\n\t\t\tconst { autosave = dispatch( editorStore ).autosave } = ownProps;\n\t\t\tautosave();\n\t\t},\n\t} ) ),\n] )( AutosaveMonitor );\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst chevronRightSmall = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M10.8622 8.04053L14.2805 12.0286L10.8622 16.0167L9.72327 15.0405L12.3049 12.0286L9.72327 9.01672L10.8622 8.04053Z\" />\n\t</SVG>\n);\n\nexport default chevronRightSmall;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst chevronLeftSmall = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"m13.1 16-3.4-4 3.4-4 1.1 1-2.6 3 2.6 3-1.1 1z\" />\n\t</SVG>\n);\n\nexport default chevronLeftSmall;\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"keycodes\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"commands\"];","/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * WordPress dependencies\n */\nimport { __, isRTL, sprintf } from '@wordpress/i18n';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport {\n\tButton,\n\t__experimentalText as Text,\n\t__unstableMotion as motion,\n\t__unstableAnimatePresence as AnimatePresence,\n} from '@wordpress/components';\nimport { BlockIcon } from '@wordpress/block-editor';\nimport { chevronLeftSmall, chevronRightSmall } from '@wordpress/icons';\nimport { displayShortcut } from '@wordpress/keycodes';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { store as commandsStore } from '@wordpress/commands';\nimport { useRef, useEffect } from '@wordpress/element';\nimport { useReducedMotion } from '@wordpress/compose';\nimport { decodeEntities } from '@wordpress/html-entities';\n\n/**\n * Internal dependencies\n */\nimport { TEMPLATE_POST_TYPES, GLOBAL_POST_TYPES } from '../../store/constants';\nimport { store as editorStore } from '../../store';\nimport { unlock } from '../../lock-unlock';\n\nconst TYPE_LABELS = {\n\t// translators: 1: Pattern title.\n\twp_pattern: __( 'Editing pattern: %s' ),\n\t// translators: 1: Navigation menu title.\n\twp_navigation: __( 'Editing navigation menu: %s' ),\n\t// translators: 1: Template title.\n\twp_template: __( 'Editing template: %s' ),\n\t// translators: 1: Template part title.\n\twp_template_part: __( 'Editing template part: %s' ),\n};\n\nconst MotionButton = motion( Button );\n\n/**\n * This component renders a navigation bar at the top of the editor. It displays the title of the current document,\n * a back button (if applicable), and a command center button. It also handles different states of the document,\n * such as \"not found\" or \"unsynced\".\n *\n * @example\n * ```jsx\n * <DocumentBar />\n * ```\n * @param {Object}                                   props       The component props.\n * @param {string}                                   props.title A title for the document, defaulting to the document or\n *                                                               template title currently being edited.\n * @param {import(\"@wordpress/components\").IconType} props.icon  An icon for the document, defaulting to an icon for document\n *                                                               or template currently being edited.\n *\n * @return {JSX.Element} The rendered DocumentBar component.\n */\nexport default function DocumentBar( props ) {\n\tconst {\n\t\tpostType,\n\t\tdocumentTitle,\n\t\tisNotFound,\n\t\tisUnsyncedPattern,\n\t\ttemplateIcon,\n\t\ttemplateTitle,\n\t\tonNavigateToPreviousEntityRecord,\n\t} = useSelect( ( select ) => {\n\t\tconst {\n\t\t\tgetCurrentPostType,\n\t\t\tgetCurrentPostId,\n\t\t\tgetEditorSettings,\n\t\t\t__experimentalGetTemplateInfo: getTemplateInfo,\n\t\t} = select( editorStore );\n\t\tconst { getEditedEntityRecord, isResolving: isResolvingSelector } =\n\t\t\tselect( coreStore );\n\t\tconst _postType = getCurrentPostType();\n\t\tconst _postId = getCurrentPostId();\n\t\tconst _document = getEditedEntityRecord(\n\t\t\t'postType',\n\t\t\t_postType,\n\t\t\t_postId\n\t\t);\n\t\tconst _templateInfo = getTemplateInfo( _document );\n\t\treturn {\n\t\t\tpostType: _postType,\n\t\t\tdocumentTitle: _document.title,\n\t\t\tisNotFound:\n\t\t\t\t! _document &&\n\t\t\t\t! isResolvingSelector(\n\t\t\t\t\t'getEditedEntityRecord',\n\t\t\t\t\t'postType',\n\t\t\t\t\t_postType,\n\t\t\t\t\t_postId\n\t\t\t\t),\n\t\t\tisUnsyncedPattern: _document?.wp_pattern_sync_status === 'unsynced',\n\t\t\ttemplateIcon: unlock( select( editorStore ) ).getPostIcon(\n\t\t\t\t_postType,\n\t\t\t\t{\n\t\t\t\t\tarea: _document?.area,\n\t\t\t\t}\n\t\t\t),\n\t\t\ttemplateTitle: _templateInfo.title,\n\t\t\tonNavigateToPreviousEntityRecord:\n\t\t\t\tgetEditorSettings().onNavigateToPreviousEntityRecord,\n\t\t};\n\t}, [] );\n\n\tconst { open: openCommandCenter } = useDispatch( commandsStore );\n\tconst isReducedMotion = useReducedMotion();\n\n\tconst isTemplate = TEMPLATE_POST_TYPES.includes( postType );\n\tconst isGlobalEntity = GLOBAL_POST_TYPES.includes( postType );\n\tconst hasBackButton = !! onNavigateToPreviousEntityRecord;\n\tconst entityTitle = isTemplate ? templateTitle : documentTitle;\n\tconst title = props.title || entityTitle;\n\tconst icon = props.icon || templateIcon;\n\n\tconst mounted = useRef( false );\n\tuseEffect( () => {\n\t\tmounted.current = true;\n\t}, [] );\n\n\treturn (\n\t\t<div\n\t\t\tclassName={ clsx( 'editor-document-bar', {\n\t\t\t\t'has-back-button': hasBackButton,\n\t\t\t\t'is-global': isGlobalEntity && ! isUnsyncedPattern,\n\t\t\t} ) }\n\t\t>\n\t\t\t<AnimatePresence>\n\t\t\t\t{ hasBackButton && (\n\t\t\t\t\t<MotionButton\n\t\t\t\t\t\tclassName=\"editor-document-bar__back\"\n\t\t\t\t\t\ticon={ isRTL() ? chevronRightSmall : chevronLeftSmall }\n\t\t\t\t\t\tonClick={ ( event ) => {\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t\tonNavigateToPreviousEntityRecord();\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tsize=\"compact\"\n\t\t\t\t\t\tinitial={\n\t\t\t\t\t\t\tmounted.current\n\t\t\t\t\t\t\t\t? { opacity: 0, transform: 'translateX(15%)' }\n\t\t\t\t\t\t\t\t: false // Don't show entry animation when DocumentBar mounts.\n\t\t\t\t\t\t}\n\t\t\t\t\t\tanimate={ { opacity: 1, transform: 'translateX(0%)' } }\n\t\t\t\t\t\texit={ { opacity: 0, transform: 'translateX(15%)' } }\n\t\t\t\t\t\ttransition={\n\t\t\t\t\t\t\tisReducedMotion ? { duration: 0 } : undefined\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Back' ) }\n\t\t\t\t\t</MotionButton>\n\t\t\t\t) }\n\t\t\t</AnimatePresence>\n\t\t\t{ isNotFound ? (\n\t\t\t\t<Text>{ __( 'Document not found' ) }</Text>\n\t\t\t) : (\n\t\t\t\t<Button\n\t\t\t\t\tclassName=\"editor-document-bar__command\"\n\t\t\t\t\tonClick={ () => openCommandCenter() }\n\t\t\t\t\tsize=\"compact\"\n\t\t\t\t>\n\t\t\t\t\t<motion.div\n\t\t\t\t\t\tclassName=\"editor-document-bar__title\"\n\t\t\t\t\t\t// Force entry animation when the back button is added or removed.\n\t\t\t\t\t\tkey={ hasBackButton }\n\t\t\t\t\t\tinitial={\n\t\t\t\t\t\t\tmounted.current\n\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\topacity: 0,\n\t\t\t\t\t\t\t\t\t\ttransform: hasBackButton\n\t\t\t\t\t\t\t\t\t\t\t? 'translateX(15%)'\n\t\t\t\t\t\t\t\t\t\t\t: 'translateX(-15%)',\n\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t: false // Don't show entry animation when DocumentBar mounts.\n\t\t\t\t\t\t}\n\t\t\t\t\t\tanimate={ {\n\t\t\t\t\t\t\topacity: 1,\n\t\t\t\t\t\t\ttransform: 'translateX(0%)',\n\t\t\t\t\t\t} }\n\t\t\t\t\t\ttransition={\n\t\t\t\t\t\t\tisReducedMotion ? { duration: 0 } : undefined\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<BlockIcon icon={ icon } />\n\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\tsize=\"body\"\n\t\t\t\t\t\t\tas=\"h1\"\n\t\t\t\t\t\t\taria-label={\n\t\t\t\t\t\t\t\t! props.title && TYPE_LABELS[ postType ]\n\t\t\t\t\t\t\t\t\t? // eslint-disable-next-line @wordpress/valid-sprintf\n\t\t\t\t\t\t\t\t\t  sprintf( TYPE_LABELS[ postType ], title )\n\t\t\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ title\n\t\t\t\t\t\t\t\t? decodeEntities( title )\n\t\t\t\t\t\t\t\t: __( 'No Title' ) }\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</motion.div>\n\t\t\t\t\t<span className=\"editor-document-bar__shortcut\">\n\t\t\t\t\t\t{ displayShortcut.primary( 'k' ) }\n\t\t\t\t\t</span>\n\t\t\t\t</Button>\n\t\t\t) }\n\t\t</div>\n\t);\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"richText\"];","/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\nconst TableOfContentsItem = ( {\n\tchildren,\n\tisValid,\n\tlevel,\n\thref,\n\tonSelect,\n} ) => (\n\t<li\n\t\tclassName={ clsx(\n\t\t\t'document-outline__item',\n\t\t\t`is-${ level.toLowerCase() }`,\n\t\t\t{\n\t\t\t\t'is-invalid': ! isValid,\n\t\t\t}\n\t\t) }\n\t>\n\t\t<a\n\t\t\thref={ href }\n\t\t\tclassName=\"document-outline__button\"\n\t\t\tonClick={ onSelect }\n\t\t>\n\t\t\t<span\n\t\t\t\tclassName=\"document-outline__emdash\"\n\t\t\t\taria-hidden=\"true\"\n\t\t\t></span>\n\t\t\t<strong className=\"document-outline__level\">{ level }</strong>\n\t\t\t<span className=\"document-outline__item-content\">{ children }</span>\n\t\t</a>\n\t</li>\n);\n\nexport default TableOfContentsItem;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { create, getTextContent } from '@wordpress/rich-text';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { Path, SVG, Line, Rect } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport DocumentOutlineItem from './item';\nimport { store as editorStore } from '../../store';\n\n/**\n * Module constants\n */\nconst emptyHeadingContent = <em>{ __( '(Empty heading)' ) }</em>;\nconst incorrectLevelContent = [\n\t<br key=\"incorrect-break\" />,\n\t<em key=\"incorrect-message\">{ __( '(Incorrect heading level)' ) }</em>,\n];\nconst singleH1Headings = [\n\t<br key=\"incorrect-break-h1\" />,\n\t<em key=\"incorrect-message-h1\">\n\t\t{ __( '(Your theme may already use a H1 for the post title)' ) }\n\t</em>,\n];\nconst multipleH1Headings = [\n\t<br key=\"incorrect-break-multiple-h1\" />,\n\t<em key=\"incorrect-message-multiple-h1\">\n\t\t{ __( '(Multiple H1 headings are not recommended)' ) }\n\t</em>,\n];\nfunction EmptyOutlineIllustration() {\n\treturn (\n\t\t<SVG\n\t\t\twidth=\"138\"\n\t\t\theight=\"148\"\n\t\t\tviewBox=\"0 0 138 148\"\n\t\t\tfill=\"none\"\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t>\n\t\t\t<Rect width=\"138\" height=\"148\" rx=\"4\" fill=\"#F0F6FC\" />\n\t\t\t<Line x1=\"44\" y1=\"28\" x2=\"24\" y2=\"28\" stroke=\"#DDDDDD\" />\n\t\t\t<Rect x=\"48\" y=\"16\" width=\"27\" height=\"23\" rx=\"4\" fill=\"#DDDDDD\" />\n\t\t\t<Path\n\t\t\t\td=\"M54.7585 32V23.2727H56.6037V26.8736H60.3494V23.2727H62.1903V32H60.3494V28.3949H56.6037V32H54.7585ZM67.4574 23.2727V32H65.6122V25.0241H65.5611L63.5625 26.277V24.6406L65.723 23.2727H67.4574Z\"\n\t\t\t\tfill=\"black\"\n\t\t\t/>\n\t\t\t<Line x1=\"55\" y1=\"59\" x2=\"24\" y2=\"59\" stroke=\"#DDDDDD\" />\n\t\t\t<Rect x=\"59\" y=\"47\" width=\"29\" height=\"23\" rx=\"4\" fill=\"#DDDDDD\" />\n\t\t\t<Path\n\t\t\t\td=\"M65.7585 63V54.2727H67.6037V57.8736H71.3494V54.2727H73.1903V63H71.3494V59.3949H67.6037V63H65.7585ZM74.6605 63V61.6705L77.767 58.794C78.0313 58.5384 78.2528 58.3082 78.4318 58.1037C78.6136 57.8991 78.7514 57.6989 78.8452 57.5028C78.9389 57.304 78.9858 57.0895 78.9858 56.8594C78.9858 56.6037 78.9276 56.3835 78.8111 56.1989C78.6946 56.0114 78.5355 55.8679 78.3338 55.7685C78.1321 55.6662 77.9034 55.6151 77.6477 55.6151C77.3807 55.6151 77.1477 55.669 76.9489 55.777C76.75 55.8849 76.5966 56.0398 76.4886 56.2415C76.3807 56.4432 76.3267 56.6832 76.3267 56.9616H74.5753C74.5753 56.3906 74.7045 55.8949 74.9631 55.4744C75.2216 55.054 75.5838 54.7287 76.0497 54.4986C76.5156 54.2685 77.0526 54.1534 77.6605 54.1534C78.2855 54.1534 78.8295 54.2642 79.2926 54.4858C79.7585 54.7045 80.1207 55.0085 80.3793 55.3977C80.6378 55.7869 80.767 56.233 80.767 56.7358C80.767 57.0653 80.7017 57.3906 80.571 57.7116C80.4432 58.0327 80.2145 58.3892 79.8849 58.7812C79.5554 59.1705 79.0909 59.6378 78.4915 60.1832L77.2173 61.4318V61.4915H80.8821V63H74.6605Z\"\n\t\t\t\tfill=\"black\"\n\t\t\t/>\n\t\t\t<Line x1=\"80\" y1=\"90\" x2=\"24\" y2=\"90\" stroke=\"#DDDDDD\" />\n\t\t\t<Rect x=\"84\" y=\"78\" width=\"30\" height=\"23\" rx=\"4\" fill=\"#F0B849\" />\n\t\t\t<Path\n\t\t\t\td=\"M90.7585 94V85.2727H92.6037V88.8736H96.3494V85.2727H98.1903V94H96.3494V90.3949H92.6037V94H90.7585ZM99.5284 92.4659V91.0128L103.172 85.2727H104.425V87.2841H103.683L101.386 90.919V90.9872H106.564V92.4659H99.5284ZM103.717 94V92.0227L103.751 91.3793V85.2727H105.482V94H103.717Z\"\n\t\t\t\tfill=\"black\"\n\t\t\t/>\n\t\t\t<Line x1=\"66\" y1=\"121\" x2=\"24\" y2=\"121\" stroke=\"#DDDDDD\" />\n\t\t\t<Rect x=\"70\" y=\"109\" width=\"29\" height=\"23\" rx=\"4\" fill=\"#DDDDDD\" />\n\t\t\t<Path\n\t\t\t\td=\"M76.7585 125V116.273H78.6037V119.874H82.3494V116.273H84.1903V125H82.3494V121.395H78.6037V125H76.7585ZM88.8864 125.119C88.25 125.119 87.6832 125.01 87.1861 124.791C86.6918 124.57 86.3011 124.266 86.0142 123.879C85.7301 123.49 85.5838 123.041 85.5753 122.533H87.4332C87.4446 122.746 87.5142 122.933 87.642 123.095C87.7727 123.254 87.946 123.378 88.1619 123.466C88.3778 123.554 88.6207 123.598 88.8906 123.598C89.1719 123.598 89.4205 123.548 89.6364 123.449C89.8523 123.349 90.0213 123.212 90.1435 123.036C90.2656 122.859 90.3267 122.656 90.3267 122.426C90.3267 122.193 90.2614 121.987 90.1307 121.808C90.0028 121.626 89.8182 121.484 89.5767 121.382C89.3381 121.28 89.054 121.229 88.7244 121.229H87.9105V119.874H88.7244C89.0028 119.874 89.2486 119.825 89.4616 119.729C89.6776 119.632 89.8452 119.499 89.9645 119.328C90.0838 119.155 90.1435 118.953 90.1435 118.723C90.1435 118.504 90.0909 118.312 89.9858 118.148C89.8835 117.98 89.7386 117.849 89.5511 117.756C89.3665 117.662 89.1506 117.615 88.9034 117.615C88.6534 117.615 88.4247 117.661 88.2173 117.751C88.0099 117.839 87.8438 117.966 87.7188 118.131C87.5938 118.295 87.527 118.489 87.5185 118.71H85.75C85.7585 118.207 85.902 117.764 86.1804 117.381C86.4588 116.997 86.8338 116.697 87.3054 116.482C87.7798 116.263 88.3153 116.153 88.9119 116.153C89.5142 116.153 90.0412 116.263 90.4929 116.482C90.9446 116.7 91.2955 116.996 91.5455 117.368C91.7983 117.737 91.9233 118.152 91.9205 118.612C91.9233 119.101 91.7713 119.509 91.4645 119.835C91.1605 120.162 90.7642 120.369 90.2756 120.457V120.526C90.9176 120.608 91.4063 120.831 91.7415 121.195C92.0795 121.555 92.2472 122.007 92.2443 122.55C92.2472 123.047 92.1037 123.489 91.8139 123.875C91.527 124.261 91.1307 124.565 90.625 124.787C90.1193 125.009 89.5398 125.119 88.8864 125.119Z\"\n\t\t\t\tfill=\"black\"\n\t\t\t/>\n\t\t</SVG>\n\t);\n}\n\n/**\n * Returns an array of heading blocks enhanced with the following properties:\n * level   - An integer with the heading level.\n * isEmpty - Flag indicating if the heading has no content.\n *\n * @param {?Array} blocks An array of blocks.\n *\n * @return {Array} An array of heading blocks enhanced with the properties described above.\n */\nconst computeOutlineHeadings = ( blocks = [] ) => {\n\treturn blocks.flatMap( ( block = {} ) => {\n\t\tif ( block.name === 'core/heading' ) {\n\t\t\treturn {\n\t\t\t\t...block,\n\t\t\t\tlevel: block.attributes.level,\n\t\t\t\tisEmpty: isEmptyHeading( block ),\n\t\t\t};\n\t\t}\n\t\treturn computeOutlineHeadings( block.innerBlocks );\n\t} );\n};\n\nconst isEmptyHeading = ( heading ) =>\n\t! heading.attributes.content ||\n\theading.attributes.content.trim().length === 0;\n\n/**\n * Renders a document outline component.\n *\n * @param {Object}   props                         Props.\n * @param {Function} props.onSelect                Function to be called when an outline item is selected.\n * @param {boolean}  props.isTitleSupported        Indicates whether the title is supported.\n * @param {boolean}  props.hasOutlineItemsDisabled Indicates whether the outline items are disabled.\n *\n * @return {Component} The component to be rendered.\n */\nexport default function DocumentOutline( {\n\tonSelect,\n\tisTitleSupported,\n\thasOutlineItemsDisabled,\n} ) {\n\tconst { selectBlock } = useDispatch( blockEditorStore );\n\tconst { blocks, title } = useSelect( ( select ) => {\n\t\tconst { getBlocks } = select( blockEditorStore );\n\t\tconst { getEditedPostAttribute } = select( editorStore );\n\t\tconst { getPostType } = select( coreStore );\n\t\tconst postType = getPostType( getEditedPostAttribute( 'type' ) );\n\n\t\treturn {\n\t\t\ttitle: getEditedPostAttribute( 'title' ),\n\t\t\tblocks: getBlocks(),\n\t\t\tisTitleSupported: postType?.supports?.title ?? false,\n\t\t};\n\t} );\n\n\tconst headings = computeOutlineHeadings( blocks );\n\tif ( headings.length < 1 ) {\n\t\treturn (\n\t\t\t<div className=\"editor-document-outline has-no-headings\">\n\t\t\t\t<EmptyOutlineIllustration />\n\t\t\t\t<p>\n\t\t\t\t\t{ __(\n\t\t\t\t\t\t'Navigate the structure of your document and address issues like empty or incorrect heading levels.'\n\t\t\t\t\t) }\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tlet prevHeadingLevel = 1;\n\n\t// Not great but it's the simplest way to locate the title right now.\n\tconst titleNode = document.querySelector( '.editor-post-title__input' );\n\tconst hasTitle = isTitleSupported && title && titleNode;\n\tconst countByLevel = headings.reduce(\n\t\t( acc, heading ) => ( {\n\t\t\t...acc,\n\t\t\t[ heading.level ]: ( acc[ heading.level ] || 0 ) + 1,\n\t\t} ),\n\t\t{}\n\t);\n\tconst hasMultipleH1 = countByLevel[ 1 ] > 1;\n\n\treturn (\n\t\t<div className=\"document-outline\">\n\t\t\t<ul>\n\t\t\t\t{ hasTitle && (\n\t\t\t\t\t<DocumentOutlineItem\n\t\t\t\t\t\tlevel={ __( 'Title' ) }\n\t\t\t\t\t\tisValid\n\t\t\t\t\t\tonSelect={ onSelect }\n\t\t\t\t\t\thref={ `#${ titleNode.id }` }\n\t\t\t\t\t\tisDisabled={ hasOutlineItemsDisabled }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ title }\n\t\t\t\t\t</DocumentOutlineItem>\n\t\t\t\t) }\n\t\t\t\t{ headings.map( ( item, index ) => {\n\t\t\t\t\t// Headings remain the same, go up by one, or down by any amount.\n\t\t\t\t\t// Otherwise there are missing levels.\n\t\t\t\t\tconst isIncorrectLevel = item.level > prevHeadingLevel + 1;\n\n\t\t\t\t\tconst isValid =\n\t\t\t\t\t\t! item.isEmpty &&\n\t\t\t\t\t\t! isIncorrectLevel &&\n\t\t\t\t\t\t!! item.level &&\n\t\t\t\t\t\t( item.level !== 1 ||\n\t\t\t\t\t\t\t( ! hasMultipleH1 && ! hasTitle ) );\n\t\t\t\t\tprevHeadingLevel = item.level;\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<DocumentOutlineItem\n\t\t\t\t\t\t\tkey={ index }\n\t\t\t\t\t\t\tlevel={ `H${ item.level }` }\n\t\t\t\t\t\t\tisValid={ isValid }\n\t\t\t\t\t\t\tisDisabled={ hasOutlineItemsDisabled }\n\t\t\t\t\t\t\thref={ `#block-${ item.clientId }` }\n\t\t\t\t\t\t\tonSelect={ () => {\n\t\t\t\t\t\t\t\tselectBlock( item.clientId );\n\t\t\t\t\t\t\t\tonSelect?.();\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ item.isEmpty\n\t\t\t\t\t\t\t\t? emptyHeadingContent\n\t\t\t\t\t\t\t\t: getTextContent(\n\t\t\t\t\t\t\t\t\t\tcreate( {\n\t\t\t\t\t\t\t\t\t\t\thtml: item.attributes.content,\n\t\t\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t  ) }\n\t\t\t\t\t\t\t{ isIncorrectLevel && incorrectLevelContent }\n\t\t\t\t\t\t\t{ item.level === 1 &&\n\t\t\t\t\t\t\t\thasMultipleH1 &&\n\t\t\t\t\t\t\t\tmultipleH1Headings }\n\t\t\t\t\t\t\t{ hasTitle &&\n\t\t\t\t\t\t\t\titem.level === 1 &&\n\t\t\t\t\t\t\t\t! hasMultipleH1 &&\n\t\t\t\t\t\t\t\tsingleH1Headings }\n\t\t\t\t\t\t</DocumentOutlineItem>\n\t\t\t\t\t);\n\t\t\t\t} ) }\n\t\t\t</ul>\n\t\t</div>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\n\n/**\n * Component check if there are any headings (core/heading blocks) present in the document.\n *\n * @param {Object}  props          Props.\n * @param {Element} props.children Children to be rendered.\n *\n * @return {Component|null} The component to be rendered or null if there are headings.\n */\nexport default function DocumentOutlineCheck( { children } ) {\n\tconst hasHeadings = useSelect( ( select ) => {\n\t\tconst { getGlobalBlockCount } = select( blockEditorStore );\n\n\t\treturn getGlobalBlockCount( 'core/heading' ) > 0;\n\t} );\n\n\tif ( hasHeadings ) {\n\t\treturn null;\n\t}\n\n\treturn children;\n}\n","/**\n * WordPress dependencies\n */\nimport { useEffect } from '@wordpress/element';\nimport { useDispatch } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\nimport { BlockEditorKeyboardShortcuts } from '@wordpress/block-editor';\nimport { store as keyboardShortcutsStore } from '@wordpress/keyboard-shortcuts';\nimport { isAppleOS } from '@wordpress/keycodes';\n\n/**\n * Component for registering editor keyboard shortcuts.\n *\n * @return {Element} The component to be rendered.\n */\nfunction EditorKeyboardShortcutsRegister() {\n\t// Registering the shortcuts.\n\tconst { registerShortcut } = useDispatch( keyboardShortcutsStore );\n\tuseEffect( () => {\n\t\tregisterShortcut( {\n\t\t\tname: 'core/editor/toggle-mode',\n\t\t\tcategory: 'global',\n\t\t\tdescription: __( 'Switch between visual editor and code editor.' ),\n\t\t\tkeyCombination: {\n\t\t\t\tmodifier: 'secondary',\n\t\t\t\tcharacter: 'm',\n\t\t\t},\n\t\t} );\n\n\t\tregisterShortcut( {\n\t\t\tname: 'core/editor/save',\n\t\t\tcategory: 'global',\n\t\t\tdescription: __( 'Save your changes.' ),\n\t\t\tkeyCombination: {\n\t\t\t\tmodifier: 'primary',\n\t\t\t\tcharacter: 's',\n\t\t\t},\n\t\t} );\n\n\t\tregisterShortcut( {\n\t\t\tname: 'core/editor/undo',\n\t\t\tcategory: 'global',\n\t\t\tdescription: __( 'Undo your last changes.' ),\n\t\t\tkeyCombination: {\n\t\t\t\tmodifier: 'primary',\n\t\t\t\tcharacter: 'z',\n\t\t\t},\n\t\t} );\n\n\t\tregisterShortcut( {\n\t\t\tname: 'core/editor/redo',\n\t\t\tcategory: 'global',\n\t\t\tdescription: __( 'Redo your last undo.' ),\n\t\t\tkeyCombination: {\n\t\t\t\tmodifier: 'primaryShift',\n\t\t\t\tcharacter: 'z',\n\t\t\t},\n\t\t\t// Disable on Apple OS because it conflicts with the browser's\n\t\t\t// history shortcut. It's a fine alias for both Windows and Linux.\n\t\t\t// Since there's no conflict for Ctrl+Shift+Z on both Windows and\n\t\t\t// Linux, we keep it as the default for consistency.\n\t\t\taliases: isAppleOS()\n\t\t\t\t? []\n\t\t\t\t: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmodifier: 'primary',\n\t\t\t\t\t\t\tcharacter: 'y',\n\t\t\t\t\t\t},\n\t\t\t\t  ],\n\t\t} );\n\n\t\tregisterShortcut( {\n\t\t\tname: 'core/editor/toggle-list-view',\n\t\t\tcategory: 'global',\n\t\t\tdescription: __( 'Open the List View.' ),\n\t\t\tkeyCombination: {\n\t\t\t\tmodifier: 'access',\n\t\t\t\tcharacter: 'o',\n\t\t\t},\n\t\t} );\n\n\t\tregisterShortcut( {\n\t\t\tname: 'core/editor/toggle-distraction-free',\n\t\t\tcategory: 'global',\n\t\t\tdescription: __( 'Toggle distraction free mode.' ),\n\t\t\tkeyCombination: {\n\t\t\t\tmodifier: 'primaryShift',\n\t\t\t\tcharacter: '\\\\',\n\t\t\t},\n\t\t} );\n\n\t\tregisterShortcut( {\n\t\t\tname: 'core/editor/toggle-sidebar',\n\t\t\tcategory: 'global',\n\t\t\tdescription: __( 'Show or hide the Settings sidebar.' ),\n\t\t\tkeyCombination: {\n\t\t\t\tmodifier: 'primaryShift',\n\t\t\t\tcharacter: ',',\n\t\t\t},\n\t\t} );\n\n\t\tregisterShortcut( {\n\t\t\tname: 'core/editor/keyboard-shortcuts',\n\t\t\tcategory: 'main',\n\t\t\tdescription: __( 'Display these keyboard shortcuts.' ),\n\t\t\tkeyCombination: {\n\t\t\t\tmodifier: 'access',\n\t\t\t\tcharacter: 'h',\n\t\t\t},\n\t\t} );\n\n\t\tregisterShortcut( {\n\t\t\tname: 'core/editor/next-region',\n\t\t\tcategory: 'global',\n\t\t\tdescription: __( 'Navigate to the next part of the editor.' ),\n\t\t\tkeyCombination: {\n\t\t\t\tmodifier: 'ctrl',\n\t\t\t\tcharacter: '`',\n\t\t\t},\n\t\t\taliases: [\n\t\t\t\t{\n\t\t\t\t\tmodifier: 'access',\n\t\t\t\t\tcharacter: 'n',\n\t\t\t\t},\n\t\t\t],\n\t\t} );\n\n\t\tregisterShortcut( {\n\t\t\tname: 'core/editor/previous-region',\n\t\t\tcategory: 'global',\n\t\t\tdescription: __( 'Navigate to the previous part of the editor.' ),\n\t\t\tkeyCombination: {\n\t\t\t\tmodifier: 'ctrlShift',\n\t\t\t\tcharacter: '`',\n\t\t\t},\n\t\t\taliases: [\n\t\t\t\t{\n\t\t\t\t\tmodifier: 'access',\n\t\t\t\t\tcharacter: 'p',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tmodifier: 'ctrlShift',\n\t\t\t\t\tcharacter: '~',\n\t\t\t\t},\n\t\t\t],\n\t\t} );\n\t}, [ registerShortcut ] );\n\n\treturn <BlockEditorKeyboardShortcuts.Register />;\n}\n\nexport default EditorKeyboardShortcutsRegister;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst redo = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M15.6 6.5l-1.1 1 2.9 3.3H8c-.9 0-1.7.3-2.3.9-1.4 1.5-1.4 4.2-1.4 5.6v.2h1.5v-.3c0-1.1 0-3.5 1-4.5.3-.3.7-.5 1.3-.5h9.2L14.5 15l1.1 1.1 4.6-4.6-4.6-5z\" />\n\t</SVG>\n);\n\nexport default redo;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst undo = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M18.3 11.7c-.6-.6-1.4-.9-2.3-.9H6.7l2.9-3.3-1.1-1-4.5 5L8.5 16l1-1-2.7-2.7H16c.5 0 .9.2 1.3.5 1 1 1 3.4 1 4.5v.3h1.5v-.2c0-1.5 0-4.3-1.5-5.7z\" />\n\t</SVG>\n);\n\nexport default undo;\n","/**\n * WordPress dependencies\n */\nimport { __, isRTL } from '@wordpress/i18n';\nimport { Button } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { displayShortcut, isAppleOS } from '@wordpress/keycodes';\nimport { redo as redoIcon, undo as undoIcon } from '@wordpress/icons';\nimport { forwardRef } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nfunction EditorHistoryRedo( props, ref ) {\n\tconst shortcut = isAppleOS()\n\t\t? displayShortcut.primaryShift( 'z' )\n\t\t: displayShortcut.primary( 'y' );\n\n\tconst hasRedo = useSelect(\n\t\t( select ) => select( editorStore ).hasEditorRedo(),\n\t\t[]\n\t);\n\tconst { redo } = useDispatch( editorStore );\n\treturn (\n\t\t<Button\n\t\t\t{ ...props }\n\t\t\tref={ ref }\n\t\t\ticon={ ! isRTL() ? redoIcon : undoIcon }\n\t\t\t/* translators: button label text should, if possible, be under 16 characters. */\n\t\t\tlabel={ __( 'Redo' ) }\n\t\t\tshortcut={ shortcut }\n\t\t\t// If there are no redo levels we don't want to actually disable this\n\t\t\t// button, because it will remove focus for keyboard users.\n\t\t\t// See: https://github.com/WordPress/gutenberg/issues/3486\n\t\t\taria-disabled={ ! hasRedo }\n\t\t\tonClick={ hasRedo ? redo : undefined }\n\t\t\tclassName=\"editor-history__redo\"\n\t\t/>\n\t);\n}\n\n/** @typedef {import('react').Ref<HTMLElement>} Ref */\n\n/**\n * Renders the redo button for the editor history.\n *\n * @param {Object} props - Props.\n * @param {Ref}    ref   - Forwarded ref.\n *\n * @return {Component} The component to be rendered.\n */\nexport default forwardRef( EditorHistoryRedo );\n","/**\n * WordPress dependencies\n */\nimport { __, isRTL } from '@wordpress/i18n';\nimport { Button } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { displayShortcut } from '@wordpress/keycodes';\nimport { undo as undoIcon, redo as redoIcon } from '@wordpress/icons';\nimport { forwardRef } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nfunction EditorHistoryUndo( props, ref ) {\n\tconst hasUndo = useSelect(\n\t\t( select ) => select( editorStore ).hasEditorUndo(),\n\t\t[]\n\t);\n\tconst { undo } = useDispatch( editorStore );\n\treturn (\n\t\t<Button\n\t\t\t{ ...props }\n\t\t\tref={ ref }\n\t\t\ticon={ ! isRTL() ? undoIcon : redoIcon }\n\t\t\t/* translators: button label text should, if possible, be under 16 characters. */\n\t\t\tlabel={ __( 'Undo' ) }\n\t\t\tshortcut={ displayShortcut.primary( 'z' ) }\n\t\t\t// If there are no undo levels we don't want to actually disable this\n\t\t\t// button, because it will remove focus for keyboard users.\n\t\t\t// See: https://github.com/WordPress/gutenberg/issues/3486\n\t\t\taria-disabled={ ! hasUndo }\n\t\t\tonClick={ hasUndo ? undo : undefined }\n\t\t\tclassName=\"editor-history__undo\"\n\t\t/>\n\t);\n}\n\n/** @typedef {import('react').Ref<HTMLElement>} Ref */\n\n/**\n * Renders the undo button for the editor history.\n *\n * @param {Object} props - Props.\n * @param {Ref}    ref   - Forwarded ref.\n *\n * @return {Component} The component to be rendered.\n */\nexport default forwardRef( EditorHistoryUndo );\n","/**\n * WordPress dependencies\n */\nimport {\n\tNotice,\n\t__experimentalConfirmDialog as ConfirmDialog,\n} from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { useState } from '@wordpress/element';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\n\nexport default function TemplateValidationNotice() {\n\tconst [ showConfirmDialog, setShowConfirmDialog ] = useState( false );\n\tconst isValid = useSelect( ( select ) => {\n\t\treturn select( blockEditorStore ).isValidTemplate();\n\t}, [] );\n\tconst { setTemplateValidity, synchronizeTemplate } =\n\t\tuseDispatch( blockEditorStore );\n\n\tif ( isValid ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Notice\n\t\t\t\tclassName=\"editor-template-validation-notice\"\n\t\t\t\tisDismissible={ false }\n\t\t\t\tstatus=\"warning\"\n\t\t\t\tactions={ [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: __( 'Keep it as is' ),\n\t\t\t\t\t\tonClick: () => setTemplateValidity( true ),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: __( 'Reset the template' ),\n\t\t\t\t\t\tonClick: () => setShowConfirmDialog( true ),\n\t\t\t\t\t},\n\t\t\t\t] }\n\t\t\t>\n\t\t\t\t{ __(\n\t\t\t\t\t'The content of your post doesn’t match the template assigned to your post type.'\n\t\t\t\t) }\n\t\t\t</Notice>\n\t\t\t<ConfirmDialog\n\t\t\t\tisOpen={ showConfirmDialog }\n\t\t\t\tconfirmButtonText={ __( 'Reset' ) }\n\t\t\t\tonConfirm={ () => {\n\t\t\t\t\tsetShowConfirmDialog( false );\n\t\t\t\t\tsynchronizeTemplate();\n\t\t\t\t} }\n\t\t\t\tonCancel={ () => setShowConfirmDialog( false ) }\n\t\t\t\tsize=\"medium\"\n\t\t\t>\n\t\t\t\t{ __(\n\t\t\t\t\t'Resetting the template may result in loss of content, do you want to continue?'\n\t\t\t\t) }\n\t\t\t</ConfirmDialog>\n\t\t</>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { NoticeList } from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { store as noticesStore } from '@wordpress/notices';\n\n/**\n * Internal dependencies\n */\nimport TemplateValidationNotice from '../template-validation-notice';\n\n/**\n * This component renders the notices displayed in the editor. It displays pinned notices first, followed by dismissible\n *\n * @example\n * ```jsx\n * <EditorNotices />\n * ```\n *\n * @return {JSX.Element} The rendered EditorNotices component.\n */\nexport function EditorNotices() {\n\tconst { notices } = useSelect(\n\t\t( select ) => ( {\n\t\t\tnotices: select( noticesStore ).getNotices(),\n\t\t} ),\n\t\t[]\n\t);\n\tconst { removeNotice } = useDispatch( noticesStore );\n\tconst dismissibleNotices = notices.filter(\n\t\t( { isDismissible, type } ) => isDismissible && type === 'default'\n\t);\n\tconst nonDismissibleNotices = notices.filter(\n\t\t( { isDismissible, type } ) => ! isDismissible && type === 'default'\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<NoticeList\n\t\t\t\tnotices={ nonDismissibleNotices }\n\t\t\t\tclassName=\"components-editor-notices__pinned\"\n\t\t\t/>\n\t\t\t<NoticeList\n\t\t\t\tnotices={ dismissibleNotices }\n\t\t\t\tclassName=\"components-editor-notices__dismissible\"\n\t\t\t\tonRemove={ removeNotice }\n\t\t\t>\n\t\t\t\t<TemplateValidationNotice />\n\t\t\t</NoticeList>\n\t\t</>\n\t);\n}\n\nexport default EditorNotices;\n","/**\n * WordPress dependencies\n */\nimport { SnackbarList } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as noticesStore } from '@wordpress/notices';\n\n// Last three notices. Slices from the tail end of the list.\nconst MAX_VISIBLE_NOTICES = -3;\n\n/**\n * Renders the editor snackbars component.\n *\n * @return {JSX.Element} The rendered component.\n */\nexport default function EditorSnackbars() {\n\tconst notices = useSelect(\n\t\t( select ) => select( noticesStore ).getNotices(),\n\t\t[]\n\t);\n\tconst { removeNotice } = useDispatch( noticesStore );\n\tconst snackbarNotices = notices\n\t\t.filter( ( { type } ) => type === 'snackbar' )\n\t\t.slice( MAX_VISIBLE_NOTICES );\n\n\treturn (\n\t\t<SnackbarList\n\t\t\tnotices={ snackbarNotices }\n\t\t\tclassName=\"components-editor-notices__snackbar\"\n\t\t\tonRemove={ removeNotice }\n\t\t/>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { CheckboxControl, PanelRow } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { decodeEntities } from '@wordpress/html-entities';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\nimport { unlock } from '../../lock-unlock';\n\nexport default function EntityRecordItem( { record, checked, onChange } ) {\n\tconst { name, kind, title, key } = record;\n\n\t// Handle templates that might use default descriptive titles.\n\tconst { entityRecordTitle, hasPostMetaChanges } = useSelect(\n\t\t( select ) => {\n\t\t\tif ( 'postType' !== kind || 'wp_template' !== name ) {\n\t\t\t\treturn {\n\t\t\t\t\tentityRecordTitle: title,\n\t\t\t\t\thasPostMetaChanges: unlock(\n\t\t\t\t\t\tselect( editorStore )\n\t\t\t\t\t).hasPostMetaChanges( name, key ),\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst template = select( coreStore ).getEditedEntityRecord(\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\tkey\n\t\t\t);\n\t\t\treturn {\n\t\t\t\tentityRecordTitle:\n\t\t\t\t\tselect( editorStore ).__experimentalGetTemplateInfo(\n\t\t\t\t\t\ttemplate\n\t\t\t\t\t).title,\n\t\t\t\thasPostMetaChanges: unlock(\n\t\t\t\t\tselect( editorStore )\n\t\t\t\t).hasPostMetaChanges( name, key ),\n\t\t\t};\n\t\t},\n\t\t[ name, kind, title, key ]\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<PanelRow>\n\t\t\t\t<CheckboxControl\n\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\tlabel={\n\t\t\t\t\t\tdecodeEntities( entityRecordTitle ) || __( 'Untitled' )\n\t\t\t\t\t}\n\t\t\t\t\tchecked={ checked }\n\t\t\t\t\tonChange={ onChange }\n\t\t\t\t/>\n\t\t\t</PanelRow>\n\t\t\t{ hasPostMetaChanges && (\n\t\t\t\t<ul className=\"entities-saved-states__changes\">\n\t\t\t\t\t<li>{ __( 'Post Meta.' ) }</li>\n\t\t\t\t</ul>\n\t\t\t) }\n\t\t</>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useSelect } from '@wordpress/data';\nimport { PanelBody, PanelRow } from '@wordpress/components';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { privateApis as blockEditorPrivateApis } from '@wordpress/block-editor';\nimport { useContext } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport EntityRecordItem from './entity-record-item';\nimport { unlock } from '../../lock-unlock';\n\nconst { getGlobalStylesChanges, GlobalStylesContext } = unlock(\n\tblockEditorPrivateApis\n);\n\nfunction getEntityDescription( entity, count ) {\n\tswitch ( entity ) {\n\t\tcase 'site':\n\t\t\treturn 1 === count\n\t\t\t\t? __( 'This change will affect your whole site.' )\n\t\t\t\t: __( 'These changes will affect your whole site.' );\n\t\tcase 'wp_template':\n\t\t\treturn __(\n\t\t\t\t'This change will affect pages and posts that use this template.'\n\t\t\t);\n\t\tcase 'page':\n\t\tcase 'post':\n\t\t\treturn __( 'The following has been modified.' );\n\t}\n}\n\nfunction GlobalStylesDescription( { record } ) {\n\tconst { user: currentEditorGlobalStyles } =\n\t\tuseContext( GlobalStylesContext );\n\tconst savedRecord = useSelect(\n\t\t( select ) =>\n\t\t\tselect( coreStore ).getEntityRecord(\n\t\t\t\trecord.kind,\n\t\t\t\trecord.name,\n\t\t\t\trecord.key\n\t\t\t),\n\t\t[ record.kind, record.name, record.key ]\n\t);\n\n\tconst globalStylesChanges = getGlobalStylesChanges(\n\t\tcurrentEditorGlobalStyles,\n\t\tsavedRecord,\n\t\t{\n\t\t\tmaxResults: 10,\n\t\t}\n\t);\n\treturn globalStylesChanges.length ? (\n\t\t<ul className=\"entities-saved-states__changes\">\n\t\t\t{ globalStylesChanges.map( ( change ) => (\n\t\t\t\t<li key={ change }>{ change }</li>\n\t\t\t) ) }\n\t\t</ul>\n\t) : null;\n}\n\nfunction EntityDescription( { record, count } ) {\n\tif ( 'globalStyles' === record?.name ) {\n\t\treturn null;\n\t}\n\tconst description = getEntityDescription( record?.name, count );\n\treturn description ? <PanelRow>{ description }</PanelRow> : null;\n}\n\nexport default function EntityTypeList( {\n\tlist,\n\tunselectedEntities,\n\tsetUnselectedEntities,\n} ) {\n\tconst count = list.length;\n\tconst firstRecord = list[ 0 ];\n\tconst entityConfig = useSelect(\n\t\t( select ) =>\n\t\t\tselect( coreStore ).getEntityConfig(\n\t\t\t\tfirstRecord.kind,\n\t\t\t\tfirstRecord.name\n\t\t\t),\n\t\t[ firstRecord.kind, firstRecord.name ]\n\t);\n\n\tlet entityLabel = entityConfig.label;\n\tif ( firstRecord?.name === 'wp_template_part' ) {\n\t\tentityLabel =\n\t\t\t1 === count ? __( 'Template Part' ) : __( 'Template Parts' );\n\t}\n\n\treturn (\n\t\t<PanelBody title={ entityLabel } initialOpen>\n\t\t\t<EntityDescription record={ firstRecord } count={ count } />\n\t\t\t{ list.map( ( record ) => {\n\t\t\t\treturn (\n\t\t\t\t\t<EntityRecordItem\n\t\t\t\t\t\tkey={ record.key || record.property }\n\t\t\t\t\t\trecord={ record }\n\t\t\t\t\t\tchecked={\n\t\t\t\t\t\t\t! unselectedEntities.some(\n\t\t\t\t\t\t\t\t( elt ) =>\n\t\t\t\t\t\t\t\t\telt.kind === record.kind &&\n\t\t\t\t\t\t\t\t\telt.name === record.name &&\n\t\t\t\t\t\t\t\t\telt.key === record.key &&\n\t\t\t\t\t\t\t\t\telt.property === record.property\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\t\tsetUnselectedEntities( record, value )\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t} ) }\n\t\t\t{ 'globalStyles' === firstRecord?.name && (\n\t\t\t\t<GlobalStylesDescription record={ firstRecord } />\n\t\t\t) }\n\t\t</PanelBody>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { useMemo, useState } from '@wordpress/element';\n\n/**\n * Custom hook that determines if any entities are dirty (edited) and provides a way to manage selected/unselected entities.\n *\n * @return {Object} An object containing the following properties:\n *   - dirtyEntityRecords: An array of dirty entity records.\n *   - isDirty: A boolean indicating if there are any dirty entity records.\n *   - setUnselectedEntities: A function to set the unselected entities.\n *   - unselectedEntities: An array of unselected entities.\n */\nexport const useIsDirty = () => {\n\tconst { editedEntities, siteEdits, siteEntityConfig } = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\t__experimentalGetDirtyEntityRecords,\n\t\t\t\tgetEntityRecordEdits,\n\t\t\t\tgetEntityConfig,\n\t\t\t} = select( coreStore );\n\n\t\t\treturn {\n\t\t\t\teditedEntities: __experimentalGetDirtyEntityRecords(),\n\t\t\t\tsiteEdits: getEntityRecordEdits( 'root', 'site' ),\n\t\t\t\tsiteEntityConfig: getEntityConfig( 'root', 'site' ),\n\t\t\t};\n\t\t},\n\t\t[]\n\t);\n\n\tconst dirtyEntityRecords = useMemo( () => {\n\t\t// Remove site object and decouple into its edited pieces.\n\t\tconst editedEntitiesWithoutSite = editedEntities.filter(\n\t\t\t( record ) => ! ( record.kind === 'root' && record.name === 'site' )\n\t\t);\n\n\t\tconst siteEntityLabels = siteEntityConfig?.meta?.labels ?? {};\n\t\tconst editedSiteEntities = [];\n\t\tfor ( const property in siteEdits ) {\n\t\t\teditedSiteEntities.push( {\n\t\t\t\tkind: 'root',\n\t\t\t\tname: 'site',\n\t\t\t\ttitle: siteEntityLabels[ property ] || property,\n\t\t\t\tproperty,\n\t\t\t} );\n\t\t}\n\n\t\treturn [ ...editedEntitiesWithoutSite, ...editedSiteEntities ];\n\t}, [ editedEntities, siteEdits, siteEntityConfig ] );\n\n\t// Unchecked entities to be ignored by save function.\n\tconst [ unselectedEntities, _setUnselectedEntities ] = useState( [] );\n\n\tconst setUnselectedEntities = (\n\t\t{ kind, name, key, property },\n\t\tchecked\n\t) => {\n\t\tif ( checked ) {\n\t\t\t_setUnselectedEntities(\n\t\t\t\tunselectedEntities.filter(\n\t\t\t\t\t( elt ) =>\n\t\t\t\t\t\telt.kind !== kind ||\n\t\t\t\t\t\telt.name !== name ||\n\t\t\t\t\t\telt.key !== key ||\n\t\t\t\t\t\telt.property !== property\n\t\t\t\t)\n\t\t\t);\n\t\t} else {\n\t\t\t_setUnselectedEntities( [\n\t\t\t\t...unselectedEntities,\n\t\t\t\t{ kind, name, key, property },\n\t\t\t] );\n\t\t}\n\t};\n\n\tconst isDirty = dirtyEntityRecords.length - unselectedEntities.length > 0;\n\n\treturn {\n\t\tdirtyEntityRecords,\n\t\tisDirty,\n\t\tsetUnselectedEntities,\n\t\tunselectedEntities,\n\t};\n};\n","/**\n * WordPress dependencies\n */\nimport { Button, Flex, FlexItem } from '@wordpress/components';\nimport { __, _n, sprintf } from '@wordpress/i18n';\nimport {\n\tuseCallback,\n\tuseRef,\n\tcreateInterpolateElement,\n} from '@wordpress/element';\nimport {\n\t__experimentalUseDialog as useDialog,\n\tuseInstanceId,\n} from '@wordpress/compose';\nimport { useDispatch } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport EntityTypeList from './entity-type-list';\nimport { useIsDirty } from './hooks/use-is-dirty';\nimport { store as editorStore } from '../../store';\nimport { unlock } from '../../lock-unlock';\n\nfunction identity( values ) {\n\treturn values;\n}\n\n/**\n * Renders the component for managing saved states of entities.\n *\n * @param {Object}   props              The component props.\n * @param {Function} props.close        The function to close the dialog.\n * @param {Function} props.renderDialog The function to render the dialog.\n *\n * @return {JSX.Element} The rendered component.\n */\nexport default function EntitiesSavedStates( {\n\tclose,\n\trenderDialog = undefined,\n} ) {\n\tconst isDirtyProps = useIsDirty();\n\treturn (\n\t\t<EntitiesSavedStatesExtensible\n\t\t\tclose={ close }\n\t\t\trenderDialog={ renderDialog }\n\t\t\t{ ...isDirtyProps }\n\t\t/>\n\t);\n}\n\n/**\n * Renders a panel for saving entities with dirty records.\n *\n * @param {Object}   props                       The component props.\n * @param {string}   props.additionalPrompt      Additional prompt to display.\n * @param {Function} props.close                 Function to close the panel.\n * @param {Function} props.onSave                Function to call when saving entities.\n * @param {boolean}  props.saveEnabled           Flag indicating if save is enabled.\n * @param {string}   props.saveLabel             Label for the save button.\n * @param {Function} props.renderDialog          Function to render a custom dialog.\n * @param {Array}    props.dirtyEntityRecords    Array of dirty entity records.\n * @param {boolean}  props.isDirty               Flag indicating if there are dirty entities.\n * @param {Function} props.setUnselectedEntities Function to set unselected entities.\n * @param {Array}    props.unselectedEntities    Array of unselected entities.\n *\n * @return {JSX.Element} The rendered component.\n */\nexport function EntitiesSavedStatesExtensible( {\n\tadditionalPrompt = undefined,\n\tclose,\n\tonSave = identity,\n\tsaveEnabled: saveEnabledProp = undefined,\n\tsaveLabel = __( 'Save' ),\n\trenderDialog = undefined,\n\tdirtyEntityRecords,\n\tisDirty,\n\tsetUnselectedEntities,\n\tunselectedEntities,\n} ) {\n\tconst saveButtonRef = useRef();\n\tconst { saveDirtyEntities } = unlock( useDispatch( editorStore ) );\n\t// To group entities by type.\n\tconst partitionedSavables = dirtyEntityRecords.reduce( ( acc, record ) => {\n\t\tconst { name } = record;\n\t\tif ( ! acc[ name ] ) {\n\t\t\tacc[ name ] = [];\n\t\t}\n\t\tacc[ name ].push( record );\n\t\treturn acc;\n\t}, {} );\n\n\t// Sort entity groups.\n\tconst {\n\t\tsite: siteSavables,\n\t\twp_template: templateSavables,\n\t\twp_template_part: templatePartSavables,\n\t\t...contentSavables\n\t} = partitionedSavables;\n\tconst sortedPartitionedSavables = [\n\t\tsiteSavables,\n\t\ttemplateSavables,\n\t\ttemplatePartSavables,\n\t\t...Object.values( contentSavables ),\n\t].filter( Array.isArray );\n\n\tconst saveEnabled = saveEnabledProp ?? isDirty;\n\t// Explicitly define this with no argument passed.  Using `close` on\n\t// its own will use the event object in place of the expected saved entities.\n\tconst dismissPanel = useCallback( () => close(), [ close ] );\n\n\tconst [ saveDialogRef, saveDialogProps ] = useDialog( {\n\t\tonClose: () => dismissPanel(),\n\t} );\n\tconst dialogLabel = useInstanceId( EntitiesSavedStatesExtensible, 'label' );\n\tconst dialogDescription = useInstanceId(\n\t\tEntitiesSavedStatesExtensible,\n\t\t'description'\n\t);\n\n\treturn (\n\t\t<div\n\t\t\tref={ saveDialogRef }\n\t\t\t{ ...saveDialogProps }\n\t\t\tclassName=\"entities-saved-states__panel\"\n\t\t\trole={ renderDialog ? 'dialog' : undefined }\n\t\t\taria-labelledby={ renderDialog ? dialogLabel : undefined }\n\t\t\taria-describedby={ renderDialog ? dialogDescription : undefined }\n\t\t>\n\t\t\t<Flex className=\"entities-saved-states__panel-header\" gap={ 2 }>\n\t\t\t\t<FlexItem\n\t\t\t\t\tisBlock\n\t\t\t\t\tas={ Button }\n\t\t\t\t\tref={ saveButtonRef }\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\tdisabled={ ! saveEnabled }\n\t\t\t\t\t__experimentalIsFocusable\n\t\t\t\t\tonClick={ () =>\n\t\t\t\t\t\tsaveDirtyEntities( {\n\t\t\t\t\t\t\tonSave,\n\t\t\t\t\t\t\tdirtyEntityRecords,\n\t\t\t\t\t\t\tentitiesToSkip: unselectedEntities,\n\t\t\t\t\t\t\tclose,\n\t\t\t\t\t\t} )\n\t\t\t\t\t}\n\t\t\t\t\tclassName=\"editor-entities-saved-states__save-button\"\n\t\t\t\t>\n\t\t\t\t\t{ saveLabel }\n\t\t\t\t</FlexItem>\n\t\t\t\t<FlexItem\n\t\t\t\t\tisBlock\n\t\t\t\t\tas={ Button }\n\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\tonClick={ dismissPanel }\n\t\t\t\t>\n\t\t\t\t\t{ __( 'Cancel' ) }\n\t\t\t\t</FlexItem>\n\t\t\t</Flex>\n\n\t\t\t<div className=\"entities-saved-states__text-prompt\">\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"entities-saved-states__text-prompt--header-wrapper\"\n\t\t\t\t\tid={ renderDialog ? dialogLabel : undefined }\n\t\t\t\t>\n\t\t\t\t\t<strong className=\"entities-saved-states__text-prompt--header\">\n\t\t\t\t\t\t{ __( 'Are you ready to save?' ) }\n\t\t\t\t\t</strong>\n\t\t\t\t\t{ additionalPrompt }\n\t\t\t\t</div>\n\t\t\t\t<p id={ renderDialog ? dialogDescription : undefined }>\n\t\t\t\t\t{ isDirty\n\t\t\t\t\t\t? createInterpolateElement(\n\t\t\t\t\t\t\t\tsprintf(\n\t\t\t\t\t\t\t\t\t/* translators: %d: number of site changes waiting to be saved. */\n\t\t\t\t\t\t\t\t\t_n(\n\t\t\t\t\t\t\t\t\t\t'There is <strong>%d site change</strong> waiting to be saved.',\n\t\t\t\t\t\t\t\t\t\t'There are <strong>%d site changes</strong> waiting to be saved.',\n\t\t\t\t\t\t\t\t\t\tsortedPartitionedSavables.length\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tsortedPartitionedSavables.length\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t{ strong: <strong /> }\n\t\t\t\t\t\t  )\n\t\t\t\t\t\t: __( 'Select the items you want to save.' ) }\n\t\t\t\t</p>\n\t\t\t</div>\n\n\t\t\t{ sortedPartitionedSavables.map( ( list ) => {\n\t\t\t\treturn (\n\t\t\t\t\t<EntityTypeList\n\t\t\t\t\t\tkey={ list[ 0 ].name }\n\t\t\t\t\t\tlist={ list }\n\t\t\t\t\t\tunselectedEntities={ unselectedEntities }\n\t\t\t\t\t\tsetUnselectedEntities={ setUnselectedEntities }\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t} ) }\n\t\t</div>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport { Button } from '@wordpress/components';\nimport { select } from '@wordpress/data';\nimport { Warning } from '@wordpress/block-editor';\nimport { useCopyToClipboard } from '@wordpress/compose';\nimport { doAction } from '@wordpress/hooks';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nfunction getContent() {\n\ttry {\n\t\t// While `select` in a component is generally discouraged, it is\n\t\t// used here because it (a) reduces the chance of data loss in the\n\t\t// case of additional errors by performing a direct retrieval and\n\t\t// (b) avoids the performance cost associated with unnecessary\n\t\t// content serialization throughout the lifetime of a non-erroring\n\t\t// application.\n\t\treturn select( editorStore ).getEditedPostContent();\n\t} catch ( error ) {}\n}\n\nfunction CopyButton( { text, children } ) {\n\tconst ref = useCopyToClipboard( text );\n\treturn (\n\t\t<Button variant=\"secondary\" ref={ ref }>\n\t\t\t{ children }\n\t\t</Button>\n\t);\n}\n\nclass ErrorBoundary extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.state = {\n\t\t\terror: null,\n\t\t};\n\t}\n\n\tcomponentDidCatch( error ) {\n\t\tdoAction( 'editor.ErrorBoundary.errorLogged', error );\n\t}\n\n\tstatic getDerivedStateFromError( error ) {\n\t\treturn { error };\n\t}\n\n\trender() {\n\t\tconst { error } = this.state;\n\t\tif ( ! error ) {\n\t\t\treturn this.props.children;\n\t\t}\n\n\t\tconst actions = [\n\t\t\t<CopyButton key=\"copy-post\" text={ getContent }>\n\t\t\t\t{ __( 'Copy Post Text' ) }\n\t\t\t</CopyButton>,\n\t\t\t<CopyButton key=\"copy-error\" text={ error.stack }>\n\t\t\t\t{ __( 'Copy Error' ) }\n\t\t\t</CopyButton>,\n\t\t];\n\n\t\treturn (\n\t\t\t<Warning className=\"editor-error-boundary\" actions={ actions }>\n\t\t\t\t{ __( 'The editor has encountered an unexpected error.' ) }\n\t\t\t</Warning>\n\t\t);\n\t}\n}\n\n/**\n * ErrorBoundary is used to catch JavaScript errors anywhere in a child component tree, log those errors, and display a fallback UI.\n *\n * It uses the lifecycle methods getDerivedStateFromError and componentDidCatch to catch errors in a child component tree.\n *\n * getDerivedStateFromError is used to render a fallback UI after an error has been thrown, and componentDidCatch is used to log error information.\n *\n * @class ErrorBoundary\n * @augments Component\n */\nexport default ErrorBoundary;\n","/**\n * WordPress dependencies\n */\nimport { useCallback, useEffect, useRef } from '@wordpress/element';\nimport { ifCondition, usePrevious } from '@wordpress/compose';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\nimport { parse } from '@wordpress/blocks';\nimport { store as noticesStore } from '@wordpress/notices';\n\n/**\n * Internal dependencies\n */\nimport AutosaveMonitor from '../autosave-monitor';\nimport {\n\tlocalAutosaveGet,\n\tlocalAutosaveClear,\n} from '../../store/local-autosave';\nimport { store as editorStore } from '../../store';\n\nconst requestIdleCallback = window.requestIdleCallback\n\t? window.requestIdleCallback\n\t: window.requestAnimationFrame;\n\nlet hasStorageSupport;\n\n/**\n * Function which returns true if the current environment supports browser\n * sessionStorage, or false otherwise. The result of this function is cached and\n * reused in subsequent invocations.\n */\nconst hasSessionStorageSupport = () => {\n\tif ( hasStorageSupport !== undefined ) {\n\t\treturn hasStorageSupport;\n\t}\n\n\ttry {\n\t\t// Private Browsing in Safari 10 and earlier will throw an error when\n\t\t// attempting to set into sessionStorage. The test here is intentional in\n\t\t// causing a thrown error as condition bailing from local autosave.\n\t\twindow.sessionStorage.setItem( '__wpEditorTestSessionStorage', '' );\n\t\twindow.sessionStorage.removeItem( '__wpEditorTestSessionStorage' );\n\t\thasStorageSupport = true;\n\t} catch {\n\t\thasStorageSupport = false;\n\t}\n\n\treturn hasStorageSupport;\n};\n\n/**\n * Custom hook which manages the creation of a notice prompting the user to\n * restore a local autosave, if one exists.\n */\nfunction useAutosaveNotice() {\n\tconst { postId, isEditedPostNew, hasRemoteAutosave } = useSelect(\n\t\t( select ) => ( {\n\t\t\tpostId: select( editorStore ).getCurrentPostId(),\n\t\t\tisEditedPostNew: select( editorStore ).isEditedPostNew(),\n\t\t\thasRemoteAutosave:\n\t\t\t\t!! select( editorStore ).getEditorSettings().autosave,\n\t\t} ),\n\t\t[]\n\t);\n\tconst { getEditedPostAttribute } = useSelect( editorStore );\n\n\tconst { createWarningNotice, removeNotice } = useDispatch( noticesStore );\n\tconst { editPost, resetEditorBlocks } = useDispatch( editorStore );\n\n\tuseEffect( () => {\n\t\tlet localAutosave = localAutosaveGet( postId, isEditedPostNew );\n\t\tif ( ! localAutosave ) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tlocalAutosave = JSON.parse( localAutosave );\n\t\t} catch {\n\t\t\t// Not usable if it can't be parsed.\n\t\t\treturn;\n\t\t}\n\n\t\tconst { post_title: title, content, excerpt } = localAutosave;\n\t\tconst edits = { title, content, excerpt };\n\n\t\t{\n\t\t\t// Only display a notice if there is a difference between what has been\n\t\t\t// saved and that which is stored in sessionStorage.\n\t\t\tconst hasDifference = Object.keys( edits ).some( ( key ) => {\n\t\t\t\treturn edits[ key ] !== getEditedPostAttribute( key );\n\t\t\t} );\n\n\t\t\tif ( ! hasDifference ) {\n\t\t\t\t// If there is no difference, it can be safely ejected from storage.\n\t\t\t\tlocalAutosaveClear( postId, isEditedPostNew );\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif ( hasRemoteAutosave ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst id = 'wpEditorAutosaveRestore';\n\n\t\tcreateWarningNotice(\n\t\t\t__(\n\t\t\t\t'The backup of this post in your browser is different from the version below.'\n\t\t\t),\n\t\t\t{\n\t\t\t\tid,\n\t\t\t\tactions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: __( 'Restore the backup' ),\n\t\t\t\t\t\tonClick() {\n\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\tcontent: editsContent,\n\t\t\t\t\t\t\t\t...editsWithoutContent\n\t\t\t\t\t\t\t} = edits;\n\t\t\t\t\t\t\teditPost( editsWithoutContent );\n\t\t\t\t\t\t\tresetEditorBlocks( parse( edits.content ) );\n\t\t\t\t\t\t\tremoveNotice( id );\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t}\n\t\t);\n\t}, [ isEditedPostNew, postId ] );\n}\n\n/**\n * Custom hook which ejects a local autosave after a successful save occurs.\n */\nfunction useAutosavePurge() {\n\tconst { postId, isEditedPostNew, isDirty, isAutosaving, didError } =\n\t\tuseSelect(\n\t\t\t( select ) => ( {\n\t\t\t\tpostId: select( editorStore ).getCurrentPostId(),\n\t\t\t\tisEditedPostNew: select( editorStore ).isEditedPostNew(),\n\t\t\t\tisDirty: select( editorStore ).isEditedPostDirty(),\n\t\t\t\tisAutosaving: select( editorStore ).isAutosavingPost(),\n\t\t\t\tdidError: select( editorStore ).didPostSaveRequestFail(),\n\t\t\t} ),\n\t\t\t[]\n\t\t);\n\n\tconst lastIsDirty = useRef( isDirty );\n\tconst lastIsAutosaving = useRef( isAutosaving );\n\n\tuseEffect( () => {\n\t\tif (\n\t\t\t! didError &&\n\t\t\t( ( lastIsAutosaving.current && ! isAutosaving ) ||\n\t\t\t\t( lastIsDirty.current && ! isDirty ) )\n\t\t) {\n\t\t\tlocalAutosaveClear( postId, isEditedPostNew );\n\t\t}\n\n\t\tlastIsDirty.current = isDirty;\n\t\tlastIsAutosaving.current = isAutosaving;\n\t}, [ isDirty, isAutosaving, didError ] );\n\n\t// Once the isEditedPostNew changes from true to false, let's clear the auto-draft autosave.\n\tconst wasEditedPostNew = usePrevious( isEditedPostNew );\n\tconst prevPostId = usePrevious( postId );\n\tuseEffect( () => {\n\t\tif ( prevPostId === postId && wasEditedPostNew && ! isEditedPostNew ) {\n\t\t\tlocalAutosaveClear( postId, true );\n\t\t}\n\t}, [ isEditedPostNew, postId ] );\n}\n\nfunction LocalAutosaveMonitor() {\n\tconst { autosave } = useDispatch( editorStore );\n\tconst deferredAutosave = useCallback( () => {\n\t\trequestIdleCallback( () => autosave( { local: true } ) );\n\t}, [] );\n\tuseAutosaveNotice();\n\tuseAutosavePurge();\n\n\tconst localAutosaveInterval = useSelect(\n\t\t( select ) =>\n\t\t\tselect( editorStore ).getEditorSettings().localAutosaveInterval,\n\t\t[]\n\t);\n\n\treturn (\n\t\t<AutosaveMonitor\n\t\t\tinterval={ localAutosaveInterval }\n\t\t\tautosave={ deferredAutosave }\n\t\t/>\n\t);\n}\n\n/**\n * Monitors local autosaves of a post in the editor.\n * It uses several hooks and functions to manage autosave behavior:\n * - `useAutosaveNotice` hook: Manages the creation of a notice prompting the user to restore a local autosave, if one exists.\n * - `useAutosavePurge` hook: Ejects a local autosave after a successful save occurs.\n * - `hasSessionStorageSupport` function: Checks if the current environment supports browser sessionStorage.\n * - `LocalAutosaveMonitor` component: Uses the `AutosaveMonitor` component to perform autosaves at a specified interval.\n *\n * The module also checks for sessionStorage support and conditionally exports the `LocalAutosaveMonitor` component based on that.\n *\n * @module LocalAutosaveMonitor\n */\nexport default ifCondition( hasSessionStorageSupport )( LocalAutosaveMonitor );\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\n/**\n * Wrapper component that renders its children only if the post type supports page attributes.\n *\n * @param {Object}  props          - The component props.\n * @param {Element} props.children - The child components to render.\n *\n * @return {Component|null} The rendered child components or null if page attributes are not supported.\n */\nexport function PageAttributesCheck( { children } ) {\n\tconst supportsPageAttributes = useSelect( ( select ) => {\n\t\tconst { getEditedPostAttribute } = select( editorStore );\n\t\tconst { getPostType } = select( coreStore );\n\t\tconst postType = getPostType( getEditedPostAttribute( 'type' ) );\n\n\t\treturn !! postType?.supports?.[ 'page-attributes' ];\n\t}, [] );\n\n\t// Only render fields if post type supports page attributes or available templates exist.\n\tif ( ! supportsPageAttributes ) {\n\t\treturn null;\n\t}\n\n\treturn children;\n}\n\nexport default PageAttributesCheck;\n","/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * WordPress dependencies\n */\nimport { __experimentalHStack as HStack } from '@wordpress/components';\nimport { forwardRef } from '@wordpress/element';\n\nconst PostPanelRow = forwardRef( ( { className, label, children }, ref ) => {\n\treturn (\n\t\t<HStack\n\t\t\tclassName={ clsx( 'editor-post-panel__row', className ) }\n\t\t\tref={ ref }\n\t\t>\n\t\t\t{ label && (\n\t\t\t\t<div className=\"editor-post-panel__row-label\">{ label }</div>\n\t\t\t) }\n\t\t\t<div className=\"editor-post-panel__row-control\">{ children }</div>\n\t\t</HStack>\n\t);\n} );\n\nexport default PostPanelRow;\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\n/**\n * A component which renders its own children only if the current editor post\n * type supports one of the given `supportKeys` prop.\n *\n * @param {Object}            props             Props.\n * @param {Element}           props.children    Children to be rendered if post\n *                                              type supports.\n * @param {(string|string[])} props.supportKeys String or string array of keys\n *                                              to test.\n *\n * @return {Component} The component to be rendered.\n */\nfunction PostTypeSupportCheck( { children, supportKeys } ) {\n\tconst postType = useSelect( ( select ) => {\n\t\tconst { getEditedPostAttribute } = select( editorStore );\n\t\tconst { getPostType } = select( coreStore );\n\t\treturn getPostType( getEditedPostAttribute( 'type' ) );\n\t}, [] );\n\tlet isSupported = !! postType;\n\tif ( postType ) {\n\t\tisSupported = (\n\t\t\tArray.isArray( supportKeys ) ? supportKeys : [ supportKeys ]\n\t\t).some( ( key ) => !! postType.supports[ key ] );\n\t}\n\n\tif ( ! isSupported ) {\n\t\treturn null;\n\t}\n\n\treturn children;\n}\n\nexport default PostTypeSupportCheck;\n","/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport {\n\tButton,\n\tDropdown,\n\tFlex,\n\tFlexBlock,\n\t__experimentalNumberControl as NumberControl,\n} from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useState, useMemo } from '@wordpress/element';\nimport { __experimentalInspectorPopoverHeader as InspectorPopoverHeader } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport PostPanelRow from '../post-panel-row';\nimport PostTypeSupportCheck from '../post-type-support-check';\nimport { store as editorStore } from '../../store';\n\nfunction PageAttributesOrder() {\n\tconst order = useSelect(\n\t\t( select ) =>\n\t\t\tselect( editorStore ).getEditedPostAttribute( 'menu_order' ) ?? 0,\n\t\t[]\n\t);\n\tconst { editPost } = useDispatch( editorStore );\n\tconst [ orderInput, setOrderInput ] = useState( null );\n\n\tconst setUpdatedOrder = ( value ) => {\n\t\tsetOrderInput( value );\n\t\tconst newOrder = Number( value );\n\t\tif ( Number.isInteger( newOrder ) && value.trim?.() !== '' ) {\n\t\t\teditPost( { menu_order: newOrder } );\n\t\t}\n\t};\n\n\tconst value = orderInput ?? order;\n\n\treturn (\n\t\t<Flex>\n\t\t\t<FlexBlock>\n\t\t\t\t<NumberControl\n\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\tlabel={ __( 'Order' ) }\n\t\t\t\t\thelp={ __( 'Set the page order.' ) }\n\t\t\t\t\tvalue={ value }\n\t\t\t\t\tonChange={ setUpdatedOrder }\n\t\t\t\t\thideLabelFromVision\n\t\t\t\t\tonBlur={ () => {\n\t\t\t\t\t\tsetOrderInput( null );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t</FlexBlock>\n\t\t</Flex>\n\t);\n}\n\n/**\n * Renders the Page Attributes Order component. A number input in an editor interface\n * for setting the order of a given page.\n *\n * @return {Component} The component to be rendered.\n */\nexport default function PageAttributesOrderWithChecks() {\n\treturn (\n\t\t<PostTypeSupportCheck supportKeys=\"page-attributes\">\n\t\t\t<PageAttributesOrder />\n\t\t</PostTypeSupportCheck>\n\t);\n}\n\nfunction PostOrderToggle( { isOpen, onClick } ) {\n\tconst order = useSelect(\n\t\t( select ) =>\n\t\t\tselect( editorStore ).getEditedPostAttribute( 'menu_order' ) ?? 0,\n\t\t[]\n\t);\n\treturn (\n\t\t<Button\n\t\t\tsize=\"compact\"\n\t\t\tclassName=\"editor-post-order__panel-toggle\"\n\t\t\tvariant=\"tertiary\"\n\t\t\taria-expanded={ isOpen }\n\t\t\t// translators: %s: Current post parent.\n\t\t\taria-label={ sprintf( __( 'Change order: %s' ), order ) }\n\t\t\tonClick={ onClick }\n\t\t>\n\t\t\t{ order }\n\t\t</Button>\n\t);\n}\n\nexport function OrderRow() {\n\t// Use internal state instead of a ref to make sure that the component\n\t// re-renders when the popover's anchor updates.\n\tconst [ popoverAnchor, setPopoverAnchor ] = useState( null );\n\t// Memoize popoverProps to avoid returning a new object every time.\n\tconst popoverProps = useMemo(\n\t\t() => ( {\n\t\t\t// Anchor the popover to the middle of the entire row so that it doesn't\n\t\t\t// move around when the label changes.\n\t\t\tanchor: popoverAnchor,\n\t\t\tplacement: 'left-start',\n\t\t\toffset: 36,\n\t\t\tshift: true,\n\t\t} ),\n\t\t[ popoverAnchor ]\n\t);\n\treturn (\n\t\t<PostPanelRow label={ __( 'Order' ) } ref={ setPopoverAnchor }>\n\t\t\t<Dropdown\n\t\t\t\tpopoverProps={ popoverProps }\n\t\t\t\tclassName=\"editor-post-order__panel-dropdown\"\n\t\t\t\tcontentClassName=\"editor-post-order__panel-dialog\"\n\t\t\t\tfocusOnMount\n\t\t\t\trenderToggle={ ( { isOpen, onToggle } ) => (\n\t\t\t\t\t<PostOrderToggle isOpen={ isOpen } onClick={ onToggle } />\n\t\t\t\t) }\n\t\t\t\trenderContent={ ( { onClose } ) => (\n\t\t\t\t\t<div className=\"editor-post-order\">\n\t\t\t\t\t\t<InspectorPopoverHeader\n\t\t\t\t\t\t\ttitle={ __( 'Order' ) }\n\t\t\t\t\t\t\tonClose={ onClose }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t'This attribute determines the order of pages in the Pages List block.'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t'Pages with the same order value will sorted alphabetically. Negative order values are also supported.'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<PageAttributesOrder />\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\t\t\t/>\n\t\t</PostPanelRow>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { decodeEntities } from '@wordpress/html-entities';\n\n/**\n * Returns terms in a tree form.\n *\n * @param {Array} flatTerms Array of terms in flat format.\n *\n * @return {Array} Array of terms in tree format.\n */\nexport function buildTermsTree( flatTerms ) {\n\tconst flatTermsWithParentAndChildren = flatTerms.map( ( term ) => {\n\t\treturn {\n\t\t\tchildren: [],\n\t\t\tparent: null,\n\t\t\t...term,\n\t\t};\n\t} );\n\n\t// All terms should have a `parent` because we're about to index them by it.\n\tif (\n\t\tflatTermsWithParentAndChildren.some( ( { parent } ) => parent === null )\n\t) {\n\t\treturn flatTermsWithParentAndChildren;\n\t}\n\n\tconst termsByParent = flatTermsWithParentAndChildren.reduce(\n\t\t( acc, term ) => {\n\t\t\tconst { parent } = term;\n\t\t\tif ( ! acc[ parent ] ) {\n\t\t\t\tacc[ parent ] = [];\n\t\t\t}\n\t\t\tacc[ parent ].push( term );\n\t\t\treturn acc;\n\t\t},\n\t\t{}\n\t);\n\n\tconst fillWithChildren = ( terms ) => {\n\t\treturn terms.map( ( term ) => {\n\t\t\tconst children = termsByParent[ term.id ];\n\t\t\treturn {\n\t\t\t\t...term,\n\t\t\t\tchildren:\n\t\t\t\t\tchildren && children.length\n\t\t\t\t\t\t? fillWithChildren( children )\n\t\t\t\t\t\t: [],\n\t\t\t};\n\t\t} );\n\t};\n\n\treturn fillWithChildren( termsByParent[ '0' ] || [] );\n}\n\nexport const unescapeString = ( arg ) => {\n\treturn decodeEntities( arg );\n};\n\n/**\n * Returns a term object with name unescaped.\n *\n * @param {Object} term The term object to unescape.\n *\n * @return {Object} Term object with name property unescaped.\n */\nexport const unescapeTerm = ( term ) => {\n\treturn {\n\t\t...term,\n\t\tname: unescapeString( term.name ),\n\t};\n};\n\n/**\n * Returns an array of term objects with names unescaped.\n * The unescape of each term is performed using the unescapeTerm function.\n *\n * @param {Object[]} terms Array of term objects to unescape.\n *\n * @return {Object[]} Array of term objects unescaped.\n */\nexport const unescapeTerms = ( terms ) => {\n\treturn ( terms ?? [] ).map( unescapeTerm );\n};\n","/**\n * External dependencies\n */\nimport removeAccents from 'remove-accents';\n\n/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport {\n\tButton,\n\tDropdown,\n\tComboboxControl,\n\tExternalLink,\n} from '@wordpress/components';\nimport { debounce } from '@wordpress/compose';\nimport { useState, useMemo } from '@wordpress/element';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { __experimentalInspectorPopoverHeader as InspectorPopoverHeader } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport PostPanelRow from '../post-panel-row';\nimport { buildTermsTree } from '../../utils/terms';\nimport { store as editorStore } from '../../store';\n\nfunction getTitle( post ) {\n\treturn post?.title?.rendered\n\t\t? decodeEntities( post.title.rendered )\n\t\t: `#${ post.id } (${ __( 'no title' ) })`;\n}\n\nexport const getItemPriority = ( name, searchValue ) => {\n\tconst normalizedName = removeAccents( name || '' ).toLowerCase();\n\tconst normalizedSearch = removeAccents( searchValue || '' ).toLowerCase();\n\tif ( normalizedName === normalizedSearch ) {\n\t\treturn 0;\n\t}\n\n\tif ( normalizedName.startsWith( normalizedSearch ) ) {\n\t\treturn normalizedName.length;\n\t}\n\n\treturn Infinity;\n};\n\n/**\n * Renders the Page Attributes Parent component. A dropdown menu in an editor interface\n * for selecting the parent page of a given page.\n *\n * @return {Component|null} The component to be rendered. Return null if post type is not hierarchical.\n */\nexport function PageAttributesParent() {\n\tconst { editPost } = useDispatch( editorStore );\n\tconst [ fieldValue, setFieldValue ] = useState( false );\n\tconst { isHierarchical, parentPostId, parentPostTitle, pageItems } =\n\t\tuseSelect(\n\t\t\t( select ) => {\n\t\t\t\tconst { getPostType, getEntityRecords, getEntityRecord } =\n\t\t\t\t\tselect( coreStore );\n\t\t\t\tconst { getCurrentPostId, getEditedPostAttribute } =\n\t\t\t\t\tselect( editorStore );\n\t\t\t\tconst postTypeSlug = getEditedPostAttribute( 'type' );\n\t\t\t\tconst pageId = getEditedPostAttribute( 'parent' );\n\t\t\t\tconst pType = getPostType( postTypeSlug );\n\t\t\t\tconst postId = getCurrentPostId();\n\t\t\t\tconst postIsHierarchical = pType?.hierarchical ?? false;\n\t\t\t\tconst query = {\n\t\t\t\t\tper_page: 100,\n\t\t\t\t\texclude: postId,\n\t\t\t\t\tparent_exclude: postId,\n\t\t\t\t\torderby: 'menu_order',\n\t\t\t\t\torder: 'asc',\n\t\t\t\t\t_fields: 'id,title,parent',\n\t\t\t\t};\n\n\t\t\t\t// Perform a search when the field is changed.\n\t\t\t\tif ( !! fieldValue ) {\n\t\t\t\t\tquery.search = fieldValue;\n\t\t\t\t}\n\n\t\t\t\tconst parentPost = pageId\n\t\t\t\t\t? getEntityRecord( 'postType', postTypeSlug, pageId )\n\t\t\t\t\t: null;\n\n\t\t\t\treturn {\n\t\t\t\t\tisHierarchical: postIsHierarchical,\n\t\t\t\t\tparentPostId: pageId,\n\t\t\t\t\tparentPostTitle: parentPost ? getTitle( parentPost ) : '',\n\t\t\t\t\tpageItems: postIsHierarchical\n\t\t\t\t\t\t? getEntityRecords( 'postType', postTypeSlug, query )\n\t\t\t\t\t\t: null,\n\t\t\t\t};\n\t\t\t},\n\t\t\t[ fieldValue ]\n\t\t);\n\n\tconst parentOptions = useMemo( () => {\n\t\tconst getOptionsFromTree = ( tree, level = 0 ) => {\n\t\t\tconst mappedNodes = tree.map( ( treeNode ) => [\n\t\t\t\t{\n\t\t\t\t\tvalue: treeNode.id,\n\t\t\t\t\tlabel:\n\t\t\t\t\t\t'— '.repeat( level ) + decodeEntities( treeNode.name ),\n\t\t\t\t\trawName: treeNode.name,\n\t\t\t\t},\n\t\t\t\t...getOptionsFromTree( treeNode.children || [], level + 1 ),\n\t\t\t] );\n\n\t\t\tconst sortedNodes = mappedNodes.sort( ( [ a ], [ b ] ) => {\n\t\t\t\tconst priorityA = getItemPriority( a.rawName, fieldValue );\n\t\t\t\tconst priorityB = getItemPriority( b.rawName, fieldValue );\n\t\t\t\treturn priorityA >= priorityB ? 1 : -1;\n\t\t\t} );\n\n\t\t\treturn sortedNodes.flat();\n\t\t};\n\n\t\tif ( ! pageItems ) {\n\t\t\treturn [];\n\t\t}\n\n\t\tlet tree = pageItems.map( ( item ) => ( {\n\t\t\tid: item.id,\n\t\t\tparent: item.parent,\n\t\t\tname: getTitle( item ),\n\t\t} ) );\n\n\t\t// Only build a hierarchical tree when not searching.\n\t\tif ( ! fieldValue ) {\n\t\t\ttree = buildTermsTree( tree );\n\t\t}\n\n\t\tconst opts = getOptionsFromTree( tree );\n\n\t\t// Ensure the current parent is in the options list.\n\t\tconst optsHasParent = opts.find(\n\t\t\t( item ) => item.value === parentPostId\n\t\t);\n\t\tif ( parentPostTitle && ! optsHasParent ) {\n\t\t\topts.unshift( {\n\t\t\t\tvalue: parentPostId,\n\t\t\t\tlabel: parentPostTitle,\n\t\t\t} );\n\t\t}\n\t\treturn opts;\n\t}, [ pageItems, fieldValue, parentPostTitle, parentPostId ] );\n\n\tif ( ! isHierarchical ) {\n\t\treturn null;\n\t}\n\t/**\n\t * Handle user input.\n\t *\n\t * @param {string} inputValue The current value of the input field.\n\t */\n\tconst handleKeydown = ( inputValue ) => {\n\t\tsetFieldValue( inputValue );\n\t};\n\n\t/**\n\t * Handle author selection.\n\t *\n\t * @param {Object} selectedPostId The selected Author.\n\t */\n\tconst handleChange = ( selectedPostId ) => {\n\t\teditPost( { parent: selectedPostId } );\n\t};\n\n\treturn (\n\t\t<ComboboxControl\n\t\t\t__nextHasNoMarginBottom\n\t\t\t__next40pxDefaultSize\n\t\t\tclassName=\"editor-page-attributes__parent\"\n\t\t\tlabel={ __( 'Parent' ) }\n\t\t\thelp={ __( 'Choose a parent page.' ) }\n\t\t\tvalue={ parentPostId }\n\t\t\toptions={ parentOptions }\n\t\t\tonFilterValueChange={ debounce( handleKeydown, 300 ) }\n\t\t\tonChange={ handleChange }\n\t\t\thideLabelFromVision\n\t\t/>\n\t);\n}\n\nfunction PostParentToggle( { isOpen, onClick } ) {\n\tconst parentPost = useSelect( ( select ) => {\n\t\tconst { getEditedPostAttribute } = select( editorStore );\n\t\tconst parentPostId = getEditedPostAttribute( 'parent' );\n\t\tif ( ! parentPostId ) {\n\t\t\treturn null;\n\t\t}\n\t\tconst { getEntityRecord } = select( coreStore );\n\t\tconst postTypeSlug = getEditedPostAttribute( 'type' );\n\t\treturn getEntityRecord( 'postType', postTypeSlug, parentPostId );\n\t}, [] );\n\tconst parentTitle = useMemo(\n\t\t() => ( ! parentPost ? __( 'None' ) : getTitle( parentPost ) ),\n\t\t[ parentPost ]\n\t);\n\treturn (\n\t\t<Button\n\t\t\tsize=\"compact\"\n\t\t\tclassName=\"editor-post-parent__panel-toggle\"\n\t\t\tvariant=\"tertiary\"\n\t\t\taria-expanded={ isOpen }\n\t\t\t// translators: %s: Current post parent.\n\t\t\taria-label={ sprintf( __( 'Change parent: %s' ), parentTitle ) }\n\t\t\tonClick={ onClick }\n\t\t>\n\t\t\t{ parentTitle }\n\t\t</Button>\n\t);\n}\n\nexport function ParentRow() {\n\t// Use internal state instead of a ref to make sure that the component\n\t// re-renders when the popover's anchor updates.\n\tconst [ popoverAnchor, setPopoverAnchor ] = useState( null );\n\t// Memoize popoverProps to avoid returning a new object every time.\n\tconst popoverProps = useMemo(\n\t\t() => ( {\n\t\t\t// Anchor the popover to the middle of the entire row so that it doesn't\n\t\t\t// move around when the label changes.\n\t\t\tanchor: popoverAnchor,\n\t\t\tplacement: 'left-start',\n\t\t\toffset: 36,\n\t\t\tshift: true,\n\t\t} ),\n\t\t[ popoverAnchor ]\n\t);\n\treturn (\n\t\t<PostPanelRow label={ __( 'Parent' ) } ref={ setPopoverAnchor }>\n\t\t\t<Dropdown\n\t\t\t\tpopoverProps={ popoverProps }\n\t\t\t\tclassName=\"editor-post-parent__panel-dropdown\"\n\t\t\t\tcontentClassName=\"editor-post-parent__panel-dialog\"\n\t\t\t\tfocusOnMount\n\t\t\t\trenderToggle={ ( { isOpen, onToggle } ) => (\n\t\t\t\t\t<PostParentToggle isOpen={ isOpen } onClick={ onToggle } />\n\t\t\t\t) }\n\t\t\t\trenderContent={ ( { onClose } ) => (\n\t\t\t\t\t<div className=\"editor-post-parent\">\n\t\t\t\t\t\t<InspectorPopoverHeader\n\t\t\t\t\t\t\ttitle={ __( 'Parent' ) }\n\t\t\t\t\t\t\tonClose={ onClose }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\"Child pages inherit characteristics from their parent, such as URL structure. For instance, if 'Web Design' is a child of 'Services,' its URL would be mysite.com/services/web-design.\"\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t'They also show up as sub-items in the default navigation menu. '\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t<ExternalLink\n\t\t\t\t\t\t\t\t\thref={ __(\n\t\t\t\t\t\t\t\t\t\t'https://wordpress.org/documentation/article/page-post-settings-sidebar/#page-attributes'\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{ __( 'Learn more' ) }\n\t\t\t\t\t\t\t\t</ExternalLink>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<PageAttributesParent />\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\t\t\t/>\n\t\t</PostPanelRow>\n\t);\n}\n\nexport default PageAttributesParent;\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\nimport PageAttributesCheck from './check';\nimport { OrderRow } from './order';\nimport { ParentRow } from './parent';\n\nconst PANEL_NAME = 'page-attributes';\n\nfunction AttributesPanel() {\n\tconst { isEnabled, postType } = useSelect( ( select ) => {\n\t\tconst { getEditedPostAttribute, isEditorPanelEnabled } =\n\t\t\tselect( editorStore );\n\t\tconst { getPostType } = select( coreStore );\n\t\treturn {\n\t\t\tisEnabled: isEditorPanelEnabled( PANEL_NAME ),\n\t\t\tpostType: getPostType( getEditedPostAttribute( 'type' ) ),\n\t\t};\n\t}, [] );\n\n\tif ( ! isEnabled || ! postType ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<ParentRow />\n\t\t\t<OrderRow />\n\t\t</>\n\t);\n}\n\n/**\n * Renders the Page Attributes Panel component.\n *\n * @return {Component} The component to be rendered.\n */\nexport default function PageAttributesPanel() {\n\treturn (\n\t\t<PageAttributesCheck>\n\t\t\t<AttributesPanel />\n\t\t</PageAttributesCheck>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst addTemplate = (\n\t<SVG viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t<Path\n\t\t\tfillRule=\"evenodd\"\n\t\t\tclipRule=\"evenodd\"\n\t\t\td=\"M18.5 5.5V8H20V5.5H22.5V4H20V1.5H18.5V4H16V5.5H18.5ZM13.9624 4H6C4.89543 4 4 4.89543 4 6V18C4 19.1046 4.89543 20 6 20H18C19.1046 20 20 19.1046 20 18V10.0391H18.5V18C18.5 18.2761 18.2761 18.5 18 18.5H10L10 10.4917L16.4589 10.5139L16.4641 9.01389L5.5 8.97618V6C5.5 5.72386 5.72386 5.5 6 5.5H13.9624V4ZM5.5 10.4762V18C5.5 18.2761 5.72386 18.5 6 18.5H8.5L8.5 10.4865L5.5 10.4762Z\"\n\t\t/>\n\t</SVG>\n);\n\nexport default addTemplate;\n","/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useState } from '@wordpress/element';\nimport { serialize, createBlock } from '@wordpress/blocks';\nimport {\n\tModal,\n\tTextControl,\n\tButton,\n\t__experimentalHStack as HStack,\n\t__experimentalVStack as VStack,\n} from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { cleanForSlug } from '@wordpress/url';\n\n/**\n * Internal dependencies\n */\nimport { unlock } from '../../lock-unlock';\nimport { store as editorStore } from '../../store';\n\nconst DEFAULT_TITLE = __( 'Custom Template' );\n\nexport default function CreateNewTemplateModal( { onClose } ) {\n\tconst { defaultBlockTemplate, onNavigateToEntityRecord } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getEditorSettings, getCurrentTemplateId } =\n\t\t\t\tselect( editorStore );\n\t\t\treturn {\n\t\t\t\tdefaultBlockTemplate: getEditorSettings().defaultBlockTemplate,\n\t\t\t\tonNavigateToEntityRecord:\n\t\t\t\t\tgetEditorSettings().onNavigateToEntityRecord,\n\t\t\t\tgetTemplateId: getCurrentTemplateId,\n\t\t\t};\n\t\t}\n\t);\n\n\tconst { createTemplate } = unlock( useDispatch( editorStore ) );\n\n\tconst [ title, setTitle ] = useState( '' );\n\n\tconst [ isBusy, setIsBusy ] = useState( false );\n\n\tconst cancel = () => {\n\t\tsetTitle( '' );\n\t\tonClose();\n\t};\n\n\tconst submit = async ( event ) => {\n\t\tevent.preventDefault();\n\n\t\tif ( isBusy ) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetIsBusy( true );\n\n\t\tconst newTemplateContent =\n\t\t\tdefaultBlockTemplate ??\n\t\t\tserialize( [\n\t\t\t\tcreateBlock(\n\t\t\t\t\t'core/group',\n\t\t\t\t\t{\n\t\t\t\t\t\ttagName: 'header',\n\t\t\t\t\t\tlayout: { inherit: true },\n\t\t\t\t\t},\n\t\t\t\t\t[\n\t\t\t\t\t\tcreateBlock( 'core/site-title' ),\n\t\t\t\t\t\tcreateBlock( 'core/site-tagline' ),\n\t\t\t\t\t]\n\t\t\t\t),\n\t\t\t\tcreateBlock( 'core/separator' ),\n\t\t\t\tcreateBlock(\n\t\t\t\t\t'core/group',\n\t\t\t\t\t{\n\t\t\t\t\t\ttagName: 'main',\n\t\t\t\t\t},\n\t\t\t\t\t[\n\t\t\t\t\t\tcreateBlock(\n\t\t\t\t\t\t\t'core/group',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlayout: { inherit: true },\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t[ createBlock( 'core/post-title' ) ]\n\t\t\t\t\t\t),\n\t\t\t\t\t\tcreateBlock( 'core/post-content', {\n\t\t\t\t\t\t\tlayout: { inherit: true },\n\t\t\t\t\t\t} ),\n\t\t\t\t\t]\n\t\t\t\t),\n\t\t\t] );\n\n\t\tconst newTemplate = await createTemplate( {\n\t\t\tslug: cleanForSlug( title || DEFAULT_TITLE ),\n\t\t\tcontent: newTemplateContent,\n\t\t\ttitle: title || DEFAULT_TITLE,\n\t\t} );\n\n\t\tsetIsBusy( false );\n\t\tonNavigateToEntityRecord( {\n\t\t\tpostId: newTemplate.id,\n\t\t\tpostType: 'wp_template',\n\t\t} );\n\t\tcancel();\n\t};\n\n\treturn (\n\t\t<Modal\n\t\t\ttitle={ __( 'Create custom template' ) }\n\t\t\tonRequestClose={ cancel }\n\t\t\tfocusOnMount=\"firstContentElement\"\n\t\t\tsize=\"small\"\n\t\t>\n\t\t\t<form\n\t\t\t\tclassName=\"editor-post-template__create-form\"\n\t\t\t\tonSubmit={ submit }\n\t\t\t>\n\t\t\t\t<VStack spacing=\"3\">\n\t\t\t\t\t<TextControl\n\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\tlabel={ __( 'Name' ) }\n\t\t\t\t\t\tvalue={ title }\n\t\t\t\t\t\tonChange={ setTitle }\n\t\t\t\t\t\tplaceholder={ DEFAULT_TITLE }\n\t\t\t\t\t\tdisabled={ isBusy }\n\t\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t\t'Describe the template, e.g. \"Post with sidebar\". A custom template can be manually applied to any post or page.'\n\t\t\t\t\t\t) }\n\t\t\t\t\t/>\n\t\t\t\t\t<HStack justify=\"right\">\n\t\t\t\t\t\t<Button variant=\"tertiary\" onClick={ cancel }>\n\t\t\t\t\t\t\t{ __( 'Cancel' ) }\n\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tisBusy={ isBusy }\n\t\t\t\t\t\t\taria-disabled={ isBusy }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Create' ) }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</HStack>\n\t\t\t\t</VStack>\n\t\t\t</form>\n\t\t</Modal>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { useMemo } from '@wordpress/element';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nexport function useEditedPostContext() {\n\treturn useSelect( ( select ) => {\n\t\tconst { getCurrentPostId, getCurrentPostType } = select( editorStore );\n\t\treturn {\n\t\t\tpostId: getCurrentPostId(),\n\t\t\tpostType: getCurrentPostType(),\n\t\t};\n\t}, [] );\n}\nexport function useAllowSwitchingTemplates() {\n\tconst { postType, postId } = useEditedPostContext();\n\treturn useSelect(\n\t\t( select ) => {\n\t\t\tconst { getEntityRecord, getEntityRecords } = select( coreStore );\n\t\t\tconst siteSettings = getEntityRecord( 'root', 'site' );\n\t\t\tconst templates = getEntityRecords( 'postType', 'wp_template', {\n\t\t\t\tper_page: -1,\n\t\t\t} );\n\t\t\tconst isPostsPage = +postId === siteSettings?.page_for_posts;\n\t\t\t// If current page is set front page or posts page, we also need\n\t\t\t// to check if the current theme has a template for it. If not\n\t\t\tconst isFrontPage =\n\t\t\t\tpostType === 'page' &&\n\t\t\t\t+postId === siteSettings?.page_on_front &&\n\t\t\t\ttemplates?.some( ( { slug } ) => slug === 'front-page' );\n\t\t\treturn ! isPostsPage && ! isFrontPage;\n\t\t},\n\t\t[ postId, postType ]\n\t);\n}\n\nfunction useTemplates( postType ) {\n\treturn useSelect(\n\t\t( select ) =>\n\t\t\tselect( coreStore ).getEntityRecords( 'postType', 'wp_template', {\n\t\t\t\tper_page: -1,\n\t\t\t\tpost_type: postType,\n\t\t\t} ),\n\t\t[ postType ]\n\t);\n}\n\nexport function useAvailableTemplates( postType ) {\n\tconst currentTemplateSlug = useCurrentTemplateSlug();\n\tconst allowSwitchingTemplate = useAllowSwitchingTemplates();\n\tconst templates = useTemplates( postType );\n\treturn useMemo(\n\t\t() =>\n\t\t\tallowSwitchingTemplate &&\n\t\t\ttemplates?.filter(\n\t\t\t\t( template ) =>\n\t\t\t\t\ttemplate.is_custom &&\n\t\t\t\t\ttemplate.slug !== currentTemplateSlug &&\n\t\t\t\t\t!! template.content.raw // Skip empty templates.\n\t\t\t),\n\t\t[ templates, currentTemplateSlug, allowSwitchingTemplate ]\n\t);\n}\n\nexport function useCurrentTemplateSlug() {\n\tconst { postType, postId } = useEditedPostContext();\n\tconst templates = useTemplates( postType );\n\tconst entityTemplate = useSelect(\n\t\t( select ) => {\n\t\t\tconst post = select( coreStore ).getEditedEntityRecord(\n\t\t\t\t'postType',\n\t\t\t\tpostType,\n\t\t\t\tpostId\n\t\t\t);\n\t\t\treturn post?.template;\n\t\t},\n\t\t[ postType, postId ]\n\t);\n\n\tif ( ! entityTemplate ) {\n\t\treturn;\n\t}\n\t// If a page has a `template` set and is not included in the list\n\t// of the theme's templates, do not return it, in order to resolve\n\t// to the current theme's default template.\n\treturn templates?.find( ( template ) => template.slug === entityTemplate )\n\t\t?.slug;\n}\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { SelectControl, Dropdown, Button, Notice } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { __experimentalInspectorPopoverHeader as InspectorPopoverHeader } from '@wordpress/block-editor';\nimport { useState, useMemo } from '@wordpress/element';\nimport { addTemplate } from '@wordpress/icons';\nimport { store as noticesStore } from '@wordpress/notices';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\nimport CreateNewTemplateModal from './create-new-template-modal';\nimport { useAllowSwitchingTemplates } from './hooks';\n\nconst POPOVER_PROPS = {\n\tclassName: 'editor-post-template__dropdown',\n\tplacement: 'bottom-start',\n};\n\nfunction PostTemplateToggle( { isOpen, onClick } ) {\n\tconst templateTitle = useSelect( ( select ) => {\n\t\tconst templateSlug =\n\t\t\tselect( editorStore ).getEditedPostAttribute( 'template' );\n\n\t\tconst { supportsTemplateMode, availableTemplates } =\n\t\t\tselect( editorStore ).getEditorSettings();\n\t\tif ( ! supportsTemplateMode && availableTemplates[ templateSlug ] ) {\n\t\t\treturn availableTemplates[ templateSlug ];\n\t\t}\n\t\tconst template =\n\t\t\tselect( coreStore ).canUser( 'create', 'templates' ) &&\n\t\t\tselect( editorStore ).getCurrentTemplateId();\n\t\treturn (\n\t\t\ttemplate?.title ||\n\t\t\ttemplate?.slug ||\n\t\t\tavailableTemplates?.[ templateSlug ]\n\t\t);\n\t}, [] );\n\n\treturn (\n\t\t<Button\n\t\t\t__next40pxDefaultSize\n\t\t\tvariant=\"tertiary\"\n\t\t\taria-expanded={ isOpen }\n\t\t\taria-label={ __( 'Template options' ) }\n\t\t\tonClick={ onClick }\n\t\t>\n\t\t\t{ templateTitle ?? __( 'Default template' ) }\n\t\t</Button>\n\t);\n}\n\n/**\n * Renders the dropdown content for selecting a post template.\n *\n * @param {Object}   props         The component props.\n * @param {Function} props.onClose The function to close the dropdown.\n *\n * @return {JSX.Element} The rendered dropdown content.\n */\nfunction PostTemplateDropdownContent( { onClose } ) {\n\tconst allowSwitchingTemplate = useAllowSwitchingTemplates();\n\tconst {\n\t\tavailableTemplates,\n\t\tfetchedTemplates,\n\t\tselectedTemplateSlug,\n\t\tcanCreate,\n\t\tcanEdit,\n\t\tcurrentTemplateId,\n\t\tonNavigateToEntityRecord,\n\t\tgetEditorSettings,\n\t} = useSelect(\n\t\t( select ) => {\n\t\t\tconst { canUser, getEntityRecords } = select( coreStore );\n\t\t\tconst editorSettings = select( editorStore ).getEditorSettings();\n\t\t\tconst canCreateTemplates = canUser( 'create', 'templates' );\n\t\t\tconst _currentTemplateId =\n\t\t\t\tselect( editorStore ).getCurrentTemplateId();\n\t\t\treturn {\n\t\t\t\tavailableTemplates: editorSettings.availableTemplates,\n\t\t\t\tfetchedTemplates: canCreateTemplates\n\t\t\t\t\t? getEntityRecords( 'postType', 'wp_template', {\n\t\t\t\t\t\t\tpost_type:\n\t\t\t\t\t\t\t\tselect( editorStore ).getCurrentPostType(),\n\t\t\t\t\t\t\tper_page: -1,\n\t\t\t\t\t  } )\n\t\t\t\t\t: undefined,\n\t\t\t\tselectedTemplateSlug:\n\t\t\t\t\tselect( editorStore ).getEditedPostAttribute( 'template' ),\n\t\t\t\tcanCreate:\n\t\t\t\t\tallowSwitchingTemplate &&\n\t\t\t\t\tcanCreateTemplates &&\n\t\t\t\t\teditorSettings.supportsTemplateMode,\n\t\t\t\tcanEdit:\n\t\t\t\t\tallowSwitchingTemplate &&\n\t\t\t\t\tcanCreateTemplates &&\n\t\t\t\t\teditorSettings.supportsTemplateMode &&\n\t\t\t\t\t!! _currentTemplateId,\n\t\t\t\tcurrentTemplateId: _currentTemplateId,\n\t\t\t\tonNavigateToEntityRecord:\n\t\t\t\t\teditorSettings.onNavigateToEntityRecord,\n\t\t\t\tgetEditorSettings: select( editorStore ).getEditorSettings,\n\t\t\t};\n\t\t},\n\t\t[ allowSwitchingTemplate ]\n\t);\n\n\tconst options = useMemo(\n\t\t() =>\n\t\t\tObject.entries( {\n\t\t\t\t...availableTemplates,\n\t\t\t\t...Object.fromEntries(\n\t\t\t\t\t( fetchedTemplates ?? [] ).map( ( { slug, title } ) => [\n\t\t\t\t\t\tslug,\n\t\t\t\t\t\ttitle.rendered,\n\t\t\t\t\t] )\n\t\t\t\t),\n\t\t\t} ).map( ( [ slug, title ] ) => ( { value: slug, label: title } ) ),\n\t\t[ availableTemplates, fetchedTemplates ]\n\t);\n\n\tconst selectedOption =\n\t\toptions.find( ( option ) => option.value === selectedTemplateSlug ) ??\n\t\toptions.find( ( option ) => ! option.value ); // The default option has '' value.\n\n\tconst { editPost } = useDispatch( editorStore );\n\tconst { createSuccessNotice } = useDispatch( noticesStore );\n\tconst [ isCreateModalOpen, setIsCreateModalOpen ] = useState( false );\n\n\treturn (\n\t\t<div className=\"editor-post-template__classic-theme-dropdown\">\n\t\t\t<InspectorPopoverHeader\n\t\t\t\ttitle={ __( 'Template' ) }\n\t\t\t\thelp={ __(\n\t\t\t\t\t'Templates define the way content is displayed when viewing your site.'\n\t\t\t\t) }\n\t\t\t\tactions={\n\t\t\t\t\tcanCreate\n\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ticon: addTemplate,\n\t\t\t\t\t\t\t\t\tlabel: __( 'Add template' ),\n\t\t\t\t\t\t\t\t\tonClick: () => setIsCreateModalOpen( true ),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t  ]\n\t\t\t\t\t\t: []\n\t\t\t\t}\n\t\t\t\tonClose={ onClose }\n\t\t\t/>\n\t\t\t{ ! allowSwitchingTemplate ? (\n\t\t\t\t<Notice status=\"warning\" isDismissible={ false }>\n\t\t\t\t\t{ __( 'The posts page template cannot be changed.' ) }\n\t\t\t\t</Notice>\n\t\t\t) : (\n\t\t\t\t<SelectControl\n\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\thideLabelFromVision\n\t\t\t\t\tlabel={ __( 'Template' ) }\n\t\t\t\t\tvalue={ selectedOption?.value ?? '' }\n\t\t\t\t\toptions={ options }\n\t\t\t\t\tonChange={ ( slug ) =>\n\t\t\t\t\t\teditPost( { template: slug || '' } )\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t) }\n\t\t\t{ canEdit && onNavigateToEntityRecord && (\n\t\t\t\t<p>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\tonNavigateToEntityRecord( {\n\t\t\t\t\t\t\t\tpostId: currentTemplateId,\n\t\t\t\t\t\t\t\tpostType: 'wp_template',\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\tonClose();\n\t\t\t\t\t\t\tcreateSuccessNotice(\n\t\t\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t\t\t'Editing template. Changes made here affect all posts and pages that use the template.'\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t\t\t\t\t\tactions: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tlabel: __( 'Go back' ),\n\t\t\t\t\t\t\t\t\t\t\tonClick: () =>\n\t\t\t\t\t\t\t\t\t\t\t\tgetEditorSettings().onNavigateToPreviousEntityRecord(),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Edit template' ) }\n\t\t\t\t\t</Button>\n\t\t\t\t</p>\n\t\t\t) }\n\t\t\t{ isCreateModalOpen && (\n\t\t\t\t<CreateNewTemplateModal\n\t\t\t\t\tonClose={ () => setIsCreateModalOpen( false ) }\n\t\t\t\t/>\n\t\t\t) }\n\t\t</div>\n\t);\n}\n\nfunction ClassicThemeControl() {\n\treturn (\n\t\t<Dropdown\n\t\t\tpopoverProps={ POPOVER_PROPS }\n\t\t\tfocusOnMount\n\t\t\trenderToggle={ ( { isOpen, onToggle } ) => (\n\t\t\t\t<PostTemplateToggle isOpen={ isOpen } onClick={ onToggle } />\n\t\t\t) }\n\t\t\trenderContent={ ( { onClose } ) => (\n\t\t\t\t<PostTemplateDropdownContent onClose={ onClose } />\n\t\t\t) }\n\t\t/>\n\t);\n}\n\n/**\n * Provides a dropdown menu for selecting and managing post templates.\n *\n * The dropdown menu includes a button for toggling the menu, a list of available templates, and options for creating and editing templates.\n *\n * @return {JSX.Element} The rendered ClassicThemeControl component.\n */\nexport default ClassicThemeControl;\n","/**\n * WordPress dependencies\n */\nimport { compose, ifCondition } from '@wordpress/compose';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { privateApis as preferencesPrivateApis } from '@wordpress/preferences';\n\n/**\n * Internal dependencies\n */\nimport { unlock } from '../../lock-unlock';\nimport { store as editorStore } from '../../store';\n\nconst { PreferenceBaseOption } = unlock( preferencesPrivateApis );\n\nexport default compose(\n\twithSelect( ( select, { panelName } ) => {\n\t\tconst { isEditorPanelEnabled, isEditorPanelRemoved } =\n\t\t\tselect( editorStore );\n\t\treturn {\n\t\t\tisRemoved: isEditorPanelRemoved( panelName ),\n\t\t\tisChecked: isEditorPanelEnabled( panelName ),\n\t\t};\n\t} ),\n\tifCondition( ( { isRemoved } ) => ! isRemoved ),\n\twithDispatch( ( dispatch, { panelName } ) => ( {\n\t\tonChange: () =>\n\t\t\tdispatch( editorStore ).toggleEditorPanelEnabled( panelName ),\n\t} ) )\n)( PreferenceBaseOption );\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"warning\"];","/**\n * WordPress dependencies\n */\nimport { createSlotFill } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport EnablePanelOption from './enable-panel';\n\nconst { Fill, Slot } = createSlotFill(\n\t'EnablePluginDocumentSettingPanelOption'\n);\n\nconst EnablePluginDocumentSettingPanelOption = ( { label, panelName } ) => (\n\t<Fill>\n\t\t<EnablePanelOption label={ label } panelName={ panelName } />\n\t</Fill>\n);\n\nEnablePluginDocumentSettingPanelOption.Slot = Slot;\n\nexport default EnablePluginDocumentSettingPanelOption;\n","/**\n * WordPress dependencies\n */\nimport { createSlotFill, PanelBody } from '@wordpress/components';\nimport { usePluginContext } from '@wordpress/plugins';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport warning from '@wordpress/warning';\n\n/**\n * Internal dependencies\n */\nimport EnablePluginDocumentSettingPanelOption from '../preferences-modal/enable-plugin-document-setting-panel';\nimport { store as editorStore } from '../../store';\n\nconst { Fill, Slot } = createSlotFill( 'PluginDocumentSettingPanel' );\n\n/**\n * Renders items below the Status & Availability panel in the Document Sidebar.\n *\n * @param {Object}                props                                 Component properties.\n * @param {string}                props.name                            Required. A machine-friendly name for the panel.\n * @param {string}                [props.className]                     An optional class name added to the row.\n * @param {string}                [props.title]                         The title of the panel\n * @param {WPBlockTypeIconRender} [props.icon=inherits from the plugin] The [Dashicon](https://developer.wordpress.org/resource/dashicons/) icon slug string, or an SVG WP element, to be rendered when the sidebar is pinned to toolbar.\n * @param {Element}               props.children                        Children to be rendered\n *\n * @example\n * ```js\n * // Using ES5 syntax\n * var el = React.createElement;\n * var __ = wp.i18n.__;\n * var registerPlugin = wp.plugins.registerPlugin;\n * var PluginDocumentSettingPanel = wp.editor.PluginDocumentSettingPanel;\n *\n * function MyDocumentSettingPlugin() {\n * \treturn el(\n * \t\tPluginDocumentSettingPanel,\n * \t\t{\n * \t\t\tclassName: 'my-document-setting-plugin',\n * \t\t\ttitle: 'My Panel',\n * \t\t\tname: 'my-panel',\n * \t\t},\n * \t\t__( 'My Document Setting Panel' )\n * \t);\n * }\n *\n * registerPlugin( 'my-document-setting-plugin', {\n * \t\trender: MyDocumentSettingPlugin\n * } );\n * ```\n *\n * @example\n * ```jsx\n * // Using ESNext syntax\n * import { registerPlugin } from '@wordpress/plugins';\n * import { PluginDocumentSettingPanel } from '@wordpress/editor';\n *\n * const MyDocumentSettingTest = () => (\n * \t\t<PluginDocumentSettingPanel className=\"my-document-setting-plugin\" title=\"My Panel\" name=\"my-panel\">\n *\t\t\t<p>My Document Setting Panel</p>\n *\t\t</PluginDocumentSettingPanel>\n *\t);\n *\n *  registerPlugin( 'document-setting-test', { render: MyDocumentSettingTest } );\n * ```\n *\n * @return {Component} The component to be rendered.\n */\nconst PluginDocumentSettingPanel = ( {\n\tname,\n\tclassName,\n\ttitle,\n\ticon,\n\tchildren,\n} ) => {\n\tconst { name: pluginName } = usePluginContext();\n\tconst panelName = `${ pluginName }/${ name }`;\n\tconst { opened, isEnabled } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { isEditorPanelOpened, isEditorPanelEnabled } =\n\t\t\t\tselect( editorStore );\n\n\t\t\treturn {\n\t\t\t\topened: isEditorPanelOpened( panelName ),\n\t\t\t\tisEnabled: isEditorPanelEnabled( panelName ),\n\t\t\t};\n\t\t},\n\t\t[ panelName ]\n\t);\n\tconst { toggleEditorPanelOpened } = useDispatch( editorStore );\n\n\tif ( undefined === name ) {\n\t\twarning( 'PluginDocumentSettingPanel requires a name property.' );\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<EnablePluginDocumentSettingPanelOption\n\t\t\t\tlabel={ title }\n\t\t\t\tpanelName={ panelName }\n\t\t\t/>\n\t\t\t<Fill>\n\t\t\t\t{ isEnabled && (\n\t\t\t\t\t<PanelBody\n\t\t\t\t\t\tclassName={ className }\n\t\t\t\t\t\ttitle={ title }\n\t\t\t\t\t\ticon={ icon }\n\t\t\t\t\t\topened={ opened }\n\t\t\t\t\t\tonToggle={ () => toggleEditorPanelOpened( panelName ) }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ children }\n\t\t\t\t\t</PanelBody>\n\t\t\t\t) }\n\t\t\t</Fill>\n\t\t</>\n\t);\n};\n\nPluginDocumentSettingPanel.Slot = Slot;\n\nexport default PluginDocumentSettingPanel;\n","/**\n * WordPress dependencies\n */\nimport { BlockSettingsMenuControls } from '@wordpress/block-editor';\nimport { MenuItem } from '@wordpress/components';\nimport { compose } from '@wordpress/compose';\n\nconst isEverySelectedBlockAllowed = ( selected, allowed ) =>\n\tselected.filter( ( id ) => ! allowed.includes( id ) ).length === 0;\n\n/**\n * Plugins may want to add an item to the menu either for every block\n * or only for the specific ones provided in the `allowedBlocks` component property.\n *\n * If there are multiple blocks selected the item will be rendered if every block\n * is of one allowed type (not necessarily the same).\n *\n * @param {string[]} selectedBlocks Array containing the names of the blocks selected\n * @param {string[]} allowedBlocks  Array containing the names of the blocks allowed\n * @return {boolean} Whether the item will be rendered or not.\n */\nconst shouldRenderItem = ( selectedBlocks, allowedBlocks ) =>\n\t! Array.isArray( allowedBlocks ) ||\n\tisEverySelectedBlockAllowed( selectedBlocks, allowedBlocks );\n\n/**\n * Renders a new item in the block settings menu.\n *\n * @param {Object}                props                 Component props.\n * @param {Array}                 [props.allowedBlocks] An array containing a list of block names for which the item should be shown. If not present, it'll be rendered for any block. If multiple blocks are selected, it'll be shown if and only if all of them are in the allowed list.\n * @param {WPBlockTypeIconRender} [props.icon]          The [Dashicon](https://developer.wordpress.org/resource/dashicons/) icon slug string, or an SVG WP element.\n * @param {string}                props.label           The menu item text.\n * @param {Function}              props.onClick         Callback function to be executed when the user click the menu item.\n * @param {boolean}               [props.small]         Whether to render the label or not.\n * @param {string}                [props.role]          The ARIA role for the menu item.\n *\n * @example\n * ```js\n * // Using ES5 syntax\n * var __ = wp.i18n.__;\n * var PluginBlockSettingsMenuItem = wp.editor.PluginBlockSettingsMenuItem;\n *\n * function doOnClick(){\n * \t// To be called when the user clicks the menu item.\n * }\n *\n * function MyPluginBlockSettingsMenuItem() {\n * \treturn React.createElement(\n * \t\tPluginBlockSettingsMenuItem,\n * \t\t{\n * \t\t\tallowedBlocks: [ 'core/paragraph' ],\n * \t\t\ticon: 'dashicon-name',\n * \t\t\tlabel: __( 'Menu item text' ),\n * \t\t\tonClick: doOnClick,\n * \t\t}\n * \t);\n * }\n * ```\n *\n * @example\n * ```jsx\n * // Using ESNext syntax\n * import { __ } from '@wordpress/i18n';\n * import { PluginBlockSettingsMenuItem } from '@wordpress/editor';\n *\n * const doOnClick = ( ) => {\n *     // To be called when the user clicks the menu item.\n * };\n *\n * const MyPluginBlockSettingsMenuItem = () => (\n *     <PluginBlockSettingsMenuItem\n * \t\tallowedBlocks={ [ 'core/paragraph' ] }\n * \t\ticon='dashicon-name'\n * \t\tlabel={ __( 'Menu item text' ) }\n * \t\tonClick={ doOnClick } />\n * );\n * ```\n *\n * @return {Component} The component to be rendered.\n */\nconst PluginBlockSettingsMenuItem = ( {\n\tallowedBlocks,\n\ticon,\n\tlabel,\n\tonClick,\n\tsmall,\n\trole,\n} ) => (\n\t<BlockSettingsMenuControls>\n\t\t{ ( { selectedBlocks, onClose } ) => {\n\t\t\tif ( ! shouldRenderItem( selectedBlocks, allowedBlocks ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn (\n\t\t\t\t<MenuItem\n\t\t\t\t\tonClick={ compose( onClick, onClose ) }\n\t\t\t\t\ticon={ icon }\n\t\t\t\t\tlabel={ small ? label : undefined }\n\t\t\t\t\trole={ role }\n\t\t\t\t>\n\t\t\t\t\t{ ! small && label }\n\t\t\t\t</MenuItem>\n\t\t\t);\n\t\t} }\n\t</BlockSettingsMenuControls>\n);\n\nexport default PluginBlockSettingsMenuItem;\n","/**\n * WordPress dependencies\n */\nimport { compose } from '@wordpress/compose';\nimport { MenuItem } from '@wordpress/components';\nimport { withPluginContext } from '@wordpress/plugins';\nimport { ActionItem } from '@wordpress/interface';\n\n/**\n * Renders a menu item in `Plugins` group in `More Menu` drop down, and can be used to as a button or link depending on the props provided.\n * The text within the component appears as the menu item label.\n *\n * @param {Object}                props                                 Component properties.\n * @param {string}                [props.href]                          When `href` is provided then the menu item is represented as an anchor rather than button. It corresponds to the `href` attribute of the anchor.\n * @param {WPBlockTypeIconRender} [props.icon=inherits from the plugin] The [Dashicon](https://developer.wordpress.org/resource/dashicons/) icon slug string, or an SVG WP element, to be rendered to the left of the menu item label.\n * @param {Function}              [props.onClick=noop]                  The callback function to be executed when the user clicks the menu item.\n * @param {...*}                  [props.other]                         Any additional props are passed through to the underlying [Button](/packages/components/src/button/README.md) component.\n *\n * @example\n * ```js\n * // Using ES5 syntax\n * var __ = wp.i18n.__;\n * var PluginMoreMenuItem = wp.editor.PluginMoreMenuItem;\n * var moreIcon = wp.element.createElement( 'svg' ); //... svg element.\n *\n * function onButtonClick() {\n * \talert( 'Button clicked.' );\n * }\n *\n * function MyButtonMoreMenuItem() {\n * \treturn wp.element.createElement(\n * \t\tPluginMoreMenuItem,\n * \t\t{\n * \t\t\ticon: moreIcon,\n * \t\t\tonClick: onButtonClick,\n * \t\t},\n * \t\t__( 'My button title' )\n * \t);\n * }\n * ```\n *\n * @example\n * ```jsx\n * // Using ESNext syntax\n * import { __ } from '@wordpress/i18n';\n * import { PluginMoreMenuItem } from '@wordpress/editor';\n * import { more } from '@wordpress/icons';\n *\n * function onButtonClick() {\n * \talert( 'Button clicked.' );\n * }\n *\n * const MyButtonMoreMenuItem = () => (\n * \t<PluginMoreMenuItem\n * \t\ticon={ more }\n * \t\tonClick={ onButtonClick }\n * \t>\n * \t\t{ __( 'My button title' ) }\n * \t</PluginMoreMenuItem>\n * );\n * ```\n *\n * @return {Component} The component to be rendered.\n */\nexport default compose(\n\twithPluginContext( ( context, ownProps ) => {\n\t\treturn {\n\t\t\tas: ownProps.as ?? MenuItem,\n\t\t\ticon: ownProps.icon || context.icon,\n\t\t\tname: 'core/plugin-more-menu',\n\t\t};\n\t} )\n)( ActionItem );\n","/**\n * WordPress dependencies\n */\nimport { usePluginContext } from '@wordpress/plugins';\nimport { createSlotFill, PanelBody } from '@wordpress/components';\n\nconst { Fill, Slot } = createSlotFill( 'PluginPostPublishPanel' );\n\n/**\n * Renders provided content to the post-publish panel in the publish flow\n * (side panel that opens after a user publishes the post).\n *\n * @param {Object}                props                                 Component properties.\n * @param {string}                [props.className]                     An optional class name added to the panel.\n * @param {string}                [props.title]                         Title displayed at the top of the panel.\n * @param {boolean}               [props.initialOpen=false]             Whether to have the panel initially opened. When no title is provided it is always opened.\n * @param {WPBlockTypeIconRender} [props.icon=inherits from the plugin] The [Dashicon](https://developer.wordpress.org/resource/dashicons/) icon slug string, or an SVG WP element, to be rendered when the sidebar is pinned to toolbar.\n * @param {Element}               props.children                        Children to be rendered\n *\n * @example\n * ```jsx\n * // Using ESNext syntax\n * import { __ } from '@wordpress/i18n';\n * import { PluginPostPublishPanel } from '@wordpress/editor';\n *\n * const MyPluginPostPublishPanel = () => (\n * \t<PluginPostPublishPanel\n * \t\tclassName=\"my-plugin-post-publish-panel\"\n * \t\ttitle={ __( 'My panel title' ) }\n * \t\tinitialOpen={ true }\n * \t>\n *         { __( 'My panel content' ) }\n * \t</PluginPostPublishPanel>\n * );\n * ```\n *\n * @return {Component} The component to be rendered.\n */\nconst PluginPostPublishPanel = ( {\n\tchildren,\n\tclassName,\n\ttitle,\n\tinitialOpen = false,\n\ticon,\n} ) => {\n\tconst { icon: pluginIcon } = usePluginContext();\n\n\treturn (\n\t\t<Fill>\n\t\t\t<PanelBody\n\t\t\t\tclassName={ className }\n\t\t\t\tinitialOpen={ initialOpen || ! title }\n\t\t\t\ttitle={ title }\n\t\t\t\ticon={ icon ?? pluginIcon }\n\t\t\t>\n\t\t\t\t{ children }\n\t\t\t</PanelBody>\n\t\t</Fill>\n\t);\n};\n\nPluginPostPublishPanel.Slot = Slot;\n\nexport default PluginPostPublishPanel;\n","/**\n * Defines as extensibility slot for the Summary panel.\n */\n\n/**\n * WordPress dependencies\n */\nimport { createSlotFill, PanelRow } from '@wordpress/components';\n\nconst { Fill, Slot } = createSlotFill( 'PluginPostStatusInfo' );\n\n/**\n * Renders a row in the Summary panel of the Document sidebar.\n * It should be noted that this is named and implemented around the function it serves\n * and not its location, which may change in future iterations.\n *\n * @param {Object}  props             Component properties.\n * @param {string}  [props.className] An optional class name added to the row.\n * @param {Element} props.children    Children to be rendered.\n *\n * @example\n * ```js\n * // Using ES5 syntax\n * var __ = wp.i18n.__;\n * var PluginPostStatusInfo = wp.editor.PluginPostStatusInfo;\n *\n * function MyPluginPostStatusInfo() {\n * \treturn React.createElement(\n * \t\tPluginPostStatusInfo,\n * \t\t{\n * \t\t\tclassName: 'my-plugin-post-status-info',\n * \t\t},\n * \t\t__( 'My post status info' )\n * \t)\n * }\n * ```\n *\n * @example\n * ```jsx\n * // Using ESNext syntax\n * import { __ } from '@wordpress/i18n';\n * import { PluginPostStatusInfo } from '@wordpress/editor';\n *\n * const MyPluginPostStatusInfo = () => (\n * \t<PluginPostStatusInfo\n * \t\tclassName=\"my-plugin-post-status-info\"\n * \t>\n * \t\t{ __( 'My post status info' ) }\n * \t</PluginPostStatusInfo>\n * );\n * ```\n *\n * @return {Component} The component to be rendered.\n */\nconst PluginPostStatusInfo = ( { children, className } ) => (\n\t<Fill>\n\t\t<PanelRow className={ className }>{ children }</PanelRow>\n\t</Fill>\n);\n\nPluginPostStatusInfo.Slot = Slot;\n\nexport default PluginPostStatusInfo;\n","/**\n * WordPress dependencies\n */\nimport { createSlotFill, PanelBody } from '@wordpress/components';\nimport { usePluginContext } from '@wordpress/plugins';\n\nconst { Fill, Slot } = createSlotFill( 'PluginPrePublishPanel' );\n\n/**\n * Renders provided content to the pre-publish side panel in the publish flow\n * (side panel that opens when a user first pushes \"Publish\" from the main editor).\n *\n * @param {Object}                props                                 Component props.\n * @param {string}                [props.className]                     An optional class name added to the panel.\n * @param {string}                [props.title]                         Title displayed at the top of the panel.\n * @param {boolean}               [props.initialOpen=false]             Whether to have the panel initially opened.\n *                                                                      When no title is provided it is always opened.\n * @param {WPBlockTypeIconRender} [props.icon=inherits from the plugin] The [Dashicon](https://developer.wordpress.org/resource/dashicons/)\n *                                                                      icon slug string, or an SVG WP element, to be rendered when\n *                                                                      the sidebar is pinned to toolbar.\n * @param {Element}               props.children                        Children to be rendered\n *\n * @example\n * ```jsx\n * // Using ESNext syntax\n * import { __ } from '@wordpress/i18n';\n * import { PluginPrePublishPanel } from '@wordpress/editor';\n *\n * const MyPluginPrePublishPanel = () => (\n * \t<PluginPrePublishPanel\n * \t\tclassName=\"my-plugin-pre-publish-panel\"\n * \t\ttitle={ __( 'My panel title' ) }\n * \t\tinitialOpen={ true }\n * \t>\n * \t    { __( 'My panel content' ) }\n * \t</PluginPrePublishPanel>\n * );\n * ```\n *\n * @return {Component} The component to be rendered.\n */\nconst PluginPrePublishPanel = ( {\n\tchildren,\n\tclassName,\n\ttitle,\n\tinitialOpen = false,\n\ticon,\n} ) => {\n\tconst { icon: pluginIcon } = usePluginContext();\n\n\treturn (\n\t\t<Fill>\n\t\t\t<PanelBody\n\t\t\t\tclassName={ className }\n\t\t\t\tinitialOpen={ initialOpen || ! title }\n\t\t\t\ttitle={ title }\n\t\t\t\ticon={ icon ?? pluginIcon }\n\t\t\t>\n\t\t\t\t{ children }\n\t\t\t</PanelBody>\n\t\t</Fill>\n\t);\n};\n\nPluginPrePublishPanel.Slot = Slot;\n\nexport default PluginPrePublishPanel;\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\nimport { store as keyboardShortcutsStore } from '@wordpress/keyboard-shortcuts';\nimport { ComplementaryArea } from '@wordpress/interface';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\n/**\n * Renders a sidebar when activated. The contents within the `PluginSidebar` will appear as content within the sidebar.\n * It also automatically renders a corresponding `PluginSidebarMenuItem` component when `isPinnable` flag is set to `true`.\n * If you wish to display the sidebar, you can with use the `PluginSidebarMoreMenuItem` component or the `wp.data.dispatch` API:\n *\n * ```js\n * wp.data.dispatch( 'core/edit-post' ).openGeneralSidebar( 'plugin-name/sidebar-name' );\n * ```\n *\n * @see PluginSidebarMoreMenuItem\n *\n * @param {Object}                props                                 Element props.\n * @param {string}                props.name                            A string identifying the sidebar. Must be unique for every sidebar registered within the scope of your plugin.\n * @param {string}                [props.className]                     An optional class name added to the sidebar body.\n * @param {string}                props.title                           Title displayed at the top of the sidebar.\n * @param {boolean}               [props.isPinnable=true]               Whether to allow to pin sidebar to the toolbar. When set to `true` it also automatically renders a corresponding menu item.\n * @param {WPBlockTypeIconRender} [props.icon=inherits from the plugin] The [Dashicon](https://developer.wordpress.org/resource/dashicons/) icon slug string, or an SVG WP element, to be rendered when the sidebar is pinned to toolbar.\n *\n * @example\n * ```js\n * // Using ES5 syntax\n * var __ = wp.i18n.__;\n * var el = React.createElement;\n * var PanelBody = wp.components.PanelBody;\n * var PluginSidebar = wp.editor.PluginSidebar;\n * var moreIcon = React.createElement( 'svg' ); //... svg element.\n *\n * function MyPluginSidebar() {\n * \treturn el(\n * \t\t\tPluginSidebar,\n * \t\t\t{\n * \t\t\t\tname: 'my-sidebar',\n * \t\t\t\ttitle: 'My sidebar title',\n * \t\t\t\ticon: moreIcon,\n * \t\t\t},\n * \t\t\tel(\n * \t\t\t\tPanelBody,\n * \t\t\t\t{},\n * \t\t\t\t__( 'My sidebar content' )\n * \t\t\t)\n * \t);\n * }\n * ```\n *\n * @example\n * ```jsx\n * // Using ESNext syntax\n * import { __ } from '@wordpress/i18n';\n * import { PanelBody } from '@wordpress/components';\n * import { PluginSidebar } from '@wordpress/editor';\n * import { more } from '@wordpress/icons';\n *\n * const MyPluginSidebar = () => (\n * \t<PluginSidebar\n * \t\tname=\"my-sidebar\"\n * \t\ttitle=\"My sidebar title\"\n * \t\ticon={ more }\n * \t>\n * \t\t<PanelBody>\n * \t\t\t{ __( 'My sidebar content' ) }\n * \t\t</PanelBody>\n * \t</PluginSidebar>\n * );\n * ```\n */\nexport default function PluginSidebar( { className, ...props } ) {\n\tconst { postTitle, shortcut } = useSelect( ( select ) => {\n\t\treturn {\n\t\t\tpostTitle: select( editorStore ).getEditedPostAttribute( 'title' ),\n\t\t\tshortcut: select(\n\t\t\t\tkeyboardShortcutsStore\n\t\t\t).getShortcutRepresentation( 'core/editor/toggle-sidebar' ),\n\t\t};\n\t}, [] );\n\treturn (\n\t\t<ComplementaryArea\n\t\t\tpanelClassName={ className }\n\t\t\tclassName=\"editor-sidebar\"\n\t\t\tsmallScreenTitle={ postTitle || __( '(no title)' ) }\n\t\t\tscope=\"core\"\n\t\t\ttoggleShortcut={ shortcut }\n\t\t\t{ ...props }\n\t\t/>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { ComplementaryAreaMoreMenuItem } from '@wordpress/interface';\n\n/**\n * Renders a menu item in `Plugins` group in `More Menu` drop down,\n * and can be used to activate the corresponding `PluginSidebar` component.\n * The text within the component appears as the menu item label.\n *\n * @param {Object}                props                                 Component props.\n * @param {string}                props.target                          A string identifying the target sidebar you wish to be activated by this menu item. Must be the same as the `name` prop you have given to that sidebar.\n * @param {WPBlockTypeIconRender} [props.icon=inherits from the plugin] The [Dashicon](https://developer.wordpress.org/resource/dashicons/) icon slug string, or an SVG WP element, to be rendered to the left of the menu item label.\n *\n * @example\n * ```js\n * // Using ES5 syntax\n * var __ = wp.i18n.__;\n * var PluginSidebarMoreMenuItem = wp.editor.PluginSidebarMoreMenuItem;\n * var moreIcon = React.createElement( 'svg' ); //... svg element.\n *\n * function MySidebarMoreMenuItem() {\n * \treturn React.createElement(\n * \t\tPluginSidebarMoreMenuItem,\n * \t\t{\n * \t\t\ttarget: 'my-sidebar',\n * \t\t\ticon: moreIcon,\n * \t\t},\n * \t\t__( 'My sidebar title' )\n * \t)\n * }\n * ```\n *\n * @example\n * ```jsx\n * // Using ESNext syntax\n * import { __ } from '@wordpress/i18n';\n * import { PluginSidebarMoreMenuItem } from '@wordpress/editor';\n * import { more } from '@wordpress/icons';\n *\n * const MySidebarMoreMenuItem = () => (\n * \t<PluginSidebarMoreMenuItem\n * \t\ttarget=\"my-sidebar\"\n * \t\ticon={ more }\n * \t>\n * \t\t{ __( 'My sidebar title' ) }\n * \t</PluginSidebarMoreMenuItem>\n * );\n * ```\n *\n * @return {Component} The component to be rendered.\n */\n\nexport default function PluginSidebarMoreMenuItem( props ) {\n\treturn (\n\t\t<ComplementaryAreaMoreMenuItem\n\t\t\t// Menu item is marked with unstable prop for backward compatibility.\n\t\t\t// @see https://github.com/WordPress/gutenberg/issues/14457\n\t\t\t__unstableExplicitMenuItem\n\t\t\tscope=\"core\"\n\t\t\t{ ...props }\n\t\t/>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useMemo, useState } from '@wordpress/element';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport { __experimentalBlockPatternsList as BlockPatternsList } from '@wordpress/block-editor';\nimport { MenuItem, Modal } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useDispatch } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { parse } from '@wordpress/blocks';\nimport { useAsyncList } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport { useAvailableTemplates, useEditedPostContext } from './hooks';\n\nexport default function SwapTemplateButton( { onClick } ) {\n\tconst [ showModal, setShowModal ] = useState( false );\n\tconst { postType, postId } = useEditedPostContext();\n\tconst availableTemplates = useAvailableTemplates( postType );\n\tconst { editEntityRecord } = useDispatch( coreStore );\n\tif ( ! availableTemplates?.length ) {\n\t\treturn null;\n\t}\n\tconst onTemplateSelect = async ( template ) => {\n\t\teditEntityRecord(\n\t\t\t'postType',\n\t\t\tpostType,\n\t\t\tpostId,\n\t\t\t{ template: template.name },\n\t\t\t{ undoIgnore: true }\n\t\t);\n\t\tsetShowModal( false ); // Close the template suggestions modal first.\n\t\tonClick();\n\t};\n\treturn (\n\t\t<>\n\t\t\t<MenuItem onClick={ () => setShowModal( true ) }>\n\t\t\t\t{ __( 'Swap template' ) }\n\t\t\t</MenuItem>\n\t\t\t{ showModal && (\n\t\t\t\t<Modal\n\t\t\t\t\ttitle={ __( 'Choose a template' ) }\n\t\t\t\t\tonRequestClose={ () => setShowModal( false ) }\n\t\t\t\t\toverlayClassName=\"editor-post-template__swap-template-modal\"\n\t\t\t\t\tisFullScreen\n\t\t\t\t>\n\t\t\t\t\t<div className=\"editor-post-template__swap-template-modal-content\">\n\t\t\t\t\t\t<TemplatesList\n\t\t\t\t\t\t\tpostType={ postType }\n\t\t\t\t\t\t\tonSelect={ onTemplateSelect }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</Modal>\n\t\t\t) }\n\t\t</>\n\t);\n}\n\nfunction TemplatesList( { postType, onSelect } ) {\n\tconst availableTemplates = useAvailableTemplates( postType );\n\tconst templatesAsPatterns = useMemo(\n\t\t() =>\n\t\t\tavailableTemplates.map( ( template ) => ( {\n\t\t\t\tname: template.slug,\n\t\t\t\tblocks: parse( template.content.raw ),\n\t\t\t\ttitle: decodeEntities( template.title.rendered ),\n\t\t\t\tid: template.id,\n\t\t\t} ) ),\n\t\t[ availableTemplates ]\n\t);\n\tconst shownTemplates = useAsyncList( templatesAsPatterns );\n\treturn (\n\t\t<BlockPatternsList\n\t\t\tlabel={ __( 'Templates' ) }\n\t\t\tblockPatterns={ templatesAsPatterns }\n\t\t\tshownPatterns={ shownTemplates }\n\t\t\tonClickPattern={ onSelect }\n\t\t/>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { MenuItem } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useDispatch } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport {\n\tuseAllowSwitchingTemplates,\n\tuseCurrentTemplateSlug,\n\tuseEditedPostContext,\n} from './hooks';\n\nexport default function ResetDefaultTemplate( { onClick } ) {\n\tconst currentTemplateSlug = useCurrentTemplateSlug();\n\tconst allowSwitchingTemplate = useAllowSwitchingTemplates();\n\tconst { postType, postId } = useEditedPostContext();\n\tconst { editEntityRecord } = useDispatch( coreStore );\n\t// The default template in a post is indicated by an empty string.\n\tif ( ! currentTemplateSlug || ! allowSwitchingTemplate ) {\n\t\treturn null;\n\t}\n\treturn (\n\t\t<MenuItem\n\t\t\tonClick={ () => {\n\t\t\t\teditEntityRecord(\n\t\t\t\t\t'postType',\n\t\t\t\t\tpostType,\n\t\t\t\t\tpostId,\n\t\t\t\t\t{ template: '' },\n\t\t\t\t\t{ undoIgnore: true }\n\t\t\t\t);\n\t\t\t\tonClick();\n\t\t\t} }\n\t\t>\n\t\t\t{ __( 'Use default template' ) }\n\t\t</MenuItem>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { MenuItem } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { useState } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport CreateNewTemplateModal from './create-new-template-modal';\nimport { useAllowSwitchingTemplates } from './hooks';\n\nexport default function CreateNewTemplate( { onClick } ) {\n\tconst { canCreateTemplates } = useSelect( ( select ) => {\n\t\tconst { canUser } = select( coreStore );\n\t\treturn {\n\t\t\tcanCreateTemplates: canUser( 'create', 'templates' ),\n\t\t};\n\t}, [] );\n\tconst [ isCreateModalOpen, setIsCreateModalOpen ] = useState( false );\n\tconst allowSwitchingTemplate = useAllowSwitchingTemplates();\n\n\t// The default template in a post is indicated by an empty string.\n\tif ( ! canCreateTemplates || ! allowSwitchingTemplate ) {\n\t\treturn null;\n\t}\n\treturn (\n\t\t<>\n\t\t\t<MenuItem\n\t\t\t\tonClick={ () => {\n\t\t\t\t\tsetIsCreateModalOpen( true );\n\t\t\t\t} }\n\t\t\t>\n\t\t\t\t{ __( 'Create new template' ) }\n\t\t\t</MenuItem>\n\n\t\t\t{ isCreateModalOpen && (\n\t\t\t\t<CreateNewTemplateModal\n\t\t\t\t\tonClose={ () => {\n\t\t\t\t\t\tsetIsCreateModalOpen( false );\n\t\t\t\t\t\tonClick();\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t) }\n\t\t</>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport { DropdownMenu, MenuGroup, MenuItem } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useEntityRecord, store as coreStore } from '@wordpress/core-data';\nimport { check } from '@wordpress/icons';\nimport { store as noticesStore } from '@wordpress/notices';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\nimport SwapTemplateButton from './swap-template-button';\nimport ResetDefaultTemplate from './reset-default-template';\nimport { unlock } from '../../lock-unlock';\nimport CreateNewTemplate from './create-new-template';\n\nconst POPOVER_PROPS = {\n\tclassName: 'editor-post-template__dropdown',\n\tplacement: 'bottom-start',\n};\n\nexport default function BlockThemeControl( { id } ) {\n\tconst {\n\t\tisTemplateHidden,\n\t\tonNavigateToEntityRecord,\n\t\tgetEditorSettings,\n\t\thasGoBack,\n\t} = useSelect( ( select ) => {\n\t\tconst { getRenderingMode, getEditorSettings: _getEditorSettings } =\n\t\t\tunlock( select( editorStore ) );\n\t\tconst editorSettings = _getEditorSettings();\n\t\treturn {\n\t\t\tisTemplateHidden: getRenderingMode() === 'post-only',\n\t\t\tonNavigateToEntityRecord: editorSettings.onNavigateToEntityRecord,\n\t\t\tgetEditorSettings: _getEditorSettings,\n\t\t\thasGoBack: editorSettings.hasOwnProperty(\n\t\t\t\t'onNavigateToPreviousEntityRecord'\n\t\t\t),\n\t\t};\n\t}, [] );\n\n\tconst { editedRecord: template, hasResolved } = useEntityRecord(\n\t\t'postType',\n\t\t'wp_template',\n\t\tid\n\t);\n\tconst { createSuccessNotice } = useDispatch( noticesStore );\n\tconst { setRenderingMode } = useDispatch( editorStore );\n\n\tconst canCreateTemplate = useSelect(\n\t\t( select ) =>\n\t\t\tselect( coreStore ).canUser( 'create', 'templates' ) ?? false\n\t);\n\n\tif ( ! hasResolved ) {\n\t\treturn null;\n\t}\n\n\t// The site editor does not have a `onNavigateToPreviousEntityRecord` setting as it uses its own routing\n\t// and assigns its own backlink to focusMode pages.\n\tconst notificationAction = hasGoBack\n\t\t? [\n\t\t\t\t{\n\t\t\t\t\tlabel: __( 'Go back' ),\n\t\t\t\t\tonClick: () =>\n\t\t\t\t\t\tgetEditorSettings().onNavigateToPreviousEntityRecord(),\n\t\t\t\t},\n\t\t  ]\n\t\t: undefined;\n\treturn (\n\t\t<DropdownMenu\n\t\t\tpopoverProps={ POPOVER_PROPS }\n\t\t\tfocusOnMount\n\t\t\ttoggleProps={ {\n\t\t\t\tsize: 'compact',\n\t\t\t\tvariant: 'tertiary',\n\t\t\t\ttooltipPosition: 'middle left',\n\t\t\t} }\n\t\t\tlabel={ __( 'Template options' ) }\n\t\t\ttext={ decodeEntities( template.title ) }\n\t\t\ticon={ null }\n\t\t>\n\t\t\t{ ( { onClose } ) => (\n\t\t\t\t<>\n\t\t\t\t\t<MenuGroup>\n\t\t\t\t\t\t{ canCreateTemplate && (\n\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\t\tonNavigateToEntityRecord( {\n\t\t\t\t\t\t\t\t\t\tpostId: template.id,\n\t\t\t\t\t\t\t\t\t\tpostType: 'wp_template',\n\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\t\tonClose();\n\t\t\t\t\t\t\t\t\tcreateSuccessNotice(\n\t\t\t\t\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t\t\t\t\t'Editing template. Changes made here affect all posts and pages that use the template.'\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t\t\t\t\t\t\t\tactions: notificationAction,\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ __( 'Edit template' ) }\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t) }\n\n\t\t\t\t\t\t<SwapTemplateButton onClick={ onClose } />\n\t\t\t\t\t\t<ResetDefaultTemplate onClick={ onClose } />\n\t\t\t\t\t\t{ canCreateTemplate && (\n\t\t\t\t\t\t\t<CreateNewTemplate onClick={ onClose } />\n\t\t\t\t\t\t) }\n\t\t\t\t\t</MenuGroup>\n\t\t\t\t\t<MenuGroup>\n\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\ticon={ ! isTemplateHidden ? check : undefined }\n\t\t\t\t\t\t\tisSelected={ ! isTemplateHidden }\n\t\t\t\t\t\t\trole=\"menuitemcheckbox\"\n\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\tsetRenderingMode(\n\t\t\t\t\t\t\t\t\tisTemplateHidden\n\t\t\t\t\t\t\t\t\t\t? 'template-locked'\n\t\t\t\t\t\t\t\t\t\t: 'post-only'\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Show template' ) }\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t</MenuGroup>\n\t\t\t\t</>\n\t\t\t) }\n\t\t</DropdownMenu>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\nimport ClassicThemeControl from './classic-theme';\nimport BlockThemeControl from './block-theme';\nimport PostPanelRow from '../post-panel-row';\n\n/**\n * Displays the template controls based on the current editor settings and user permissions.\n *\n * @return {JSX.Element|null} The rendered PostTemplatePanel component.\n */\nexport default function PostTemplatePanel() {\n\tconst { templateId, isBlockTheme } = useSelect( ( select ) => {\n\t\tconst { getCurrentTemplateId, getEditorSettings } =\n\t\t\tselect( editorStore );\n\t\treturn {\n\t\t\ttemplateId: getCurrentTemplateId(),\n\t\t\tisBlockTheme: getEditorSettings().__unstableIsBlockBasedTheme,\n\t\t};\n\t}, [] );\n\n\tconst isVisible = useSelect( ( select ) => {\n\t\tconst postTypeSlug = select( editorStore ).getCurrentPostType();\n\t\tconst postType = select( coreStore ).getPostType( postTypeSlug );\n\t\tif ( ! postType?.viewable ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst settings = select( editorStore ).getEditorSettings();\n\t\tconst hasTemplates =\n\t\t\t!! settings.availableTemplates &&\n\t\t\tObject.keys( settings.availableTemplates ).length > 0;\n\t\tif ( hasTemplates ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif ( ! settings.supportsTemplateMode ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst canCreateTemplates =\n\t\t\tselect( coreStore ).canUser( 'create', 'templates' ) ?? false;\n\t\treturn canCreateTemplates;\n\t}, [] );\n\n\tconst canViewTemplates = useSelect( ( select ) => {\n\t\treturn select( coreStore ).canUser( 'read', 'templates' ) ?? false;\n\t}, [] );\n\n\tif ( ( ! isBlockTheme || ! canViewTemplates ) && isVisible ) {\n\t\treturn (\n\t\t\t<PostPanelRow label={ __( 'Template' ) }>\n\t\t\t\t<ClassicThemeControl />\n\t\t\t</PostPanelRow>\n\t\t);\n\t}\n\n\tif ( isBlockTheme && !! templateId ) {\n\t\treturn (\n\t\t\t<PostPanelRow label={ __( 'Template' ) }>\n\t\t\t\t<BlockThemeControl id={ templateId } />\n\t\t\t</PostPanelRow>\n\t\t);\n\t}\n\treturn null;\n}\n","export const BASE_QUERY = {\n\t_fields: 'id,name',\n\tcontext: 'view', // Allows non-admins to perform requests.\n};\n\nexport const AUTHORS_QUERY = {\n\twho: 'authors',\n\tper_page: 50,\n\t...BASE_QUERY,\n};\n","/**\n * WordPress dependencies\n */\nimport { useMemo } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\nimport { AUTHORS_QUERY, BASE_QUERY } from './constants';\n\nexport function useAuthorsQuery( search ) {\n\tconst { authorId, authors, postAuthor } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getUser, getUsers } = select( coreStore );\n\t\t\tconst { getEditedPostAttribute } = select( editorStore );\n\t\t\tconst _authorId = getEditedPostAttribute( 'author' );\n\t\t\tconst query = { ...AUTHORS_QUERY };\n\n\t\t\tif ( search ) {\n\t\t\t\tquery.search = search;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tauthorId: _authorId,\n\t\t\t\tauthors: getUsers( query ),\n\t\t\t\tpostAuthor: getUser( _authorId, BASE_QUERY ),\n\t\t\t};\n\t\t},\n\t\t[ search ]\n\t);\n\n\tconst authorOptions = useMemo( () => {\n\t\tconst fetchedAuthors = ( authors ?? [] ).map( ( author ) => {\n\t\t\treturn {\n\t\t\t\tvalue: author.id,\n\t\t\t\tlabel: decodeEntities( author.name ),\n\t\t\t};\n\t\t} );\n\n\t\t// Ensure the current author is included in the dropdown list.\n\t\tconst foundAuthor = fetchedAuthors.findIndex(\n\t\t\t( { value } ) => postAuthor?.id === value\n\t\t);\n\n\t\tif ( foundAuthor < 0 && postAuthor ) {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tvalue: postAuthor.id,\n\t\t\t\t\tlabel: decodeEntities( postAuthor.name ),\n\t\t\t\t},\n\t\t\t\t...fetchedAuthors,\n\t\t\t];\n\t\t}\n\n\t\treturn fetchedAuthors;\n\t}, [ authors, postAuthor ] );\n\n\treturn { authorId, authorOptions, postAuthor };\n}\n","/**\n * WordPress dependencies\n */\nimport { debounce } from '@wordpress/compose';\nimport { useState } from '@wordpress/element';\nimport { useDispatch } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\nimport { ComboboxControl } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\nimport { useAuthorsQuery } from './hook';\n\nexport default function PostAuthorCombobox() {\n\tconst [ fieldValue, setFieldValue ] = useState();\n\n\tconst { editPost } = useDispatch( editorStore );\n\tconst { authorId, authorOptions } = useAuthorsQuery( fieldValue );\n\n\t/**\n\t * Handle author selection.\n\t *\n\t * @param {number} postAuthorId The selected Author.\n\t */\n\tconst handleSelect = ( postAuthorId ) => {\n\t\tif ( ! postAuthorId ) {\n\t\t\treturn;\n\t\t}\n\t\teditPost( { author: postAuthorId } );\n\t};\n\n\t/**\n\t * Handle user input.\n\t *\n\t * @param {string} inputValue The current value of the input field.\n\t */\n\tconst handleKeydown = ( inputValue ) => {\n\t\tsetFieldValue( inputValue );\n\t};\n\n\treturn (\n\t\t<ComboboxControl\n\t\t\t__nextHasNoMarginBottom\n\t\t\t__next40pxDefaultSize\n\t\t\tlabel={ __( 'Author' ) }\n\t\t\toptions={ authorOptions }\n\t\t\tvalue={ authorId }\n\t\t\tonFilterValueChange={ debounce( handleKeydown, 300 ) }\n\t\t\tonChange={ handleSelect }\n\t\t\tallowReset={ false }\n\t\t\thideLabelFromVision\n\t\t/>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useDispatch } from '@wordpress/data';\nimport { SelectControl } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\nimport { useAuthorsQuery } from './hook';\n\nexport default function PostAuthorSelect() {\n\tconst { editPost } = useDispatch( editorStore );\n\tconst { authorId, authorOptions } = useAuthorsQuery();\n\n\tconst setAuthorId = ( value ) => {\n\t\tconst author = Number( value );\n\t\teditPost( { author } );\n\t};\n\n\treturn (\n\t\t<SelectControl\n\t\t\t__next40pxDefaultSize\n\t\t\t__nextHasNoMarginBottom\n\t\t\tclassName=\"post-author-selector\"\n\t\t\tlabel={ __( 'Author' ) }\n\t\t\toptions={ authorOptions }\n\t\t\tonChange={ setAuthorId }\n\t\t\tvalue={ authorId }\n\t\t\thideLabelFromVision\n\t\t/>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport PostAuthorCombobox from './combobox';\nimport PostAuthorSelect from './select';\nimport { AUTHORS_QUERY } from './constants';\n\nconst minimumUsersForCombobox = 25;\n\n/**\n * Renders the component for selecting the post author.\n *\n * @return {Component} The component to be rendered.\n */\nfunction PostAuthor() {\n\tconst showCombobox = useSelect( ( select ) => {\n\t\tconst authors = select( coreStore ).getUsers( AUTHORS_QUERY );\n\n\t\treturn authors?.length >= minimumUsersForCombobox;\n\t}, [] );\n\n\tif ( showCombobox ) {\n\t\treturn <PostAuthorCombobox />;\n\t}\n\treturn <PostAuthorSelect />;\n}\n\nexport default PostAuthor;\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport PostTypeSupportCheck from '../post-type-support-check';\nimport { store as editorStore } from '../../store';\nimport { AUTHORS_QUERY } from './constants';\n\n/**\n * Wrapper component that renders its children only if the post type supports the author.\n *\n * @param {Object}  props          The component props.\n * @param {Element} props.children Children to be rendered.\n *\n * @return {Component|null} The component to be rendered. Return `null` if the post type doesn't\n * supports the author or if there are no authors available.\n */\nexport default function PostAuthorCheck( { children } ) {\n\tconst { hasAssignAuthorAction, hasAuthors } = useSelect( ( select ) => {\n\t\tconst post = select( editorStore ).getCurrentPost();\n\t\tconst authors = select( coreStore ).getUsers( AUTHORS_QUERY );\n\t\treturn {\n\t\t\thasAssignAuthorAction:\n\t\t\t\tpost._links?.[ 'wp:action-assign-author' ] ?? false,\n\t\t\thasAuthors: authors?.length >= 1,\n\t\t};\n\t}, [] );\n\n\tif ( ! hasAssignAuthorAction || ! hasAuthors ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<PostTypeSupportCheck supportKeys=\"author\">\n\t\t\t{ children }\n\t\t</PostTypeSupportCheck>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport { Button, Dropdown } from '@wordpress/components';\nimport { useState, useMemo } from '@wordpress/element';\nimport { __experimentalInspectorPopoverHeader as InspectorPopoverHeader } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport PostAuthorCheck from './check';\nimport PostAuthorForm from './index';\nimport PostPanelRow from '../post-panel-row';\nimport { useAuthorsQuery } from './hook';\n\nfunction PostAuthorToggle( { isOpen, onClick } ) {\n\tconst { postAuthor } = useAuthorsQuery();\n\tconst authorName = postAuthor?.name || '';\n\treturn (\n\t\t<Button\n\t\t\tsize=\"compact\"\n\t\t\tclassName=\"editor-post-author__panel-toggle\"\n\t\t\tvariant=\"tertiary\"\n\t\t\taria-expanded={ isOpen }\n\t\t\t// translators: %s: Current post link.\n\t\t\taria-label={ sprintf( __( 'Change author: %s' ), authorName ) }\n\t\t\tonClick={ onClick }\n\t\t>\n\t\t\t{ authorName }\n\t\t</Button>\n\t);\n}\n\n/**\n * Renders the Post Author Panel component.\n *\n * @return {Component} The component to be rendered.\n */\nexport function PostAuthor() {\n\t// Use internal state instead of a ref to make sure that the component\n\t// re-renders when the popover's anchor updates.\n\tconst [ popoverAnchor, setPopoverAnchor ] = useState( null );\n\t// Memoize popoverProps to avoid returning a new object every time.\n\tconst popoverProps = useMemo(\n\t\t() => ( {\n\t\t\t// Anchor the popover to the middle of the entire row so that it doesn't\n\t\t\t// move around when the label changes.\n\t\t\tanchor: popoverAnchor,\n\t\t\tplacement: 'left-start',\n\t\t\toffset: 36,\n\t\t\tshift: true,\n\t\t} ),\n\t\t[ popoverAnchor ]\n\t);\n\treturn (\n\t\t<PostAuthorCheck>\n\t\t\t<PostPanelRow label={ __( 'Author' ) } ref={ setPopoverAnchor }>\n\t\t\t\t<Dropdown\n\t\t\t\t\tpopoverProps={ popoverProps }\n\t\t\t\t\tcontentClassName=\"editor-post-author__panel-dialog\"\n\t\t\t\t\tfocusOnMount\n\t\t\t\t\trenderToggle={ ( { isOpen, onToggle } ) => (\n\t\t\t\t\t\t<PostAuthorToggle\n\t\t\t\t\t\t\tisOpen={ isOpen }\n\t\t\t\t\t\t\tonClick={ onToggle }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\trenderContent={ ( { onClose } ) => (\n\t\t\t\t\t\t<div className=\"editor-post-author\">\n\t\t\t\t\t\t\t<InspectorPopoverHeader\n\t\t\t\t\t\t\t\ttitle={ __( 'Author' ) }\n\t\t\t\t\t\t\t\tonClose={ onClose }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<PostAuthorForm onClose={ onClose } />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) }\n\t\t\t\t/>\n\t\t\t</PostPanelRow>\n\t\t</PostAuthorCheck>\n\t);\n}\n\nexport default PostAuthor;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n\tRadioControl,\n\t__experimentalText as Text,\n\t__experimentalVStack as VStack,\n} from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nconst COMMENT_OPTIONS = [\n\t{\n\t\tlabel: (\n\t\t\t<>\n\t\t\t\t{ __( 'Open' ) }\n\t\t\t\t<Text variant=\"muted\" size={ 12 }>\n\t\t\t\t\t{ __( 'Visitors can add new comments and replies.' ) }\n\t\t\t\t</Text>\n\t\t\t</>\n\t\t),\n\t\tvalue: 'open',\n\t},\n\t{\n\t\tlabel: (\n\t\t\t<>\n\t\t\t\t{ __( 'Closed' ) }\n\t\t\t\t<Text variant=\"muted\" size={ 12 }>\n\t\t\t\t\t{ __( 'Visitors cannot add new comments or replies.' ) }\n\t\t\t\t</Text>\n\t\t\t\t<Text variant=\"muted\" size={ 12 }>\n\t\t\t\t\t{ __( 'Existing comments remain visible.' ) }\n\t\t\t\t</Text>\n\t\t\t</>\n\t\t),\n\t\tvalue: 'closed',\n\t},\n];\n\nfunction PostComments() {\n\tconst commentStatus = useSelect(\n\t\t( select ) =>\n\t\t\tselect( editorStore ).getEditedPostAttribute( 'comment_status' ) ??\n\t\t\t'open',\n\t\t[]\n\t);\n\tconst { editPost } = useDispatch( editorStore );\n\tconst handleStatus = ( newCommentStatus ) =>\n\t\teditPost( {\n\t\t\tcomment_status: newCommentStatus,\n\t\t} );\n\n\treturn (\n\t\t<form>\n\t\t\t<VStack spacing={ 4 }>\n\t\t\t\t<RadioControl\n\t\t\t\t\tclassName=\"editor-change-status__options\"\n\t\t\t\t\thideLabelFromVision\n\t\t\t\t\tlabel={ __( 'Comment status' ) }\n\t\t\t\t\toptions={ COMMENT_OPTIONS }\n\t\t\t\t\tonChange={ handleStatus }\n\t\t\t\t\tselected={ commentStatus }\n\t\t\t\t/>\n\t\t\t</VStack>\n\t\t</form>\n\t);\n}\n\n/**\n * A form for managing comment status.\n *\n * @return {JSX.Element} The rendered PostComments component.\n */\nexport default PostComments;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { CheckboxControl, ExternalLink } from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nfunction PostPingbacks() {\n\tconst pingStatus = useSelect(\n\t\t( select ) =>\n\t\t\tselect( editorStore ).getEditedPostAttribute( 'ping_status' ) ??\n\t\t\t'open',\n\t\t[]\n\t);\n\tconst { editPost } = useDispatch( editorStore );\n\tconst onTogglePingback = () =>\n\t\teditPost( {\n\t\t\tping_status: pingStatus === 'open' ? 'closed' : 'open',\n\t\t} );\n\n\treturn (\n\t\t<CheckboxControl\n\t\t\t__nextHasNoMarginBottom\n\t\t\tlabel={ __( 'Enable pingbacks & trackbacks' ) }\n\t\t\tchecked={ pingStatus === 'open' }\n\t\t\tonChange={ onTogglePingback }\n\t\t\thelp={\n\t\t\t\t<ExternalLink\n\t\t\t\t\thref={ __(\n\t\t\t\t\t\t'https://wordpress.org/documentation/article/trackbacks-and-pingbacks/'\n\t\t\t\t\t) }\n\t\t\t\t>\n\t\t\t\t\t{ __( 'Learn more about pingbacks & trackbacks' ) }\n\t\t\t\t</ExternalLink>\n\t\t\t}\n\t\t/>\n\t);\n}\n\n/**\n * Renders a control for enabling or disabling pingbacks and trackbacks\n * in a WordPress post.\n *\n * @module PostPingbacks\n */\nexport default PostPingbacks;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n\tDropdown,\n\tButton,\n\t__experimentalVStack as VStack,\n} from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\nimport { useState, useMemo } from '@wordpress/element';\nimport { __experimentalInspectorPopoverHeader as InspectorPopoverHeader } from '@wordpress/block-editor';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\nimport PostTypeSupportCheck from '../post-type-support-check';\nimport PostComments from '../post-comments';\nimport PostPingbacks from '../post-pingbacks';\nimport PostPanelRow from '../post-panel-row';\n\nconst PANEL_NAME = 'discussion-panel';\n\nfunction ModalContents( { onClose } ) {\n\treturn (\n\t\t<div className=\"editor-post-discussion\">\n\t\t\t<InspectorPopoverHeader\n\t\t\t\ttitle={ __( 'Discussion' ) }\n\t\t\t\tonClose={ onClose }\n\t\t\t/>\n\t\t\t<VStack spacing={ 4 }>\n\t\t\t\t<PostTypeSupportCheck supportKeys=\"comments\">\n\t\t\t\t\t<PostComments />\n\t\t\t\t</PostTypeSupportCheck>\n\t\t\t\t<PostTypeSupportCheck supportKeys=\"trackbacks\">\n\t\t\t\t\t<PostPingbacks />\n\t\t\t\t</PostTypeSupportCheck>\n\t\t\t</VStack>\n\t\t</div>\n\t);\n}\n\nfunction PostDiscussionToggle( { isOpen, onClick } ) {\n\tconst {\n\t\tcommentStatus,\n\t\tpingStatus,\n\t\tcommentsSupported,\n\t\ttrackbacksSupported,\n\t} = useSelect( ( select ) => {\n\t\tconst { getEditedPostAttribute } = select( editorStore );\n\t\tconst { getPostType } = select( coreStore );\n\t\tconst postType = getPostType( getEditedPostAttribute( 'type' ) );\n\t\treturn {\n\t\t\tcommentStatus: getEditedPostAttribute( 'comment_status' ) ?? 'open',\n\t\t\tpingStatus: getEditedPostAttribute( 'ping_status' ) ?? 'open',\n\t\t\tcommentsSupported: !! postType.supports.comments,\n\t\t\ttrackbacksSupported: !! postType.supports.trackbacks,\n\t\t};\n\t}, [] );\n\tlet label;\n\tif ( commentStatus === 'open' ) {\n\t\tif ( pingStatus === 'open' ) {\n\t\t\tlabel = __( 'Open' );\n\t\t} else {\n\t\t\tlabel = trackbacksSupported ? __( 'Comments only' ) : __( 'Open' );\n\t\t}\n\t} else if ( pingStatus === 'open' ) {\n\t\tlabel = commentsSupported ? __( 'Pings only' ) : __( 'Pings enabled' );\n\t} else {\n\t\tlabel = __( 'Closed' );\n\t}\n\treturn (\n\t\t<Button\n\t\t\tsize=\"compact\"\n\t\t\tclassName=\"editor-post-discussion__panel-toggle\"\n\t\t\tvariant=\"tertiary\"\n\t\t\taria-label={ __( 'Change discussion options' ) }\n\t\t\taria-expanded={ isOpen }\n\t\t\tonClick={ onClick }\n\t\t>\n\t\t\t{ label }\n\t\t</Button>\n\t);\n}\n\n/**\n * This component allows to update comment and pingback\n * settings for the current post. Internally there are\n * checks whether the current post has support for the\n * above and if the `discussion-panel` panel is enabled.\n *\n * @return {JSX.Element|null} The rendered PostDiscussionPanel component.\n */\nexport default function PostDiscussionPanel() {\n\tconst { isEnabled } = useSelect( ( select ) => {\n\t\tconst { isEditorPanelEnabled } = select( editorStore );\n\t\treturn {\n\t\t\tisEnabled: isEditorPanelEnabled( PANEL_NAME ),\n\t\t};\n\t}, [] );\n\n\t// Use internal state instead of a ref to make sure that the component\n\t// re-renders when the popover's anchor updates.\n\tconst [ popoverAnchor, setPopoverAnchor ] = useState( null );\n\t// Memoize popoverProps to avoid returning a new object every time.\n\tconst popoverProps = useMemo(\n\t\t() => ( {\n\t\t\t// Anchor the popover to the middle of the entire row so that it doesn't\n\t\t\t// move around when the label changes.\n\t\t\tanchor: popoverAnchor,\n\t\t\tplacement: 'left-start',\n\t\t\toffset: 36,\n\t\t\tshift: true,\n\t\t} ),\n\t\t[ popoverAnchor ]\n\t);\n\n\tif ( ! isEnabled ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<PostTypeSupportCheck supportKeys={ [ 'comments', 'trackbacks' ] }>\n\t\t\t<PostPanelRow label={ __( 'Discussion' ) } ref={ setPopoverAnchor }>\n\t\t\t\t<Dropdown\n\t\t\t\t\tpopoverProps={ popoverProps }\n\t\t\t\t\tclassName=\"editor-post-discussion__panel-dropdown\"\n\t\t\t\t\tcontentClassName=\"editor-post-discussion__panel-dialog\"\n\t\t\t\t\tfocusOnMount\n\t\t\t\t\trenderToggle={ ( { isOpen, onToggle } ) => (\n\t\t\t\t\t\t<PostDiscussionToggle\n\t\t\t\t\t\t\tisOpen={ isOpen }\n\t\t\t\t\t\t\tonClick={ onToggle }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\trenderContent={ ( { onClose } ) => (\n\t\t\t\t\t\t<ModalContents onClose={ onClose } />\n\t\t\t\t\t) }\n\t\t\t\t/>\n\t\t\t</PostPanelRow>\n\t\t</PostTypeSupportCheck>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { ExternalLink, TextareaControl } from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { useState } from '@wordpress/element';\nimport { decodeEntities } from '@wordpress/html-entities';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\n/**\n * Renders an editable textarea for the post excerpt.\n * Templates, template parts and patterns use the `excerpt` field as a description semantically.\n * Additionally templates and template parts override the `excerpt` field as `description` in\n * REST API. So this component handles proper labeling and updating the edited entity.\n *\n * @param {Object}  props                             - Component props.\n * @param {boolean} [props.hideLabelFromVision=false] - Whether to visually hide the textarea's label.\n * @param {boolean} [props.updateOnBlur=false]        - Whether to update the post on change or use local state and update on blur.\n */\nexport default function PostExcerpt( {\n\thideLabelFromVision = false,\n\tupdateOnBlur = false,\n} ) {\n\tconst { excerpt, shouldUseDescriptionLabel, usedAttribute } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getCurrentPostType, getEditedPostAttribute } =\n\t\t\t\tselect( editorStore );\n\t\t\tconst postType = getCurrentPostType();\n\t\t\t// This special case is unfortunate, but the REST API of wp_template and wp_template_part\n\t\t\t// support the excerpt field throught the \"description\" field rather than \"excerpt\".\n\t\t\tconst _usedAttribute = [\n\t\t\t\t'wp_template',\n\t\t\t\t'wp_template_part',\n\t\t\t].includes( postType )\n\t\t\t\t? 'description'\n\t\t\t\t: 'excerpt';\n\t\t\treturn {\n\t\t\t\texcerpt: getEditedPostAttribute( _usedAttribute ),\n\t\t\t\t// There are special cases where we want to label the excerpt as a description.\n\t\t\t\tshouldUseDescriptionLabel: [\n\t\t\t\t\t'wp_template',\n\t\t\t\t\t'wp_template_part',\n\t\t\t\t\t'wp_block',\n\t\t\t\t].includes( postType ),\n\t\t\t\tusedAttribute: _usedAttribute,\n\t\t\t};\n\t\t},\n\t\t[]\n\t);\n\tconst { editPost } = useDispatch( editorStore );\n\tconst [ localExcerpt, setLocalExcerpt ] = useState(\n\t\tdecodeEntities( excerpt )\n\t);\n\tconst updatePost = ( value ) => {\n\t\teditPost( { [ usedAttribute ]: value } );\n\t};\n\tconst label = shouldUseDescriptionLabel\n\t\t? __( 'Write a description (optional)' )\n\t\t: __( 'Write an excerpt (optional)' );\n\n\treturn (\n\t\t<div className=\"editor-post-excerpt\">\n\t\t\t<TextareaControl\n\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\tlabel={ label }\n\t\t\t\thideLabelFromVision={ hideLabelFromVision }\n\t\t\t\tclassName=\"editor-post-excerpt__textarea\"\n\t\t\t\tonChange={ updateOnBlur ? setLocalExcerpt : updatePost }\n\t\t\t\tonBlur={\n\t\t\t\t\tupdateOnBlur ? () => updatePost( localExcerpt ) : undefined\n\t\t\t\t}\n\t\t\t\tvalue={ updateOnBlur ? localExcerpt : excerpt }\n\t\t\t\thelp={\n\t\t\t\t\t! shouldUseDescriptionLabel ? (\n\t\t\t\t\t\t<ExternalLink\n\t\t\t\t\t\t\thref={ __(\n\t\t\t\t\t\t\t\t'https://wordpress.org/documentation/article/page-post-settings-sidebar/#excerpt'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Learn more about manual excerpts' ) }\n\t\t\t\t\t\t</ExternalLink>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t__( 'Write a description' )\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n","/**\n * Internal dependencies\n */\nimport PostTypeSupportCheck from '../post-type-support-check';\n\n/**\n * Component for checking if the post type supports the excerpt field.\n *\n * @param {Object}  props          Props.\n * @param {Element} props.children Children to be rendered.\n *\n * @return {Component} The component to be rendered.\n */\nfunction PostExcerptCheck( { children } ) {\n\treturn (\n\t\t<PostTypeSupportCheck supportKeys=\"excerpt\">\n\t\t\t{ children }\n\t\t</PostTypeSupportCheck>\n\t);\n}\n\nexport default PostExcerptCheck;\n","/**\n * Defines as extensibility slot for the Excerpt panel.\n */\n\n/**\n * WordPress dependencies\n */\nimport { createSlotFill, PanelRow } from '@wordpress/components';\n\nconst { Fill, Slot } = createSlotFill( 'PluginPostExcerpt' );\n\n/**\n * Renders a post excerpt panel in the post sidebar.\n *\n * @param {Object}  props             Component properties.\n * @param {string}  [props.className] An optional class name added to the row.\n * @param {Element} props.children    Children to be rendered.\n *\n * @example\n * ```js\n * // Using ES5 syntax\n * var __ = wp.i18n.__;\n * var PluginPostExcerpt = wp.editPost.__experimentalPluginPostExcerpt;\n *\n * function MyPluginPostExcerpt() {\n * \treturn React.createElement(\n * \t\tPluginPostExcerpt,\n * \t\t{\n * \t\t\tclassName: 'my-plugin-post-excerpt',\n * \t\t},\n * \t\t__( 'Post excerpt custom content' )\n * \t)\n * }\n * ```\n *\n * @example\n * ```jsx\n * // Using ESNext syntax\n * import { __ } from '@wordpress/i18n';\n * import { __experimentalPluginPostExcerpt as PluginPostExcerpt } from '@wordpress/edit-post';\n *\n * const MyPluginPostExcerpt = () => (\n * \t<PluginPostExcerpt className=\"my-plugin-post-excerpt\">\n * \t\t{ __( 'Post excerpt custom content' ) }\n * \t</PluginPostExcerpt>\n * );\n * ```\n *\n * @return {Component} The component to be rendered.\n */\nconst PluginPostExcerpt = ( { children, className } ) => {\n\treturn (\n\t\t<Fill>\n\t\t\t<PanelRow className={ className }>{ children }</PanelRow>\n\t\t</Fill>\n\t);\n};\n\nPluginPostExcerpt.Slot = Slot;\n\nexport default PluginPostExcerpt;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n\tPanelBody,\n\t__experimentalText as Text,\n\tDropdown,\n\tButton,\n\t__experimentalVStack as VStack,\n} from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { useMemo, useState } from '@wordpress/element';\nimport { __experimentalInspectorPopoverHeader as InspectorPopoverHeader } from '@wordpress/block-editor';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { decodeEntities } from '@wordpress/html-entities';\n\n/**\n * Internal dependencies\n */\nimport PostExcerptForm from './index';\nimport PostExcerptCheck from './check';\nimport PluginPostExcerpt from './plugin';\nimport { TEMPLATE_ORIGINS } from '../../store/constants';\nimport { store as editorStore } from '../../store';\n\n/**\n * Module Constants\n */\nconst PANEL_NAME = 'post-excerpt';\n\nfunction ExcerptPanel() {\n\tconst { isOpened, isEnabled, postType } = useSelect( ( select ) => {\n\t\tconst {\n\t\t\tisEditorPanelOpened,\n\t\t\tisEditorPanelEnabled,\n\t\t\tgetCurrentPostType,\n\t\t} = select( editorStore );\n\n\t\treturn {\n\t\t\tisOpened: isEditorPanelOpened( PANEL_NAME ),\n\t\t\tisEnabled: isEditorPanelEnabled( PANEL_NAME ),\n\t\t\tpostType: getCurrentPostType(),\n\t\t};\n\t}, [] );\n\n\tconst { toggleEditorPanelOpened } = useDispatch( editorStore );\n\tconst toggleExcerptPanel = () => toggleEditorPanelOpened( PANEL_NAME );\n\n\tif ( ! isEnabled ) {\n\t\treturn null;\n\t}\n\n\t// There are special cases where we want to label the excerpt as a description.\n\tconst shouldUseDescriptionLabel = [\n\t\t'wp_template',\n\t\t'wp_template_part',\n\t\t'wp_block',\n\t].includes( postType );\n\n\treturn (\n\t\t<PanelBody\n\t\t\ttitle={\n\t\t\t\tshouldUseDescriptionLabel\n\t\t\t\t\t? __( 'Description' )\n\t\t\t\t\t: __( 'Excerpt' )\n\t\t\t}\n\t\t\topened={ isOpened }\n\t\t\tonToggle={ toggleExcerptPanel }\n\t\t>\n\t\t\t<PluginPostExcerpt.Slot>\n\t\t\t\t{ ( fills ) => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<PostExcerptForm />\n\t\t\t\t\t\t{ fills }\n\t\t\t\t\t</>\n\t\t\t\t) }\n\t\t\t</PluginPostExcerpt.Slot>\n\t\t</PanelBody>\n\t);\n}\n\n/**\n * Is rendered if the post type supports excerpts and allows editing the excerpt.\n *\n * @return {JSX.Element} The rendered PostExcerptPanel component.\n */\nexport default function PostExcerptPanel() {\n\treturn (\n\t\t<PostExcerptCheck>\n\t\t\t<ExcerptPanel />\n\t\t</PostExcerptCheck>\n\t);\n}\n\nexport function PrivatePostExcerptPanel() {\n\treturn (\n\t\t<PostExcerptCheck>\n\t\t\t<PrivateExcerpt />\n\t\t</PostExcerptCheck>\n\t);\n}\n\nfunction PrivateExcerpt() {\n\tconst { shouldRender, excerpt, shouldBeUsedAsDescription, allowEditing } =\n\t\tuseSelect( ( select ) => {\n\t\t\tconst {\n\t\t\t\tgetCurrentPostType,\n\t\t\t\tgetCurrentPostId,\n\t\t\t\tgetEditedPostAttribute,\n\t\t\t\tisEditorPanelEnabled,\n\t\t\t} = select( editorStore );\n\t\t\tconst postType = getCurrentPostType();\n\t\t\tconst isTemplateOrTemplatePart = [\n\t\t\t\t'wp_template',\n\t\t\t\t'wp_template_part',\n\t\t\t].includes( postType );\n\t\t\tconst isPattern = postType === 'wp_block';\n\t\t\t// These post types use the `excerpt` field as a description semantically, so we need to\n\t\t\t// handle proper labeling and some flows where we should always render them as text.\n\t\t\tconst _shouldBeUsedAsDescription =\n\t\t\t\tisTemplateOrTemplatePart || isPattern;\n\t\t\tconst _usedAttribute = isTemplateOrTemplatePart\n\t\t\t\t? 'description'\n\t\t\t\t: 'excerpt';\n\t\t\t// We need to fetch the entity in this case to check if we'll allow editing.\n\t\t\tconst template =\n\t\t\t\tisTemplateOrTemplatePart &&\n\t\t\t\tselect( coreStore ).getEntityRecord(\n\t\t\t\t\t'postType',\n\t\t\t\t\tpostType,\n\t\t\t\t\tgetCurrentPostId()\n\t\t\t\t);\n\t\t\t// For post types that use excerpt as description, we do not abide\n\t\t\t// by the `isEnabled` panel flag in order to render them as text.\n\t\t\tconst _shouldRender =\n\t\t\t\tisEditorPanelEnabled( PANEL_NAME ) ||\n\t\t\t\t_shouldBeUsedAsDescription;\n\t\t\treturn {\n\t\t\t\texcerpt: getEditedPostAttribute( _usedAttribute ),\n\t\t\t\tshouldRender: _shouldRender,\n\t\t\t\tshouldBeUsedAsDescription: _shouldBeUsedAsDescription,\n\t\t\t\t// If we should render, allow editing for all post types that are not used as description.\n\t\t\t\t// For the rest allow editing only for user generated entities.\n\t\t\t\tallowEditing:\n\t\t\t\t\t_shouldRender &&\n\t\t\t\t\t( ! _shouldBeUsedAsDescription ||\n\t\t\t\t\t\tisPattern ||\n\t\t\t\t\t\t( template &&\n\t\t\t\t\t\t\ttemplate.source === TEMPLATE_ORIGINS.custom &&\n\t\t\t\t\t\t\t! template.has_theme_file ) ),\n\t\t\t};\n\t\t}, [] );\n\tconst [ popoverAnchor, setPopoverAnchor ] = useState( null );\n\tconst label = shouldBeUsedAsDescription\n\t\t? __( 'Description' )\n\t\t: __( 'Excerpt' );\n\t// Memoize popoverProps to avoid returning a new object every time.\n\tconst popoverProps = useMemo(\n\t\t() => ( {\n\t\t\t// Anchor the popover to the middle of the entire row so that it doesn't\n\t\t\t// move around when the label changes.\n\t\t\tanchor: popoverAnchor,\n\t\t\t'aria-label': label,\n\t\t\theaderTitle: label,\n\t\t\tplacement: 'left-start',\n\t\t\toffset: 36,\n\t\t\tshift: true,\n\t\t} ),\n\t\t[ popoverAnchor, label ]\n\t);\n\tif ( ! shouldRender ) {\n\t\treturn false;\n\t}\n\tconst excerptText = !! excerpt && (\n\t\t<Text align=\"left\" numberOfLines={ 4 } truncate>\n\t\t\t{ decodeEntities( excerpt ) }\n\t\t</Text>\n\t);\n\tif ( ! allowEditing ) {\n\t\treturn excerptText;\n\t}\n\tconst excerptPlaceholder = shouldBeUsedAsDescription\n\t\t? __( 'Add a description…' )\n\t\t: __( 'Add an excerpt…' );\n\tconst triggerEditLabel = shouldBeUsedAsDescription\n\t\t? __( 'Edit description' )\n\t\t: __( 'Edit excerpt' );\n\treturn (\n\t\t<VStack>\n\t\t\t{ excerptText }\n\t\t\t<Dropdown\n\t\t\t\tclassName=\"editor-post-excerpt__dropdown\"\n\t\t\t\tcontentClassName=\"editor-post-excerpt__dropdown__content\"\n\t\t\t\tpopoverProps={ popoverProps }\n\t\t\t\tfocusOnMount\n\t\t\t\tref={ setPopoverAnchor }\n\t\t\t\trenderToggle={ ( { onToggle } ) => (\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"editor-post-excerpt__dropdown__trigger\"\n\t\t\t\t\t\tonClick={ onToggle }\n\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{ excerptText ? triggerEditLabel : excerptPlaceholder }\n\t\t\t\t\t</Button>\n\t\t\t\t) }\n\t\t\t\trenderContent={ ( { onClose } ) => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<InspectorPopoverHeader\n\t\t\t\t\t\t\ttitle={ label }\n\t\t\t\t\t\t\tonClose={ onClose }\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<VStack spacing={ 4 }>\n\t\t\t\t\t\t\t<PluginPostExcerpt.Slot>\n\t\t\t\t\t\t\t\t{ ( fills ) => (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<PostExcerptForm\n\t\t\t\t\t\t\t\t\t\t\thideLabelFromVision\n\t\t\t\t\t\t\t\t\t\t\tupdateOnBlur\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t{ fills }\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</PluginPostExcerpt.Slot>\n\t\t\t\t\t\t</VStack>\n\t\t\t\t\t</>\n\t\t\t\t) }\n\t\t\t/>\n\t\t</VStack>\n\t);\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blob\"];","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\n/**\n * Checks if the current theme supports specific features and renders the children if supported.\n *\n * @param {Object}          props             The component props.\n * @param {Element}         props.children    The children to render if the theme supports the specified features.\n * @param {string|string[]} props.supportKeys The key(s) of the theme support(s) to check.\n *\n * @return {JSX.Element|null} The rendered children if the theme supports the specified features, otherwise null.\n */\nexport default function ThemeSupportCheck( { children, supportKeys } ) {\n\tconst { postType, themeSupports } = useSelect( ( select ) => {\n\t\treturn {\n\t\t\tpostType: select( editorStore ).getEditedPostAttribute( 'type' ),\n\t\t\tthemeSupports: select( coreStore ).getThemeSupports(),\n\t\t};\n\t}, [] );\n\n\tconst isSupported = (\n\t\tArray.isArray( supportKeys ) ? supportKeys : [ supportKeys ]\n\t).some( ( key ) => {\n\t\tconst supported = themeSupports?.[ key ] ?? false;\n\t\t// 'post-thumbnails' can be boolean or an array of post types.\n\t\t// In the latter case, we need to verify `postType` exists\n\t\t// within `supported`. If `postType` isn't passed, then the check\n\t\t// should fail.\n\t\tif ( 'post-thumbnails' === key && Array.isArray( supported ) ) {\n\t\t\treturn supported.includes( postType );\n\t\t}\n\t\treturn supported;\n\t} );\n\n\tif ( ! isSupported ) {\n\t\treturn null;\n\t}\n\n\treturn children;\n}\n","/**\n * Internal dependencies\n */\nimport PostTypeSupportCheck from '../post-type-support-check';\nimport ThemeSupportCheck from '../theme-support-check';\n\n/**\n * Wrapper component that renders its children only if the post type supports a featured image\n * and the theme supports post thumbnails.\n *\n * @param {Object}  props          Props.\n * @param {Element} props.children Children to be rendered.\n *\n * @return {Component} The component to be rendered.\n */\nfunction PostFeaturedImageCheck( { children } ) {\n\treturn (\n\t\t<ThemeSupportCheck supportKeys=\"post-thumbnails\">\n\t\t\t<PostTypeSupportCheck supportKeys=\"thumbnail\">\n\t\t\t\t{ children }\n\t\t\t</PostTypeSupportCheck>\n\t\t</ThemeSupportCheck>\n\t);\n}\n\nexport default PostFeaturedImageCheck;\n","/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport { applyFilters } from '@wordpress/hooks';\nimport {\n\tDropZone,\n\tButton,\n\tSpinner,\n\twithNotices,\n\twithFilters,\n\t__experimentalHStack as HStack,\n} from '@wordpress/components';\nimport { isBlobURL } from '@wordpress/blob';\nimport { useState, useRef } from '@wordpress/element';\nimport { compose } from '@wordpress/compose';\nimport { useSelect, withDispatch, withSelect } from '@wordpress/data';\nimport {\n\tMediaUpload,\n\tMediaUploadCheck,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport PostFeaturedImageCheck from './check';\nimport { store as editorStore } from '../../store';\n\nconst ALLOWED_MEDIA_TYPES = [ 'image' ];\n\n// Used when labels from post type were not yet loaded or when they are not present.\nconst DEFAULT_FEATURE_IMAGE_LABEL = __( 'Featured image' );\nconst DEFAULT_SET_FEATURE_IMAGE_LABEL = __( 'Add a featured image' );\n\nconst instructions = (\n\t<p>\n\t\t{ __(\n\t\t\t'To edit the featured image, you need permission to upload media.'\n\t\t) }\n\t</p>\n);\n\nfunction getMediaDetails( media, postId ) {\n\tif ( ! media ) {\n\t\treturn {};\n\t}\n\n\tconst defaultSize = applyFilters(\n\t\t'editor.PostFeaturedImage.imageSize',\n\t\t'large',\n\t\tmedia.id,\n\t\tpostId\n\t);\n\tif ( defaultSize in ( media?.media_details?.sizes ?? {} ) ) {\n\t\treturn {\n\t\t\tmediaWidth: media.media_details.sizes[ defaultSize ].width,\n\t\t\tmediaHeight: media.media_details.sizes[ defaultSize ].height,\n\t\t\tmediaSourceUrl: media.media_details.sizes[ defaultSize ].source_url,\n\t\t};\n\t}\n\n\t// Use fallbackSize when defaultSize is not available.\n\tconst fallbackSize = applyFilters(\n\t\t'editor.PostFeaturedImage.imageSize',\n\t\t'thumbnail',\n\t\tmedia.id,\n\t\tpostId\n\t);\n\tif ( fallbackSize in ( media?.media_details?.sizes ?? {} ) ) {\n\t\treturn {\n\t\t\tmediaWidth: media.media_details.sizes[ fallbackSize ].width,\n\t\t\tmediaHeight: media.media_details.sizes[ fallbackSize ].height,\n\t\t\tmediaSourceUrl:\n\t\t\t\tmedia.media_details.sizes[ fallbackSize ].source_url,\n\t\t};\n\t}\n\n\t// Use full image size when fallbackSize and defaultSize are not available.\n\treturn {\n\t\tmediaWidth: media.media_details.width,\n\t\tmediaHeight: media.media_details.height,\n\t\tmediaSourceUrl: media.source_url,\n\t};\n}\n\nfunction PostFeaturedImage( {\n\tcurrentPostId,\n\tfeaturedImageId,\n\tonUpdateImage,\n\tonRemoveImage,\n\tmedia,\n\tpostType,\n\tnoticeUI,\n\tnoticeOperations,\n} ) {\n\tconst toggleRef = useRef();\n\tconst [ isLoading, setIsLoading ] = useState( false );\n\tconst { getSettings } = useSelect( blockEditorStore );\n\tconst { mediaSourceUrl } = getMediaDetails( media, currentPostId );\n\n\tfunction onDropFiles( filesList ) {\n\t\tgetSettings().mediaUpload( {\n\t\t\tallowedTypes: ALLOWED_MEDIA_TYPES,\n\t\t\tfilesList,\n\t\t\tonFileChange( [ image ] ) {\n\t\t\t\tif ( isBlobURL( image?.url ) ) {\n\t\t\t\t\tsetIsLoading( true );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif ( image ) {\n\t\t\t\t\tonUpdateImage( image );\n\t\t\t\t}\n\t\t\t\tsetIsLoading( false );\n\t\t\t},\n\t\t\tonError( message ) {\n\t\t\t\tnoticeOperations.removeAllNotices();\n\t\t\t\tnoticeOperations.createErrorNotice( message );\n\t\t\t},\n\t\t} );\n\t}\n\n\treturn (\n\t\t<PostFeaturedImageCheck>\n\t\t\t{ noticeUI }\n\t\t\t<div className=\"editor-post-featured-image\">\n\t\t\t\t{ media && (\n\t\t\t\t\t<div\n\t\t\t\t\t\tid={ `editor-post-featured-image-${ featuredImageId }-describedby` }\n\t\t\t\t\t\tclassName=\"hidden\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{ media.alt_text &&\n\t\t\t\t\t\t\tsprintf(\n\t\t\t\t\t\t\t\t// Translators: %s: The selected image alt text.\n\t\t\t\t\t\t\t\t__( 'Current image: %s' ),\n\t\t\t\t\t\t\t\tmedia.alt_text\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t{ ! media.alt_text &&\n\t\t\t\t\t\t\tsprintf(\n\t\t\t\t\t\t\t\t// Translators: %s: The selected image filename.\n\t\t\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t\t\t'The current image has no alternative text. The file name is: %s'\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tmedia.media_details.sizes?.full?.file ||\n\t\t\t\t\t\t\t\t\tmedia.slug\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\t\t\t\t<MediaUploadCheck fallback={ instructions }>\n\t\t\t\t\t<MediaUpload\n\t\t\t\t\t\ttitle={\n\t\t\t\t\t\t\tpostType?.labels?.featured_image ||\n\t\t\t\t\t\t\tDEFAULT_FEATURE_IMAGE_LABEL\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonSelect={ onUpdateImage }\n\t\t\t\t\t\tunstableFeaturedImageFlow\n\t\t\t\t\t\tallowedTypes={ ALLOWED_MEDIA_TYPES }\n\t\t\t\t\t\tmodalClass=\"editor-post-featured-image__media-modal\"\n\t\t\t\t\t\trender={ ( { open } ) => (\n\t\t\t\t\t\t\t<div className=\"editor-post-featured-image__container\">\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tref={ toggleRef }\n\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\t! featuredImageId\n\t\t\t\t\t\t\t\t\t\t\t? 'editor-post-featured-image__toggle'\n\t\t\t\t\t\t\t\t\t\t\t: 'editor-post-featured-image__preview'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tonClick={ open }\n\t\t\t\t\t\t\t\t\taria-label={\n\t\t\t\t\t\t\t\t\t\t! featuredImageId\n\t\t\t\t\t\t\t\t\t\t\t? null\n\t\t\t\t\t\t\t\t\t\t\t: __( 'Edit or replace the image' )\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\taria-describedby={\n\t\t\t\t\t\t\t\t\t\t! featuredImageId\n\t\t\t\t\t\t\t\t\t\t\t? null\n\t\t\t\t\t\t\t\t\t\t\t: `editor-post-featured-image-${ featuredImageId }-describedby`\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{ !! featuredImageId && media && (\n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"editor-post-featured-image__preview-image\"\n\t\t\t\t\t\t\t\t\t\t\tsrc={ mediaSourceUrl }\n\t\t\t\t\t\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t{ isLoading && <Spinner /> }\n\t\t\t\t\t\t\t\t\t{ ! featuredImageId &&\n\t\t\t\t\t\t\t\t\t\t! isLoading &&\n\t\t\t\t\t\t\t\t\t\t( postType?.labels\n\t\t\t\t\t\t\t\t\t\t\t?.set_featured_image ||\n\t\t\t\t\t\t\t\t\t\t\tDEFAULT_SET_FEATURE_IMAGE_LABEL ) }\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t{ !! featuredImageId && (\n\t\t\t\t\t\t\t\t\t<HStack className=\"editor-post-featured-image__actions\">\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"editor-post-featured-image__action\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={ open }\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{ __( 'Replace' ) }\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"editor-post-featured-image__action\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\t\t\t\t\tonRemoveImage();\n\t\t\t\t\t\t\t\t\t\t\t\ttoggleRef.current.focus();\n\t\t\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{ __( 'Remove' ) }\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</HStack>\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t<DropZone onFilesDrop={ onDropFiles } />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\tvalue={ featuredImageId }\n\t\t\t\t\t/>\n\t\t\t\t</MediaUploadCheck>\n\t\t\t</div>\n\t\t</PostFeaturedImageCheck>\n\t);\n}\n\nconst applyWithSelect = withSelect( ( select ) => {\n\tconst { getMedia, getPostType } = select( coreStore );\n\tconst { getCurrentPostId, getEditedPostAttribute } = select( editorStore );\n\tconst featuredImageId = getEditedPostAttribute( 'featured_media' );\n\n\treturn {\n\t\tmedia: featuredImageId\n\t\t\t? getMedia( featuredImageId, { context: 'view' } )\n\t\t\t: null,\n\t\tcurrentPostId: getCurrentPostId(),\n\t\tpostType: getPostType( getEditedPostAttribute( 'type' ) ),\n\t\tfeaturedImageId,\n\t};\n} );\n\nconst applyWithDispatch = withDispatch(\n\t( dispatch, { noticeOperations }, { select } ) => {\n\t\tconst { editPost } = dispatch( editorStore );\n\t\treturn {\n\t\t\tonUpdateImage( image ) {\n\t\t\t\teditPost( { featured_media: image.id } );\n\t\t\t},\n\t\t\tonDropImage( filesList ) {\n\t\t\t\tselect( blockEditorStore )\n\t\t\t\t\t.getSettings()\n\t\t\t\t\t.mediaUpload( {\n\t\t\t\t\t\tallowedTypes: [ 'image' ],\n\t\t\t\t\t\tfilesList,\n\t\t\t\t\t\tonFileChange( [ image ] ) {\n\t\t\t\t\t\t\teditPost( { featured_media: image.id } );\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonError( message ) {\n\t\t\t\t\t\t\tnoticeOperations.removeAllNotices();\n\t\t\t\t\t\t\tnoticeOperations.createErrorNotice( message );\n\t\t\t\t\t\t},\n\t\t\t\t\t} );\n\t\t\t},\n\t\t\tonRemoveImage() {\n\t\t\t\teditPost( { featured_media: 0 } );\n\t\t\t},\n\t\t};\n\t}\n);\n\n/**\n * Renders the component for managing the featured image of a post.\n *\n * @param {Object}   props                  Props.\n * @param {number}   props.currentPostId    ID of the current post.\n * @param {number}   props.featuredImageId  ID of the featured image.\n * @param {Function} props.onUpdateImage    Function to call when the image is updated.\n * @param {Function} props.onRemoveImage    Function to call when the image is removed.\n * @param {Object}   props.media            The media object representing the featured image.\n * @param {string}   props.postType         Post type.\n * @param {Element}  props.noticeUI         UI for displaying notices.\n * @param {Object}   props.noticeOperations Operations for managing notices.\n *\n * @return {Element} Component to be rendered .\n */\nexport default compose(\n\twithNotices,\n\tapplyWithSelect,\n\tapplyWithDispatch,\n\twithFilters( 'editor.PostFeaturedImage' )\n)( PostFeaturedImage );\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { PanelBody } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\nimport PostFeaturedImage from './index';\nimport PostFeaturedImageCheck from './check';\n\nconst PANEL_NAME = 'featured-image';\n\n/**\n * Renders the panel for the post featured image.\n *\n * @param {Object}  props               Props.\n * @param {boolean} props.withPanelBody Whether to include the panel body. Default true.\n *\n * @return {Component|null} The component to be rendered.\n * Return Null if the editor panel is disabled for featured image.\n */\nexport default function PostFeaturedImagePanel( { withPanelBody = true } ) {\n\tconst { postType, isEnabled, isOpened } = useSelect( ( select ) => {\n\t\tconst {\n\t\t\tgetEditedPostAttribute,\n\t\t\tisEditorPanelEnabled,\n\t\t\tisEditorPanelOpened,\n\t\t} = select( editorStore );\n\t\tconst { getPostType } = select( coreStore );\n\n\t\treturn {\n\t\t\tpostType: getPostType( getEditedPostAttribute( 'type' ) ),\n\t\t\tisEnabled: isEditorPanelEnabled( PANEL_NAME ),\n\t\t\tisOpened: isEditorPanelOpened( PANEL_NAME ),\n\t\t};\n\t}, [] );\n\n\tconst { toggleEditorPanelOpened } = useDispatch( editorStore );\n\n\tif ( ! isEnabled ) {\n\t\treturn null;\n\t}\n\n\tif ( ! withPanelBody ) {\n\t\treturn (\n\t\t\t<PostFeaturedImageCheck>\n\t\t\t\t<PostFeaturedImage />\n\t\t\t</PostFeaturedImageCheck>\n\t\t);\n\t}\n\n\treturn (\n\t\t<PostFeaturedImageCheck>\n\t\t\t<PanelBody\n\t\t\t\ttitle={\n\t\t\t\t\tpostType?.labels?.featured_image ?? __( 'Featured image' )\n\t\t\t\t}\n\t\t\t\topened={ isOpened }\n\t\t\t\tonToggle={ () => toggleEditorPanelOpened( PANEL_NAME ) }\n\t\t\t>\n\t\t\t\t<PostFeaturedImage />\n\t\t\t</PanelBody>\n\t\t</PostFeaturedImageCheck>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport PostTypeSupportCheck from '../post-type-support-check';\nimport { store as editorStore } from '../../store';\n\nfunction PostFormatCheck( { children } ) {\n\tconst disablePostFormats = useSelect(\n\t\t( select ) =>\n\t\t\tselect( editorStore ).getEditorSettings().disablePostFormats,\n\t\t[]\n\t);\n\n\tif ( disablePostFormats ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<PostTypeSupportCheck supportKeys=\"post-formats\">\n\t\t\t{ children }\n\t\t</PostTypeSupportCheck>\n\t);\n}\n\n/**\n * Component check if there are any post formats.\n *\n * @param {Object}  props          The component props.\n * @param {Element} props.children The child elements to render.\n *\n * @return {Component|null} The rendered component or null if post formats are disabled.\n */\nexport default PostFormatCheck;\n","/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport { Button, RadioControl } from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { useInstanceId } from '@wordpress/compose';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport PostFormatCheck from './check';\nimport { store as editorStore } from '../../store';\n\n// All WP post formats, sorted alphabetically by translated name.\nexport const POST_FORMATS = [\n\t{ id: 'aside', caption: __( 'Aside' ) },\n\t{ id: 'audio', caption: __( 'Audio' ) },\n\t{ id: 'chat', caption: __( 'Chat' ) },\n\t{ id: 'gallery', caption: __( 'Gallery' ) },\n\t{ id: 'image', caption: __( 'Image' ) },\n\t{ id: 'link', caption: __( 'Link' ) },\n\t{ id: 'quote', caption: __( 'Quote' ) },\n\t{ id: 'standard', caption: __( 'Standard' ) },\n\t{ id: 'status', caption: __( 'Status' ) },\n\t{ id: 'video', caption: __( 'Video' ) },\n].sort( ( a, b ) => {\n\tconst normalizedA = a.caption.toUpperCase();\n\tconst normalizedB = b.caption.toUpperCase();\n\n\tif ( normalizedA < normalizedB ) {\n\t\treturn -1;\n\t}\n\tif ( normalizedA > normalizedB ) {\n\t\treturn 1;\n\t}\n\treturn 0;\n} );\n\n/**\n * `PostFormat` a component that allows changing the post format while also providing a suggestion for the current post.\n *\n * @example\n * ```jsx\n * <PostFormat />\n * ```\n *\n * @return {JSX.Element} The rendered PostFormat component.\n */\nexport default function PostFormat() {\n\tconst instanceId = useInstanceId( PostFormat );\n\tconst postFormatSelectorId = `post-format-selector-${ instanceId }`;\n\n\tconst { postFormat, suggestedFormat, supportedFormats } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getEditedPostAttribute, getSuggestedPostFormat } =\n\t\t\t\tselect( editorStore );\n\t\t\tconst _postFormat = getEditedPostAttribute( 'format' );\n\t\t\tconst themeSupports = select( coreStore ).getThemeSupports();\n\t\t\treturn {\n\t\t\t\tpostFormat: _postFormat ?? 'standard',\n\t\t\t\tsuggestedFormat: getSuggestedPostFormat(),\n\t\t\t\tsupportedFormats: themeSupports.formats,\n\t\t\t};\n\t\t},\n\t\t[]\n\t);\n\n\tconst formats = POST_FORMATS.filter( ( format ) => {\n\t\t// Ensure current format is always in the set.\n\t\t// The current format may not be a format supported by the theme.\n\t\treturn (\n\t\t\tsupportedFormats?.includes( format.id ) || postFormat === format.id\n\t\t);\n\t} );\n\tconst suggestion = formats.find(\n\t\t( format ) => format.id === suggestedFormat\n\t);\n\n\tconst { editPost } = useDispatch( editorStore );\n\n\tconst onUpdatePostFormat = ( format ) => editPost( { format } );\n\n\treturn (\n\t\t<PostFormatCheck>\n\t\t\t<div className=\"editor-post-format\">\n\t\t\t\t<RadioControl\n\t\t\t\t\tclassName=\"editor-post-format__options\"\n\t\t\t\t\tlabel={ __( 'Post Format' ) }\n\t\t\t\t\tselected={ postFormat }\n\t\t\t\t\tonChange={ ( format ) => onUpdatePostFormat( format ) }\n\t\t\t\t\tid={ postFormatSelectorId }\n\t\t\t\t\toptions={ formats.map( ( format ) => ( {\n\t\t\t\t\t\tlabel: format.caption,\n\t\t\t\t\t\tvalue: format.id,\n\t\t\t\t\t} ) ) }\n\t\t\t\t\thideLabelFromVision\n\t\t\t\t/>\n\t\t\t\t{ suggestion && suggestion.id !== postFormat && (\n\t\t\t\t\t<p className=\"editor-post-format__suggestion\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\t\tonClick={ () =>\n\t\t\t\t\t\t\t\tonUpdatePostFormat( suggestion.id )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ sprintf(\n\t\t\t\t\t\t\t\t/* translators: %s: post format */\n\t\t\t\t\t\t\t\t__( 'Apply suggested format: %s' ),\n\t\t\t\t\t\t\t\tsuggestion.caption\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</p>\n\t\t\t\t) }\n\t\t\t</div>\n\t\t</PostFormatCheck>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst backup = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M5.5 12h1.75l-2.5 3-2.5-3H4a8 8 0 113.134 6.35l.907-1.194A6.5 6.5 0 105.5 12zm9.53 1.97l-2.28-2.28V8.5a.75.75 0 00-1.5 0V12a.747.747 0 00.218.529l1.282-.84-1.28.842 2.5 2.5a.75.75 0 101.06-1.061z\" />\n\t</SVG>\n);\n\nexport default backup;\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport PostTypeSupportCheck from '../post-type-support-check';\nimport { store as editorStore } from '../../store';\n\n/**\n * Wrapper component that renders its children if the post has more than one revision.\n *\n * @param {Object}  props          Props.\n * @param {Element} props.children Children to be rendered.\n *\n * @return {Component|null} Rendered child components if post has more than one revision, otherwise null.\n */\nfunction PostLastRevisionCheck( { children } ) {\n\tconst { lastRevisionId, revisionsCount } = useSelect( ( select ) => {\n\t\tconst { getCurrentPostLastRevisionId, getCurrentPostRevisionsCount } =\n\t\t\tselect( editorStore );\n\t\treturn {\n\t\t\tlastRevisionId: getCurrentPostLastRevisionId(),\n\t\t\trevisionsCount: getCurrentPostRevisionsCount(),\n\t\t};\n\t}, [] );\n\n\tif ( ! lastRevisionId || revisionsCount < 2 ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<PostTypeSupportCheck supportKeys=\"revisions\">\n\t\t\t{ children }\n\t\t</PostTypeSupportCheck>\n\t);\n}\n\nexport default PostLastRevisionCheck;\n","/**\n * WordPress dependencies\n */\nimport { sprintf, __ } from '@wordpress/i18n';\nimport { Button } from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\nimport { backup } from '@wordpress/icons';\nimport { addQueryArgs } from '@wordpress/url';\n\n/**\n * Internal dependencies\n */\nimport PostLastRevisionCheck from './check';\nimport PostPanelRow from '../post-panel-row';\nimport { store as editorStore } from '../../store';\n\nfunction usePostLastRevisionInfo() {\n\treturn useSelect( ( select ) => {\n\t\tconst { getCurrentPostLastRevisionId, getCurrentPostRevisionsCount } =\n\t\t\tselect( editorStore );\n\t\treturn {\n\t\t\tlastRevisionId: getCurrentPostLastRevisionId(),\n\t\t\trevisionsCount: getCurrentPostRevisionsCount(),\n\t\t};\n\t}, [] );\n}\n\n/**\n * Renders the component for displaying the last revision of a post.\n *\n * @return {Component} The component to be rendered.\n */\nfunction PostLastRevision() {\n\tconst { lastRevisionId, revisionsCount } = usePostLastRevisionInfo();\n\n\treturn (\n\t\t<PostLastRevisionCheck>\n\t\t\t<Button\n\t\t\t\thref={ addQueryArgs( 'revision.php', {\n\t\t\t\t\trevision: lastRevisionId,\n\t\t\t\t} ) }\n\t\t\t\tclassName=\"editor-post-last-revision__title\"\n\t\t\t\ticon={ backup }\n\t\t\t\ticonPosition=\"right\"\n\t\t\t\ttext={ sprintf(\n\t\t\t\t\t/* translators: %s: number of revisions */\n\t\t\t\t\t__( 'Revisions (%s)' ),\n\t\t\t\t\trevisionsCount\n\t\t\t\t) }\n\t\t\t/>\n\t\t</PostLastRevisionCheck>\n\t);\n}\n\nexport function PrivatePostLastRevision() {\n\tconst { lastRevisionId, revisionsCount } = usePostLastRevisionInfo();\n\treturn (\n\t\t<PostLastRevisionCheck>\n\t\t\t<PostPanelRow label={ __( 'Revisions' ) }>\n\t\t\t\t<Button\n\t\t\t\t\thref={ addQueryArgs( 'revision.php', {\n\t\t\t\t\t\trevision: lastRevisionId,\n\t\t\t\t\t} ) }\n\t\t\t\t\tclassName=\"editor-private-post-last-revision__button\"\n\t\t\t\t\ttext={ revisionsCount }\n\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t/>\n\t\t\t</PostPanelRow>\n\t\t</PostLastRevisionCheck>\n\t);\n}\n\nexport default PostLastRevision;\n","/**\n * WordPress dependencies\n */\nimport { PanelBody } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport PostLastRevision from './';\nimport PostLastRevisionCheck from './check';\n\n/**\n * Renders the panel for displaying the last revision of a post.\n *\n * @return {Component} The component to be rendered.\n */\nfunction PostLastRevisionPanel() {\n\treturn (\n\t\t<PostLastRevisionCheck>\n\t\t\t<PanelBody className=\"editor-post-last-revision__panel\">\n\t\t\t\t<PostLastRevision />\n\t\t\t</PanelBody>\n\t\t</PostLastRevisionCheck>\n\t);\n}\n\nexport default PostLastRevisionPanel;\n","/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport {\n\tModal,\n\tButton,\n\tExternalLink,\n\t__experimentalHStack as HStack,\n} from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { addQueryArgs } from '@wordpress/url';\nimport { useEffect, createInterpolateElement } from '@wordpress/element';\nimport { addAction, removeAction } from '@wordpress/hooks';\nimport { useInstanceId } from '@wordpress/compose';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\n/**\n * A modal component that is displayed when a post is locked for editing by another user.\n * The modal provides information about the lock status and options to take over or exit the editor.\n *\n * @return {JSX.Element|null} The rendered PostLockedModal component.\n */\nexport default function PostLockedModal() {\n\tconst instanceId = useInstanceId( PostLockedModal );\n\tconst hookName = 'core/editor/post-locked-modal-' + instanceId;\n\tconst { autosave, updatePostLock } = useDispatch( editorStore );\n\tconst {\n\t\tisLocked,\n\t\tisTakeover,\n\t\tuser,\n\t\tpostId,\n\t\tpostLockUtils,\n\t\tactivePostLock,\n\t\tpostType,\n\t\tpreviewLink,\n\t} = useSelect( ( select ) => {\n\t\tconst {\n\t\t\tisPostLocked,\n\t\t\tisPostLockTakeover,\n\t\t\tgetPostLockUser,\n\t\t\tgetCurrentPostId,\n\t\t\tgetActivePostLock,\n\t\t\tgetEditedPostAttribute,\n\t\t\tgetEditedPostPreviewLink,\n\t\t\tgetEditorSettings,\n\t\t} = select( editorStore );\n\t\tconst { getPostType } = select( coreStore );\n\t\treturn {\n\t\t\tisLocked: isPostLocked(),\n\t\t\tisTakeover: isPostLockTakeover(),\n\t\t\tuser: getPostLockUser(),\n\t\t\tpostId: getCurrentPostId(),\n\t\t\tpostLockUtils: getEditorSettings().postLockUtils,\n\t\t\tactivePostLock: getActivePostLock(),\n\t\t\tpostType: getPostType( getEditedPostAttribute( 'type' ) ),\n\t\t\tpreviewLink: getEditedPostPreviewLink(),\n\t\t};\n\t}, [] );\n\n\tuseEffect( () => {\n\t\t/**\n\t\t * Keep the lock refreshed.\n\t\t *\n\t\t * When the user does not send a heartbeat in a heartbeat-tick\n\t\t * the user is no longer editing and another user can start editing.\n\t\t *\n\t\t * @param {Object} data Data to send in the heartbeat request.\n\t\t */\n\t\tfunction sendPostLock( data ) {\n\t\t\tif ( isLocked ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdata[ 'wp-refresh-post-lock' ] = {\n\t\t\t\tlock: activePostLock,\n\t\t\t\tpost_id: postId,\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t * Refresh post locks: update the lock string or show the dialog if somebody has taken over editing.\n\t\t *\n\t\t * @param {Object} data Data received in the heartbeat request\n\t\t */\n\t\tfunction receivePostLock( data ) {\n\t\t\tif ( ! data[ 'wp-refresh-post-lock' ] ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst received = data[ 'wp-refresh-post-lock' ];\n\t\t\tif ( received.lock_error ) {\n\t\t\t\t// Auto save and display the takeover modal.\n\t\t\t\tautosave();\n\t\t\t\tupdatePostLock( {\n\t\t\t\t\tisLocked: true,\n\t\t\t\t\tisTakeover: true,\n\t\t\t\t\tuser: {\n\t\t\t\t\t\tname: received.lock_error.name,\n\t\t\t\t\t\tavatar: received.lock_error.avatar_src_2x,\n\t\t\t\t\t},\n\t\t\t\t} );\n\t\t\t} else if ( received.new_lock ) {\n\t\t\t\tupdatePostLock( {\n\t\t\t\t\tisLocked: false,\n\t\t\t\t\tactivePostLock: received.new_lock,\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Unlock the post before the window is exited.\n\t\t */\n\t\tfunction releasePostLock() {\n\t\t\tif ( isLocked || ! activePostLock ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst data = new window.FormData();\n\t\t\tdata.append( 'action', 'wp-remove-post-lock' );\n\t\t\tdata.append( '_wpnonce', postLockUtils.unlockNonce );\n\t\t\tdata.append( 'post_ID', postId );\n\t\t\tdata.append( 'active_post_lock', activePostLock );\n\n\t\t\tif ( window.navigator.sendBeacon ) {\n\t\t\t\twindow.navigator.sendBeacon( postLockUtils.ajaxUrl, data );\n\t\t\t} else {\n\t\t\t\tconst xhr = new window.XMLHttpRequest();\n\t\t\t\txhr.open( 'POST', postLockUtils.ajaxUrl, false );\n\t\t\t\txhr.send( data );\n\t\t\t}\n\t\t}\n\n\t\t// Details on these events on the Heartbeat API docs\n\t\t// https://developer.wordpress.org/plugins/javascript/heartbeat-api/\n\t\taddAction( 'heartbeat.send', hookName, sendPostLock );\n\t\taddAction( 'heartbeat.tick', hookName, receivePostLock );\n\t\twindow.addEventListener( 'beforeunload', releasePostLock );\n\n\t\treturn () => {\n\t\t\tremoveAction( 'heartbeat.send', hookName );\n\t\t\tremoveAction( 'heartbeat.tick', hookName );\n\t\t\twindow.removeEventListener( 'beforeunload', releasePostLock );\n\t\t};\n\t}, [] );\n\n\tif ( ! isLocked ) {\n\t\treturn null;\n\t}\n\n\tconst userDisplayName = user.name;\n\tconst userAvatar = user.avatar;\n\n\tconst unlockUrl = addQueryArgs( 'post.php', {\n\t\t'get-post-lock': '1',\n\t\tlockKey: true,\n\t\tpost: postId,\n\t\taction: 'edit',\n\t\t_wpnonce: postLockUtils.nonce,\n\t} );\n\tconst allPostsUrl = addQueryArgs( 'edit.php', {\n\t\tpost_type: postType?.slug,\n\t} );\n\tconst allPostsLabel = __( 'Exit editor' );\n\treturn (\n\t\t<Modal\n\t\t\ttitle={\n\t\t\t\tisTakeover\n\t\t\t\t\t? __( 'Someone else has taken over this post' )\n\t\t\t\t\t: __( 'This post is already being edited' )\n\t\t\t}\n\t\t\tfocusOnMount\n\t\t\tshouldCloseOnClickOutside={ false }\n\t\t\tshouldCloseOnEsc={ false }\n\t\t\tisDismissible={ false }\n\t\t\tsize=\"medium\"\n\t\t>\n\t\t\t<HStack alignment=\"top\" spacing={ 6 }>\n\t\t\t\t{ !! userAvatar && (\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={ userAvatar }\n\t\t\t\t\t\talt={ __( 'Avatar' ) }\n\t\t\t\t\t\tclassName=\"editor-post-locked-modal__avatar\"\n\t\t\t\t\t\twidth={ 64 }\n\t\t\t\t\t\theight={ 64 }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t<div>\n\t\t\t\t\t{ !! isTakeover && (\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t{ createInterpolateElement(\n\t\t\t\t\t\t\t\tuserDisplayName\n\t\t\t\t\t\t\t\t\t? sprintf(\n\t\t\t\t\t\t\t\t\t\t\t/* translators: %s: user's display name */\n\t\t\t\t\t\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t\t\t\t\t\t'<strong>%s</strong> now has editing control of this post (<PreviewLink />). Don’t worry, your changes up to this moment have been saved.'\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\tuserDisplayName\n\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t: __(\n\t\t\t\t\t\t\t\t\t\t\t'Another user now has editing control of this post (<PreviewLink />). Don’t worry, your changes up to this moment have been saved.'\n\t\t\t\t\t\t\t\t\t  ),\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tstrong: <strong />,\n\t\t\t\t\t\t\t\t\tPreviewLink: (\n\t\t\t\t\t\t\t\t\t\t<ExternalLink href={ previewLink }>\n\t\t\t\t\t\t\t\t\t\t\t{ __( 'preview' ) }\n\t\t\t\t\t\t\t\t\t\t</ExternalLink>\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</p>\n\t\t\t\t\t) }\n\t\t\t\t\t{ ! isTakeover && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t{ createInterpolateElement(\n\t\t\t\t\t\t\t\t\tuserDisplayName\n\t\t\t\t\t\t\t\t\t\t? sprintf(\n\t\t\t\t\t\t\t\t\t\t\t\t/* translators: %s: user's display name */\n\t\t\t\t\t\t\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t\t\t\t\t\t\t'<strong>%s</strong> is currently working on this post (<PreviewLink />), which means you cannot make changes, unless you take over.'\n\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\tuserDisplayName\n\t\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t\t: __(\n\t\t\t\t\t\t\t\t\t\t\t\t'Another user is currently working on this post (<PreviewLink />), which means you cannot make changes, unless you take over.'\n\t\t\t\t\t\t\t\t\t\t  ),\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tstrong: <strong />,\n\t\t\t\t\t\t\t\t\t\tPreviewLink: (\n\t\t\t\t\t\t\t\t\t\t\t<ExternalLink href={ previewLink }>\n\t\t\t\t\t\t\t\t\t\t\t\t{ __( 'preview' ) }\n\t\t\t\t\t\t\t\t\t\t\t</ExternalLink>\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t'If you take over, the other user will lose editing control to the post, but their changes will be saved.'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) }\n\n\t\t\t\t\t<HStack\n\t\t\t\t\t\tclassName=\"editor-post-locked-modal__buttons\"\n\t\t\t\t\t\tjustify=\"flex-end\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{ ! isTakeover && (\n\t\t\t\t\t\t\t<Button variant=\"tertiary\" href={ unlockUrl }>\n\t\t\t\t\t\t\t\t{ __( 'Take over' ) }\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t<Button variant=\"primary\" href={ allPostsUrl }>\n\t\t\t\t\t\t\t{ allPostsLabel }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</HStack>\n\t\t\t\t</div>\n\t\t\t</HStack>\n\t\t</Modal>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\n/**\n * This component checks the publishing status of the current post.\n * If the post is already published or the user doesn't have the\n * capability to publish, it returns null.\n *\n * @param {Object}  props          Component properties.\n * @param {Element} props.children Children to be rendered.\n *\n * @return {JSX.Element|null} The rendered child elements or null if the post is already published or the user doesn't have the capability to publish.\n */\nexport function PostPendingStatusCheck( { children } ) {\n\tconst { hasPublishAction, isPublished } = useSelect( ( select ) => {\n\t\tconst { isCurrentPostPublished, getCurrentPost } =\n\t\t\tselect( editorStore );\n\t\treturn {\n\t\t\thasPublishAction:\n\t\t\t\tgetCurrentPost()._links?.[ 'wp:action-publish' ] ?? false,\n\t\t\tisPublished: isCurrentPostPublished(),\n\t\t};\n\t}, [] );\n\n\tif ( isPublished || ! hasPublishAction ) {\n\t\treturn null;\n\t}\n\n\treturn children;\n}\n\nexport default PostPendingStatusCheck;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { CheckboxControl } from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport PostPendingStatusCheck from './check';\nimport { store as editorStore } from '../../store';\n\n/**\n * A component for displaying and toggling the pending status of a post.\n *\n * @return {JSX.Element} The rendered component.\n */\nexport function PostPendingStatus() {\n\tconst status = useSelect(\n\t\t( select ) => select( editorStore ).getEditedPostAttribute( 'status' ),\n\t\t[]\n\t);\n\tconst { editPost } = useDispatch( editorStore );\n\tconst togglePendingStatus = () => {\n\t\tconst updatedStatus = status === 'pending' ? 'draft' : 'pending';\n\t\teditPost( { status: updatedStatus } );\n\t};\n\n\treturn (\n\t\t<PostPendingStatusCheck>\n\t\t\t<CheckboxControl\n\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\tlabel={ __( 'Pending review' ) }\n\t\t\t\tchecked={ status === 'pending' }\n\t\t\t\tonChange={ togglePendingStatus }\n\t\t\t/>\n\t\t</PostPendingStatusCheck>\n\t);\n}\n\nexport default PostPendingStatus;\n","/**\n * WordPress dependencies\n */\nimport { renderToString } from '@wordpress/element';\nimport { Button, Path, SVG, VisuallyHidden } from '@wordpress/components';\nimport { __, _x } from '@wordpress/i18n';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { applyFilters } from '@wordpress/hooks';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nfunction writeInterstitialMessage( targetDocument ) {\n\tlet markup = renderToString(\n\t\t<div className=\"editor-post-preview-button__interstitial-message\">\n\t\t\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 96 96\">\n\t\t\t\t<Path\n\t\t\t\t\tclassName=\"outer\"\n\t\t\t\t\td=\"M48 12c19.9 0 36 16.1 36 36S67.9 84 48 84 12 67.9 12 48s16.1-36 36-36\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t/>\n\t\t\t\t<Path\n\t\t\t\t\tclassName=\"inner\"\n\t\t\t\t\td=\"M69.5 46.4c0-3.9-1.4-6.7-2.6-8.8-1.6-2.6-3.1-4.9-3.1-7.5 0-2.9 2.2-5.7 5.4-5.7h.4C63.9 19.2 56.4 16 48 16c-11.2 0-21 5.7-26.7 14.4h2.1c3.3 0 8.5-.4 8.5-.4 1.7-.1 1.9 2.4.2 2.6 0 0-1.7.2-3.7.3L40 67.5l7-20.9L42 33c-1.7-.1-3.3-.3-3.3-.3-1.7-.1-1.5-2.7.2-2.6 0 0 5.3.4 8.4.4 3.3 0 8.5-.4 8.5-.4 1.7-.1 1.9 2.4.2 2.6 0 0-1.7.2-3.7.3l11.5 34.3 3.3-10.4c1.6-4.5 2.4-7.8 2.4-10.5zM16.1 48c0 12.6 7.3 23.5 18 28.7L18.8 35c-1.7 4-2.7 8.4-2.7 13zm32.5 2.8L39 78.6c2.9.8 5.9 1.3 9 1.3 3.7 0 7.3-.6 10.6-1.8-.1-.1-.2-.3-.2-.4l-9.8-26.9zM76.2 36c0 3.2-.6 6.9-2.4 11.4L64 75.6c9.5-5.5 15.9-15.8 15.9-27.6 0-5.5-1.4-10.8-3.9-15.3.1 1 .2 2.1.2 3.3z\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t/>\n\t\t\t</SVG>\n\t\t\t<p>{ __( 'Generating preview…' ) }</p>\n\t\t</div>\n\t);\n\n\tmarkup += `\n\t\t<style>\n\t\t\tbody {\n\t\t\t\tmargin: 0;\n\t\t\t}\n\t\t\t.editor-post-preview-button__interstitial-message {\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\talign-items: center;\n\t\t\t\tjustify-content: center;\n\t\t\t\theight: 100vh;\n\t\t\t\twidth: 100vw;\n\t\t\t}\n\t\t\t@-webkit-keyframes paint {\n\t\t\t\t0% {\n\t\t\t\t\tstroke-dashoffset: 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\t@-moz-keyframes paint {\n\t\t\t\t0% {\n\t\t\t\t\tstroke-dashoffset: 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\t@-o-keyframes paint {\n\t\t\t\t0% {\n\t\t\t\t\tstroke-dashoffset: 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\t@keyframes paint {\n\t\t\t\t0% {\n\t\t\t\t\tstroke-dashoffset: 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\t.editor-post-preview-button__interstitial-message svg {\n\t\t\t\twidth: 192px;\n\t\t\t\theight: 192px;\n\t\t\t\tstroke: #555d66;\n\t\t\t\tstroke-width: 0.75;\n\t\t\t}\n\t\t\t.editor-post-preview-button__interstitial-message svg .outer,\n\t\t\t.editor-post-preview-button__interstitial-message svg .inner {\n\t\t\t\tstroke-dasharray: 280;\n\t\t\t\tstroke-dashoffset: 280;\n\t\t\t\t-webkit-animation: paint 1.5s ease infinite alternate;\n\t\t\t\t-moz-animation: paint 1.5s ease infinite alternate;\n\t\t\t\t-o-animation: paint 1.5s ease infinite alternate;\n\t\t\t\tanimation: paint 1.5s ease infinite alternate;\n\t\t\t}\n\t\t\tp {\n\t\t\t\ttext-align: center;\n\t\t\t\tfont-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif;\n\t\t\t}\n\t\t</style>\n\t`;\n\n\t/**\n\t * Filters the interstitial message shown when generating previews.\n\t *\n\t * @param {string} markup The preview interstitial markup.\n\t */\n\tmarkup = applyFilters( 'editor.PostPreview.interstitialMarkup', markup );\n\n\ttargetDocument.write( markup );\n\ttargetDocument.title = __( 'Generating preview…' );\n\ttargetDocument.close();\n}\n\n/**\n * Renders a button that opens a new window or tab for the preview,\n * writes the interstitial message to this window, and then navigates\n * to the actual preview link. The button is not rendered if the post\n * is not viewable and disabled if the post is not saveable.\n *\n * @param {Object}   props                     The component props.\n * @param {string}   props.className           The class name for the button.\n * @param {string}   props.textContent         The text content for the button.\n * @param {boolean}  props.forceIsAutosaveable Whether to force autosave.\n * @param {string}   props.role                The role attribute for the button.\n * @param {Function} props.onPreview           The callback function for preview event.\n *\n * @return {JSX.Element|null} The rendered button component.\n */\nexport default function PostPreviewButton( {\n\tclassName,\n\ttextContent,\n\tforceIsAutosaveable,\n\trole,\n\tonPreview,\n} ) {\n\tconst { postId, currentPostLink, previewLink, isSaveable, isViewable } =\n\t\tuseSelect( ( select ) => {\n\t\t\tconst editor = select( editorStore );\n\t\t\tconst core = select( coreStore );\n\n\t\t\tconst postType = core.getPostType(\n\t\t\t\teditor.getCurrentPostType( 'type' )\n\t\t\t);\n\n\t\t\treturn {\n\t\t\t\tpostId: editor.getCurrentPostId(),\n\t\t\t\tcurrentPostLink: editor.getCurrentPostAttribute( 'link' ),\n\t\t\t\tpreviewLink: editor.getEditedPostPreviewLink(),\n\t\t\t\tisSaveable: editor.isEditedPostSaveable(),\n\t\t\t\tisViewable: postType?.viewable ?? false,\n\t\t\t};\n\t\t}, [] );\n\n\tconst { __unstableSaveForPreview } = useDispatch( editorStore );\n\n\tif ( ! isViewable ) {\n\t\treturn null;\n\t}\n\n\tconst targetId = `wp-preview-${ postId }`;\n\n\tconst openPreviewWindow = async ( event ) => {\n\t\t// Our Preview button has its 'href' and 'target' set correctly for a11y\n\t\t// purposes. Unfortunately, though, we can't rely on the default 'click'\n\t\t// handler since sometimes it incorrectly opens a new tab instead of reusing\n\t\t// the existing one.\n\t\t// https://github.com/WordPress/gutenberg/pull/8330\n\t\tevent.preventDefault();\n\n\t\t// Open up a Preview tab if needed. This is where we'll show the preview.\n\t\tconst previewWindow = window.open( '', targetId );\n\n\t\t// Focus the Preview tab. This might not do anything, depending on the browser's\n\t\t// and user's preferences.\n\t\t// https://html.spec.whatwg.org/multipage/interaction.html#dom-window-focus\n\t\tpreviewWindow.focus();\n\n\t\twriteInterstitialMessage( previewWindow.document );\n\n\t\tconst link = await __unstableSaveForPreview( { forceIsAutosaveable } );\n\n\t\tpreviewWindow.location = link;\n\n\t\tonPreview?.();\n\t};\n\n\t// Link to the `?preview=true` URL if we have it, since this lets us see\n\t// changes that were autosaved since the post was last published. Otherwise,\n\t// just link to the post's URL.\n\tconst href = previewLink || currentPostLink;\n\n\treturn (\n\t\t<Button\n\t\t\tvariant={ ! className ? 'tertiary' : undefined }\n\t\t\tclassName={ className || 'editor-post-preview' }\n\t\t\thref={ href }\n\t\t\ttarget={ targetId }\n\t\t\t__experimentalIsFocusable\n\t\t\tdisabled={ ! isSaveable }\n\t\t\tonClick={ openPreviewWindow }\n\t\t\trole={ role }\n\t\t\tsize=\"compact\"\n\t\t>\n\t\t\t{ textContent || (\n\t\t\t\t<>\n\t\t\t\t\t{ _x( 'Preview', 'imperative verb' ) }\n\t\t\t\t\t<VisuallyHidden as=\"span\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t/* translators: accessibility text */\n\t\t\t\t\t\t\t__( '(opens in a new tab)' )\n\t\t\t\t\t\t}\n\t\t\t\t\t</VisuallyHidden>\n\t\t\t\t</>\n\t\t\t) }\n\t\t</Button>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useSelect } from '@wordpress/data';\nimport { useViewportMatch } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\n/**\n * Renders the label for the publish button.\n *\n * @return {string} The label for the publish button.\n */\nexport default function PublishButtonLabel() {\n\tconst isSmallerThanMediumViewport = useViewportMatch( 'medium', '<' );\n\tconst {\n\t\tisPublished,\n\t\tisBeingScheduled,\n\t\tisSaving,\n\t\tisPublishing,\n\t\thasPublishAction,\n\t\tisAutosaving,\n\t\thasNonPostEntityChanges,\n\t\tpostStatusHasChanged,\n\t\tpostStatus,\n\t} = useSelect( ( select ) => {\n\t\tconst {\n\t\t\tisCurrentPostPublished,\n\t\t\tisEditedPostBeingScheduled,\n\t\t\tisSavingPost,\n\t\t\tisPublishingPost,\n\t\t\tgetCurrentPost,\n\t\t\tgetCurrentPostType,\n\t\t\tisAutosavingPost,\n\t\t\tgetPostEdits,\n\t\t\tgetEditedPostAttribute,\n\t\t} = select( editorStore );\n\t\treturn {\n\t\t\tisPublished: isCurrentPostPublished(),\n\t\t\tisBeingScheduled: isEditedPostBeingScheduled(),\n\t\t\tisSaving: isSavingPost(),\n\t\t\tisPublishing: isPublishingPost(),\n\t\t\thasPublishAction:\n\t\t\t\tgetCurrentPost()._links?.[ 'wp:action-publish' ] ?? false,\n\t\t\tpostType: getCurrentPostType(),\n\t\t\tisAutosaving: isAutosavingPost(),\n\t\t\thasNonPostEntityChanges:\n\t\t\t\tselect( editorStore ).hasNonPostEntityChanges(),\n\t\t\tpostStatusHasChanged: !! getPostEdits()?.status,\n\t\t\tpostStatus: getEditedPostAttribute( 'status' ),\n\t\t};\n\t}, [] );\n\tif ( isPublishing ) {\n\t\t/* translators: button label text should, if possible, be under 16 characters. */\n\t\treturn __( 'Publishing…' );\n\t} else if (\n\t\t( isPublished || isBeingScheduled ) &&\n\t\tisSaving &&\n\t\t! isAutosaving\n\t) {\n\t\t/* translators: button label text should, if possible, be under 16 characters. */\n\t\treturn __( 'Saving…' );\n\t}\n\tif ( ! hasPublishAction ) {\n\t\t// TODO: this is because \"Submit for review\" string is too long in some languages.\n\t\t// @see https://github.com/WordPress/gutenberg/issues/10475\n\t\treturn isSmallerThanMediumViewport\n\t\t\t? __( 'Publish' )\n\t\t\t: __( 'Submit for Review' );\n\t}\n\tif (\n\t\thasNonPostEntityChanges ||\n\t\tisPublished ||\n\t\t( postStatusHasChanged &&\n\t\t\t! [ 'future', 'publish' ].includes( postStatus ) ) ||\n\t\t( ! postStatusHasChanged && postStatus === 'future' )\n\t) {\n\t\treturn __( 'Save' );\n\t}\n\tif ( isBeingScheduled ) {\n\t\treturn __( 'Schedule' );\n\t}\n\treturn __( 'Publish' );\n}\n","/**\n * WordPress dependencies\n */\nimport { Button } from '@wordpress/components';\nimport { Component, createRef } from '@wordpress/element';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport PublishButtonLabel from './label';\nimport { store as editorStore } from '../../store';\nimport { unlock } from '../../lock-unlock';\n\nconst noop = () => {};\n\nexport class PostPublishButton extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tthis.buttonNode = createRef();\n\n\t\tthis.createOnClick = this.createOnClick.bind( this );\n\t\tthis.closeEntitiesSavedStates =\n\t\t\tthis.closeEntitiesSavedStates.bind( this );\n\n\t\tthis.state = {\n\t\t\tentitiesSavedStatesCallback: false,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tif ( this.props.focusOnMount ) {\n\t\t\t// This timeout is necessary to make sure the `useEffect` hook of\n\t\t\t// `useFocusReturn` gets the correct element (the button that opens the\n\t\t\t// PostPublishPanel) otherwise it will get this button.\n\t\t\tthis.timeoutID = setTimeout( () => {\n\t\t\t\tthis.buttonNode.current.focus();\n\t\t\t}, 0 );\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearTimeout( this.timeoutID );\n\t}\n\n\tcreateOnClick( callback ) {\n\t\treturn ( ...args ) => {\n\t\t\tconst {\n\t\t\t\thasNonPostEntityChanges,\n\t\t\t\thasPostMetaChanges,\n\t\t\t\tsetEntitiesSavedStatesCallback,\n\t\t\t\tisPublished,\n\t\t\t} = this.props;\n\t\t\t// If a post with non-post entities is published, but the user\n\t\t\t// elects to not save changes to the non-post entities, those\n\t\t\t// entities will still be dirty when the Publish button is clicked.\n\t\t\t// We also need to check that the `setEntitiesSavedStatesCallback`\n\t\t\t// prop was passed. See https://github.com/WordPress/gutenberg/pull/37383\n\t\t\t//\n\t\t\t// TODO: Explore how to manage `hasPostMetaChanges` and pre-publish workflow properly.\n\t\t\tif (\n\t\t\t\t( hasNonPostEntityChanges ||\n\t\t\t\t\t( hasPostMetaChanges && isPublished ) ) &&\n\t\t\t\tsetEntitiesSavedStatesCallback\n\t\t\t) {\n\t\t\t\t// The modal for multiple entity saving will open,\n\t\t\t\t// hold the callback for saving/publishing the post\n\t\t\t\t// so that we can call it if the post entity is checked.\n\t\t\t\tthis.setState( {\n\t\t\t\t\tentitiesSavedStatesCallback: () => callback( ...args ),\n\t\t\t\t} );\n\n\t\t\t\t// Open the save panel by setting its callback.\n\t\t\t\t// To set a function on the useState hook, we must set it\n\t\t\t\t// with another function (() => myFunction). Passing the\n\t\t\t\t// function on its own will cause an error when called.\n\t\t\t\tsetEntitiesSavedStatesCallback(\n\t\t\t\t\t() => this.closeEntitiesSavedStates\n\t\t\t\t);\n\t\t\t\treturn noop;\n\t\t\t}\n\n\t\t\treturn callback( ...args );\n\t\t};\n\t}\n\n\tcloseEntitiesSavedStates( savedEntities ) {\n\t\tconst { postType, postId } = this.props;\n\t\tconst { entitiesSavedStatesCallback } = this.state;\n\t\tthis.setState( { entitiesSavedStatesCallback: false }, () => {\n\t\t\tif (\n\t\t\t\tsavedEntities &&\n\t\t\t\tsavedEntities.some(\n\t\t\t\t\t( elt ) =>\n\t\t\t\t\t\telt.kind === 'postType' &&\n\t\t\t\t\t\telt.name === postType &&\n\t\t\t\t\t\telt.key === postId\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t// The post entity was checked, call the held callback from `createOnClick`.\n\t\t\t\tentitiesSavedStatesCallback();\n\t\t\t}\n\t\t} );\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tforceIsDirty,\n\t\t\thasPublishAction,\n\t\t\tisBeingScheduled,\n\t\t\tisOpen,\n\t\t\tisPostSavingLocked,\n\t\t\tisPublishable,\n\t\t\tisPublished,\n\t\t\tisSaveable,\n\t\t\tisSaving,\n\t\t\tisAutoSaving,\n\t\t\tisToggle,\n\t\t\tsavePostStatus,\n\t\t\tonSubmit = noop,\n\t\t\tonToggle,\n\t\t\tvisibility,\n\t\t\thasNonPostEntityChanges,\n\t\t\tisSavingNonPostEntityChanges,\n\t\t\tpostStatus,\n\t\t\tpostStatusHasChanged,\n\t\t} = this.props;\n\n\t\tconst isButtonDisabled =\n\t\t\t( isSaving ||\n\t\t\t\t! isSaveable ||\n\t\t\t\tisPostSavingLocked ||\n\t\t\t\t( ! isPublishable && ! forceIsDirty ) ) &&\n\t\t\t( ! hasNonPostEntityChanges || isSavingNonPostEntityChanges );\n\n\t\tconst isToggleDisabled =\n\t\t\t( isPublished ||\n\t\t\t\tisSaving ||\n\t\t\t\t! isSaveable ||\n\t\t\t\t( ! isPublishable && ! forceIsDirty ) ) &&\n\t\t\t( ! hasNonPostEntityChanges || isSavingNonPostEntityChanges );\n\n\t\t// If the new status has not changed explicitely, we derive it from\n\t\t// other factors, like having a publish action, etc.. We need to preserve\n\t\t// this because it affects when to show the pre and post publish panels.\n\t\t// If it has changed though explicitely, we need to respect that.\n\t\tlet publishStatus = 'publish';\n\t\tif ( postStatusHasChanged ) {\n\t\t\tpublishStatus = postStatus;\n\t\t} else if ( ! hasPublishAction ) {\n\t\t\tpublishStatus = 'pending';\n\t\t} else if ( visibility === 'private' ) {\n\t\t\tpublishStatus = 'private';\n\t\t} else if ( isBeingScheduled ) {\n\t\t\tpublishStatus = 'future';\n\t\t}\n\n\t\tconst onClickButton = () => {\n\t\t\tif ( isButtonDisabled ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tonSubmit();\n\t\t\tsavePostStatus( publishStatus );\n\t\t};\n\n\t\t// Callback to open the publish panel.\n\t\tconst onClickToggle = () => {\n\t\t\tif ( isToggleDisabled ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tonToggle();\n\t\t};\n\n\t\tconst buttonProps = {\n\t\t\t'aria-disabled': isButtonDisabled,\n\t\t\tclassName: 'editor-post-publish-button',\n\t\t\tisBusy: ! isAutoSaving && isSaving,\n\t\t\tvariant: 'primary',\n\t\t\tonClick: this.createOnClick( onClickButton ),\n\t\t};\n\n\t\tconst toggleProps = {\n\t\t\t'aria-disabled': isToggleDisabled,\n\t\t\t'aria-expanded': isOpen,\n\t\t\tclassName: 'editor-post-publish-panel__toggle',\n\t\t\tisBusy: isSaving && isPublished,\n\t\t\tvariant: 'primary',\n\t\t\tsize: 'compact',\n\t\t\tonClick: this.createOnClick( onClickToggle ),\n\t\t};\n\t\tconst componentProps = isToggle ? toggleProps : buttonProps;\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Button\n\t\t\t\t\tref={ this.buttonNode }\n\t\t\t\t\t{ ...componentProps }\n\t\t\t\t\tclassName={ `${ componentProps.className } editor-post-publish-button__button` }\n\t\t\t\t\tsize=\"compact\"\n\t\t\t\t>\n\t\t\t\t\t<PublishButtonLabel />\n\t\t\t\t</Button>\n\t\t\t</>\n\t\t);\n\t}\n}\n\n/**\n * Renders the publish button.\n */\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\tconst {\n\t\t\tisSavingPost,\n\t\t\tisAutosavingPost,\n\t\t\tisEditedPostBeingScheduled,\n\t\t\tgetEditedPostVisibility,\n\t\t\tisCurrentPostPublished,\n\t\t\tisEditedPostSaveable,\n\t\t\tisEditedPostPublishable,\n\t\t\tisPostSavingLocked,\n\t\t\tgetCurrentPost,\n\t\t\tgetCurrentPostType,\n\t\t\tgetCurrentPostId,\n\t\t\thasNonPostEntityChanges,\n\t\t\tisSavingNonPostEntityChanges,\n\t\t\tgetEditedPostAttribute,\n\t\t\tgetPostEdits,\n\t\t\thasPostMetaChanges,\n\t\t} = unlock( select( editorStore ) );\n\t\treturn {\n\t\t\tisSaving: isSavingPost(),\n\t\t\tisAutoSaving: isAutosavingPost(),\n\t\t\tisBeingScheduled: isEditedPostBeingScheduled(),\n\t\t\tvisibility: getEditedPostVisibility(),\n\t\t\tisSaveable: isEditedPostSaveable(),\n\t\t\tisPostSavingLocked: isPostSavingLocked(),\n\t\t\tisPublishable: isEditedPostPublishable(),\n\t\t\tisPublished: isCurrentPostPublished(),\n\t\t\thasPublishAction:\n\t\t\t\tgetCurrentPost()._links?.[ 'wp:action-publish' ] ?? false,\n\t\t\tpostType: getCurrentPostType(),\n\t\t\tpostId: getCurrentPostId(),\n\t\t\tpostStatus: getEditedPostAttribute( 'status' ),\n\t\t\tpostStatusHasChanged: getPostEdits()?.status,\n\t\t\thasNonPostEntityChanges: hasNonPostEntityChanges(),\n\t\t\thasPostMetaChanges: hasPostMetaChanges(),\n\t\t\tisSavingNonPostEntityChanges: isSavingNonPostEntityChanges(),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { editPost, savePost } = dispatch( editorStore );\n\t\treturn {\n\t\t\tsavePostStatus: ( status ) => {\n\t\t\t\teditPost( { status }, { undoIgnore: true } );\n\t\t\t\tsavePost();\n\t\t\t},\n\t\t};\n\t} ),\n] )( PostPublishButton );\n","/**\n * WordPress dependencies\n */\nimport { Path, SVG } from '@wordpress/primitives';\n\nconst wordpress = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-2 -2 24 24\">\n\t\t<Path d=\"M20 10c0-5.51-4.49-10-10-10C4.48 0 0 4.49 0 10c0 5.52 4.48 10 10 10 5.51 0 10-4.48 10-10zM7.78 15.37L4.37 6.22c.55-.02 1.17-.08 1.17-.08.5-.06.44-1.13-.06-1.11 0 0-1.45.11-2.37.11-.18 0-.37 0-.58-.01C4.12 2.69 6.87 1.11 10 1.11c2.33 0 4.45.87 6.05 2.34-.68-.11-1.65.39-1.65 1.58 0 .74.45 1.36.9 2.1.35.61.55 1.36.55 2.46 0 1.49-1.4 5-1.4 5l-3.03-8.37c.54-.02.82-.17.82-.17.5-.05.44-1.25-.06-1.22 0 0-1.44.12-2.38.12-.87 0-2.33-.12-2.33-.12-.5-.03-.56 1.2-.06 1.22l.92.08 1.26 3.41zM17.41 10c.24-.64.74-1.87.43-4.25.7 1.29 1.05 2.71 1.05 4.25 0 3.29-1.73 6.24-4.4 7.78.97-2.59 1.94-5.2 2.92-7.78zM6.1 18.09C3.12 16.65 1.11 13.53 1.11 10c0-1.3.23-2.48.72-3.59C3.25 10.3 4.67 14.2 6.1 18.09zm4.03-6.63l2.58 6.98c-.86.29-1.76.45-2.71.45-.79 0-1.57-.11-2.29-.33.81-2.38 1.62-4.74 2.42-7.1z\" />\n\t</SVG>\n);\n\nexport default wordpress;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\nexport const visibilityOptions = {\n\tpublic: {\n\t\tlabel: __( 'Public' ),\n\t\tinfo: __( 'Visible to everyone.' ),\n\t},\n\tprivate: {\n\t\tlabel: __( 'Private' ),\n\t\tinfo: __( 'Only visible to site admins and editors.' ),\n\t},\n\tpassword: {\n\t\tlabel: __( 'Password protected' ),\n\t\tinfo: __( 'Only those with the password can view this post.' ),\n\t},\n};\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useState } from '@wordpress/element';\nimport {\n\tVisuallyHidden,\n\t__experimentalConfirmDialog as ConfirmDialog,\n} from '@wordpress/components';\nimport { useInstanceId } from '@wordpress/compose';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { __experimentalInspectorPopoverHeader as InspectorPopoverHeader } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport { visibilityOptions } from './utils';\nimport { store as editorStore } from '../../store';\n\n/**\n * Allows users to set the visibility of a post.\n *\n * @param {Object}   props         The component props.\n * @param {Function} props.onClose Function to call when the popover is closed.\n * @return {JSX.Element} The rendered component.\n */\nexport default function PostVisibility( { onClose } ) {\n\tconst instanceId = useInstanceId( PostVisibility );\n\n\tconst { status, visibility, password } = useSelect( ( select ) => ( {\n\t\tstatus: select( editorStore ).getEditedPostAttribute( 'status' ),\n\t\tvisibility: select( editorStore ).getEditedPostVisibility(),\n\t\tpassword: select( editorStore ).getEditedPostAttribute( 'password' ),\n\t} ) );\n\n\tconst { editPost, savePost } = useDispatch( editorStore );\n\n\tconst [ hasPassword, setHasPassword ] = useState( !! password );\n\tconst [ showPrivateConfirmDialog, setShowPrivateConfirmDialog ] =\n\t\tuseState( false );\n\n\tconst setPublic = () => {\n\t\teditPost( {\n\t\t\tstatus: visibility === 'private' ? 'draft' : status,\n\t\t\tpassword: '',\n\t\t} );\n\t\tsetHasPassword( false );\n\t};\n\n\tconst setPrivate = () => {\n\t\tsetShowPrivateConfirmDialog( true );\n\t};\n\n\tconst confirmPrivate = () => {\n\t\teditPost( { status: 'private', password: '' } );\n\t\tsetHasPassword( false );\n\t\tsetShowPrivateConfirmDialog( false );\n\t\tsavePost();\n\t};\n\n\tconst handleDialogCancel = () => {\n\t\tsetShowPrivateConfirmDialog( false );\n\t};\n\n\tconst setPasswordProtected = () => {\n\t\teditPost( {\n\t\t\tstatus: visibility === 'private' ? 'draft' : status,\n\t\t\tpassword: password || '',\n\t\t} );\n\t\tsetHasPassword( true );\n\t};\n\n\tconst updatePassword = ( event ) => {\n\t\teditPost( { password: event.target.value } );\n\t};\n\n\treturn (\n\t\t<div className=\"editor-post-visibility\">\n\t\t\t<InspectorPopoverHeader\n\t\t\t\ttitle={ __( 'Visibility' ) }\n\t\t\t\thelp={ __( 'Control how this post is viewed.' ) }\n\t\t\t\tonClose={ onClose }\n\t\t\t/>\n\t\t\t<fieldset className=\"editor-post-visibility__fieldset\">\n\t\t\t\t<VisuallyHidden as=\"legend\">\n\t\t\t\t\t{ __( 'Visibility' ) }\n\t\t\t\t</VisuallyHidden>\n\t\t\t\t<PostVisibilityChoice\n\t\t\t\t\tinstanceId={ instanceId }\n\t\t\t\t\tvalue=\"public\"\n\t\t\t\t\tlabel={ visibilityOptions.public.label }\n\t\t\t\t\tinfo={ visibilityOptions.public.info }\n\t\t\t\t\tchecked={ visibility === 'public' && ! hasPassword }\n\t\t\t\t\tonChange={ setPublic }\n\t\t\t\t/>\n\t\t\t\t<PostVisibilityChoice\n\t\t\t\t\tinstanceId={ instanceId }\n\t\t\t\t\tvalue=\"private\"\n\t\t\t\t\tlabel={ visibilityOptions.private.label }\n\t\t\t\t\tinfo={ visibilityOptions.private.info }\n\t\t\t\t\tchecked={ visibility === 'private' }\n\t\t\t\t\tonChange={ setPrivate }\n\t\t\t\t/>\n\t\t\t\t<PostVisibilityChoice\n\t\t\t\t\tinstanceId={ instanceId }\n\t\t\t\t\tvalue=\"password\"\n\t\t\t\t\tlabel={ visibilityOptions.password.label }\n\t\t\t\t\tinfo={ visibilityOptions.password.info }\n\t\t\t\t\tchecked={ hasPassword }\n\t\t\t\t\tonChange={ setPasswordProtected }\n\t\t\t\t/>\n\t\t\t\t{ hasPassword && (\n\t\t\t\t\t<div className=\"editor-post-visibility__password\">\n\t\t\t\t\t\t<VisuallyHidden\n\t\t\t\t\t\t\tas=\"label\"\n\t\t\t\t\t\t\thtmlFor={ `editor-post-visibility__password-input-${ instanceId }` }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Create password' ) }\n\t\t\t\t\t\t</VisuallyHidden>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"editor-post-visibility__password-input\"\n\t\t\t\t\t\t\tid={ `editor-post-visibility__password-input-${ instanceId }` }\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tonChange={ updatePassword }\n\t\t\t\t\t\t\tvalue={ password }\n\t\t\t\t\t\t\tplaceholder={ __( 'Use a secure password' ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\t\t\t</fieldset>\n\t\t\t<ConfirmDialog\n\t\t\t\tisOpen={ showPrivateConfirmDialog }\n\t\t\t\tonConfirm={ confirmPrivate }\n\t\t\t\tonCancel={ handleDialogCancel }\n\t\t\t\tconfirmButtonText={ __( 'Publish' ) }\n\t\t\t\tsize=\"medium\"\n\t\t\t>\n\t\t\t\t{ __( 'Would you like to privately publish this post now?' ) }\n\t\t\t</ConfirmDialog>\n\t\t</div>\n\t);\n}\n\nfunction PostVisibilityChoice( { instanceId, value, label, info, ...props } ) {\n\treturn (\n\t\t<div className=\"editor-post-visibility__choice\">\n\t\t\t<input\n\t\t\t\ttype=\"radio\"\n\t\t\t\tname={ `editor-post-visibility__setting-${ instanceId }` }\n\t\t\t\tvalue={ value }\n\t\t\t\tid={ `editor-post-${ value }-${ instanceId }` }\n\t\t\t\taria-describedby={ `editor-post-${ value }-${ instanceId }-description` }\n\t\t\t\tclassName=\"editor-post-visibility__radio\"\n\t\t\t\t{ ...props }\n\t\t\t/>\n\t\t\t<label\n\t\t\t\thtmlFor={ `editor-post-${ value }-${ instanceId }` }\n\t\t\t\tclassName=\"editor-post-visibility__label\"\n\t\t\t>\n\t\t\t\t{ label }\n\t\t\t</label>\n\t\t\t<p\n\t\t\t\tid={ `editor-post-${ value }-${ instanceId }-description` }\n\t\t\t\tclassName=\"editor-post-visibility__info\"\n\t\t\t>\n\t\t\t\t{ info }\n\t\t\t</p>\n\t\t</div>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { visibilityOptions } from './utils';\nimport { store as editorStore } from '../../store';\n\n/**\n * Returns the label for the current post visibility setting.\n *\n * @return {string} Post visibility label.\n */\nexport default function PostVisibilityLabel() {\n\treturn usePostVisibilityLabel();\n}\n\n/**\n * Get the label for the current post visibility setting.\n *\n * @return {string} Post visibility label.\n */\nexport function usePostVisibilityLabel() {\n\tconst visibility = useSelect( ( select ) =>\n\t\tselect( editorStore ).getEditedPostVisibility()\n\t);\n\treturn visibilityOptions[ visibility ]?.label;\n}\n","/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument) {\n  const argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (\n    argument instanceof Date ||\n    (typeof argument === \"object\" && argStr === \"[object Date]\")\n  ) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new argument.constructor(+argument);\n  } else if (\n    typeof argument === \"number\" ||\n    argStr === \"[object Number]\" ||\n    typeof argument === \"string\" ||\n    argStr === \"[object String]\"\n  ) {\n    // TODO: Can we get rid of as?\n    return new Date(argument);\n  } else {\n    // TODO: Can we get rid of as?\n    return new Date(NaN);\n  }\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name startOfMonth\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a month\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * const result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfMonth(date) {\n  const _date = toDate(date);\n  _date.setDate(1);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfMonth;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The end of a month\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nexport function endOfMonth(date) {\n  const _date = toDate(date);\n  const month = _date.getMonth();\n  _date.setFullYear(_date.getFullYear(), month + 1, 0);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfMonth;\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n","import { millisecondsInHour, millisecondsInMinute } from \"./constants.mjs\";\n\n/**\n * The {@link parseISO} function options.\n */\n\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param argument - The value to convert\n * @param options - An object with options\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * const result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * const result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\nexport function parseISO(argument, options) {\n  const additionalDigits = options?.additionalDigits ?? 2;\n  const dateStrings = splitDateString(argument);\n\n  let date;\n  if (dateStrings.date) {\n    const parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (!date || isNaN(date.getTime())) {\n    return new Date(NaN);\n  }\n\n  const timestamp = date.getTime();\n  let time = 0;\n  let offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n    if (isNaN(time)) {\n      return new Date(NaN);\n    }\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n    if (isNaN(offset)) {\n      return new Date(NaN);\n    }\n  } else {\n    const dirtyDate = new Date(timestamp + time);\n    // JS parsed string assuming it's in UTC timezone\n    // but we need it to be parsed in our timezone\n    // so we use utc values to build date in our timezone.\n    // Year values from 0 to 99 map to the years 1900 to 1999\n    // so set year explicitly with setFullYear.\n    const result = new Date(0);\n    result.setFullYear(\n      dirtyDate.getUTCFullYear(),\n      dirtyDate.getUTCMonth(),\n      dirtyDate.getUTCDate(),\n    );\n    result.setHours(\n      dirtyDate.getUTCHours(),\n      dirtyDate.getUTCMinutes(),\n      dirtyDate.getUTCSeconds(),\n      dirtyDate.getUTCMilliseconds(),\n    );\n    return result;\n  }\n\n  return new Date(timestamp + time + offset);\n}\n\nconst patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/,\n};\n\nconst dateRegex =\n  /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nconst timeRegex =\n  /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nconst timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n\nfunction splitDateString(dateString) {\n  const dateStrings = {};\n  const array = dateString.split(patterns.dateTimeDelimiter);\n  let timeString;\n\n  // The regex match should only return at maximum two array elements.\n  // [date], [time], or [date, time].\n  if (array.length > 2) {\n    return dateStrings;\n  }\n\n  if (/:/.test(array[0])) {\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(\n        dateStrings.date.length,\n        dateString.length,\n      );\n    }\n  }\n\n  if (timeString) {\n    const token = patterns.timezone.exec(timeString);\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], \"\");\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  const regex = new RegExp(\n    \"^(?:(\\\\d{4}|[+-]\\\\d{\" +\n      (4 + additionalDigits) +\n      \"})|(\\\\d{2}|[+-]\\\\d{\" +\n      (2 + additionalDigits) +\n      \"})$)\",\n  );\n\n  const captures = dateString.match(regex);\n  // Invalid ISO-formatted year\n  if (!captures) return { year: NaN, restDateString: \"\" };\n\n  const year = captures[1] ? parseInt(captures[1]) : null;\n  const century = captures[2] ? parseInt(captures[2]) : null;\n\n  // either year or century is null, not both\n  return {\n    year: century === null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length),\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return new Date(NaN);\n\n  const captures = dateString.match(dateRegex);\n  // Invalid ISO-formatted string\n  if (!captures) return new Date(NaN);\n\n  const isWeekDate = !!captures[4];\n  const dayOfYear = parseDateUnit(captures[1]);\n  const month = parseDateUnit(captures[2]) - 1;\n  const day = parseDateUnit(captures[3]);\n  const week = parseDateUnit(captures[4]);\n  const dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    const date = new Date(0);\n    if (\n      !validateDate(year, month, day) ||\n      !validateDayOfYearDate(year, dayOfYear)\n    ) {\n      return new Date(NaN);\n    }\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  const captures = timeString.match(timeRegex);\n  if (!captures) return NaN; // Invalid ISO-formatted time\n\n  const hours = parseTimeUnit(captures[1]);\n  const minutes = parseTimeUnit(captures[2]);\n  const seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return (\n    hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * 1000\n  );\n}\n\nfunction parseTimeUnit(value) {\n  return (value && parseFloat(value.replace(\",\", \".\"))) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === \"Z\") return 0;\n\n  const captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n\n  const sign = captures[1] === \"+\" ? -1 : 1;\n  const hours = parseInt(captures[2]);\n  const minutes = (captures[3] && parseInt(captures[3])) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * millisecondsInHour + minutes * millisecondsInMinute);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  const date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  const fourthOfJanuaryDay = date.getUTCDay() || 7;\n  const diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}\n\n// Validation functions\n\n// February is null to handle the leap year (using ||)\nconst daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\n}\n\nfunction validateDate(year, month, date) {\n  return (\n    month >= 0 &&\n    month <= 11 &&\n    date >= 1 &&\n    date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28))\n  );\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return (\n    seconds >= 0 &&\n    seconds < 60 &&\n    minutes >= 0 &&\n    minutes < 60 &&\n    hours >= 0 &&\n    hours < 25\n  );\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}\n\n// Fallback for modularized imports:\nexport default parseISO;\n","/**\n * External dependencies\n */\nimport { parseISO, endOfMonth, startOfMonth } from 'date-fns';\n\n/**\n * WordPress dependencies\n */\nimport { getSettings } from '@wordpress/date';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { privateApis as blockEditorPrivateApis } from '@wordpress/block-editor';\nimport { useState, useMemo } from '@wordpress/element';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\nimport { unlock } from '../../lock-unlock';\n\nconst { PrivatePublishDateTimePicker } = unlock( blockEditorPrivateApis );\n\n/**\n * Renders the PostSchedule component. It allows the user to schedule a post.\n *\n * @param {Object}   props         Props.\n * @param {Function} props.onClose Function to close the component.\n *\n * @return {Component} The component to be rendered.\n */\nexport default function PostSchedule( props ) {\n\treturn (\n\t\t<PrivatePostSchedule\n\t\t\t{ ...props }\n\t\t\tshowPopoverHeaderActions\n\t\t\tisCompact={ false }\n\t\t/>\n\t);\n}\n\nexport function PrivatePostSchedule( {\n\tonClose,\n\tshowPopoverHeaderActions,\n\tisCompact,\n} ) {\n\tconst { postDate, postType } = useSelect(\n\t\t( select ) => ( {\n\t\t\tpostDate: select( editorStore ).getEditedPostAttribute( 'date' ),\n\t\t\tpostType: select( editorStore ).getCurrentPostType(),\n\t\t} ),\n\t\t[]\n\t);\n\n\tconst { editPost } = useDispatch( editorStore );\n\tconst onUpdateDate = ( date ) => editPost( { date } );\n\n\tconst [ previewedMonth, setPreviewedMonth ] = useState(\n\t\tstartOfMonth( new Date( postDate ) )\n\t);\n\n\t// Pick up published and schduled site posts.\n\tconst eventsByPostType = useSelect(\n\t\t( select ) =>\n\t\t\tselect( coreStore ).getEntityRecords( 'postType', postType, {\n\t\t\t\tstatus: 'publish,future',\n\t\t\t\tafter: startOfMonth( previewedMonth ).toISOString(),\n\t\t\t\tbefore: endOfMonth( previewedMonth ).toISOString(),\n\t\t\t\texclude: [ select( editorStore ).getCurrentPostId() ],\n\t\t\t\tper_page: 100,\n\t\t\t\t_fields: 'id,date',\n\t\t\t} ),\n\t\t[ previewedMonth, postType ]\n\t);\n\n\tconst events = useMemo(\n\t\t() =>\n\t\t\t( eventsByPostType || [] ).map( ( { date: eventDate } ) => ( {\n\t\t\t\tdate: new Date( eventDate ),\n\t\t\t} ) ),\n\t\t[ eventsByPostType ]\n\t);\n\n\tconst settings = getSettings();\n\n\t// To know if the current timezone is a 12 hour time with look for \"a\" in the time format\n\t// We also make sure this a is not escaped by a \"/\"\n\tconst is12HourTime = /a(?!\\\\)/i.test(\n\t\tsettings.formats.time\n\t\t\t.toLowerCase() // Test only the lower case a.\n\t\t\t.replace( /\\\\\\\\/g, '' ) // Replace \"//\" with empty strings.\n\t\t\t.split( '' )\n\t\t\t.reverse()\n\t\t\t.join( '' ) // Reverse the string and test for \"a\" not followed by a slash.\n\t);\n\n\treturn (\n\t\t<PrivatePublishDateTimePicker\n\t\t\tcurrentDate={ postDate }\n\t\t\tonChange={ onUpdateDate }\n\t\t\tis12Hour={ is12HourTime }\n\t\t\tevents={ events }\n\t\t\tonMonthPreviewed={ ( date ) =>\n\t\t\t\tsetPreviewedMonth( parseISO( date ) )\n\t\t\t}\n\t\t\tonClose={ onClose }\n\t\t\tisCompact={ isCompact }\n\t\t\tshowPopoverHeaderActions={ showPopoverHeaderActions }\n\t\t/>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { __, _x, sprintf, isRTL } from '@wordpress/i18n';\nimport { getSettings, getDate, dateI18n } from '@wordpress/date';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\n/**\n * Renders the PostScheduleLabel component.\n *\n * @param {Object} props Props.\n *\n * @return {Component} The component to be rendered.\n */\nexport default function PostScheduleLabel( props ) {\n\treturn usePostScheduleLabel( props );\n}\n\n/**\n * Custom hook to get the label for post schedule.\n *\n * @param {Object}  options      Options for the hook.\n * @param {boolean} options.full Whether to get the full label or not. Default is false.\n *\n * @return {string} The label for post schedule.\n */\nexport function usePostScheduleLabel( { full = false } = {} ) {\n\tconst { date, isFloating } = useSelect(\n\t\t( select ) => ( {\n\t\t\tdate: select( editorStore ).getEditedPostAttribute( 'date' ),\n\t\t\tisFloating: select( editorStore ).isEditedPostDateFloating(),\n\t\t} ),\n\t\t[]\n\t);\n\n\treturn full\n\t\t? getFullPostScheduleLabel( date )\n\t\t: getPostScheduleLabel( date, { isFloating } );\n}\n\nexport function getFullPostScheduleLabel( dateAttribute ) {\n\tconst date = getDate( dateAttribute );\n\n\tconst timezoneAbbreviation = getTimezoneAbbreviation();\n\tconst formattedDate = dateI18n(\n\t\t// translators: If using a space between 'g:i' and 'a', use a non-breaking space.\n\t\t_x( 'F j, Y g:i\\xa0a', 'post schedule full date format' ),\n\t\tdate\n\t);\n\treturn isRTL()\n\t\t? `${ timezoneAbbreviation } ${ formattedDate }`\n\t\t: `${ formattedDate } ${ timezoneAbbreviation }`;\n}\n\nexport function getPostScheduleLabel(\n\tdateAttribute,\n\t{ isFloating = false, now = new Date() } = {}\n) {\n\tif ( ! dateAttribute || isFloating ) {\n\t\treturn __( 'Immediately' );\n\t}\n\n\t// If the user timezone does not equal the site timezone then using words\n\t// like 'tomorrow' is confusing, so show the full date.\n\tif ( ! isTimezoneSameAsSiteTimezone( now ) ) {\n\t\treturn getFullPostScheduleLabel( dateAttribute );\n\t}\n\n\tconst date = getDate( dateAttribute );\n\n\tif ( isSameDay( date, now ) ) {\n\t\treturn sprintf(\n\t\t\t// translators: %s: Time of day the post is scheduled for.\n\t\t\t__( 'Today at %s' ),\n\t\t\t// translators: If using a space between 'g:i' and 'a', use a non-breaking space.\n\t\t\tdateI18n( _x( 'g:i\\xa0a', 'post schedule time format' ), date )\n\t\t);\n\t}\n\n\tconst tomorrow = new Date( now );\n\ttomorrow.setDate( tomorrow.getDate() + 1 );\n\n\tif ( isSameDay( date, tomorrow ) ) {\n\t\treturn sprintf(\n\t\t\t// translators: %s: Time of day the post is scheduled for.\n\t\t\t__( 'Tomorrow at %s' ),\n\t\t\t// translators: If using a space between 'g:i' and 'a', use a non-breaking space.\n\t\t\tdateI18n( _x( 'g:i\\xa0a', 'post schedule time format' ), date )\n\t\t);\n\t}\n\n\tif ( date.getFullYear() === now.getFullYear() ) {\n\t\treturn dateI18n(\n\t\t\t// translators: If using a space between 'g:i' and 'a', use a non-breaking space.\n\t\t\t_x( 'F j g:i\\xa0a', 'post schedule date format without year' ),\n\t\t\tdate\n\t\t);\n\t}\n\n\treturn dateI18n(\n\t\t// translators: Use a non-breaking space between 'g:i' and 'a' if appropriate.\n\t\t_x( 'F j, Y g:i\\xa0a', 'post schedule full date format' ),\n\t\tdate\n\t);\n}\n\nfunction getTimezoneAbbreviation() {\n\tconst { timezone } = getSettings();\n\n\tif ( timezone.abbr && isNaN( Number( timezone.abbr ) ) ) {\n\t\treturn timezone.abbr;\n\t}\n\n\tconst symbol = timezone.offset < 0 ? '' : '+';\n\treturn `UTC${ symbol }${ timezone.offsetFormatted }`;\n}\n\nfunction isTimezoneSameAsSiteTimezone( date ) {\n\tconst { timezone } = getSettings();\n\n\tconst siteOffset = Number( timezone.offset );\n\tconst dateOffset = -1 * ( date.getTimezoneOffset() / 60 );\n\treturn siteOffset === dateOffset;\n}\n\nfunction isSameDay( left, right ) {\n\treturn (\n\t\tleft.getDate() === right.getDate() &&\n\t\tleft.getMonth() === right.getMonth() &&\n\t\tleft.getFullYear() === right.getFullYear()\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { BaseControl, Button } from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { unescapeTerms } from '../../utils/terms';\n\nconst MIN_MOST_USED_TERMS = 3;\nconst DEFAULT_QUERY = {\n\tper_page: 10,\n\torderby: 'count',\n\torder: 'desc',\n\thide_empty: true,\n\t_fields: 'id,name,count',\n\tcontext: 'view',\n};\n\nexport default function MostUsedTerms( { onSelect, taxonomy } ) {\n\tconst { _terms, showTerms } = useSelect(\n\t\t( select ) => {\n\t\t\tconst mostUsedTerms = select( coreStore ).getEntityRecords(\n\t\t\t\t'taxonomy',\n\t\t\t\ttaxonomy.slug,\n\t\t\t\tDEFAULT_QUERY\n\t\t\t);\n\t\t\treturn {\n\t\t\t\t_terms: mostUsedTerms,\n\t\t\t\tshowTerms: mostUsedTerms?.length >= MIN_MOST_USED_TERMS,\n\t\t\t};\n\t\t},\n\t\t[ taxonomy.slug ]\n\t);\n\n\tif ( ! showTerms ) {\n\t\treturn null;\n\t}\n\n\tconst terms = unescapeTerms( _terms );\n\n\treturn (\n\t\t<div className=\"editor-post-taxonomies__flat-term-most-used\">\n\t\t\t<BaseControl.VisualLabel\n\t\t\t\tas=\"h3\"\n\t\t\t\tclassName=\"editor-post-taxonomies__flat-term-most-used-label\"\n\t\t\t>\n\t\t\t\t{ taxonomy.labels.most_used }\n\t\t\t</BaseControl.VisualLabel>\n\t\t\t{ /*\n\t\t\t * Disable reason: The `list` ARIA role is redundant but\n\t\t\t * Safari+VoiceOver won't announce the list otherwise.\n\t\t\t */\n\t\t\t/* eslint-disable jsx-a11y/no-redundant-roles */ }\n\t\t\t<ul\n\t\t\t\trole=\"list\"\n\t\t\t\tclassName=\"editor-post-taxonomies__flat-term-most-used-list\"\n\t\t\t>\n\t\t\t\t{ terms.map( ( term ) => (\n\t\t\t\t\t<li key={ term.id }>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\t\tonClick={ () => onSelect( term ) }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ term.name }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</li>\n\t\t\t\t) ) }\n\t\t\t</ul>\n\t\t\t{ /* eslint-enable jsx-a11y/no-redundant-roles */ }\n\t\t</div>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { __, _x, sprintf } from '@wordpress/i18n';\nimport { useEffect, useMemo, useState } from '@wordpress/element';\nimport { FormTokenField, withFilters } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { useDebounce } from '@wordpress/compose';\nimport { speak } from '@wordpress/a11y';\nimport { store as noticesStore } from '@wordpress/notices';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\nimport { unescapeString, unescapeTerm } from '../../utils/terms';\nimport MostUsedTerms from './most-used-terms';\n\n/**\n * Shared reference to an empty array for cases where it is important to avoid\n * returning a new array reference on every invocation.\n *\n * @type {Array<any>}\n */\nconst EMPTY_ARRAY = [];\n\n/**\n * How the max suggestions limit was chosen:\n *  - Matches the `per_page` range set by the REST API.\n *  - Can't use \"unbound\" query. The `FormTokenField` needs a fixed number.\n *  - Matches default for `FormTokenField`.\n */\nconst MAX_TERMS_SUGGESTIONS = 100;\nconst DEFAULT_QUERY = {\n\tper_page: MAX_TERMS_SUGGESTIONS,\n\t_fields: 'id,name',\n\tcontext: 'view',\n};\n\nconst isSameTermName = ( termA, termB ) =>\n\tunescapeString( termA ).toLowerCase() ===\n\tunescapeString( termB ).toLowerCase();\n\nconst termNamesToIds = ( names, terms ) => {\n\treturn names\n\t\t.map(\n\t\t\t( termName ) =>\n\t\t\t\tterms.find( ( term ) => isSameTermName( term.name, termName ) )\n\t\t\t\t\t?.id\n\t\t)\n\t\t.filter( ( id ) => id !== undefined );\n};\n\n/**\n * Renders a flat term selector component.\n *\n * @param {Object} props      The component props.\n * @param {string} props.slug The slug of the taxonomy.\n *\n * @return {JSX.Element} The rendered flat term selector component.\n */\nexport function FlatTermSelector( { slug } ) {\n\tconst [ values, setValues ] = useState( [] );\n\tconst [ search, setSearch ] = useState( '' );\n\tconst debouncedSearch = useDebounce( setSearch, 500 );\n\n\tconst {\n\t\tterms,\n\t\ttermIds,\n\t\ttaxonomy,\n\t\thasAssignAction,\n\t\thasCreateAction,\n\t\thasResolvedTerms,\n\t} = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getCurrentPost, getEditedPostAttribute } =\n\t\t\t\tselect( editorStore );\n\t\t\tconst { getEntityRecords, getTaxonomy, hasFinishedResolution } =\n\t\t\t\tselect( coreStore );\n\t\t\tconst post = getCurrentPost();\n\t\t\tconst _taxonomy = getTaxonomy( slug );\n\t\t\tconst _termIds = _taxonomy\n\t\t\t\t? getEditedPostAttribute( _taxonomy.rest_base )\n\t\t\t\t: EMPTY_ARRAY;\n\n\t\t\tconst query = {\n\t\t\t\t...DEFAULT_QUERY,\n\t\t\t\tinclude: _termIds.join( ',' ),\n\t\t\t\tper_page: -1,\n\t\t\t};\n\n\t\t\treturn {\n\t\t\t\thasCreateAction: _taxonomy\n\t\t\t\t\t? post._links?.[\n\t\t\t\t\t\t\t'wp:action-create-' + _taxonomy.rest_base\n\t\t\t\t\t  ] ?? false\n\t\t\t\t\t: false,\n\t\t\t\thasAssignAction: _taxonomy\n\t\t\t\t\t? post._links?.[\n\t\t\t\t\t\t\t'wp:action-assign-' + _taxonomy.rest_base\n\t\t\t\t\t  ] ?? false\n\t\t\t\t\t: false,\n\t\t\t\ttaxonomy: _taxonomy,\n\t\t\t\ttermIds: _termIds,\n\t\t\t\tterms: _termIds.length\n\t\t\t\t\t? getEntityRecords( 'taxonomy', slug, query )\n\t\t\t\t\t: EMPTY_ARRAY,\n\t\t\t\thasResolvedTerms: hasFinishedResolution( 'getEntityRecords', [\n\t\t\t\t\t'taxonomy',\n\t\t\t\t\tslug,\n\t\t\t\t\tquery,\n\t\t\t\t] ),\n\t\t\t};\n\t\t},\n\t\t[ slug ]\n\t);\n\n\tconst { searchResults } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getEntityRecords } = select( coreStore );\n\n\t\t\treturn {\n\t\t\t\tsearchResults: !! search\n\t\t\t\t\t? getEntityRecords( 'taxonomy', slug, {\n\t\t\t\t\t\t\t...DEFAULT_QUERY,\n\t\t\t\t\t\t\tsearch,\n\t\t\t\t\t  } )\n\t\t\t\t\t: EMPTY_ARRAY,\n\t\t\t};\n\t\t},\n\t\t[ search, slug ]\n\t);\n\n\t// Update terms state only after the selectors are resolved.\n\t// We're using this to avoid terms temporarily disappearing on slow networks\n\t// while core data makes REST API requests.\n\tuseEffect( () => {\n\t\tif ( hasResolvedTerms ) {\n\t\t\tconst newValues = ( terms ?? [] ).map( ( term ) =>\n\t\t\t\tunescapeString( term.name )\n\t\t\t);\n\n\t\t\tsetValues( newValues );\n\t\t}\n\t}, [ terms, hasResolvedTerms ] );\n\n\tconst suggestions = useMemo( () => {\n\t\treturn ( searchResults ?? [] ).map( ( term ) =>\n\t\t\tunescapeString( term.name )\n\t\t);\n\t}, [ searchResults ] );\n\n\tconst { editPost } = useDispatch( editorStore );\n\tconst { saveEntityRecord } = useDispatch( coreStore );\n\tconst { createErrorNotice } = useDispatch( noticesStore );\n\n\tif ( ! hasAssignAction ) {\n\t\treturn null;\n\t}\n\n\tasync function findOrCreateTerm( term ) {\n\t\ttry {\n\t\t\tconst newTerm = await saveEntityRecord( 'taxonomy', slug, term, {\n\t\t\t\tthrowOnError: true,\n\t\t\t} );\n\t\t\treturn unescapeTerm( newTerm );\n\t\t} catch ( error ) {\n\t\t\tif ( error.code !== 'term_exists' ) {\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tid: error.data.term_id,\n\t\t\t\tname: term.name,\n\t\t\t};\n\t\t}\n\t}\n\n\tfunction onUpdateTerms( newTermIds ) {\n\t\teditPost( { [ taxonomy.rest_base ]: newTermIds } );\n\t}\n\n\tfunction onChange( termNames ) {\n\t\tconst availableTerms = [\n\t\t\t...( terms ?? [] ),\n\t\t\t...( searchResults ?? [] ),\n\t\t];\n\t\tconst uniqueTerms = termNames.reduce( ( acc, name ) => {\n\t\t\tif (\n\t\t\t\t! acc.some( ( n ) => n.toLowerCase() === name.toLowerCase() )\n\t\t\t) {\n\t\t\t\tacc.push( name );\n\t\t\t}\n\t\t\treturn acc;\n\t\t}, [] );\n\n\t\tconst newTermNames = uniqueTerms.filter(\n\t\t\t( termName ) =>\n\t\t\t\t! availableTerms.find( ( term ) =>\n\t\t\t\t\tisSameTermName( term.name, termName )\n\t\t\t\t)\n\t\t);\n\n\t\t// Optimistically update term values.\n\t\t// The selector will always re-fetch terms later.\n\t\tsetValues( uniqueTerms );\n\n\t\tif ( newTermNames.length === 0 ) {\n\t\t\tonUpdateTerms( termNamesToIds( uniqueTerms, availableTerms ) );\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! hasCreateAction ) {\n\t\t\treturn;\n\t\t}\n\n\t\tPromise.all(\n\t\t\tnewTermNames.map( ( termName ) =>\n\t\t\t\tfindOrCreateTerm( { name: termName } )\n\t\t\t)\n\t\t)\n\t\t\t.then( ( newTerms ) => {\n\t\t\t\tconst newAvailableTerms = availableTerms.concat( newTerms );\n\t\t\t\tonUpdateTerms(\n\t\t\t\t\ttermNamesToIds( uniqueTerms, newAvailableTerms )\n\t\t\t\t);\n\t\t\t} )\n\t\t\t.catch( ( error ) => {\n\t\t\t\tcreateErrorNotice( error.message, {\n\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t} );\n\t\t\t\t// In case of a failure, try assigning available terms.\n\t\t\t\t// This will invalidate the optimistic update.\n\t\t\t\tonUpdateTerms( termNamesToIds( uniqueTerms, availableTerms ) );\n\t\t\t} );\n\t}\n\n\tfunction appendTerm( newTerm ) {\n\t\tif ( termIds.includes( newTerm.id ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst newTermIds = [ ...termIds, newTerm.id ];\n\t\tconst defaultName = slug === 'post_tag' ? __( 'Tag' ) : __( 'Term' );\n\t\tconst termAddedMessage = sprintf(\n\t\t\t/* translators: %s: term name. */\n\t\t\t_x( '%s added', 'term' ),\n\t\t\ttaxonomy?.labels?.singular_name ?? defaultName\n\t\t);\n\n\t\tspeak( termAddedMessage, 'assertive' );\n\t\tonUpdateTerms( newTermIds );\n\t}\n\n\tconst newTermLabel =\n\t\ttaxonomy?.labels?.add_new_item ??\n\t\t( slug === 'post_tag' ? __( 'Add new tag' ) : __( 'Add new Term' ) );\n\tconst singularName =\n\t\ttaxonomy?.labels?.singular_name ??\n\t\t( slug === 'post_tag' ? __( 'Tag' ) : __( 'Term' ) );\n\tconst termAddedLabel = sprintf(\n\t\t/* translators: %s: term name. */\n\t\t_x( '%s added', 'term' ),\n\t\tsingularName\n\t);\n\tconst termRemovedLabel = sprintf(\n\t\t/* translators: %s: term name. */\n\t\t_x( '%s removed', 'term' ),\n\t\tsingularName\n\t);\n\tconst removeTermLabel = sprintf(\n\t\t/* translators: %s: term name. */\n\t\t_x( 'Remove %s', 'term' ),\n\t\tsingularName\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<FormTokenField\n\t\t\t\t__next40pxDefaultSize\n\t\t\t\tvalue={ values }\n\t\t\t\tsuggestions={ suggestions }\n\t\t\t\tonChange={ onChange }\n\t\t\t\tonInputChange={ debouncedSearch }\n\t\t\t\tmaxSuggestions={ MAX_TERMS_SUGGESTIONS }\n\t\t\t\tlabel={ newTermLabel }\n\t\t\t\tmessages={ {\n\t\t\t\t\tadded: termAddedLabel,\n\t\t\t\t\tremoved: termRemovedLabel,\n\t\t\t\t\tremove: removeTermLabel,\n\t\t\t\t} }\n\t\t\t/>\n\t\t\t<MostUsedTerms taxonomy={ taxonomy } onSelect={ appendTerm } />\n\t\t</>\n\t);\n}\n\nexport default withFilters( 'editor.PostTaxonomyType' )( FlatTermSelector );\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useState } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport { PanelBody } from '@wordpress/components';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport FlatTermSelector from '../post-taxonomies/flat-term-selector';\nimport { store as editorStore } from '../../store';\n\nconst TagsPanel = () => {\n\tconst panelBodyTitle = [\n\t\t__( 'Suggestion:' ),\n\t\t<span className=\"editor-post-publish-panel__link\" key=\"label\">\n\t\t\t{ __( 'Add tags' ) }\n\t\t</span>,\n\t];\n\n\treturn (\n\t\t<PanelBody initialOpen={ false } title={ panelBodyTitle }>\n\t\t\t<p>\n\t\t\t\t{ __(\n\t\t\t\t\t'Tags help users and search engines navigate your site and find your content. Add a few keywords to describe your post.'\n\t\t\t\t) }\n\t\t\t</p>\n\t\t\t<FlatTermSelector slug=\"post_tag\" />\n\t\t</PanelBody>\n\t);\n};\n\nconst MaybeTagsPanel = () => {\n\tconst { hasTags, isPostTypeSupported } = useSelect( ( select ) => {\n\t\tconst postType = select( editorStore ).getCurrentPostType();\n\t\tconst tagsTaxonomy = select( coreStore ).getTaxonomy( 'post_tag' );\n\t\tconst _isPostTypeSupported = tagsTaxonomy?.types?.includes( postType );\n\t\tconst areTagsFetched = tagsTaxonomy !== undefined;\n\t\tconst tags =\n\t\t\ttagsTaxonomy &&\n\t\t\tselect( editorStore ).getEditedPostAttribute(\n\t\t\t\ttagsTaxonomy.rest_base\n\t\t\t);\n\t\treturn {\n\t\t\thasTags: !! tags?.length,\n\t\t\tisPostTypeSupported: areTagsFetched && _isPostTypeSupported,\n\t\t};\n\t}, [] );\n\tconst [ hadTagsWhenOpeningThePanel ] = useState( hasTags );\n\n\tif ( ! isPostTypeSupported ) {\n\t\treturn null;\n\t}\n\n\t/*\n\t * We only want to show the tag panel if the post didn't have\n\t * any tags when the user hit the Publish button.\n\t *\n\t * We can't use the prop.hasTags because it'll change to true\n\t * if the user adds a new tag within the pre-publish panel.\n\t * This would force a re-render and a new prop.hasTags check,\n\t * hiding this panel and keeping the user from adding\n\t * more than one tag.\n\t */\n\tif ( ! hadTagsWhenOpeningThePanel ) {\n\t\treturn <TagsPanel />;\n\t}\n\n\treturn null;\n};\n\nexport default MaybeTagsPanel;\n","/**\n * WordPress dependencies\n */\nimport { Button, PanelBody } from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { POST_FORMATS } from '../post-format';\nimport { store as editorStore } from '../../store';\n\nconst getSuggestion = ( supportedFormats, suggestedPostFormat ) => {\n\tconst formats = POST_FORMATS.filter( ( format ) =>\n\t\tsupportedFormats?.includes( format.id )\n\t);\n\treturn formats.find( ( format ) => format.id === suggestedPostFormat );\n};\n\nconst PostFormatSuggestion = ( {\n\tsuggestedPostFormat,\n\tsuggestionText,\n\tonUpdatePostFormat,\n} ) => (\n\t<Button\n\t\tvariant=\"link\"\n\t\tonClick={ () => onUpdatePostFormat( suggestedPostFormat ) }\n\t>\n\t\t{ suggestionText }\n\t</Button>\n);\n\nexport default function PostFormatPanel() {\n\tconst { currentPostFormat, suggestion } = useSelect( ( select ) => {\n\t\tconst { getEditedPostAttribute, getSuggestedPostFormat } =\n\t\t\tselect( editorStore );\n\t\tconst supportedFormats =\n\t\t\tselect( coreStore ).getThemeSupports().formats ?? [];\n\t\treturn {\n\t\t\tcurrentPostFormat: getEditedPostAttribute( 'format' ),\n\t\t\tsuggestion: getSuggestion(\n\t\t\t\tsupportedFormats,\n\t\t\t\tgetSuggestedPostFormat()\n\t\t\t),\n\t\t};\n\t}, [] );\n\n\tconst { editPost } = useDispatch( editorStore );\n\n\tconst onUpdatePostFormat = ( format ) => editPost( { format } );\n\n\tconst panelBodyTitle = [\n\t\t__( 'Suggestion:' ),\n\t\t<span className=\"editor-post-publish-panel__link\" key=\"label\">\n\t\t\t{ __( 'Use a post format' ) }\n\t\t</span>,\n\t];\n\n\tif ( ! suggestion || suggestion.id === currentPostFormat ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<PanelBody initialOpen={ false } title={ panelBodyTitle }>\n\t\t\t<p>\n\t\t\t\t{ __(\n\t\t\t\t\t'Your theme uses post formats to highlight different kinds of content, like images or videos. Apply a post format to see this special styling.'\n\t\t\t\t) }\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\t<PostFormatSuggestion\n\t\t\t\t\tonUpdatePostFormat={ onUpdatePostFormat }\n\t\t\t\t\tsuggestedPostFormat={ suggestion.id }\n\t\t\t\t\tsuggestionText={ sprintf(\n\t\t\t\t\t\t/* translators: %s: post format */\n\t\t\t\t\t\t__( 'Apply the \"%1$s\" format.' ),\n\t\t\t\t\t\tsuggestion.caption\n\t\t\t\t\t) }\n\t\t\t\t/>\n\t\t\t</p>\n\t\t</PanelBody>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { __, _n, _x, sprintf } from '@wordpress/i18n';\nimport { useMemo, useState } from '@wordpress/element';\nimport { store as noticesStore } from '@wordpress/notices';\nimport {\n\tButton,\n\tCheckboxControl,\n\tTextControl,\n\tTreeSelect,\n\twithFilters,\n\tFlex,\n\tFlexItem,\n} from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { useDebounce } from '@wordpress/compose';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { speak } from '@wordpress/a11y';\nimport { decodeEntities } from '@wordpress/html-entities';\n\n/**\n * Internal dependencies\n */\nimport { buildTermsTree } from '../../utils/terms';\nimport { store as editorStore } from '../../store';\n\n/**\n * Module Constants\n */\nconst DEFAULT_QUERY = {\n\tper_page: -1,\n\torderby: 'name',\n\torder: 'asc',\n\t_fields: 'id,name,parent',\n\tcontext: 'view',\n};\n\nconst MIN_TERMS_COUNT_FOR_FILTER = 8;\n\nconst EMPTY_ARRAY = [];\n\n/**\n * Sort Terms by Selected.\n *\n * @param {Object[]} termsTree Array of terms in tree format.\n * @param {number[]} terms     Selected terms.\n *\n * @return {Object[]} Sorted array of terms.\n */\nexport function sortBySelected( termsTree, terms ) {\n\tconst treeHasSelection = ( termTree ) => {\n\t\tif ( terms.indexOf( termTree.id ) !== -1 ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( undefined === termTree.children ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn (\n\t\t\ttermTree.children\n\t\t\t\t.map( treeHasSelection )\n\t\t\t\t.filter( ( child ) => child ).length > 0\n\t\t);\n\t};\n\tconst termOrChildIsSelected = ( termA, termB ) => {\n\t\tconst termASelected = treeHasSelection( termA );\n\t\tconst termBSelected = treeHasSelection( termB );\n\n\t\tif ( termASelected === termBSelected ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tif ( termASelected && ! termBSelected ) {\n\t\t\treturn -1;\n\t\t}\n\n\t\tif ( ! termASelected && termBSelected ) {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn 0;\n\t};\n\tconst newTermTree = [ ...termsTree ];\n\tnewTermTree.sort( termOrChildIsSelected );\n\treturn newTermTree;\n}\n\n/**\n * Find term by parent id or name.\n *\n * @param {Object[]}      terms  Array of Terms.\n * @param {number|string} parent id.\n * @param {string}        name   Term name.\n * @return {Object} Term object.\n */\nexport function findTerm( terms, parent, name ) {\n\treturn terms.find( ( term ) => {\n\t\treturn (\n\t\t\t( ( ! term.parent && ! parent ) ||\n\t\t\t\tparseInt( term.parent ) === parseInt( parent ) ) &&\n\t\t\tterm.name.toLowerCase() === name.toLowerCase()\n\t\t);\n\t} );\n}\n\n/**\n * Get filter matcher function.\n *\n * @param {string} filterValue Filter value.\n * @return {(function(Object): (Object|boolean))} Matcher function.\n */\nexport function getFilterMatcher( filterValue ) {\n\tconst matchTermsForFilter = ( originalTerm ) => {\n\t\tif ( '' === filterValue ) {\n\t\t\treturn originalTerm;\n\t\t}\n\n\t\t// Shallow clone, because we'll be filtering the term's children and\n\t\t// don't want to modify the original term.\n\t\tconst term = { ...originalTerm };\n\n\t\t// Map and filter the children, recursive so we deal with grandchildren\n\t\t// and any deeper levels.\n\t\tif ( term.children.length > 0 ) {\n\t\t\tterm.children = term.children\n\t\t\t\t.map( matchTermsForFilter )\n\t\t\t\t.filter( ( child ) => child );\n\t\t}\n\n\t\t// If the term's name contains the filterValue, or it has children\n\t\t// (i.e. some child matched at some point in the tree) then return it.\n\t\tif (\n\t\t\t-1 !==\n\t\t\t\tterm.name.toLowerCase().indexOf( filterValue.toLowerCase() ) ||\n\t\t\tterm.children.length > 0\n\t\t) {\n\t\t\treturn term;\n\t\t}\n\n\t\t// Otherwise, return false. After mapping, the list of terms will need\n\t\t// to have false values filtered out.\n\t\treturn false;\n\t};\n\treturn matchTermsForFilter;\n}\n\n/**\n * Hierarchical term selector.\n *\n * @param {Object} props      Component props.\n * @param {string} props.slug Taxonomy slug.\n * @return {Element}        Hierarchical term selector component.\n */\nexport function HierarchicalTermSelector( { slug } ) {\n\tconst [ adding, setAdding ] = useState( false );\n\tconst [ formName, setFormName ] = useState( '' );\n\t/**\n\t * @type {[number|'', Function]}\n\t */\n\tconst [ formParent, setFormParent ] = useState( '' );\n\tconst [ showForm, setShowForm ] = useState( false );\n\tconst [ filterValue, setFilterValue ] = useState( '' );\n\tconst [ filteredTermsTree, setFilteredTermsTree ] = useState( [] );\n\tconst debouncedSpeak = useDebounce( speak, 500 );\n\n\tconst {\n\t\thasCreateAction,\n\t\thasAssignAction,\n\t\tterms,\n\t\tloading,\n\t\tavailableTerms,\n\t\ttaxonomy,\n\t} = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getCurrentPost, getEditedPostAttribute } =\n\t\t\t\tselect( editorStore );\n\t\t\tconst { getTaxonomy, getEntityRecords, isResolving } =\n\t\t\t\tselect( coreStore );\n\t\t\tconst _taxonomy = getTaxonomy( slug );\n\t\t\tconst post = getCurrentPost();\n\n\t\t\treturn {\n\t\t\t\thasCreateAction: _taxonomy\n\t\t\t\t\t? post._links?.[\n\t\t\t\t\t\t\t'wp:action-create-' + _taxonomy.rest_base\n\t\t\t\t\t  ] ?? false\n\t\t\t\t\t: false,\n\t\t\t\thasAssignAction: _taxonomy\n\t\t\t\t\t? post._links?.[\n\t\t\t\t\t\t\t'wp:action-assign-' + _taxonomy.rest_base\n\t\t\t\t\t  ] ?? false\n\t\t\t\t\t: false,\n\t\t\t\tterms: _taxonomy\n\t\t\t\t\t? getEditedPostAttribute( _taxonomy.rest_base )\n\t\t\t\t\t: EMPTY_ARRAY,\n\t\t\t\tloading: isResolving( 'getEntityRecords', [\n\t\t\t\t\t'taxonomy',\n\t\t\t\t\tslug,\n\t\t\t\t\tDEFAULT_QUERY,\n\t\t\t\t] ),\n\t\t\t\tavailableTerms:\n\t\t\t\t\tgetEntityRecords( 'taxonomy', slug, DEFAULT_QUERY ) ||\n\t\t\t\t\tEMPTY_ARRAY,\n\t\t\t\ttaxonomy: _taxonomy,\n\t\t\t};\n\t\t},\n\t\t[ slug ]\n\t);\n\n\tconst { editPost } = useDispatch( editorStore );\n\tconst { saveEntityRecord } = useDispatch( coreStore );\n\n\tconst availableTermsTree = useMemo(\n\t\t() => sortBySelected( buildTermsTree( availableTerms ), terms ),\n\t\t// Remove `terms` from the dependency list to avoid reordering every time\n\t\t// checking or unchecking a term.\n\t\t[ availableTerms ]\n\t);\n\n\tconst { createErrorNotice } = useDispatch( noticesStore );\n\n\tif ( ! hasAssignAction ) {\n\t\treturn null;\n\t}\n\n\t/**\n\t * Append new term.\n\t *\n\t * @param {Object} term Term object.\n\t * @return {Promise} A promise that resolves to save term object.\n\t */\n\tconst addTerm = ( term ) => {\n\t\treturn saveEntityRecord( 'taxonomy', slug, term, {\n\t\t\tthrowOnError: true,\n\t\t} );\n\t};\n\n\t/**\n\t * Update terms for post.\n\t *\n\t * @param {number[]} termIds Term ids.\n\t */\n\tconst onUpdateTerms = ( termIds ) => {\n\t\teditPost( { [ taxonomy.rest_base ]: termIds } );\n\t};\n\n\t/**\n\t * Handler for checking term.\n\t *\n\t * @param {number} termId\n\t */\n\tconst onChange = ( termId ) => {\n\t\tconst hasTerm = terms.includes( termId );\n\t\tconst newTerms = hasTerm\n\t\t\t? terms.filter( ( id ) => id !== termId )\n\t\t\t: [ ...terms, termId ];\n\t\tonUpdateTerms( newTerms );\n\t};\n\n\tconst onChangeFormName = ( value ) => {\n\t\tsetFormName( value );\n\t};\n\n\t/**\n\t * Handler for changing form parent.\n\t *\n\t * @param {number|''} parentId Parent post id.\n\t */\n\tconst onChangeFormParent = ( parentId ) => {\n\t\tsetFormParent( parentId );\n\t};\n\n\tconst onToggleForm = () => {\n\t\tsetShowForm( ! showForm );\n\t};\n\n\tconst onAddTerm = async ( event ) => {\n\t\tevent.preventDefault();\n\t\tif ( formName === '' || adding ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Check if the term we are adding already exists.\n\t\tconst existingTerm = findTerm( availableTerms, formParent, formName );\n\t\tif ( existingTerm ) {\n\t\t\t// If the term we are adding exists but is not selected select it.\n\t\t\tif ( ! terms.some( ( term ) => term === existingTerm.id ) ) {\n\t\t\t\tonUpdateTerms( [ ...terms, existingTerm.id ] );\n\t\t\t}\n\n\t\t\tsetFormName( '' );\n\t\t\tsetFormParent( '' );\n\n\t\t\treturn;\n\t\t}\n\t\tsetAdding( true );\n\t\tlet newTerm;\n\t\ttry {\n\t\t\tnewTerm = await addTerm( {\n\t\t\t\tname: formName,\n\t\t\t\tparent: formParent ? formParent : undefined,\n\t\t\t} );\n\t\t} catch ( error ) {\n\t\t\tcreateErrorNotice( error.message, {\n\t\t\t\ttype: 'snackbar',\n\t\t\t} );\n\t\t\treturn;\n\t\t}\n\t\tconst defaultName =\n\t\t\tslug === 'category' ? __( 'Category' ) : __( 'Term' );\n\t\tconst termAddedMessage = sprintf(\n\t\t\t/* translators: %s: taxonomy name */\n\t\t\t_x( '%s added', 'term' ),\n\t\t\ttaxonomy?.labels?.singular_name ?? defaultName\n\t\t);\n\t\tspeak( termAddedMessage, 'assertive' );\n\t\tsetAdding( false );\n\t\tsetFormName( '' );\n\t\tsetFormParent( '' );\n\t\tonUpdateTerms( [ ...terms, newTerm.id ] );\n\t};\n\n\tconst setFilter = ( value ) => {\n\t\tconst newFilteredTermsTree = availableTermsTree\n\t\t\t.map( getFilterMatcher( value ) )\n\t\t\t.filter( ( term ) => term );\n\t\tconst getResultCount = ( termsTree ) => {\n\t\t\tlet count = 0;\n\t\t\tfor ( let i = 0; i < termsTree.length; i++ ) {\n\t\t\t\tcount++;\n\t\t\t\tif ( undefined !== termsTree[ i ].children ) {\n\t\t\t\t\tcount += getResultCount( termsTree[ i ].children );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn count;\n\t\t};\n\n\t\tsetFilterValue( value );\n\t\tsetFilteredTermsTree( newFilteredTermsTree );\n\n\t\tconst resultCount = getResultCount( newFilteredTermsTree );\n\t\tconst resultsFoundMessage = sprintf(\n\t\t\t/* translators: %d: number of results */\n\t\t\t_n( '%d result found.', '%d results found.', resultCount ),\n\t\t\tresultCount\n\t\t);\n\n\t\tdebouncedSpeak( resultsFoundMessage, 'assertive' );\n\t};\n\n\tconst renderTerms = ( renderedTerms ) => {\n\t\treturn renderedTerms.map( ( term ) => {\n\t\t\treturn (\n\t\t\t\t<div\n\t\t\t\t\tkey={ term.id }\n\t\t\t\t\tclassName=\"editor-post-taxonomies__hierarchical-terms-choice\"\n\t\t\t\t>\n\t\t\t\t\t<CheckboxControl\n\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\tchecked={ terms.indexOf( term.id ) !== -1 }\n\t\t\t\t\t\tonChange={ () => {\n\t\t\t\t\t\t\tconst termId = parseInt( term.id, 10 );\n\t\t\t\t\t\t\tonChange( termId );\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tlabel={ decodeEntities( term.name ) }\n\t\t\t\t\t/>\n\t\t\t\t\t{ !! term.children.length && (\n\t\t\t\t\t\t<div className=\"editor-post-taxonomies__hierarchical-terms-subchoices\">\n\t\t\t\t\t\t\t{ renderTerms( term.children ) }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) }\n\t\t\t\t</div>\n\t\t\t);\n\t\t} );\n\t};\n\n\tconst labelWithFallback = (\n\t\tlabelProperty,\n\t\tfallbackIsCategory,\n\t\tfallbackIsNotCategory\n\t) =>\n\t\ttaxonomy?.labels?.[ labelProperty ] ??\n\t\t( slug === 'category' ? fallbackIsCategory : fallbackIsNotCategory );\n\n\tconst newTermButtonLabel = labelWithFallback(\n\t\t'add_new_item',\n\t\t__( 'Add new category' ),\n\t\t__( 'Add new term' )\n\t);\n\tconst newTermLabel = labelWithFallback(\n\t\t'new_item_name',\n\t\t__( 'Add new category' ),\n\t\t__( 'Add new term' )\n\t);\n\tconst parentSelectLabel = labelWithFallback(\n\t\t'parent_item',\n\t\t__( 'Parent Category' ),\n\t\t__( 'Parent Term' )\n\t);\n\tconst noParentOption = `— ${ parentSelectLabel } —`;\n\tconst newTermSubmitLabel = newTermButtonLabel;\n\tconst filterLabel = taxonomy?.labels?.search_items ?? __( 'Search Terms' );\n\tconst groupLabel = taxonomy?.name ?? __( 'Terms' );\n\tconst showFilter = availableTerms.length >= MIN_TERMS_COUNT_FOR_FILTER;\n\n\treturn (\n\t\t<Flex direction=\"column\" gap=\"4\">\n\t\t\t{ showFilter && (\n\t\t\t\t<TextControl\n\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\tlabel={ filterLabel }\n\t\t\t\t\tvalue={ filterValue }\n\t\t\t\t\tonChange={ setFilter }\n\t\t\t\t/>\n\t\t\t) }\n\t\t\t<div\n\t\t\t\tclassName=\"editor-post-taxonomies__hierarchical-terms-list\"\n\t\t\t\ttabIndex=\"0\"\n\t\t\t\trole=\"group\"\n\t\t\t\taria-label={ groupLabel }\n\t\t\t>\n\t\t\t\t{ renderTerms(\n\t\t\t\t\t'' !== filterValue ? filteredTermsTree : availableTermsTree\n\t\t\t\t) }\n\t\t\t</div>\n\t\t\t{ ! loading && hasCreateAction && (\n\t\t\t\t<FlexItem>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={ onToggleForm }\n\t\t\t\t\t\tclassName=\"editor-post-taxonomies__hierarchical-terms-add\"\n\t\t\t\t\t\taria-expanded={ showForm }\n\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{ newTermButtonLabel }\n\t\t\t\t\t</Button>\n\t\t\t\t</FlexItem>\n\t\t\t) }\n\t\t\t{ showForm && (\n\t\t\t\t<form onSubmit={ onAddTerm }>\n\t\t\t\t\t<Flex direction=\"column\" gap=\"4\">\n\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\tclassName=\"editor-post-taxonomies__hierarchical-terms-input\"\n\t\t\t\t\t\t\tlabel={ newTermLabel }\n\t\t\t\t\t\t\tvalue={ formName }\n\t\t\t\t\t\t\tonChange={ onChangeFormName }\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{ !! availableTerms.length && (\n\t\t\t\t\t\t\t<TreeSelect\n\t\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\tlabel={ parentSelectLabel }\n\t\t\t\t\t\t\t\tnoOptionLabel={ noParentOption }\n\t\t\t\t\t\t\t\tonChange={ onChangeFormParent }\n\t\t\t\t\t\t\t\tselectedId={ formParent }\n\t\t\t\t\t\t\t\ttree={ availableTermsTree }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t<FlexItem>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tclassName=\"editor-post-taxonomies__hierarchical-terms-submit\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ newTermSubmitLabel }\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</FlexItem>\n\t\t\t\t\t</Flex>\n\t\t\t\t</form>\n\t\t\t) }\n\t\t</Flex>\n\t);\n}\n\nexport default withFilters( 'editor.PostTaxonomyType' )(\n\tHierarchicalTermSelector\n);\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useSelect } from '@wordpress/data';\nimport { PanelBody } from '@wordpress/components';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { useState, useEffect } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport HierarchicalTermSelector from '../post-taxonomies/hierarchical-term-selector';\nimport { store as editorStore } from '../../store';\n\nfunction MaybeCategoryPanel() {\n\tconst hasNoCategory = useSelect( ( select ) => {\n\t\tconst postType = select( editorStore ).getCurrentPostType();\n\t\tconst { canUser, getEntityRecord, getTaxonomy } = select( coreStore );\n\t\tconst categoriesTaxonomy = getTaxonomy( 'category' );\n\t\tconst defaultCategoryId = canUser( 'read', 'settings' )\n\t\t\t? getEntityRecord( 'root', 'site' )?.default_category\n\t\t\t: undefined;\n\t\tconst defaultCategory = defaultCategoryId\n\t\t\t? getEntityRecord( 'taxonomy', 'category', defaultCategoryId )\n\t\t\t: undefined;\n\t\tconst postTypeSupportsCategories =\n\t\t\tcategoriesTaxonomy &&\n\t\t\tcategoriesTaxonomy.types.some( ( type ) => type === postType );\n\t\tconst categories =\n\t\t\tcategoriesTaxonomy &&\n\t\t\tselect( editorStore ).getEditedPostAttribute(\n\t\t\t\tcategoriesTaxonomy.rest_base\n\t\t\t);\n\n\t\t// This boolean should return true if everything is loaded\n\t\t// ( categoriesTaxonomy, defaultCategory )\n\t\t// and the post has not been assigned a category different than \"uncategorized\".\n\t\treturn (\n\t\t\t!! categoriesTaxonomy &&\n\t\t\t!! defaultCategory &&\n\t\t\tpostTypeSupportsCategories &&\n\t\t\t( categories?.length === 0 ||\n\t\t\t\t( categories?.length === 1 &&\n\t\t\t\t\tdefaultCategory?.id === categories[ 0 ] ) )\n\t\t);\n\t}, [] );\n\tconst [ shouldShowPanel, setShouldShowPanel ] = useState( false );\n\tuseEffect( () => {\n\t\t// We use state to avoid hiding the panel if the user edits the categories\n\t\t// and adds one within the panel itself (while visible).\n\t\tif ( hasNoCategory ) {\n\t\t\tsetShouldShowPanel( true );\n\t\t}\n\t}, [ hasNoCategory ] );\n\n\tif ( ! shouldShowPanel ) {\n\t\treturn null;\n\t}\n\n\tconst panelBodyTitle = [\n\t\t__( 'Suggestion:' ),\n\t\t<span className=\"editor-post-publish-panel__link\" key=\"label\">\n\t\t\t{ __( 'Assign a category' ) }\n\t\t</span>,\n\t];\n\n\treturn (\n\t\t<PanelBody initialOpen={ false } title={ panelBodyTitle }>\n\t\t\t<p>\n\t\t\t\t{ __(\n\t\t\t\t\t'Categories provide a helpful way to group related posts together and to quickly tell readers what a post is about.'\n\t\t\t\t) }\n\t\t\t</p>\n\t\t\t<HierarchicalTermSelector slug=\"category\" />\n\t\t</PanelBody>\n\t);\n}\n\nexport default MaybeCategoryPanel;\n","/**\n * WordPress dependencies\n */\nimport {\n\tPanelBody,\n\tButton,\n\tSpinner,\n\t__unstableMotion as motion,\n\t__unstableAnimatePresence as AnimatePresence,\n} from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { useState } from '@wordpress/element';\nimport { isBlobURL } from '@wordpress/blob';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nfunction flattenBlocks( blocks ) {\n\tconst result = [];\n\n\tblocks.forEach( ( block ) => {\n\t\tresult.push( block );\n\t\tresult.push( ...flattenBlocks( block.innerBlocks ) );\n\t} );\n\n\treturn result;\n}\n\nfunction Image( block ) {\n\tconst { selectBlock } = useDispatch( blockEditorStore );\n\treturn (\n\t\t<motion.img\n\t\t\ttabIndex={ 0 }\n\t\t\trole=\"button\"\n\t\t\taria-label={ __( 'Select image block.' ) }\n\t\t\tonClick={ () => {\n\t\t\t\tselectBlock( block.clientId );\n\t\t\t} }\n\t\t\tonKeyDown={ ( event ) => {\n\t\t\t\tif ( event.key === 'Enter' || event.key === ' ' ) {\n\t\t\t\t\tselectBlock( block.clientId );\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t} }\n\t\t\tkey={ block.clientId }\n\t\t\talt={ block.attributes.alt }\n\t\t\tsrc={ block.attributes.url }\n\t\t\tanimate={ { opacity: 1 } }\n\t\t\texit={ { opacity: 0, scale: 0 } }\n\t\t\tstyle={ {\n\t\t\t\twidth: '36px',\n\t\t\t\theight: '36px',\n\t\t\t\tobjectFit: 'cover',\n\t\t\t\tborderRadius: '2px',\n\t\t\t\tcursor: 'pointer',\n\t\t\t} }\n\t\t\twhileHover={ { scale: 1.08 } }\n\t\t/>\n\t);\n}\n\nexport default function PostFormatPanel() {\n\tconst [ isUploading, setIsUploading ] = useState( false );\n\tconst { editorBlocks, mediaUpload } = useSelect(\n\t\t( select ) => ( {\n\t\t\teditorBlocks: select( editorStore ).getEditorBlocks(),\n\t\t\tmediaUpload: select( blockEditorStore ).getSettings().mediaUpload,\n\t\t} ),\n\t\t[]\n\t);\n\tconst externalImages = flattenBlocks( editorBlocks ).filter(\n\t\t( block ) =>\n\t\t\tblock.name === 'core/image' &&\n\t\t\tblock.attributes.url &&\n\t\t\t! block.attributes.id\n\t);\n\tconst { updateBlockAttributes } = useDispatch( blockEditorStore );\n\n\tif ( ! mediaUpload || ! externalImages.length ) {\n\t\treturn null;\n\t}\n\n\tconst panelBodyTitle = [\n\t\t__( 'Suggestion:' ),\n\t\t<span className=\"editor-post-publish-panel__link\" key=\"label\">\n\t\t\t{ __( 'External media' ) }\n\t\t</span>,\n\t];\n\n\tfunction uploadImages() {\n\t\tsetIsUploading( true );\n\t\tPromise.all(\n\t\t\texternalImages.map( ( image ) =>\n\t\t\t\twindow\n\t\t\t\t\t.fetch(\n\t\t\t\t\t\timage.attributes.url.includes( '?' )\n\t\t\t\t\t\t\t? image.attributes.url\n\t\t\t\t\t\t\t: image.attributes.url + '?'\n\t\t\t\t\t)\n\t\t\t\t\t.then( ( response ) => response.blob() )\n\t\t\t\t\t.then(\n\t\t\t\t\t\t( blob ) =>\n\t\t\t\t\t\t\tnew Promise( ( resolve, reject ) => {\n\t\t\t\t\t\t\t\tmediaUpload( {\n\t\t\t\t\t\t\t\t\tfilesList: [ blob ],\n\t\t\t\t\t\t\t\t\tonFileChange: ( [ media ] ) => {\n\t\t\t\t\t\t\t\t\t\tif ( isBlobURL( media.url ) ) {\n\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tupdateBlockAttributes( image.clientId, {\n\t\t\t\t\t\t\t\t\t\t\tid: media.id,\n\t\t\t\t\t\t\t\t\t\t\turl: media.url,\n\t\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tonError() {\n\t\t\t\t\t\t\t\t\t\treject();\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t)\n\t\t\t)\n\t\t).finally( () => {\n\t\t\tsetIsUploading( false );\n\t\t} );\n\t}\n\n\treturn (\n\t\t<PanelBody initialOpen title={ panelBodyTitle }>\n\t\t\t<p>\n\t\t\t\t{ __(\n\t\t\t\t\t'Upload external images to the Media Library. Images from different domains may load slowly, display incorrectly, or be removed unexpectedly.'\n\t\t\t\t) }\n\t\t\t</p>\n\t\t\t<div\n\t\t\t\tstyle={ {\n\t\t\t\t\tdisplay: 'inline-flex',\n\t\t\t\t\tflexWrap: 'wrap',\n\t\t\t\t\tgap: '8px',\n\t\t\t\t} }\n\t\t\t>\n\t\t\t\t<AnimatePresence>\n\t\t\t\t\t{ externalImages.map( ( image ) => {\n\t\t\t\t\t\treturn <Image key={ image.clientId } { ...image } />;\n\t\t\t\t\t} ) }\n\t\t\t\t</AnimatePresence>\n\t\t\t\t{ isUploading ? (\n\t\t\t\t\t<Spinner />\n\t\t\t\t) : (\n\t\t\t\t\t<Button variant=\"primary\" onClick={ uploadImages }>\n\t\t\t\t\t\t{ __( 'Upload' ) }\n\t\t\t\t\t</Button>\n\t\t\t\t) }\n\t\t\t</div>\n\t\t</PanelBody>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Icon, PanelBody } from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\nimport { wordpress } from '@wordpress/icons';\nimport { filterURLForDisplay } from '@wordpress/url';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { decodeEntities } from '@wordpress/html-entities';\n\n/**\n * Internal dependencies\n */\nimport PostVisibility from '../post-visibility';\nimport PostVisibilityLabel from '../post-visibility/label';\nimport PostSchedule from '../post-schedule';\nimport PostScheduleLabel from '../post-schedule/label';\nimport MaybeTagsPanel from './maybe-tags-panel';\nimport MaybePostFormatPanel from './maybe-post-format-panel';\nimport { store as editorStore } from '../../store';\nimport MaybeCategoryPanel from './maybe-category-panel';\nimport MaybeUploadMedia from './maybe-upload-media';\n\nfunction PostPublishPanelPrepublish( { children } ) {\n\tconst {\n\t\tisBeingScheduled,\n\t\tisRequestingSiteIcon,\n\t\thasPublishAction,\n\t\tsiteIconUrl,\n\t\tsiteTitle,\n\t\tsiteHome,\n\t} = useSelect( ( select ) => {\n\t\tconst { getCurrentPost, isEditedPostBeingScheduled } =\n\t\t\tselect( editorStore );\n\t\tconst { getEntityRecord, isResolving } = select( coreStore );\n\t\tconst siteData =\n\t\t\tgetEntityRecord( 'root', '__unstableBase', undefined ) || {};\n\n\t\treturn {\n\t\t\thasPublishAction:\n\t\t\t\tgetCurrentPost()._links?.[ 'wp:action-publish' ] ?? false,\n\t\t\tisBeingScheduled: isEditedPostBeingScheduled(),\n\t\t\tisRequestingSiteIcon: isResolving( 'getEntityRecord', [\n\t\t\t\t'root',\n\t\t\t\t'__unstableBase',\n\t\t\t\tundefined,\n\t\t\t] ),\n\t\t\tsiteIconUrl: siteData.site_icon_url,\n\t\t\tsiteTitle: siteData.name,\n\t\t\tsiteHome: siteData.home && filterURLForDisplay( siteData.home ),\n\t\t};\n\t}, [] );\n\n\tlet siteIcon = (\n\t\t<Icon className=\"components-site-icon\" size=\"36px\" icon={ wordpress } />\n\t);\n\n\tif ( siteIconUrl ) {\n\t\tsiteIcon = (\n\t\t\t<img\n\t\t\t\talt={ __( 'Site Icon' ) }\n\t\t\t\tclassName=\"components-site-icon\"\n\t\t\t\tsrc={ siteIconUrl }\n\t\t\t/>\n\t\t);\n\t}\n\n\tif ( isRequestingSiteIcon ) {\n\t\tsiteIcon = null;\n\t}\n\n\tlet prePublishTitle, prePublishBodyText;\n\n\tif ( ! hasPublishAction ) {\n\t\tprePublishTitle = __( 'Are you ready to submit for review?' );\n\t\tprePublishBodyText = __(\n\t\t\t'When you’re ready, submit your work for review, and an Editor will be able to approve it for you.'\n\t\t);\n\t} else if ( isBeingScheduled ) {\n\t\tprePublishTitle = __( 'Are you ready to schedule?' );\n\t\tprePublishBodyText = __(\n\t\t\t'Your work will be published at the specified date and time.'\n\t\t);\n\t} else {\n\t\tprePublishTitle = __( 'Are you ready to publish?' );\n\t\tprePublishBodyText = __(\n\t\t\t'Double-check your settings before publishing.'\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className=\"editor-post-publish-panel__prepublish\">\n\t\t\t<div>\n\t\t\t\t<strong>{ prePublishTitle }</strong>\n\t\t\t</div>\n\t\t\t<p>{ prePublishBodyText }</p>\n\t\t\t<div className=\"components-site-card\">\n\t\t\t\t{ siteIcon }\n\t\t\t\t<div className=\"components-site-info\">\n\t\t\t\t\t<span className=\"components-site-name\">\n\t\t\t\t\t\t{ decodeEntities( siteTitle ) || __( '(Untitled)' ) }\n\t\t\t\t\t</span>\n\t\t\t\t\t<span className=\"components-site-home\">{ siteHome }</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<MaybeUploadMedia />\n\t\t\t{ hasPublishAction && (\n\t\t\t\t<>\n\t\t\t\t\t<PanelBody\n\t\t\t\t\t\tinitialOpen={ false }\n\t\t\t\t\t\ttitle={ [\n\t\t\t\t\t\t\t__( 'Visibility:' ),\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tclassName=\"editor-post-publish-panel__link\"\n\t\t\t\t\t\t\t\tkey=\"label\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<PostVisibilityLabel />\n\t\t\t\t\t\t\t</span>,\n\t\t\t\t\t\t] }\n\t\t\t\t\t>\n\t\t\t\t\t\t<PostVisibility />\n\t\t\t\t\t</PanelBody>\n\t\t\t\t\t<PanelBody\n\t\t\t\t\t\tinitialOpen={ false }\n\t\t\t\t\t\ttitle={ [\n\t\t\t\t\t\t\t__( 'Publish:' ),\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tclassName=\"editor-post-publish-panel__link\"\n\t\t\t\t\t\t\t\tkey=\"label\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<PostScheduleLabel />\n\t\t\t\t\t\t\t</span>,\n\t\t\t\t\t\t] }\n\t\t\t\t\t>\n\t\t\t\t\t\t<PostSchedule />\n\t\t\t\t\t</PanelBody>\n\t\t\t\t</>\n\t\t\t) }\n\t\t\t<MaybePostFormatPanel />\n\t\t\t<MaybeTagsPanel />\n\t\t\t<MaybeCategoryPanel />\n\t\t\t{ children }\n\t\t</div>\n\t);\n}\n\nexport default PostPublishPanelPrepublish;\n","/**\n * WordPress dependencies\n */\nimport { PanelBody, Button, TextControl } from '@wordpress/components';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { Component, createRef } from '@wordpress/element';\nimport { withSelect } from '@wordpress/data';\nimport { addQueryArgs, safeDecodeURIComponent } from '@wordpress/url';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport { useCopyToClipboard } from '@wordpress/compose';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport PostScheduleLabel from '../post-schedule/label';\nimport { store as editorStore } from '../../store';\n\nconst POSTNAME = '%postname%';\nconst PAGENAME = '%pagename%';\n\n/**\n * Returns URL for a future post.\n *\n * @param {Object} post Post object.\n *\n * @return {string} PostPublish URL.\n */\n\nconst getFuturePostUrl = ( post ) => {\n\tconst { slug } = post;\n\n\tif ( post.permalink_template.includes( POSTNAME ) ) {\n\t\treturn post.permalink_template.replace( POSTNAME, slug );\n\t}\n\n\tif ( post.permalink_template.includes( PAGENAME ) ) {\n\t\treturn post.permalink_template.replace( PAGENAME, slug );\n\t}\n\n\treturn post.permalink_template;\n};\n\nfunction CopyButton( { text, onCopy, children } ) {\n\tconst ref = useCopyToClipboard( text, onCopy );\n\treturn (\n\t\t<Button variant=\"secondary\" ref={ ref }>\n\t\t\t{ children }\n\t\t</Button>\n\t);\n}\n\nclass PostPublishPanelPostpublish extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\t\tthis.state = {\n\t\t\tshowCopyConfirmation: false,\n\t\t};\n\t\tthis.onCopy = this.onCopy.bind( this );\n\t\tthis.onSelectInput = this.onSelectInput.bind( this );\n\t\tthis.postLink = createRef();\n\t}\n\n\tcomponentDidMount() {\n\t\tif ( this.props.focusOnMount ) {\n\t\t\tthis.postLink.current.focus();\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearTimeout( this.dismissCopyConfirmation );\n\t}\n\n\tonCopy() {\n\t\tthis.setState( {\n\t\t\tshowCopyConfirmation: true,\n\t\t} );\n\n\t\tclearTimeout( this.dismissCopyConfirmation );\n\t\tthis.dismissCopyConfirmation = setTimeout( () => {\n\t\t\tthis.setState( {\n\t\t\t\tshowCopyConfirmation: false,\n\t\t\t} );\n\t\t}, 4000 );\n\t}\n\n\tonSelectInput( event ) {\n\t\tevent.target.select();\n\t}\n\n\trender() {\n\t\tconst { children, isScheduled, post, postType } = this.props;\n\t\tconst postLabel = postType?.labels?.singular_name;\n\t\tconst viewPostLabel = postType?.labels?.view_item;\n\t\tconst addNewPostLabel = postType?.labels?.add_new_item;\n\t\tconst link =\n\t\t\tpost.status === 'future' ? getFuturePostUrl( post ) : post.link;\n\t\tconst addLink = addQueryArgs( 'post-new.php', {\n\t\t\tpost_type: post.type,\n\t\t} );\n\n\t\tconst postPublishNonLinkHeader = isScheduled ? (\n\t\t\t<>\n\t\t\t\t{ __( 'is now scheduled. It will go live on' ) }{ ' ' }\n\t\t\t\t<PostScheduleLabel />.\n\t\t\t</>\n\t\t) : (\n\t\t\t__( 'is now live.' )\n\t\t);\n\n\t\treturn (\n\t\t\t<div className=\"post-publish-panel__postpublish\">\n\t\t\t\t<PanelBody className=\"post-publish-panel__postpublish-header\">\n\t\t\t\t\t<a ref={ this.postLink } href={ link }>\n\t\t\t\t\t\t{ decodeEntities( post.title ) || __( '(no title)' ) }\n\t\t\t\t\t</a>{ ' ' }\n\t\t\t\t\t{ postPublishNonLinkHeader }\n\t\t\t\t</PanelBody>\n\t\t\t\t<PanelBody>\n\t\t\t\t\t<p className=\"post-publish-panel__postpublish-subheader\">\n\t\t\t\t\t\t<strong>{ __( 'What’s next?' ) }</strong>\n\t\t\t\t\t</p>\n\t\t\t\t\t<div className=\"post-publish-panel__postpublish-post-address-container\">\n\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\tclassName=\"post-publish-panel__postpublish-post-address\"\n\t\t\t\t\t\t\treadOnly\n\t\t\t\t\t\t\tlabel={ sprintf(\n\t\t\t\t\t\t\t\t/* translators: %s: post type singular name */\n\t\t\t\t\t\t\t\t__( '%s address' ),\n\t\t\t\t\t\t\t\tpostLabel\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\tvalue={ safeDecodeURIComponent( link ) }\n\t\t\t\t\t\t\tonFocus={ this.onSelectInput }\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<div className=\"post-publish-panel__postpublish-post-address__copy-button-wrap\">\n\t\t\t\t\t\t\t<CopyButton text={ link } onCopy={ this.onCopy }>\n\t\t\t\t\t\t\t\t{ this.state.showCopyConfirmation\n\t\t\t\t\t\t\t\t\t? __( 'Copied!' )\n\t\t\t\t\t\t\t\t\t: __( 'Copy' ) }\n\t\t\t\t\t\t\t</CopyButton>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"post-publish-panel__postpublish-buttons\">\n\t\t\t\t\t\t{ ! isScheduled && (\n\t\t\t\t\t\t\t<Button variant=\"primary\" href={ link }>\n\t\t\t\t\t\t\t\t{ viewPostLabel }\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant={ isScheduled ? 'primary' : 'secondary' }\n\t\t\t\t\t\t\thref={ addLink }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ addNewPostLabel }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</PanelBody>\n\t\t\t\t{ children }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withSelect( ( select ) => {\n\tconst { getEditedPostAttribute, getCurrentPost, isCurrentPostScheduled } =\n\t\tselect( editorStore );\n\tconst { getPostType } = select( coreStore );\n\n\treturn {\n\t\tpost: getCurrentPost(),\n\t\tpostType: getPostType( getEditedPostAttribute( 'type' ) ),\n\t\tisScheduled: isCurrentPostScheduled(),\n\t};\n} )( PostPublishPanelPostpublish );\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Component } from '@wordpress/element';\nimport {\n\tButton,\n\tSpinner,\n\tCheckboxControl,\n\twithFocusReturn,\n\twithConstrainedTabbing,\n} from '@wordpress/components';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\nimport { closeSmall } from '@wordpress/icons';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport PostPublishButton from '../post-publish-button';\nimport PostPublishPanelPrepublish from './prepublish';\nimport PostPublishPanelPostpublish from './postpublish';\nimport { store as editorStore } from '../../store';\n\nexport class PostPublishPanel extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\t\tthis.onSubmit = this.onSubmit.bind( this );\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\t// Automatically collapse the publish sidebar when a post\n\t\t// is published and the user makes an edit.\n\t\tif (\n\t\t\tprevProps.isPublished &&\n\t\t\t! this.props.isSaving &&\n\t\t\tthis.props.isDirty\n\t\t) {\n\t\t\tthis.props.onClose();\n\t\t}\n\t}\n\n\tonSubmit() {\n\t\tconst { onClose, hasPublishAction, isPostTypeViewable } = this.props;\n\t\tif ( ! hasPublishAction || ! isPostTypeViewable ) {\n\t\t\tonClose();\n\t\t}\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tforceIsDirty,\n\t\t\tisBeingScheduled,\n\t\t\tisPublished,\n\t\t\tisPublishSidebarEnabled,\n\t\t\tisScheduled,\n\t\t\tisSaving,\n\t\t\tisSavingNonPostEntityChanges,\n\t\t\tonClose,\n\t\t\tonTogglePublishSidebar,\n\t\t\tPostPublishExtension,\n\t\t\tPrePublishExtension,\n\t\t\t...additionalProps\n\t\t} = this.props;\n\t\tconst {\n\t\t\thasPublishAction,\n\t\t\tisDirty,\n\t\t\tisPostTypeViewable,\n\t\t\t...propsForPanel\n\t\t} = additionalProps;\n\t\tconst isPublishedOrScheduled =\n\t\t\tisPublished || ( isScheduled && isBeingScheduled );\n\t\tconst isPrePublish = ! isPublishedOrScheduled && ! isSaving;\n\t\tconst isPostPublish = isPublishedOrScheduled && ! isSaving;\n\t\treturn (\n\t\t\t<div className=\"editor-post-publish-panel\" { ...propsForPanel }>\n\t\t\t\t<div className=\"editor-post-publish-panel__header\">\n\t\t\t\t\t{ isPostPublish ? (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tonClick={ onClose }\n\t\t\t\t\t\t\ticon={ closeSmall }\n\t\t\t\t\t\t\tlabel={ __( 'Close panel' ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<div className=\"editor-post-publish-panel__header-publish-button\">\n\t\t\t\t\t\t\t\t<PostPublishButton\n\t\t\t\t\t\t\t\t\tfocusOnMount\n\t\t\t\t\t\t\t\t\tonSubmit={ this.onSubmit }\n\t\t\t\t\t\t\t\t\tforceIsDirty={ forceIsDirty }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"editor-post-publish-panel__header-cancel-button\">\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t__experimentalIsFocusable\n\t\t\t\t\t\t\t\t\tdisabled={ isSavingNonPostEntityChanges }\n\t\t\t\t\t\t\t\t\tonClick={ onClose }\n\t\t\t\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\t\t\t\tsize=\"compact\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{ __( 'Cancel' ) }\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) }\n\t\t\t\t</div>\n\t\t\t\t<div className=\"editor-post-publish-panel__content\">\n\t\t\t\t\t{ isPrePublish && (\n\t\t\t\t\t\t<PostPublishPanelPrepublish>\n\t\t\t\t\t\t\t{ PrePublishExtension && <PrePublishExtension /> }\n\t\t\t\t\t\t</PostPublishPanelPrepublish>\n\t\t\t\t\t) }\n\t\t\t\t\t{ isPostPublish && (\n\t\t\t\t\t\t<PostPublishPanelPostpublish focusOnMount>\n\t\t\t\t\t\t\t{ PostPublishExtension && <PostPublishExtension /> }\n\t\t\t\t\t\t</PostPublishPanelPostpublish>\n\t\t\t\t\t) }\n\t\t\t\t\t{ isSaving && <Spinner /> }\n\t\t\t\t</div>\n\t\t\t\t<div className=\"editor-post-publish-panel__footer\">\n\t\t\t\t\t<CheckboxControl\n\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\tlabel={ __( 'Always show pre-publish checks.' ) }\n\t\t\t\t\t\tchecked={ isPublishSidebarEnabled }\n\t\t\t\t\t\tonChange={ onTogglePublishSidebar }\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n/**\n * Renders a panel for publishing a post.\n */\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\tconst { getPostType } = select( coreStore );\n\t\tconst {\n\t\t\tgetCurrentPost,\n\t\t\tgetEditedPostAttribute,\n\t\t\tisCurrentPostPublished,\n\t\t\tisCurrentPostScheduled,\n\t\t\tisEditedPostBeingScheduled,\n\t\t\tisEditedPostDirty,\n\t\t\tisAutosavingPost,\n\t\t\tisSavingPost,\n\t\t\tisSavingNonPostEntityChanges,\n\t\t} = select( editorStore );\n\t\tconst { isPublishSidebarEnabled } = select( editorStore );\n\t\tconst postType = getPostType( getEditedPostAttribute( 'type' ) );\n\n\t\treturn {\n\t\t\thasPublishAction:\n\t\t\t\tgetCurrentPost()._links?.[ 'wp:action-publish' ] ?? false,\n\t\t\tisPostTypeViewable: postType?.viewable,\n\t\t\tisBeingScheduled: isEditedPostBeingScheduled(),\n\t\t\tisDirty: isEditedPostDirty(),\n\t\t\tisPublished: isCurrentPostPublished(),\n\t\t\tisPublishSidebarEnabled: isPublishSidebarEnabled(),\n\t\t\tisSaving: isSavingPost() && ! isAutosavingPost(),\n\t\t\tisSavingNonPostEntityChanges: isSavingNonPostEntityChanges(),\n\t\t\tisScheduled: isCurrentPostScheduled(),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, { isPublishSidebarEnabled } ) => {\n\t\tconst { disablePublishSidebar, enablePublishSidebar } =\n\t\t\tdispatch( editorStore );\n\t\treturn {\n\t\t\tonTogglePublishSidebar: () => {\n\t\t\t\tif ( isPublishSidebarEnabled ) {\n\t\t\t\t\tdisablePublishSidebar();\n\t\t\t\t} else {\n\t\t\t\t\tenablePublishSidebar();\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t} ),\n\twithFocusReturn,\n\twithConstrainedTabbing,\n] )( PostPublishPanel );\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst cloudUpload = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M17.3 10.1c0-2.5-2.1-4.4-4.8-4.4-2.2 0-4.1 1.4-4.6 3.3h-.2C5.7 9 4 10.7 4 12.8c0 2.1 1.7 3.8 3.7 3.8h9c1.8 0 3.2-1.5 3.2-3.3.1-1.6-1.1-2.9-2.6-3.2zm-.5 5.1h-4v-2.4L14 14l1-1-3-3-3 3 1 1 1.2-1.2v2.4H7.7c-1.2 0-2.2-1.1-2.2-2.3s1-2.4 2.2-2.4H9l.3-1.1c.4-1.3 1.7-2.2 3.2-2.2 1.8 0 3.3 1.3 3.3 2.9v1.3l1.3.2c.8.1 1.4.9 1.4 1.8 0 1-.8 1.8-1.7 1.8z\" />\n\t</SVG>\n);\n\nexport default cloudUpload;\n","/**\n * WordPress dependencies\n */\nimport { cloneElement, forwardRef } from '@wordpress/element';\n\n/** @typedef {{icon: JSX.Element, size?: number} & import('@wordpress/primitives').SVGProps} IconProps */\n\n/**\n * Return an SVG icon.\n *\n * @param {IconProps}                                 props icon is the SVG component to render\n *                                                          size is a number specifiying the icon size in pixels\n *                                                          Other props will be passed to wrapped SVG component\n * @param {import('react').ForwardedRef<HTMLElement>} ref   The forwarded ref to the SVG element.\n *\n * @return {JSX.Element}  Icon component\n */\nfunction Icon( { icon, size = 24, ...props }, ref ) {\n\treturn cloneElement( icon, {\n\t\twidth: size,\n\t\theight: size,\n\t\t...props,\n\t\tref,\n\t} );\n}\n\nexport default forwardRef( Icon );\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst cloud = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M17.3 10.1c0-2.5-2.1-4.4-4.8-4.4-2.2 0-4.1 1.4-4.6 3.3h-.2C5.7 9 4 10.7 4 12.8c0 2.1 1.7 3.8 3.7 3.8h9c1.8 0 3.2-1.5 3.2-3.3.1-1.6-1.1-2.9-2.6-3.2zm-.5 5.1h-9c-1.2 0-2.2-1.1-2.2-2.3s1-2.4 2.2-2.4h1.3l.3-1.1c.4-1.3 1.7-2.2 3.2-2.2 1.8 0 3.3 1.3 3.3 2.9v1.3l1.3.2c.8.1 1.4.9 1.4 1.8-.1 1-.9 1.8-1.8 1.8z\" />\n\t</SVG>\n);\n\nexport default cloud;\n","/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * WordPress dependencies\n */\nimport {\n\t__unstableGetAnimateClassName as getAnimateClassName,\n\tButton,\n} from '@wordpress/components';\nimport { usePrevious, useViewportMatch } from '@wordpress/compose';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { useEffect, useState } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport { Icon, check, cloud, cloudUpload } from '@wordpress/icons';\nimport { displayShortcut } from '@wordpress/keycodes';\nimport { store as preferencesStore } from '@wordpress/preferences';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\n/**\n * Component showing whether the post is saved or not and providing save\n * buttons.\n *\n * @param {Object}   props              Component props.\n * @param {?boolean} props.forceIsDirty Whether to force the post to be marked\n *                                      as dirty.\n * @return {import('react').ComponentType} The component.\n */\nexport default function PostSavedState( { forceIsDirty } ) {\n\tconst [ forceSavedMessage, setForceSavedMessage ] = useState( false );\n\tconst isLargeViewport = useViewportMatch( 'small' );\n\n\tconst {\n\t\tisAutosaving,\n\t\tisDirty,\n\t\tisNew,\n\t\tisPublished,\n\t\tisSaveable,\n\t\tisSaving,\n\t\tisScheduled,\n\t\thasPublishAction,\n\t\tshowIconLabels,\n\t\tpostStatus,\n\t\tpostStatusHasChanged,\n\t} = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tisEditedPostNew,\n\t\t\t\tisCurrentPostPublished,\n\t\t\t\tisCurrentPostScheduled,\n\t\t\t\tisEditedPostDirty,\n\t\t\t\tisSavingPost,\n\t\t\t\tisEditedPostSaveable,\n\t\t\t\tgetCurrentPost,\n\t\t\t\tisAutosavingPost,\n\t\t\t\tgetEditedPostAttribute,\n\t\t\t\tgetPostEdits,\n\t\t\t} = select( editorStore );\n\t\t\tconst { get } = select( preferencesStore );\n\t\t\treturn {\n\t\t\t\tisAutosaving: isAutosavingPost(),\n\t\t\t\tisDirty: forceIsDirty || isEditedPostDirty(),\n\t\t\t\tisNew: isEditedPostNew(),\n\t\t\t\tisPublished: isCurrentPostPublished(),\n\t\t\t\tisSaving: isSavingPost(),\n\t\t\t\tisSaveable: isEditedPostSaveable(),\n\t\t\t\tisScheduled: isCurrentPostScheduled(),\n\t\t\t\thasPublishAction:\n\t\t\t\t\tgetCurrentPost()?._links?.[ 'wp:action-publish' ] ?? false,\n\t\t\t\tshowIconLabels: get( 'core', 'showIconLabels' ),\n\t\t\t\tpostStatus: getEditedPostAttribute( 'status' ),\n\t\t\t\tpostStatusHasChanged: !! getPostEdits()?.status,\n\t\t\t};\n\t\t},\n\t\t[ forceIsDirty ]\n\t);\n\tconst isPending = postStatus === 'pending';\n\tconst { savePost } = useDispatch( editorStore );\n\n\tconst wasSaving = usePrevious( isSaving );\n\n\tuseEffect( () => {\n\t\tlet timeoutId;\n\n\t\tif ( wasSaving && ! isSaving ) {\n\t\t\tsetForceSavedMessage( true );\n\t\t\ttimeoutId = setTimeout( () => {\n\t\t\t\tsetForceSavedMessage( false );\n\t\t\t}, 1000 );\n\t\t}\n\n\t\treturn () => clearTimeout( timeoutId );\n\t}, [ isSaving ] );\n\n\t// Once the post has been submitted for review this button\n\t// is not needed for the contributor role.\n\tif ( ! hasPublishAction && isPending ) {\n\t\treturn null;\n\t}\n\n\tif (\n\t\tisPublished ||\n\t\tisScheduled ||\n\t\t! [ 'pending', 'draft', 'auto-draft' ].includes( postStatus ) ||\n\t\t( postStatusHasChanged &&\n\t\t\t[ 'pending', 'draft' ].includes( postStatus ) )\n\t) {\n\t\treturn null;\n\t}\n\n\t/* translators: button label text should, if possible, be under 16 characters. */\n\tconst label = isPending ? __( 'Save as pending' ) : __( 'Save draft' );\n\n\t/* translators: button label text should, if possible, be under 16 characters. */\n\tconst shortLabel = __( 'Save' );\n\n\tconst isSaved = forceSavedMessage || ( ! isNew && ! isDirty );\n\tconst isSavedState = isSaving || isSaved;\n\tconst isDisabled = isSaving || isSaved || ! isSaveable;\n\tlet text;\n\n\tif ( isSaving ) {\n\t\ttext = isAutosaving ? __( 'Autosaving' ) : __( 'Saving' );\n\t} else if ( isSaved ) {\n\t\ttext = __( 'Saved' );\n\t} else if ( isLargeViewport ) {\n\t\ttext = label;\n\t} else if ( showIconLabels ) {\n\t\ttext = shortLabel;\n\t}\n\n\t// Use common Button instance for all saved states so that focus is not\n\t// lost.\n\treturn (\n\t\t<Button\n\t\t\tclassName={\n\t\t\t\tisSaveable || isSaving\n\t\t\t\t\t? clsx( {\n\t\t\t\t\t\t\t'editor-post-save-draft': ! isSavedState,\n\t\t\t\t\t\t\t'editor-post-saved-state': isSavedState,\n\t\t\t\t\t\t\t'is-saving': isSaving,\n\t\t\t\t\t\t\t'is-autosaving': isAutosaving,\n\t\t\t\t\t\t\t'is-saved': isSaved,\n\t\t\t\t\t\t\t[ getAnimateClassName( {\n\t\t\t\t\t\t\t\ttype: 'loading',\n\t\t\t\t\t\t\t} ) ]: isSaving,\n\t\t\t\t\t  } )\n\t\t\t\t\t: undefined\n\t\t\t}\n\t\t\tonClick={ isDisabled ? undefined : () => savePost() }\n\t\t\t/*\n\t\t\t * We want the tooltip to show the keyboard shortcut only when the\n\t\t\t * button does something, i.e. when it's not disabled.\n\t\t\t */\n\t\t\tshortcut={ isDisabled ? undefined : displayShortcut.primary( 's' ) }\n\t\t\tvariant=\"tertiary\"\n\t\t\tsize=\"compact\"\n\t\t\ticon={ isLargeViewport ? undefined : cloudUpload }\n\t\t\tlabel={ text || label }\n\t\t\taria-disabled={ isDisabled }\n\t\t>\n\t\t\t{ isSavedState && <Icon icon={ isSaved ? check : cloud } /> }\n\t\t\t{ text }\n\t\t</Button>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\n/**\n * Wrapper component that renders its children only if post has a publish action.\n *\n * @param {Object}  props          Props.\n * @param {Element} props.children Children to be rendered.\n *\n * @return {Component} - The component to be rendered or null if there is no publish action.\n */\nexport default function PostScheduleCheck( { children } ) {\n\tconst hasPublishAction = useSelect( ( select ) => {\n\t\treturn (\n\t\t\tselect( editorStore ).getCurrentPost()._links?.[\n\t\t\t\t'wp:action-publish'\n\t\t\t] ?? false\n\t\t);\n\t}, [] );\n\n\tif ( ! hasPublishAction ) {\n\t\treturn null;\n\t}\n\n\treturn children;\n}\n","/**\n * WordPress dependencies\n */\nimport { Button, Dropdown } from '@wordpress/components';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { useState, useMemo } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport PostScheduleCheck from './check';\nimport PostScheduleForm from './index';\nimport { usePostScheduleLabel } from './label';\nimport PostPanelRow from '../post-panel-row';\nimport { store as editorStore } from '../../store';\nimport {\n\tTEMPLATE_POST_TYPE,\n\tTEMPLATE_PART_POST_TYPE,\n\tPATTERN_POST_TYPE,\n\tNAVIGATION_POST_TYPE,\n} from '../../store/constants';\n\nconst DESIGN_POST_TYPES = [\n\tTEMPLATE_POST_TYPE,\n\tTEMPLATE_PART_POST_TYPE,\n\tPATTERN_POST_TYPE,\n\tNAVIGATION_POST_TYPE,\n];\n\n/**\n * Renders the Post Schedule Panel component.\n *\n * @return {Component} The component to be rendered.\n */\nexport default function PostSchedulePanel() {\n\tconst [ popoverAnchor, setPopoverAnchor ] = useState( null );\n\tconst postType = useSelect(\n\t\t( select ) => select( editorStore ).getCurrentPostType(),\n\t\t[]\n\t);\n\t// Memoize popoverProps to avoid returning a new object every time.\n\tconst popoverProps = useMemo(\n\t\t() => ( {\n\t\t\t// Anchor the popover to the middle of the entire row so that it doesn't\n\t\t\t// move around when the label changes.\n\t\t\tanchor: popoverAnchor,\n\t\t\t'aria-label': __( 'Change publish date' ),\n\t\t\tplacement: 'left-start',\n\t\t\toffset: 36,\n\t\t\tshift: true,\n\t\t} ),\n\t\t[ popoverAnchor ]\n\t);\n\n\tconst label = usePostScheduleLabel();\n\tconst fullLabel = usePostScheduleLabel( { full: true } );\n\tif ( DESIGN_POST_TYPES.includes( postType ) ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<PostScheduleCheck>\n\t\t\t<PostPanelRow label={ __( 'Publish' ) } ref={ setPopoverAnchor }>\n\t\t\t\t<Dropdown\n\t\t\t\t\tpopoverProps={ popoverProps }\n\t\t\t\t\tfocusOnMount\n\t\t\t\t\tclassName=\"editor-post-schedule__panel-dropdown\"\n\t\t\t\t\tcontentClassName=\"editor-post-schedule__dialog\"\n\t\t\t\t\trenderToggle={ ( { onToggle, isOpen } ) => (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tsize=\"compact\"\n\t\t\t\t\t\t\tclassName=\"editor-post-schedule__dialog-toggle\"\n\t\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\t\ttooltipPosition=\"middle left\"\n\t\t\t\t\t\t\tonClick={ onToggle }\n\t\t\t\t\t\t\taria-label={ sprintf(\n\t\t\t\t\t\t\t\t// translators: %s: Current post date.\n\t\t\t\t\t\t\t\t__( 'Change date: %s' ),\n\t\t\t\t\t\t\t\tlabel\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\tlabel={ fullLabel }\n\t\t\t\t\t\t\tshowTooltip={ label !== fullLabel }\n\t\t\t\t\t\t\taria-expanded={ isOpen }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ label }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t) }\n\t\t\t\t\trenderContent={ ( { onClose } ) => (\n\t\t\t\t\t\t<PostScheduleForm onClose={ onClose } />\n\t\t\t\t\t) }\n\t\t\t\t/>\n\t\t\t</PostPanelRow>\n\t\t</PostScheduleCheck>\n\t);\n}\n","/**\n * Internal dependencies\n */\nimport PostTypeSupportCheck from '../post-type-support-check';\n\n/**\n * Wrapper component that renders its children only if the post type supports the slug.\n *\n * @param {Object}  props          Props.\n * @param {Element} props.children Children to be rendered.\n *\n * @return {Component} The component to be rendered.\n */\nexport default function PostSlugCheck( { children } ) {\n\treturn (\n\t\t<PostTypeSupportCheck supportKeys=\"slug\">\n\t\t\t{ children }\n\t\t</PostTypeSupportCheck>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { useState } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport { safeDecodeURIComponent, cleanForSlug } from '@wordpress/url';\nimport { TextControl } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport PostSlugCheck from './check';\nimport { store as editorStore } from '../../store';\n\nfunction PostSlugControl() {\n\tconst postSlug = useSelect( ( select ) => {\n\t\treturn safeDecodeURIComponent(\n\t\t\tselect( editorStore ).getEditedPostSlug()\n\t\t);\n\t}, [] );\n\tconst { editPost } = useDispatch( editorStore );\n\tconst [ forceEmptyField, setForceEmptyField ] = useState( false );\n\n\treturn (\n\t\t<TextControl\n\t\t\t__nextHasNoMarginBottom\n\t\t\tlabel={ __( 'Slug' ) }\n\t\t\tautoComplete=\"off\"\n\t\t\tspellCheck=\"false\"\n\t\t\tvalue={ forceEmptyField ? '' : postSlug }\n\t\t\tonChange={ ( newValue ) => {\n\t\t\t\teditPost( { slug: newValue } );\n\t\t\t\t// When we delete the field the permalink gets\n\t\t\t\t// reverted to the original value.\n\t\t\t\t// The forceEmptyField logic allows the user to have\n\t\t\t\t// the field temporarily empty while typing.\n\t\t\t\tif ( ! newValue ) {\n\t\t\t\t\tif ( ! forceEmptyField ) {\n\t\t\t\t\t\tsetForceEmptyField( true );\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif ( forceEmptyField ) {\n\t\t\t\t\tsetForceEmptyField( false );\n\t\t\t\t}\n\t\t\t} }\n\t\t\tonBlur={ ( event ) => {\n\t\t\t\teditPost( {\n\t\t\t\t\tslug: cleanForSlug( event.target.value ),\n\t\t\t\t} );\n\t\t\t\tif ( forceEmptyField ) {\n\t\t\t\t\tsetForceEmptyField( false );\n\t\t\t\t}\n\t\t\t} }\n\t\t\tclassName=\"editor-post-slug\"\n\t\t/>\n\t);\n}\n\n/**\n * Renders the PostSlug component. It provide a control for editing the post slug.\n *\n * @return {Component} The component to be rendered.\n */\nexport default function PostSlug() {\n\treturn (\n\t\t<PostSlugCheck>\n\t\t\t<PostSlugControl />\n\t\t</PostSlugCheck>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\n/**\n * Wrapper component that renders its children only if post has a sticky action.\n *\n * @param {Object}  props          Props.\n * @param {Element} props.children Children to be rendered.\n *\n * @return {Component} The component to be rendered or null if post type is not 'post' or hasStickyAction is false.\n */\nexport default function PostStickyCheck( { children } ) {\n\tconst { hasStickyAction, postType } = useSelect( ( select ) => {\n\t\tconst post = select( editorStore ).getCurrentPost();\n\t\treturn {\n\t\t\thasStickyAction: post._links?.[ 'wp:action-sticky' ] ?? false,\n\t\t\tpostType: select( editorStore ).getCurrentPostType(),\n\t\t};\n\t}, [] );\n\n\tif ( postType !== 'post' || ! hasStickyAction ) {\n\t\treturn null;\n\t}\n\n\treturn children;\n}\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { CheckboxControl } from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport PostStickyCheck from './check';\nimport { store as editorStore } from '../../store';\n\n/**\n * Renders the PostSticky component. It provides a checkbox control for the sticky post feature.\n *\n * @return {Component} The component to be rendered.\n */\nexport default function PostSticky() {\n\tconst postSticky = useSelect( ( select ) => {\n\t\treturn (\n\t\t\tselect( editorStore ).getEditedPostAttribute( 'sticky' ) ?? false\n\t\t);\n\t}, [] );\n\tconst { editPost } = useDispatch( editorStore );\n\n\treturn (\n\t\t<PostStickyCheck>\n\t\t\t<CheckboxControl\n\t\t\t\tclassName=\"editor-post-sticky__checkbox-control\"\n\t\t\t\tlabel={ __( 'Sticky' ) }\n\t\t\t\thelp={ __( 'Pin this post to the top of the blog' ) }\n\t\t\t\tchecked={ postSticky }\n\t\t\t\tonChange={ () => editPost( { sticky: ! postSticky } ) }\n\t\t\t\t__nextHasNoMarginBottom\n\t\t\t/>\n\t\t</PostStickyCheck>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport {\n\tButton,\n\t__experimentalConfirmDialog as ConfirmDialog,\n} from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { useState } from '@wordpress/element';\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\n/**\n * Renders a button component that allows the user to switch a post to draft status.\n *\n * @return {JSX.Element} The rendered component.\n */\nexport default function PostSwitchToDraftButton() {\n\tdeprecated( 'wp.editor.PostSwitchToDraftButton', {\n\t\tsince: '6.7',\n\t\tversion: '6.9',\n\t} );\n\tconst [ showConfirmDialog, setShowConfirmDialog ] = useState( false );\n\n\tconst { editPost, savePost } = useDispatch( editorStore );\n\tconst { isSaving, isPublished, isScheduled } = useSelect( ( select ) => {\n\t\tconst { isSavingPost, isCurrentPostPublished, isCurrentPostScheduled } =\n\t\t\tselect( editorStore );\n\t\treturn {\n\t\t\tisSaving: isSavingPost(),\n\t\t\tisPublished: isCurrentPostPublished(),\n\t\t\tisScheduled: isCurrentPostScheduled(),\n\t\t};\n\t}, [] );\n\n\tconst isDisabled = isSaving || ( ! isPublished && ! isScheduled );\n\n\tlet alertMessage;\n\tlet confirmButtonText;\n\tif ( isPublished ) {\n\t\talertMessage = __( 'Are you sure you want to unpublish this post?' );\n\t\tconfirmButtonText = __( 'Unpublish' );\n\t} else if ( isScheduled ) {\n\t\talertMessage = __( 'Are you sure you want to unschedule this post?' );\n\t\tconfirmButtonText = __( 'Unschedule' );\n\t}\n\n\tconst handleConfirm = () => {\n\t\tsetShowConfirmDialog( false );\n\t\teditPost( { status: 'draft' } );\n\t\tsavePost();\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Button\n\t\t\t\t__next40pxDefaultSize\n\t\t\t\tclassName=\"editor-post-switch-to-draft\"\n\t\t\t\tonClick={ () => {\n\t\t\t\t\tif ( ! isDisabled ) {\n\t\t\t\t\t\tsetShowConfirmDialog( true );\n\t\t\t\t\t}\n\t\t\t\t} }\n\t\t\t\taria-disabled={ isDisabled }\n\t\t\t\tvariant=\"secondary\"\n\t\t\t\tstyle={ { flexGrow: '1', justifyContent: 'center' } }\n\t\t\t>\n\t\t\t\t{ __( 'Switch to draft' ) }\n\t\t\t</Button>\n\t\t\t<ConfirmDialog\n\t\t\t\tisOpen={ showConfirmDialog }\n\t\t\t\tonConfirm={ handleConfirm }\n\t\t\t\tonCancel={ () => setShowConfirmDialog( false ) }\n\t\t\t\tconfirmButtonText={ confirmButtonText }\n\t\t\t>\n\t\t\t\t{ alertMessage }\n\t\t\t</ConfirmDialog>\n\t\t</>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { __, _x } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport PostPanelRow from '../post-panel-row';\nimport { store as editorStore } from '../../store';\n\n/**\n * Renders the sync status of a post.\n *\n * @return {JSX.Element|null} The rendered sync status component.\n */\nexport default function PostSyncStatus() {\n\tconst { syncStatus, postType } = useSelect( ( select ) => {\n\t\tconst { getEditedPostAttribute } = select( editorStore );\n\t\tconst meta = getEditedPostAttribute( 'meta' );\n\n\t\t// When the post is first created, the top level wp_pattern_sync_status is not set so get meta value instead.\n\t\tconst currentSyncStatus =\n\t\t\tmeta?.wp_pattern_sync_status === 'unsynced'\n\t\t\t\t? 'unsynced'\n\t\t\t\t: getEditedPostAttribute( 'wp_pattern_sync_status' );\n\n\t\treturn {\n\t\t\tsyncStatus: currentSyncStatus,\n\t\t\tpostType: getEditedPostAttribute( 'type' ),\n\t\t};\n\t} );\n\n\tif ( postType !== 'wp_block' ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<PostPanelRow label={ __( 'Sync status' ) }>\n\t\t\t<div className=\"editor-post-sync-status__value\">\n\t\t\t\t{ syncStatus === 'unsynced'\n\t\t\t\t\t? _x( 'Not synced', 'pattern (singular)' )\n\t\t\t\t\t: _x( 'Synced', 'pattern (singular)' ) }\n\t\t\t</div>\n\t\t</PostPanelRow>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { Fragment } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport HierarchicalTermSelector from './hierarchical-term-selector';\nimport FlatTermSelector from './flat-term-selector';\nimport { store as editorStore } from '../../store';\n\nconst identity = ( x ) => x;\n\nexport function PostTaxonomies( { taxonomyWrapper = identity } ) {\n\tconst { postType, taxonomies } = useSelect( ( select ) => {\n\t\treturn {\n\t\t\tpostType: select( editorStore ).getCurrentPostType(),\n\t\t\ttaxonomies: select( coreStore ).getTaxonomies( { per_page: -1 } ),\n\t\t};\n\t}, [] );\n\tconst visibleTaxonomies = ( taxonomies ?? [] ).filter(\n\t\t( taxonomy ) =>\n\t\t\t// In some circumstances .visibility can end up as undefined so optional chaining operator required.\n\t\t\t// https://github.com/WordPress/gutenberg/issues/40326\n\t\t\ttaxonomy.types.includes( postType ) && taxonomy.visibility?.show_ui\n\t);\n\n\treturn visibleTaxonomies.map( ( taxonomy ) => {\n\t\tconst TaxonomyComponent = taxonomy.hierarchical\n\t\t\t? HierarchicalTermSelector\n\t\t\t: FlatTermSelector;\n\t\treturn (\n\t\t\t<Fragment key={ `taxonomy-${ taxonomy.slug }` }>\n\t\t\t\t{ taxonomyWrapper(\n\t\t\t\t\t<TaxonomyComponent slug={ taxonomy.slug } />,\n\t\t\t\t\ttaxonomy\n\t\t\t\t) }\n\t\t\t</Fragment>\n\t\t);\n\t} );\n}\n\n/**\n * Renders the taxonomies associated with a post.\n *\n * @param {Object}   props                 The component props.\n * @param {Function} props.taxonomyWrapper The wrapper function for each taxonomy component.\n *\n * @return {Array} An array of JSX elements representing the visible taxonomies.\n */\nexport default PostTaxonomies;\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\n/**\n * Renders the children components only if the current post type has taxonomies.\n *\n * @param {Object}  props          The component props.\n * @param {Element} props.children The children components to render.\n *\n * @return {Component|null} The rendered children components or null if the current post type has no taxonomies.\n */\nexport default function PostTaxonomiesCheck( { children } ) {\n\tconst hasTaxonomies = useSelect( ( select ) => {\n\t\tconst postType = select( editorStore ).getCurrentPostType();\n\t\tconst taxonomies = select( coreStore ).getTaxonomies( {\n\t\t\tper_page: -1,\n\t\t} );\n\t\treturn taxonomies?.some( ( taxonomy ) =>\n\t\t\ttaxonomy.types.includes( postType )\n\t\t);\n\t}, [] );\n\tif ( ! hasTaxonomies ) {\n\t\treturn null;\n\t}\n\n\treturn children;\n}\n","/**\n * WordPress dependencies\n */\nimport { PanelBody } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\nimport PostTaxonomiesForm from './index';\nimport PostTaxonomiesCheck from './check';\n\nfunction TaxonomyPanel( { taxonomy, children } ) {\n\tconst slug = taxonomy?.slug;\n\tconst panelName = slug ? `taxonomy-panel-${ slug }` : '';\n\tconst { isEnabled, isOpened } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { isEditorPanelEnabled, isEditorPanelOpened } =\n\t\t\t\tselect( editorStore );\n\t\t\treturn {\n\t\t\t\tisEnabled: slug ? isEditorPanelEnabled( panelName ) : false,\n\t\t\t\tisOpened: slug ? isEditorPanelOpened( panelName ) : false,\n\t\t\t};\n\t\t},\n\t\t[ panelName, slug ]\n\t);\n\tconst { toggleEditorPanelOpened } = useDispatch( editorStore );\n\n\tif ( ! isEnabled ) {\n\t\treturn null;\n\t}\n\n\tconst taxonomyMenuName = taxonomy?.labels?.menu_name;\n\tif ( ! taxonomyMenuName ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<PanelBody\n\t\t\ttitle={ taxonomyMenuName }\n\t\t\topened={ isOpened }\n\t\t\tonToggle={ () => toggleEditorPanelOpened( panelName ) }\n\t\t>\n\t\t\t{ children }\n\t\t</PanelBody>\n\t);\n}\n\nfunction PostTaxonomies() {\n\treturn (\n\t\t<PostTaxonomiesCheck>\n\t\t\t<PostTaxonomiesForm\n\t\t\t\ttaxonomyWrapper={ ( content, taxonomy ) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<TaxonomyPanel taxonomy={ taxonomy }>\n\t\t\t\t\t\t\t{ content }\n\t\t\t\t\t\t</TaxonomyPanel>\n\t\t\t\t\t);\n\t\t\t\t} }\n\t\t\t/>\n\t\t</PostTaxonomiesCheck>\n\t);\n}\n\n/**\n * Renders a panel for a specific taxonomy.\n *\n * @param {Object}  props          The component props.\n * @param {Object}  props.taxonomy The taxonomy object.\n * @param {Element} props.children The child components.\n *\n * @return {Component} The rendered taxonomy panel.\n */\nexport default PostTaxonomies;\n","/**\n * External dependencies\n */\nimport Textarea from 'react-autosize-textarea';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { useMemo } from '@wordpress/element';\nimport { __unstableSerializeAndClean } from '@wordpress/blocks';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { useInstanceId } from '@wordpress/compose';\nimport { VisuallyHidden } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\n/**\n * Displays the Post Text Editor along with content in Visual and Text mode.\n *\n * @return {JSX.Element|null} The rendered PostTextEditor component.\n */\nexport default function PostTextEditor() {\n\tconst instanceId = useInstanceId( PostTextEditor );\n\tconst { content, blocks, type, id } = useSelect( ( select ) => {\n\t\tconst { getEditedEntityRecord } = select( coreStore );\n\t\tconst { getCurrentPostType, getCurrentPostId } = select( editorStore );\n\t\tconst _type = getCurrentPostType();\n\t\tconst _id = getCurrentPostId();\n\t\tconst editedRecord = getEditedEntityRecord( 'postType', _type, _id );\n\n\t\treturn {\n\t\t\tcontent: editedRecord?.content,\n\t\t\tblocks: editedRecord?.blocks,\n\t\t\ttype: _type,\n\t\t\tid: _id,\n\t\t};\n\t}, [] );\n\tconst { editEntityRecord } = useDispatch( coreStore );\n\t// Replicates the logic found in getEditedPostContent().\n\tconst value = useMemo( () => {\n\t\tif ( content instanceof Function ) {\n\t\t\treturn content( { blocks } );\n\t\t} else if ( blocks ) {\n\t\t\t// If we have parsed blocks already, they should be our source of truth.\n\t\t\t// Parsing applies block deprecations and legacy block conversions that\n\t\t\t// unparsed content will not have.\n\t\t\treturn __unstableSerializeAndClean( blocks );\n\t\t}\n\t\treturn content;\n\t}, [ content, blocks ] );\n\n\treturn (\n\t\t<>\n\t\t\t<VisuallyHidden\n\t\t\t\tas=\"label\"\n\t\t\t\thtmlFor={ `post-content-${ instanceId }` }\n\t\t\t>\n\t\t\t\t{ __( 'Type text or HTML' ) }\n\t\t\t</VisuallyHidden>\n\t\t\t<Textarea\n\t\t\t\tautoComplete=\"off\"\n\t\t\t\tdir=\"auto\"\n\t\t\t\tvalue={ value }\n\t\t\t\tonChange={ ( event ) => {\n\t\t\t\t\teditEntityRecord( 'postType', type, id, {\n\t\t\t\t\t\tcontent: event.target.value,\n\t\t\t\t\t\tblocks: undefined,\n\t\t\t\t\t\tselection: undefined,\n\t\t\t\t\t} );\n\t\t\t\t} }\n\t\t\t\tclassName=\"editor-post-text-editor\"\n\t\t\t\tid={ `post-content-${ instanceId }` }\n\t\t\t\tplaceholder={ __( 'Start writing with text or HTML' ) }\n\t\t\t/>\n\t\t</>\n\t);\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"dom\"];","export const DEFAULT_CLASSNAMES =\n\t'wp-block wp-block-post-title block-editor-block-list__block editor-post-title editor-post-title__input rich-text';\n\nexport const REGEXP_NEWLINES = /[\\r\\n]+/g;\n","/**\n * WordPress dependencies\n */\nimport { useEffect, useImperativeHandle, useRef } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\n/**\n * Custom hook that manages the focus behavior of the post title input field.\n *\n * @param {Element} forwardedRef - The forwarded ref for the input field.\n *\n * @return {Object} - The ref object.\n */\nexport default function usePostTitleFocus( forwardedRef ) {\n\tconst ref = useRef();\n\n\tconst { isCleanNewPost } = useSelect( ( select ) => {\n\t\tconst { isCleanNewPost: _isCleanNewPost } = select( editorStore );\n\n\t\treturn {\n\t\t\tisCleanNewPost: _isCleanNewPost(),\n\t\t};\n\t}, [] );\n\n\tuseImperativeHandle( forwardedRef, () => ( {\n\t\tfocus: () => {\n\t\t\tref?.current?.focus();\n\t\t},\n\t} ) );\n\n\tuseEffect( () => {\n\t\tif ( ! ref.current ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { defaultView } = ref.current.ownerDocument;\n\t\tconst { name, parent } = defaultView;\n\t\tconst ownerDocument =\n\t\t\tname === 'editor-canvas' ? parent.document : defaultView.document;\n\t\tconst { activeElement, body } = ownerDocument;\n\n\t\t// Only autofocus the title when the post is entirely empty. This should\n\t\t// only happen for a new post, which means we focus the title on new\n\t\t// post so the author can start typing right away, without needing to\n\t\t// click anything.\n\t\tif ( isCleanNewPost && ( ! activeElement || body === activeElement ) ) {\n\t\t\tref.current.focus();\n\t\t}\n\t}, [ isCleanNewPost ] );\n\n\treturn { ref };\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from '@wordpress/data';\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\n/**\n * Custom hook for managing the post title in the editor.\n *\n * @return {Object} An object containing the current title and a function to update the title.\n */\nexport default function usePostTitle() {\n\tconst { editPost } = useDispatch( editorStore );\n\tconst { title } = useSelect( ( select ) => {\n\t\tconst { getEditedPostAttribute } = select( editorStore );\n\n\t\treturn {\n\t\t\ttitle: getEditedPostAttribute( 'title' ),\n\t\t};\n\t}, [] );\n\n\tfunction updateTitle( newTitle ) {\n\t\teditPost( { title: newTitle } );\n\t}\n\n\treturn { title, setTitle: updateTitle };\n}\n","/**\n * External dependencies\n */\nimport clsx from 'clsx';\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { forwardRef, useState } from '@wordpress/element';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { ENTER } from '@wordpress/keycodes';\nimport { pasteHandler } from '@wordpress/blocks';\nimport {\n\t__unstableUseRichText as useRichText,\n\tcreate,\n\ttoHTMLString,\n\tinsert,\n} from '@wordpress/rich-text';\nimport { useMergeRefs } from '@wordpress/compose';\nimport { __unstableStripHTML as stripHTML } from '@wordpress/dom';\n\n/**\n * Internal dependencies\n */\nimport { DEFAULT_CLASSNAMES, REGEXP_NEWLINES } from './constants';\nimport usePostTitleFocus from './use-post-title-focus';\nimport usePostTitle from './use-post-title';\nimport PostTypeSupportCheck from '../post-type-support-check';\n\nfunction PostTitle( _, forwardedRef ) {\n\tconst { placeholder } = useSelect( ( select ) => {\n\t\tconst { getSettings } = select( blockEditorStore );\n\t\tconst { titlePlaceholder } = getSettings();\n\n\t\treturn {\n\t\t\tplaceholder: titlePlaceholder,\n\t\t};\n\t}, [] );\n\n\tconst [ isSelected, setIsSelected ] = useState( false );\n\n\tconst { ref: focusRef } = usePostTitleFocus( forwardedRef );\n\n\tconst { title, setTitle: onUpdate } = usePostTitle();\n\n\tconst [ selection, setSelection ] = useState( {} );\n\n\tconst { clearSelectedBlock, insertBlocks, insertDefaultBlock } =\n\t\tuseDispatch( blockEditorStore );\n\n\tfunction onChange( value ) {\n\t\tonUpdate( value.replace( REGEXP_NEWLINES, ' ' ) );\n\t}\n\n\tfunction onInsertBlockAfter( blocks ) {\n\t\tinsertBlocks( blocks, 0 );\n\t}\n\n\tfunction onSelect() {\n\t\tsetIsSelected( true );\n\t\tclearSelectedBlock();\n\t}\n\n\tfunction onUnselect() {\n\t\tsetIsSelected( false );\n\t\tsetSelection( {} );\n\t}\n\n\tfunction onEnterPress() {\n\t\tinsertDefaultBlock( undefined, undefined, 0 );\n\t}\n\n\tfunction onKeyDown( event ) {\n\t\tif ( event.keyCode === ENTER ) {\n\t\t\tevent.preventDefault();\n\t\t\tonEnterPress();\n\t\t}\n\t}\n\n\tfunction onPaste( event ) {\n\t\tconst clipboardData = event.clipboardData;\n\n\t\tlet plainText = '';\n\t\tlet html = '';\n\n\t\t// IE11 only supports `Text` as an argument for `getData` and will\n\t\t// otherwise throw an invalid argument error, so we try the standard\n\t\t// arguments first, then fallback to `Text` if they fail.\n\t\ttry {\n\t\t\tplainText = clipboardData.getData( 'text/plain' );\n\t\t\thtml = clipboardData.getData( 'text/html' );\n\t\t} catch ( error1 ) {\n\t\t\ttry {\n\t\t\t\thtml = clipboardData.getData( 'Text' );\n\t\t\t} catch ( error2 ) {\n\t\t\t\t// Some browsers like UC Browser paste plain text by default and\n\t\t\t\t// don't support clipboardData at all, so allow default\n\t\t\t\t// behaviour.\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// Allows us to ask for this information when we get a report.\n\t\twindow.console.log( 'Received HTML:\\n\\n', html );\n\t\twindow.console.log( 'Received plain text:\\n\\n', plainText );\n\n\t\tconst content = pasteHandler( {\n\t\t\tHTML: html,\n\t\t\tplainText,\n\t\t} );\n\n\t\tevent.preventDefault();\n\n\t\tif ( ! content.length ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( typeof content !== 'string' ) {\n\t\t\tconst [ firstBlock ] = content;\n\n\t\t\tif (\n\t\t\t\t! title &&\n\t\t\t\t( firstBlock.name === 'core/heading' ||\n\t\t\t\t\tfirstBlock.name === 'core/paragraph' )\n\t\t\t) {\n\t\t\t\t// Strip HTML to avoid unwanted HTML being added to the title.\n\t\t\t\t// In the majority of cases it is assumed that HTML in the title\n\t\t\t\t// is undesirable.\n\t\t\t\tconst contentNoHTML = stripHTML(\n\t\t\t\t\tfirstBlock.attributes.content\n\t\t\t\t);\n\t\t\t\tonUpdate( contentNoHTML );\n\t\t\t\tonInsertBlockAfter( content.slice( 1 ) );\n\t\t\t} else {\n\t\t\t\tonInsertBlockAfter( content );\n\t\t\t}\n\t\t} else {\n\t\t\tconst value = {\n\t\t\t\t...create( { html: title } ),\n\t\t\t\t...selection,\n\t\t\t};\n\n\t\t\t// Strip HTML to avoid unwanted HTML being added to the title.\n\t\t\t// In the majority of cases it is assumed that HTML in the title\n\t\t\t// is undesirable.\n\t\t\tconst contentNoHTML = stripHTML( content );\n\n\t\t\tconst newValue = insert( value, create( { html: contentNoHTML } ) );\n\t\t\tonUpdate( toHTMLString( { value: newValue } ) );\n\t\t\tsetSelection( {\n\t\t\t\tstart: newValue.start,\n\t\t\t\tend: newValue.end,\n\t\t\t} );\n\t\t}\n\t}\n\n\tconst decodedPlaceholder =\n\t\tdecodeEntities( placeholder ) || __( 'Add title' );\n\n\tconst { ref: richTextRef } = useRichText( {\n\t\tvalue: title,\n\t\tonChange,\n\t\tplaceholder: decodedPlaceholder,\n\t\tselectionStart: selection.start,\n\t\tselectionEnd: selection.end,\n\t\tonSelectionChange( newStart, newEnd ) {\n\t\t\tsetSelection( ( sel ) => {\n\t\t\t\tconst { start, end } = sel;\n\t\t\t\tif ( start === newStart && end === newEnd ) {\n\t\t\t\t\treturn sel;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tstart: newStart,\n\t\t\t\t\tend: newEnd,\n\t\t\t\t};\n\t\t\t} );\n\t\t},\n\t\t__unstableDisableFormats: false,\n\t} );\n\n\t// The wp-block className is important for editor styles.\n\t// This same block is used in both the visual and the code editor.\n\tconst className = clsx( DEFAULT_CLASSNAMES, {\n\t\t'is-selected': isSelected,\n\t} );\n\n\treturn (\n\t\t/* eslint-disable jsx-a11y/heading-has-content, jsx-a11y/no-noninteractive-element-to-interactive-role */\n\t\t<PostTypeSupportCheck supportKeys=\"title\">\n\t\t\t<h1\n\t\t\t\tref={ useMergeRefs( [ richTextRef, focusRef ] ) }\n\t\t\t\tcontentEditable\n\t\t\t\tclassName={ className }\n\t\t\t\taria-label={ decodedPlaceholder }\n\t\t\t\trole=\"textbox\"\n\t\t\t\taria-multiline=\"true\"\n\t\t\t\tonFocus={ onSelect }\n\t\t\t\tonBlur={ onUnselect }\n\t\t\t\tonKeyDown={ onKeyDown }\n\t\t\t\tonKeyPress={ onUnselect }\n\t\t\t\tonPaste={ onPaste }\n\t\t\t/>\n\t\t</PostTypeSupportCheck>\n\t\t/* eslint-enable jsx-a11y/heading-has-content, jsx-a11y/no-noninteractive-element-to-interactive-role */\n\t);\n}\n\n/**\n * Renders the `PostTitle` component.\n *\n * @param {Object}  _            Unused parameter.\n * @param {Element} forwardedRef Forwarded ref for the component.\n *\n * @return {Component} The rendered PostTitle component.\n */\nexport default forwardRef( PostTitle );\n","/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * WordPress dependencies\n */\nimport { TextareaControl } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport { useSelect } from '@wordpress/data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { useState, forwardRef } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { DEFAULT_CLASSNAMES, REGEXP_NEWLINES } from './constants';\nimport usePostTitleFocus from './use-post-title-focus';\nimport usePostTitle from './use-post-title';\n\n/**\n * Renders a raw post title input field.\n *\n * @param {Object}  _            Unused parameter.\n * @param {Element} forwardedRef Reference to the component's DOM node.\n *\n * @return {Component} The rendered component.\n */\nfunction PostTitleRaw( _, forwardedRef ) {\n\tconst { placeholder } = useSelect( ( select ) => {\n\t\tconst { getSettings } = select( blockEditorStore );\n\t\tconst { titlePlaceholder } = getSettings();\n\n\t\treturn {\n\t\t\tplaceholder: titlePlaceholder,\n\t\t};\n\t}, [] );\n\n\tconst [ isSelected, setIsSelected ] = useState( false );\n\n\tconst { title, setTitle: onUpdate } = usePostTitle();\n\tconst { ref: focusRef } = usePostTitleFocus( forwardedRef );\n\n\tfunction onChange( value ) {\n\t\tonUpdate( value.replace( REGEXP_NEWLINES, ' ' ) );\n\t}\n\n\tfunction onSelect() {\n\t\tsetIsSelected( true );\n\t}\n\n\tfunction onUnselect() {\n\t\tsetIsSelected( false );\n\t}\n\n\t// The wp-block className is important for editor styles.\n\t// This same block is used in both the visual and the code editor.\n\tconst className = clsx( DEFAULT_CLASSNAMES, {\n\t\t'is-selected': isSelected,\n\t\t'is-raw-text': true,\n\t} );\n\n\tconst decodedPlaceholder =\n\t\tdecodeEntities( placeholder ) || __( 'Add title' );\n\n\treturn (\n\t\t<TextareaControl\n\t\t\tref={ focusRef }\n\t\t\tvalue={ title }\n\t\t\tonChange={ onChange }\n\t\t\tonFocus={ onSelect }\n\t\t\tonBlur={ onUnselect }\n\t\t\tlabel={ placeholder }\n\t\t\tclassName={ className }\n\t\t\tplaceholder={ decodedPlaceholder }\n\t\t\thideLabelFromVision\n\t\t\tautoComplete=\"off\"\n\t\t\tdir=\"auto\"\n\t\t\trows={ 1 }\n\t\t\t__nextHasNoMarginBottom\n\t\t/>\n\t);\n}\n\nexport default forwardRef( PostTitleRaw );\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n\tButton,\n\t__experimentalConfirmDialog as ConfirmDialog,\n} from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useState } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\n/**\n * Displays the Post Trash Button and Confirm Dialog in the Editor.\n *\n * @return {JSX.Element|null} The rendered PostTrash component.\n */\nexport default function PostTrash() {\n\tconst { isNew, isDeleting, postId } = useSelect( ( select ) => {\n\t\tconst store = select( editorStore );\n\t\treturn {\n\t\t\tisNew: store.isEditedPostNew(),\n\t\t\tisDeleting: store.isDeletingPost(),\n\t\t\tpostId: store.getCurrentPostId(),\n\t\t};\n\t}, [] );\n\tconst { trashPost } = useDispatch( editorStore );\n\tconst [ showConfirmDialog, setShowConfirmDialog ] = useState( false );\n\n\tif ( isNew || ! postId ) {\n\t\treturn null;\n\t}\n\n\tconst handleConfirm = () => {\n\t\tsetShowConfirmDialog( false );\n\t\ttrashPost();\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Button\n\t\t\t\t__next40pxDefaultSize\n\t\t\t\tclassName=\"editor-post-trash\"\n\t\t\t\tisDestructive\n\t\t\t\tvariant=\"secondary\"\n\t\t\t\tisBusy={ isDeleting }\n\t\t\t\taria-disabled={ isDeleting }\n\t\t\t\tonClick={\n\t\t\t\t\tisDeleting ? undefined : () => setShowConfirmDialog( true )\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t{ __( 'Move to trash' ) }\n\t\t\t</Button>\n\t\t\t<ConfirmDialog\n\t\t\t\tisOpen={ showConfirmDialog }\n\t\t\t\tonConfirm={ handleConfirm }\n\t\t\t\tonCancel={ () => setShowConfirmDialog( false ) }\n\t\t\t\tconfirmButtonText={ __( 'Move to trash' ) }\n\t\t\t\tsize=\"medium\"\n\t\t\t>\n\t\t\t\t{ __(\n\t\t\t\t\t'Are you sure you want to move this post to the trash?'\n\t\t\t\t) }\n\t\t\t</ConfirmDialog>\n\t\t</>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\n/**\n * Wrapper component that renders its children only if the post can trashed.\n *\n * @param {Object}  props          - The component props.\n * @param {Element} props.children - The child components to render.\n *\n * @return {Component|null} The rendered child components or null if the post can not trashed.\n */\nexport default function PostTrashCheck( { children } ) {\n\tconst { canTrashPost } = useSelect( ( select ) => {\n\t\tconst { isEditedPostNew, getCurrentPostId, getCurrentPostType } =\n\t\t\tselect( editorStore );\n\t\tconst { getPostType, canUser } = select( coreStore );\n\t\tconst postType = getPostType( getCurrentPostType() );\n\t\tconst postId = getCurrentPostId();\n\t\tconst isNew = isEditedPostNew();\n\t\tconst resource = postType?.rest_base || ''; // eslint-disable-line camelcase\n\t\tconst canUserDelete =\n\t\t\tpostId && resource ? canUser( 'delete', resource, postId ) : false;\n\n\t\treturn {\n\t\t\tcanTrashPost: ( ! isNew || postId ) && canUserDelete,\n\t\t};\n\t}, [] );\n\n\tif ( ! canTrashPost ) {\n\t\treturn null;\n\t}\n\n\treturn children;\n}\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst copySmall = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path\n\t\t\tfillRule=\"evenodd\"\n\t\t\tclipRule=\"evenodd\"\n\t\t\td=\"M5.625 5.5h9.75c.069 0 .125.056.125.125v9.75a.125.125 0 0 1-.125.125h-9.75a.125.125 0 0 1-.125-.125v-9.75c0-.069.056-.125.125-.125ZM4 5.625C4 4.728 4.728 4 5.625 4h9.75C16.273 4 17 4.728 17 5.625v9.75c0 .898-.727 1.625-1.625 1.625h-9.75A1.625 1.625 0 0 1 4 15.375v-9.75Zm14.5 11.656v-9H20v9C20 18.8 18.77 20 17.251 20H6.25v-1.5h11.001c.69 0 1.249-.528 1.249-1.219Z\"\n\t\t/>\n\t</SVG>\n);\n\nexport default copySmall;\n","/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { safeDecodeURIComponent, cleanForSlug } from '@wordpress/url';\nimport { useState } from '@wordpress/element';\nimport { __experimentalInspectorPopoverHeader as InspectorPopoverHeader } from '@wordpress/block-editor';\nimport { __ } from '@wordpress/i18n';\nimport {\n\tExternalLink,\n\tButton,\n\t__experimentalInputControl as InputControl,\n\t__experimentalInputControlPrefixWrapper as InputControlPrefixWrapper,\n\t__experimentalVStack as VStack,\n} from '@wordpress/components';\nimport { store as noticesStore } from '@wordpress/notices';\nimport { copySmall } from '@wordpress/icons';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { useCopyToClipboard } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\n/**\n * Renders the `PostURL` component.\n *\n * @example\n * ```jsx\n * <PostURL />\n * ```\n *\n * @param {Function} onClose Callback function to be executed when the popover is closed.\n *\n * @return {Component} The rendered PostURL component.\n */\nexport default function PostURL( { onClose } ) {\n\tconst {\n\t\tisEditable,\n\t\tpostSlug,\n\t\tpostLink,\n\t\tpermalinkPrefix,\n\t\tpermalinkSuffix,\n\t\tpermalink,\n\t} = useSelect( ( select ) => {\n\t\tconst post = select( editorStore ).getCurrentPost();\n\t\tconst postTypeSlug = select( editorStore ).getCurrentPostType();\n\t\tconst postType = select( coreStore ).getPostType( postTypeSlug );\n\t\tconst permalinkParts = select( editorStore ).getPermalinkParts();\n\t\tconst hasPublishAction = post?._links?.[ 'wp:action-publish' ] ?? false;\n\n\t\treturn {\n\t\t\tisEditable:\n\t\t\t\tselect( editorStore ).isPermalinkEditable() && hasPublishAction,\n\t\t\tpostSlug: safeDecodeURIComponent(\n\t\t\t\tselect( editorStore ).getEditedPostSlug()\n\t\t\t),\n\t\t\tviewPostLabel: postType?.labels.view_item,\n\t\t\tpostLink: post.link,\n\t\t\tpermalinkPrefix: permalinkParts?.prefix,\n\t\t\tpermalinkSuffix: permalinkParts?.suffix,\n\t\t\tpermalink: safeDecodeURIComponent(\n\t\t\t\tselect( editorStore ).getPermalink()\n\t\t\t),\n\t\t};\n\t}, [] );\n\tconst { editPost } = useDispatch( editorStore );\n\tconst { createNotice } = useDispatch( noticesStore );\n\tconst [ forceEmptyField, setForceEmptyField ] = useState( false );\n\tconst copyButtonRef = useCopyToClipboard( permalink, () => {\n\t\tcreateNotice( 'info', __( 'Copied URL to clipboard.' ), {\n\t\t\tisDismissible: true,\n\t\t\ttype: 'snackbar',\n\t\t} );\n\t} );\n\treturn (\n\t\t<div className=\"editor-post-url\">\n\t\t\t<InspectorPopoverHeader\n\t\t\t\ttitle={ __( 'Link' ) }\n\t\t\t\tonClose={ onClose }\n\t\t\t/>\n\t\t\t<VStack spacing={ 3 }>\n\t\t\t\t{ isEditable && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{ __( 'Customize the last part of the URL. ' ) }\n\t\t\t\t\t\t<ExternalLink\n\t\t\t\t\t\t\thref={ __(\n\t\t\t\t\t\t\t\t'https://wordpress.org/documentation/article/page-post-settings-sidebar/#permalink'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Learn more.' ) }\n\t\t\t\t\t\t</ExternalLink>\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\t\t\t\t<div>\n\t\t\t\t\t{ isEditable && (\n\t\t\t\t\t\t<InputControl\n\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\tprefix={\n\t\t\t\t\t\t\t\t<InputControlPrefixWrapper>\n\t\t\t\t\t\t\t\t\t/\n\t\t\t\t\t\t\t\t</InputControlPrefixWrapper>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsuffix={\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\ticon={ copySmall }\n\t\t\t\t\t\t\t\t\tref={ copyButtonRef }\n\t\t\t\t\t\t\t\t\tlabel={ __( 'Copy' ) }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlabel={ __( 'Link' ) }\n\t\t\t\t\t\t\thideLabelFromVision\n\t\t\t\t\t\t\tvalue={ forceEmptyField ? '' : postSlug }\n\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\tspellCheck=\"false\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"editor-post-url__input\"\n\t\t\t\t\t\t\tonChange={ ( newValue ) => {\n\t\t\t\t\t\t\t\teditPost( { slug: newValue } );\n\t\t\t\t\t\t\t\t// When we delete the field the permalink gets\n\t\t\t\t\t\t\t\t// reverted to the original value.\n\t\t\t\t\t\t\t\t// The forceEmptyField logic allows the user to have\n\t\t\t\t\t\t\t\t// the field temporarily empty while typing.\n\t\t\t\t\t\t\t\tif ( ! newValue ) {\n\t\t\t\t\t\t\t\t\tif ( ! forceEmptyField ) {\n\t\t\t\t\t\t\t\t\t\tsetForceEmptyField( true );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif ( forceEmptyField ) {\n\t\t\t\t\t\t\t\t\tsetForceEmptyField( false );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\tonBlur={ ( event ) => {\n\t\t\t\t\t\t\t\teditPost( {\n\t\t\t\t\t\t\t\t\tslug: cleanForSlug( event.target.value ),\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\tif ( forceEmptyField ) {\n\t\t\t\t\t\t\t\t\tsetForceEmptyField( false );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\thelp={\n\t\t\t\t\t\t\t\t<ExternalLink\n\t\t\t\t\t\t\t\t\tclassName=\"editor-post-url__link\"\n\t\t\t\t\t\t\t\t\thref={ postLink }\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<span className=\"editor-post-url__link-prefix\">\n\t\t\t\t\t\t\t\t\t\t{ permalinkPrefix }\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t<span className=\"editor-post-url__link-slug\">\n\t\t\t\t\t\t\t\t\t\t{ postSlug }\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t<span className=\"editor-post-url__link-suffix\">\n\t\t\t\t\t\t\t\t\t\t{ permalinkSuffix }\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</ExternalLink>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t{ ! isEditable && (\n\t\t\t\t\t\t<ExternalLink\n\t\t\t\t\t\t\tclassName=\"editor-post-url__link\"\n\t\t\t\t\t\t\thref={ postLink }\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ postLink }\n\t\t\t\t\t\t</ExternalLink>\n\t\t\t\t\t) }\n\t\t\t\t</div>\n\t\t\t</VStack>\n\t\t</div>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\n/**\n * Check if the post URL is valid and visible.\n *\n * @param {Object}  props          The component props.\n * @param {Element} props.children The child components.\n *\n * @return {Component|null} The child components if the post URL is valid and visible, otherwise null.\n */\nexport default function PostURLCheck( { children } ) {\n\tconst isVisible = useSelect( ( select ) => {\n\t\tconst postTypeSlug = select( editorStore ).getCurrentPostType();\n\t\tconst postType = select( coreStore ).getPostType( postTypeSlug );\n\t\tif ( ! postType?.viewable ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst post = select( editorStore ).getCurrentPost();\n\t\tif ( ! post.link ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst permalinkParts = select( editorStore ).getPermalinkParts();\n\t\tif ( ! permalinkParts ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}, [] );\n\n\tif ( ! isVisible ) {\n\t\treturn null;\n\t}\n\n\treturn children;\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { filterURLForDisplay, safeDecodeURIComponent } from '@wordpress/url';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\n/**\n * Represents a label component for a post URL.\n *\n * @return {Component} The PostURLLabel component.\n */\nexport default function PostURLLabel() {\n\treturn usePostURLLabel();\n}\n\n/**\n * Custom hook to get the label for the post URL.\n *\n * @return {string} The filtered and decoded post URL label.\n */\nexport function usePostURLLabel() {\n\tconst postLink = useSelect(\n\t\t( select ) => select( editorStore ).getPermalink(),\n\t\t[]\n\t);\n\treturn filterURLForDisplay( safeDecodeURIComponent( postLink ) );\n}\n","/**\n * WordPress dependencies\n */\nimport { useMemo, useState } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport { Dropdown, Button } from '@wordpress/components';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { safeDecodeURIComponent } from '@wordpress/url';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport PostURLCheck from './check';\nimport PostURL from './index';\nimport PostPanelRow from '../post-panel-row';\nimport { store as editorStore } from '../../store';\n\n/**\n * Renders the `PostURLPanel` component.\n *\n * @return {JSX.Element} The rendered PostURLPanel component.\n */\nexport default function PostURLPanel() {\n\t// Use internal state instead of a ref to make sure that the component\n\t// re-renders when the popover's anchor updates.\n\tconst [ popoverAnchor, setPopoverAnchor ] = useState( null );\n\t// Memoize popoverProps to avoid returning a new object every time.\n\tconst popoverProps = useMemo(\n\t\t() => ( {\n\t\t\t// Anchor the popover to the middle of the entire row so that it doesn't\n\t\t\t// move around when the label changes.\n\t\t\tanchor: popoverAnchor,\n\t\t\tplacement: 'left-start',\n\t\t\toffset: 36,\n\t\t\tshift: true,\n\t\t} ),\n\t\t[ popoverAnchor ]\n\t);\n\n\treturn (\n\t\t<PostURLCheck>\n\t\t\t<PostPanelRow label={ __( 'Link' ) } ref={ setPopoverAnchor }>\n\t\t\t\t<Dropdown\n\t\t\t\t\tpopoverProps={ popoverProps }\n\t\t\t\t\tclassName=\"editor-post-url__panel-dropdown\"\n\t\t\t\t\tcontentClassName=\"editor-post-url__panel-dialog\"\n\t\t\t\t\tfocusOnMount\n\t\t\t\t\trenderToggle={ ( { isOpen, onToggle } ) => (\n\t\t\t\t\t\t<PostURLToggle isOpen={ isOpen } onClick={ onToggle } />\n\t\t\t\t\t) }\n\t\t\t\t\trenderContent={ ( { onClose } ) => (\n\t\t\t\t\t\t<PostURL onClose={ onClose } />\n\t\t\t\t\t) }\n\t\t\t\t/>\n\t\t\t</PostPanelRow>\n\t\t</PostURLCheck>\n\t);\n}\n\nfunction PostURLToggle( { isOpen, onClick } ) {\n\tconst { slug, isFrontPage, postLink } = useSelect( ( select ) => {\n\t\tconst { getCurrentPostId, getCurrentPost } = select( editorStore );\n\t\tconst { getEditedEntityRecord } = select( coreStore );\n\t\tconst siteSettings = getEditedEntityRecord( 'root', 'site' );\n\t\tconst _id = getCurrentPostId();\n\t\treturn {\n\t\t\tslug: select( editorStore ).getEditedPostSlug(),\n\t\t\tisFrontPage: siteSettings?.page_on_front === _id,\n\t\t\tpostLink: getCurrentPost()?.link,\n\t\t};\n\t}, [] );\n\tconst decodedSlug = safeDecodeURIComponent( slug );\n\treturn (\n\t\t<Button\n\t\t\tsize=\"compact\"\n\t\t\tclassName=\"editor-post-url__panel-toggle\"\n\t\t\tvariant=\"tertiary\"\n\t\t\taria-expanded={ isOpen }\n\t\t\t// translators: %s: Current post link.\n\t\t\taria-label={ sprintf( __( 'Change link: %s' ), decodedSlug ) }\n\t\t\tonClick={ onClick }\n\t\t>\n\t\t\t{ isFrontPage ? postLink : <>/{ decodedSlug }</> }\n\t\t</Button>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\n/**\n * Determines if the current post can be edited (published)\n * and passes this information to the provided render function.\n *\n * @param {Object}   props        The component props.\n * @param {Function} props.render Function to render the component.\n *                                Receives an object with a `canEdit` property.\n * @return {JSX.Element} The rendered component.\n */\nexport default function PostVisibilityCheck( { render } ) {\n\tconst canEdit = useSelect( ( select ) => {\n\t\treturn (\n\t\t\tselect( editorStore ).getCurrentPost()._links?.[\n\t\t\t\t'wp:action-publish'\n\t\t\t] ?? false\n\t\t);\n\t} );\n\n\treturn render( { canEdit } );\n}\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst info = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M12 3.2c-4.8 0-8.8 3.9-8.8 8.8 0 4.8 3.9 8.8 8.8 8.8 4.8 0 8.8-3.9 8.8-8.8 0-4.8-4-8.8-8.8-8.8zm0 16c-4 0-7.2-3.3-7.2-7.2C4.8 8 8 4.8 12 4.8s7.2 3.3 7.2 7.2c0 4-3.2 7.2-7.2 7.2zM11 17h2v-6h-2v6zm0-8h2V7h-2v2z\" />\n\t</SVG>\n);\n\nexport default info;\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"wordcount\"];","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { _x } from '@wordpress/i18n';\nimport { count as wordCount } from '@wordpress/wordcount';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\n/**\n * Renders the word count of the post content.\n *\n * @return {JSX.Element|null} The rendered WordCount component.\n */\nexport default function WordCount() {\n\tconst content = useSelect(\n\t\t( select ) => select( editorStore ).getEditedPostAttribute( 'content' ),\n\t\t[]\n\t);\n\n\t/*\n\t * translators: If your word count is based on single characters (e.g. East Asian characters),\n\t * enter 'characters_excluding_spaces' or 'characters_including_spaces'. Otherwise, enter 'words'.\n\t * Do not translate into your own language.\n\t */\n\tconst wordCountType = _x( 'words', 'Word count type. Do not translate!' );\n\n\treturn (\n\t\t<span className=\"word-count\">\n\t\t\t{ wordCount( content, wordCountType ) }\n\t\t</span>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { _x, _n, __, sprintf } from '@wordpress/i18n';\nimport { count as wordCount } from '@wordpress/wordcount';\nimport { createInterpolateElement } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\n/**\n * Average reading rate - based on average taken from\n * https://irisreading.com/average-reading-speed-in-various-languages/\n * (Characters/minute used for Chinese rather than words).\n *\n * @type {number} A rough estimate of the average reading rate across multiple languages.\n */\nconst AVERAGE_READING_RATE = 189;\n\n/**\n * Component for showing Time To Read in Content.\n *\n * @return {JSX.Element} The rendered TimeToRead component.\n */\nexport default function TimeToRead() {\n\tconst content = useSelect(\n\t\t( select ) => select( editorStore ).getEditedPostAttribute( 'content' ),\n\t\t[]\n\t);\n\n\t/*\n\t * translators: If your word count is based on single characters (e.g. East Asian characters),\n\t * enter 'characters_excluding_spaces' or 'characters_including_spaces'. Otherwise, enter 'words'.\n\t * Do not translate into your own language.\n\t */\n\tconst wordCountType = _x( 'words', 'Word count type. Do not translate!' );\n\tconst minutesToRead = Math.round(\n\t\twordCount( content, wordCountType ) / AVERAGE_READING_RATE\n\t);\n\tconst minutesToReadString =\n\t\tminutesToRead === 0\n\t\t\t? createInterpolateElement( __( '<span>< 1</span> minute' ), {\n\t\t\t\t\tspan: <span />,\n\t\t\t  } )\n\t\t\t: createInterpolateElement(\n\t\t\t\t\tsprintf(\n\t\t\t\t\t\t/* translators: %s is the number of minutes the post will take to read. */\n\t\t\t\t\t\t_n(\n\t\t\t\t\t\t\t'<span>%d</span> minute',\n\t\t\t\t\t\t\t'<span>%d</span> minutes',\n\t\t\t\t\t\t\tminutesToRead\n\t\t\t\t\t\t),\n\t\t\t\t\t\tminutesToRead\n\t\t\t\t\t),\n\t\t\t\t\t{\n\t\t\t\t\t\tspan: <span />,\n\t\t\t\t\t}\n\t\t\t  );\n\n\treturn <span className=\"time-to-read\">{ minutesToReadString }</span>;\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { count as characterCount } from '@wordpress/wordcount';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\n/**\n * Renders the character count of the post content.\n *\n * @return {number} The character count.\n */\nexport default function CharacterCount() {\n\tconst content = useSelect(\n\t\t( select ) => select( editorStore ).getEditedPostAttribute( 'content' ),\n\t\t[]\n\t);\n\n\treturn characterCount( content, 'characters_including_spaces' );\n}\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useSelect } from '@wordpress/data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport WordCount from '../word-count';\nimport TimeToRead from '../time-to-read';\nimport DocumentOutline from '../document-outline';\nimport CharacterCount from '../character-count';\n\nfunction TableOfContentsPanel( { hasOutlineItemsDisabled, onRequestClose } ) {\n\tconst { headingCount, paragraphCount, numberOfBlocks } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getGlobalBlockCount } = select( blockEditorStore );\n\t\t\treturn {\n\t\t\t\theadingCount: getGlobalBlockCount( 'core/heading' ),\n\t\t\t\tparagraphCount: getGlobalBlockCount( 'core/paragraph' ),\n\t\t\t\tnumberOfBlocks: getGlobalBlockCount(),\n\t\t\t};\n\t\t},\n\t\t[]\n\t);\n\treturn (\n\t\t/*\n\t\t * Disable reason: The `list` ARIA role is redundant but\n\t\t * Safari+VoiceOver won't announce the list otherwise.\n\t\t */\n\t\t/* eslint-disable jsx-a11y/no-redundant-roles */\n\t\t<>\n\t\t\t<div\n\t\t\t\tclassName=\"table-of-contents__wrapper\"\n\t\t\t\trole=\"note\"\n\t\t\t\taria-label={ __( 'Document Statistics' ) }\n\t\t\t\ttabIndex=\"0\"\n\t\t\t>\n\t\t\t\t<ul role=\"list\" className=\"table-of-contents__counts\">\n\t\t\t\t\t<li className=\"table-of-contents__count\">\n\t\t\t\t\t\t{ __( 'Words' ) }\n\t\t\t\t\t\t<WordCount />\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className=\"table-of-contents__count\">\n\t\t\t\t\t\t{ __( 'Characters' ) }\n\t\t\t\t\t\t<span className=\"table-of-contents__number\">\n\t\t\t\t\t\t\t<CharacterCount />\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className=\"table-of-contents__count\">\n\t\t\t\t\t\t{ __( 'Time to read' ) }\n\t\t\t\t\t\t<TimeToRead />\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className=\"table-of-contents__count\">\n\t\t\t\t\t\t{ __( 'Headings' ) }\n\t\t\t\t\t\t<span className=\"table-of-contents__number\">\n\t\t\t\t\t\t\t{ headingCount }\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className=\"table-of-contents__count\">\n\t\t\t\t\t\t{ __( 'Paragraphs' ) }\n\t\t\t\t\t\t<span className=\"table-of-contents__number\">\n\t\t\t\t\t\t\t{ paragraphCount }\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className=\"table-of-contents__count\">\n\t\t\t\t\t\t{ __( 'Blocks' ) }\n\t\t\t\t\t\t<span className=\"table-of-contents__number\">\n\t\t\t\t\t\t\t{ numberOfBlocks }\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t{ headingCount > 0 && (\n\t\t\t\t<>\n\t\t\t\t\t<hr />\n\t\t\t\t\t<h2 className=\"table-of-contents__title\">\n\t\t\t\t\t\t{ __( 'Document Outline' ) }\n\t\t\t\t\t</h2>\n\t\t\t\t\t<DocumentOutline\n\t\t\t\t\t\tonSelect={ onRequestClose }\n\t\t\t\t\t\thasOutlineItemsDisabled={ hasOutlineItemsDisabled }\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t) }\n\t\t</>\n\t\t/* eslint-enable jsx-a11y/no-redundant-roles */\n\t);\n}\n\nexport default TableOfContentsPanel;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Dropdown, Button } from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\nimport { info } from '@wordpress/icons';\nimport { forwardRef } from '@wordpress/element';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport TableOfContentsPanel from './panel';\n\nfunction TableOfContents(\n\t{ hasOutlineItemsDisabled, repositionDropdown, ...props },\n\tref\n) {\n\tconst hasBlocks = useSelect(\n\t\t( select ) => !! select( blockEditorStore ).getBlockCount(),\n\t\t[]\n\t);\n\treturn (\n\t\t<Dropdown\n\t\t\tpopoverProps={ {\n\t\t\t\tplacement: repositionDropdown ? 'right' : 'bottom',\n\t\t\t} }\n\t\t\tclassName=\"table-of-contents\"\n\t\t\tcontentClassName=\"table-of-contents__popover\"\n\t\t\trenderToggle={ ( { isOpen, onToggle } ) => (\n\t\t\t\t<Button\n\t\t\t\t\t{ ...props }\n\t\t\t\t\tref={ ref }\n\t\t\t\t\tonClick={ hasBlocks ? onToggle : undefined }\n\t\t\t\t\ticon={ info }\n\t\t\t\t\taria-expanded={ isOpen }\n\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\t/* translators: button label text should, if possible, be under 16 characters. */\n\t\t\t\t\tlabel={ __( 'Details' ) }\n\t\t\t\t\ttooltipPosition=\"bottom\"\n\t\t\t\t\taria-disabled={ ! hasBlocks }\n\t\t\t\t/>\n\t\t\t) }\n\t\t\trenderContent={ ( { onClose } ) => (\n\t\t\t\t<TableOfContentsPanel\n\t\t\t\t\tonRequestClose={ onClose }\n\t\t\t\t\thasOutlineItemsDisabled={ hasOutlineItemsDisabled }\n\t\t\t\t/>\n\t\t\t) }\n\t\t/>\n\t);\n}\n\n/**\n * Renders a table of contents component.\n *\n * @param {Object}      props                         The component props.\n * @param {boolean}     props.hasOutlineItemsDisabled Whether outline items are disabled.\n * @param {boolean}     props.repositionDropdown      Whether to reposition the dropdown.\n * @param {Element.ref} ref                           The component's ref.\n *\n * @return {JSX.Element} The rendered table of contents component.\n */\nexport default forwardRef( TableOfContents );\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useEffect } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Warns the user if there are unsaved changes before leaving the editor.\n * Compatible with Post Editor and Site Editor.\n *\n * @return {Component} The component.\n */\nexport default function UnsavedChangesWarning() {\n\tconst { __experimentalGetDirtyEntityRecords } = useSelect( coreStore );\n\n\tuseEffect( () => {\n\t\t/**\n\t\t * Warns the user if there are unsaved changes before leaving the editor.\n\t\t *\n\t\t * @param {Event} event `beforeunload` event.\n\t\t *\n\t\t * @return {string | undefined} Warning prompt message, if unsaved changes exist.\n\t\t */\n\t\tconst warnIfUnsavedChanges = ( event ) => {\n\t\t\t// We need to call the selector directly in the listener to avoid race\n\t\t\t// conditions with `BrowserURL` where `componentDidUpdate` gets the\n\t\t\t// new value of `isEditedPostDirty` before this component does,\n\t\t\t// causing this component to incorrectly think a trashed post is still dirty.\n\t\t\tconst dirtyEntityRecords = __experimentalGetDirtyEntityRecords();\n\t\t\tif ( dirtyEntityRecords.length > 0 ) {\n\t\t\t\tevent.returnValue = __(\n\t\t\t\t\t'You have unsaved changes. If you proceed, they will be lost.'\n\t\t\t\t);\n\t\t\t\treturn event.returnValue;\n\t\t\t}\n\t\t};\n\n\t\twindow.addEventListener( 'beforeunload', warnIfUnsavedChanges );\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener( 'beforeunload', warnIfUnsavedChanges );\n\t\t};\n\t}, [ __experimentalGetDirtyEntityRecords ] );\n\n\treturn null;\n}\n","/**\n * WordPress dependencies\n */\nimport { useState } from '@wordpress/element';\nimport { useRegistry, createRegistry, RegistryProvider } from '@wordpress/data';\nimport { createHigherOrderComponent } from '@wordpress/compose';\nimport { storeConfig as blockEditorStoreConfig } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport { storeConfig } from '../../store';\n\nfunction getSubRegistry( subRegistries, registry, useSubRegistry ) {\n\tif ( ! useSubRegistry ) {\n\t\treturn registry;\n\t}\n\tlet subRegistry = subRegistries.get( registry );\n\tif ( ! subRegistry ) {\n\t\tsubRegistry = createRegistry(\n\t\t\t{\n\t\t\t\t'core/block-editor': blockEditorStoreConfig,\n\t\t\t},\n\t\t\tregistry\n\t\t);\n\t\t// Todo: The interface store should also be created per instance.\n\t\tsubRegistry.registerStore( 'core/editor', storeConfig );\n\t\tsubRegistries.set( registry, subRegistry );\n\t}\n\treturn subRegistry;\n}\n\nconst withRegistryProvider = createHigherOrderComponent(\n\t( WrappedComponent ) =>\n\t\t( { useSubRegistry = true, ...props } ) => {\n\t\t\tconst registry = useRegistry();\n\t\t\tconst [ subRegistries ] = useState( () => new WeakMap() );\n\t\t\tconst subRegistry = getSubRegistry(\n\t\t\t\tsubRegistries,\n\t\t\t\tregistry,\n\t\t\t\tuseSubRegistry\n\t\t\t);\n\n\t\t\tif ( subRegistry === registry ) {\n\t\t\t\treturn <WrappedComponent registry={ registry } { ...props } />;\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<RegistryProvider value={ subRegistry }>\n\t\t\t\t\t<WrappedComponent registry={ subRegistry } { ...props } />\n\t\t\t\t</RegistryProvider>\n\t\t\t);\n\t\t},\n\t'withRegistryProvider'\n);\n\nexport default withRegistryProvider;\n","/**\n * The `editor` settings here need to be in sync with the corresponding ones in `editor` package.\n * See `packages/editor/src/components/media-categories/index.js`.\n *\n * In the future we could consider creating an Openvese package that can be used in both `editor` and `site-editor`.\n * The rest of the settings would still need to be in sync though.\n */\n\n/**\n * WordPress dependencies\n */\nimport { __, sprintf, _x } from '@wordpress/i18n';\nimport { resolveSelect } from '@wordpress/data';\nimport { decodeEntities } from '@wordpress/html-entities';\n\n/**\n * Internal dependencies\n */\nimport { store as coreStore } from '@wordpress/core-data';\n\n/** @typedef {import('@wordpress/block-editor').InserterMediaRequest} InserterMediaRequest */\n/** @typedef {import('@wordpress/block-editor').InserterMediaItem} InserterMediaItem */\n/** @typedef {import('@wordpress/block-editor').InserterMediaCategory} InserterMediaCategory */\n\nconst getExternalLink = ( url, text ) =>\n\t`<a ${ getExternalLinkAttributes( url ) }>${ text }</a>`;\n\nconst getExternalLinkAttributes = ( url ) =>\n\t`href=\"${ url }\" target=\"_blank\" rel=\"noreferrer noopener\"`;\n\nconst getOpenverseLicense = ( license, licenseVersion ) => {\n\tlet licenseName = license.trim();\n\t// PDM has no abbreviation\n\tif ( license !== 'pdm' ) {\n\t\tlicenseName = license.toUpperCase().replace( 'SAMPLING', 'Sampling' );\n\t}\n\t// If version is known, append version to the name.\n\t// The license has to have a version to be valid. Only\n\t// PDM (public domain mark) doesn't have a version.\n\tif ( licenseVersion ) {\n\t\tlicenseName += ` ${ licenseVersion }`;\n\t}\n\t// For licenses other than public-domain marks, prepend 'CC' to the name.\n\tif ( ! [ 'pdm', 'cc0' ].includes( license ) ) {\n\t\tlicenseName = `CC ${ licenseName }`;\n\t}\n\treturn licenseName;\n};\n\nconst getOpenverseCaption = ( item ) => {\n\tconst {\n\t\ttitle,\n\t\tforeign_landing_url: foreignLandingUrl,\n\t\tcreator,\n\t\tcreator_url: creatorUrl,\n\t\tlicense,\n\t\tlicense_version: licenseVersion,\n\t\tlicense_url: licenseUrl,\n\t} = item;\n\tconst fullLicense = getOpenverseLicense( license, licenseVersion );\n\tconst _creator = decodeEntities( creator );\n\tlet _caption;\n\tif ( _creator ) {\n\t\t_caption = title\n\t\t\t? sprintf(\n\t\t\t\t\t// translators: %1s: Title of a media work from Openverse; %2s: Name of the work's creator; %3s: Work's licence e.g: \"CC0 1.0\".\n\t\t\t\t\t_x( '\"%1$s\" by %2$s/ %3$s', 'caption' ),\n\t\t\t\t\tgetExternalLink(\n\t\t\t\t\t\tforeignLandingUrl,\n\t\t\t\t\t\tdecodeEntities( title )\n\t\t\t\t\t),\n\t\t\t\t\tcreatorUrl\n\t\t\t\t\t\t? getExternalLink( creatorUrl, _creator )\n\t\t\t\t\t\t: _creator,\n\t\t\t\t\tlicenseUrl\n\t\t\t\t\t\t? getExternalLink(\n\t\t\t\t\t\t\t\t`${ licenseUrl }?ref=openverse`,\n\t\t\t\t\t\t\t\tfullLicense\n\t\t\t\t\t\t  )\n\t\t\t\t\t\t: fullLicense\n\t\t\t  )\n\t\t\t: sprintf(\n\t\t\t\t\t// translators: %1s: Link attributes for a given Openverse media work; %2s: Name of the work's creator; %3s: Works's licence e.g: \"CC0 1.0\".\n\t\t\t\t\t_x( '<a %1$s>Work</a> by %2$s/ %3$s', 'caption' ),\n\t\t\t\t\tgetExternalLinkAttributes( foreignLandingUrl ),\n\t\t\t\t\tcreatorUrl\n\t\t\t\t\t\t? getExternalLink( creatorUrl, _creator )\n\t\t\t\t\t\t: _creator,\n\t\t\t\t\tlicenseUrl\n\t\t\t\t\t\t? getExternalLink(\n\t\t\t\t\t\t\t\t`${ licenseUrl }?ref=openverse`,\n\t\t\t\t\t\t\t\tfullLicense\n\t\t\t\t\t\t  )\n\t\t\t\t\t\t: fullLicense\n\t\t\t  );\n\t} else {\n\t\t_caption = title\n\t\t\t? sprintf(\n\t\t\t\t\t// translators: %1s: Title of a media work from Openverse; %2s: Work's licence e.g: \"CC0 1.0\".\n\t\t\t\t\t_x( '\"%1$s\"/ %2$s', 'caption' ),\n\t\t\t\t\tgetExternalLink(\n\t\t\t\t\t\tforeignLandingUrl,\n\t\t\t\t\t\tdecodeEntities( title )\n\t\t\t\t\t),\n\t\t\t\t\tlicenseUrl\n\t\t\t\t\t\t? getExternalLink(\n\t\t\t\t\t\t\t\t`${ licenseUrl }?ref=openverse`,\n\t\t\t\t\t\t\t\tfullLicense\n\t\t\t\t\t\t  )\n\t\t\t\t\t\t: fullLicense\n\t\t\t  )\n\t\t\t: sprintf(\n\t\t\t\t\t// translators: %1s: Link attributes for a given Openverse media work; %2s: Works's licence e.g: \"CC0 1.0\".\n\t\t\t\t\t_x( '<a %1$s>Work</a>/ %2$s', 'caption' ),\n\t\t\t\t\tgetExternalLinkAttributes( foreignLandingUrl ),\n\t\t\t\t\tlicenseUrl\n\t\t\t\t\t\t? getExternalLink(\n\t\t\t\t\t\t\t\t`${ licenseUrl }?ref=openverse`,\n\t\t\t\t\t\t\t\tfullLicense\n\t\t\t\t\t\t  )\n\t\t\t\t\t\t: fullLicense\n\t\t\t  );\n\t}\n\treturn _caption.replace( /\\s{2}/g, ' ' );\n};\n\nconst coreMediaFetch = async ( query = {} ) => {\n\tconst mediaItems = await resolveSelect( coreStore ).getMediaItems( {\n\t\t...query,\n\t\torderBy: !! query?.search ? 'relevance' : 'date',\n\t} );\n\treturn mediaItems.map( ( mediaItem ) => ( {\n\t\t...mediaItem,\n\t\talt: mediaItem.alt_text,\n\t\turl: mediaItem.source_url,\n\t\tpreviewUrl: mediaItem.media_details?.sizes?.medium?.source_url,\n\t\tcaption: mediaItem.caption?.raw,\n\t} ) );\n};\n\n/** @type {InserterMediaCategory[]} */\nconst inserterMediaCategories = [\n\t{\n\t\tname: 'images',\n\t\tlabels: {\n\t\t\tname: __( 'Images' ),\n\t\t\tsearch_items: __( 'Search images' ),\n\t\t},\n\t\tmediaType: 'image',\n\t\tasync fetch( query = {} ) {\n\t\t\treturn coreMediaFetch( { ...query, media_type: 'image' } );\n\t\t},\n\t},\n\t{\n\t\tname: 'videos',\n\t\tlabels: {\n\t\t\tname: __( 'Videos' ),\n\t\t\tsearch_items: __( 'Search videos' ),\n\t\t},\n\t\tmediaType: 'video',\n\t\tasync fetch( query = {} ) {\n\t\t\treturn coreMediaFetch( { ...query, media_type: 'video' } );\n\t\t},\n\t},\n\t{\n\t\tname: 'audio',\n\t\tlabels: {\n\t\t\tname: __( 'Audio' ),\n\t\t\tsearch_items: __( 'Search audio' ),\n\t\t},\n\t\tmediaType: 'audio',\n\t\tasync fetch( query = {} ) {\n\t\t\treturn coreMediaFetch( { ...query, media_type: 'audio' } );\n\t\t},\n\t},\n\t{\n\t\tname: 'openverse',\n\t\tlabels: {\n\t\t\tname: __( 'Openverse' ),\n\t\t\tsearch_items: __( 'Search Openverse' ),\n\t\t},\n\t\tmediaType: 'image',\n\t\tasync fetch( query = {} ) {\n\t\t\tconst defaultArgs = {\n\t\t\t\tmature: false,\n\t\t\t\texcluded_source: 'flickr,inaturalist,wikimedia',\n\t\t\t\tlicense: 'pdm,cc0',\n\t\t\t};\n\t\t\tconst finalQuery = { ...query, ...defaultArgs };\n\t\t\tconst mapFromInserterMediaRequest = {\n\t\t\t\tper_page: 'page_size',\n\t\t\t\tsearch: 'q',\n\t\t\t};\n\t\t\tconst url = new URL( 'https://api.openverse.org/v1/images/' );\n\t\t\tObject.entries( finalQuery ).forEach( ( [ key, value ] ) => {\n\t\t\t\tconst queryKey = mapFromInserterMediaRequest[ key ] || key;\n\t\t\t\turl.searchParams.set( queryKey, value );\n\t\t\t} );\n\t\t\tconst response = await window.fetch( url, {\n\t\t\t\theaders: {\n\t\t\t\t\t'User-Agent': 'WordPress/inserter-media-fetch',\n\t\t\t\t},\n\t\t\t} );\n\t\t\tconst jsonResponse = await response.json();\n\t\t\tconst results = jsonResponse.results;\n\t\t\treturn results.map( ( result ) => ( {\n\t\t\t\t...result,\n\t\t\t\t// This is a temp solution for better titles, until Openverse API\n\t\t\t\t// completes the cleaning up of some titles of their upstream data.\n\t\t\t\ttitle: result.title?.toLowerCase().startsWith( 'file:' )\n\t\t\t\t\t? result.title.slice( 5 )\n\t\t\t\t\t: result.title,\n\t\t\t\tsourceId: result.id,\n\t\t\t\tid: undefined,\n\t\t\t\tcaption: getOpenverseCaption( result ),\n\t\t\t\tpreviewUrl: result.thumbnail,\n\t\t\t} ) );\n\t\t},\n\t\tgetReportUrl: ( { sourceId } ) =>\n\t\t\t`https://wordpress.org/openverse/image/${ sourceId }/report/`,\n\t\tisExternalResource: true,\n\t},\n];\n\nexport default inserterMediaCategories;\n","/**\n * WordPress dependencies\n */\nimport { select } from '@wordpress/data';\nimport { uploadMedia } from '@wordpress/media-utils';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nconst noop = () => {};\n\n/**\n * Upload a media file when the file upload button is activated.\n * Wrapper around mediaUpload() that injects the current post ID.\n *\n * @param {Object}   $0                   Parameters object passed to the function.\n * @param {?Object}  $0.additionalData    Additional data to include in the request.\n * @param {string}   $0.allowedTypes      Array with the types of media that can be uploaded, if unset all types are allowed.\n * @param {Array}    $0.filesList         List of files.\n * @param {?number}  $0.maxUploadFileSize Maximum upload size in bytes allowed for the site.\n * @param {Function} $0.onError           Function called when an error happens.\n * @param {Function} $0.onFileChange      Function called each time a file or a temporary representation of the file is available.\n */\nexport default function mediaUpload( {\n\tadditionalData = {},\n\tallowedTypes,\n\tfilesList,\n\tmaxUploadFileSize,\n\tonError = noop,\n\tonFileChange,\n} ) {\n\tconst { getCurrentPost, getEditorSettings } = select( editorStore );\n\tconst wpAllowedMimeTypes = getEditorSettings().allowedMimeTypes;\n\tmaxUploadFileSize =\n\t\tmaxUploadFileSize || getEditorSettings().maxUploadFileSize;\n\tconst currentPost = getCurrentPost();\n\t// Templates and template parts' numerical ID is stored in `wp_id`.\n\tconst currentPostId =\n\t\ttypeof currentPost?.id === 'number'\n\t\t\t? currentPost.id\n\t\t\t: currentPost?.wp_id;\n\tconst postData = currentPostId ? { post: currentPostId } : {};\n\n\tuploadMedia( {\n\t\tallowedTypes,\n\t\tfilesList,\n\t\tonFileChange,\n\t\tadditionalData: {\n\t\t\t...postData,\n\t\t\t...additionalData,\n\t\t},\n\t\tmaxUploadFileSize,\n\t\tonError: ( { message } ) => onError( message ),\n\t\twpAllowedMimeTypes,\n\t} );\n}\n","/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nfunction isObject(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\n\nfunction isPlainObject(o) {\n  var ctor,prot;\n\n  if (isObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (ctor === undefined) return true;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n}\n\nexport { isPlainObject };\n","/**\n * External dependencies\n */\nimport deepmerge from 'deepmerge';\nimport { isPlainObject } from 'is-plain-object';\n\n/**\n * WordPress dependencies\n */\nimport { privateApis as blockEditorPrivateApis } from '@wordpress/block-editor';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useMemo, useCallback } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { unlock } from '../../lock-unlock';\n\nconst { GlobalStylesContext, cleanEmptyObject } = unlock(\n\tblockEditorPrivateApis\n);\n\nexport function mergeBaseAndUserConfigs( base, user ) {\n\treturn deepmerge( base, user, {\n\t\t// We only pass as arrays the presets,\n\t\t// in which case we want the new array of values\n\t\t// to override the old array (no merging).\n\t\tisMergeableObject: isPlainObject,\n\t} );\n}\n\nfunction useGlobalStylesUserConfig() {\n\tconst { globalStylesId, isReady, settings, styles, _links } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getEditedEntityRecord, hasFinishedResolution } =\n\t\t\t\tselect( coreStore );\n\t\t\tconst _globalStylesId =\n\t\t\t\tselect( coreStore ).__experimentalGetCurrentGlobalStylesId();\n\t\t\tconst record = _globalStylesId\n\t\t\t\t? getEditedEntityRecord(\n\t\t\t\t\t\t'root',\n\t\t\t\t\t\t'globalStyles',\n\t\t\t\t\t\t_globalStylesId\n\t\t\t\t  )\n\t\t\t\t: undefined;\n\n\t\t\tlet hasResolved = false;\n\t\t\tif (\n\t\t\t\thasFinishedResolution(\n\t\t\t\t\t'__experimentalGetCurrentGlobalStylesId'\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\thasResolved = _globalStylesId\n\t\t\t\t\t? hasFinishedResolution( 'getEditedEntityRecord', [\n\t\t\t\t\t\t\t'root',\n\t\t\t\t\t\t\t'globalStyles',\n\t\t\t\t\t\t\t_globalStylesId,\n\t\t\t\t\t  ] )\n\t\t\t\t\t: true;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tglobalStylesId: _globalStylesId,\n\t\t\t\tisReady: hasResolved,\n\t\t\t\tsettings: record?.settings,\n\t\t\t\tstyles: record?.styles,\n\t\t\t\t_links: record?._links,\n\t\t\t};\n\t\t},\n\t\t[]\n\t);\n\n\tconst { getEditedEntityRecord } = useSelect( coreStore );\n\tconst { editEntityRecord } = useDispatch( coreStore );\n\tconst config = useMemo( () => {\n\t\treturn {\n\t\t\tsettings: settings ?? {},\n\t\t\tstyles: styles ?? {},\n\t\t\t_links: _links ?? {},\n\t\t};\n\t}, [ settings, styles, _links ] );\n\n\tconst setConfig = useCallback(\n\t\t/**\n\t\t * Set the global styles config.\n\t\t * @param {Function|Object} callbackOrObject If the callbackOrObject is a function, pass the current config to the callback so the consumer can merge values.\n\t\t *                                           Otherwise, overwrite the current config with the incoming object.\n\t\t * @param {Object}          options          Options for editEntityRecord Core selector.\n\t\t */\n\t\t( callbackOrObject, options = {} ) => {\n\t\t\tconst record = getEditedEntityRecord(\n\t\t\t\t'root',\n\t\t\t\t'globalStyles',\n\t\t\t\tglobalStylesId\n\t\t\t);\n\n\t\t\tconst currentConfig = {\n\t\t\t\tstyles: record?.styles ?? {},\n\t\t\t\tsettings: record?.settings ?? {},\n\t\t\t\t_links: record?._links ?? {},\n\t\t\t};\n\n\t\t\tconst updatedConfig =\n\t\t\t\ttypeof callbackOrObject === 'function'\n\t\t\t\t\t? callbackOrObject( currentConfig )\n\t\t\t\t\t: callbackOrObject;\n\n\t\t\teditEntityRecord(\n\t\t\t\t'root',\n\t\t\t\t'globalStyles',\n\t\t\t\tglobalStylesId,\n\t\t\t\t{\n\t\t\t\t\tstyles: cleanEmptyObject( updatedConfig.styles ) || {},\n\t\t\t\t\tsettings: cleanEmptyObject( updatedConfig.settings ) || {},\n\t\t\t\t\t_links: cleanEmptyObject( updatedConfig._links ) || {},\n\t\t\t\t},\n\t\t\t\toptions\n\t\t\t);\n\t\t},\n\t\t[ globalStylesId, editEntityRecord, getEditedEntityRecord ]\n\t);\n\n\treturn [ isReady, config, setConfig ];\n}\n\nfunction useGlobalStylesBaseConfig() {\n\tconst baseConfig = useSelect( ( select ) => {\n\t\treturn select(\n\t\t\tcoreStore\n\t\t).__experimentalGetCurrentThemeBaseGlobalStyles();\n\t}, [] );\n\n\treturn [ !! baseConfig, baseConfig ];\n}\n\nexport function useGlobalStylesContext() {\n\tconst [ isUserConfigReady, userConfig, setUserConfig ] =\n\t\tuseGlobalStylesUserConfig();\n\tconst [ isBaseConfigReady, baseConfig ] = useGlobalStylesBaseConfig();\n\n\tconst mergedConfig = useMemo( () => {\n\t\tif ( ! baseConfig || ! userConfig ) {\n\t\t\treturn {};\n\t\t}\n\n\t\treturn mergeBaseAndUserConfigs( baseConfig, userConfig );\n\t}, [ userConfig, baseConfig ] );\n\n\tconst context = useMemo( () => {\n\t\treturn {\n\t\t\tisReady: isUserConfigReady && isBaseConfigReady,\n\t\t\tuser: userConfig,\n\t\t\tbase: baseConfig,\n\t\t\tmerged: mergedConfig,\n\t\t\tsetUserConfig,\n\t\t};\n\t}, [\n\t\tmergedConfig,\n\t\tuserConfig,\n\t\tbaseConfig,\n\t\tsetUserConfig,\n\t\tisUserConfigReady,\n\t\tisBaseConfigReady,\n\t] );\n\n\treturn context;\n}\n\nexport function GlobalStylesProvider( { children } ) {\n\tconst context = useGlobalStylesContext();\n\tif ( ! context.isReady ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<GlobalStylesContext.Provider value={ context }>\n\t\t\t{ children }\n\t\t</GlobalStylesContext.Provider>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useMemo, useCallback } from '@wordpress/element';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport {\n\tstore as coreStore,\n\t__experimentalFetchLinkSuggestions as fetchLinkSuggestions,\n\t__experimentalFetchUrlData as fetchUrlData,\n} from '@wordpress/core-data';\nimport { __ } from '@wordpress/i18n';\nimport { store as preferencesStore } from '@wordpress/preferences';\nimport { useViewportMatch } from '@wordpress/compose';\nimport { store as blocksStore } from '@wordpress/blocks';\nimport {\n\tprivateApis,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport inserterMediaCategories from '../media-categories';\nimport { mediaUpload } from '../../utils';\nimport { store as editorStore } from '../../store';\nimport { lock, unlock } from '../../lock-unlock';\nimport { useGlobalStylesContext } from '../global-styles-provider';\n\nconst EMPTY_BLOCKS_LIST = [];\nconst DEFAULT_STYLES = {};\n\nfunction __experimentalReusableBlocksSelect( select ) {\n\treturn (\n\t\tselect( coreStore ).getEntityRecords( 'postType', 'wp_block', {\n\t\t\tper_page: -1,\n\t\t} ) ?? EMPTY_BLOCKS_LIST\n\t);\n}\n\nconst BLOCK_EDITOR_SETTINGS = [\n\t'__experimentalBlockDirectory',\n\t'__experimentalDiscussionSettings',\n\t'__experimentalFeatures',\n\t'__experimentalGlobalStylesBaseStyles',\n\t'__unstableGalleryWithImageBlocks',\n\t'alignWide',\n\t'blockInspectorTabs',\n\t'allowedMimeTypes',\n\t'bodyPlaceholder',\n\t'canLockBlocks',\n\t'capabilities',\n\t'clearBlockSelection',\n\t'codeEditingEnabled',\n\t'colors',\n\t'disableCustomColors',\n\t'disableCustomFontSizes',\n\t'disableCustomSpacingSizes',\n\t'disableCustomGradients',\n\t'disableLayoutStyles',\n\t'enableCustomLineHeight',\n\t'enableCustomSpacing',\n\t'enableCustomUnits',\n\t'enableOpenverseMediaCategory',\n\t'fontSizes',\n\t'gradients',\n\t'generateAnchors',\n\t'onNavigateToEntityRecord',\n\t'imageDefaultSize',\n\t'imageDimensions',\n\t'imageEditing',\n\t'imageSizes',\n\t'isRTL',\n\t'locale',\n\t'maxWidth',\n\t'postContentAttributes',\n\t'postsPerPage',\n\t'readOnly',\n\t'sectionRootClientId',\n\t'styles',\n\t'titlePlaceholder',\n\t'supportsLayout',\n\t'widgetTypesToHideFromLegacyWidgetBlock',\n\t'__unstableHasCustomAppender',\n\t'__unstableIsPreviewMode',\n\t'__unstableResolvedAssets',\n\t'__unstableIsBlockBasedTheme',\n\t'__experimentalArchiveTitleTypeLabel',\n\t'__experimentalArchiveTitleNameLabel',\n];\n\nconst { globalStylesDataKey, selectBlockPatternsKey, reusableBlocksSelectKey } =\n\tunlock( privateApis );\n\n/**\n * React hook used to compute the block editor settings to use for the post editor.\n *\n * @param {Object} settings      EditorProvider settings prop.\n * @param {string} postType      Editor root level post type.\n * @param {string} postId        Editor root level post ID.\n * @param {string} renderingMode Editor rendering mode.\n *\n * @return {Object} Block Editor Settings.\n */\nfunction useBlockEditorSettings( settings, postType, postId, renderingMode ) {\n\tconst isLargeViewport = useViewportMatch( 'medium' );\n\tconst {\n\t\tallowRightClickOverrides,\n\t\tblockTypes,\n\t\tfocusMode,\n\t\thasFixedToolbar,\n\t\tisDistractionFree,\n\t\tkeepCaretInsideBlock,\n\t\thasUploadPermissions,\n\t\thiddenBlockTypes,\n\t\tcanUseUnfilteredHTML,\n\t\tuserCanCreatePages,\n\t\tpageOnFront,\n\t\tpageForPosts,\n\t\tuserPatternCategories,\n\t\trestBlockPatternCategories,\n\t\tsectionRootClientId,\n\t} = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tcanUser,\n\t\t\t\tgetRawEntityRecord,\n\t\t\t\tgetEntityRecord,\n\t\t\t\tgetUserPatternCategories,\n\t\t\t\tgetBlockPatternCategories,\n\t\t\t} = select( coreStore );\n\t\t\tconst { get } = select( preferencesStore );\n\t\t\tconst { getBlockTypes } = select( blocksStore );\n\t\t\tconst { getBlocksByName, getBlockAttributes } =\n\t\t\t\tselect( blockEditorStore );\n\t\t\tconst siteSettings = canUser( 'read', 'settings' )\n\t\t\t\t? getEntityRecord( 'root', 'site' )\n\t\t\t\t: undefined;\n\n\t\t\tfunction getSectionRootBlock() {\n\t\t\t\tif ( renderingMode === 'template-locked' ) {\n\t\t\t\t\treturn getBlocksByName( 'core/post-content' )?.[ 0 ] ?? '';\n\t\t\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t\tgetBlocksByName( 'core/group' ).find(\n\t\t\t\t\t\t( clientId ) =>\n\t\t\t\t\t\t\tgetBlockAttributes( clientId )?.tagName === 'main'\n\t\t\t\t\t) ?? ''\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tallowRightClickOverrides: get(\n\t\t\t\t\t'core',\n\t\t\t\t\t'allowRightClickOverrides'\n\t\t\t\t),\n\t\t\t\tblockTypes: getBlockTypes(),\n\t\t\t\tcanUseUnfilteredHTML: getRawEntityRecord(\n\t\t\t\t\t'postType',\n\t\t\t\t\tpostType,\n\t\t\t\t\tpostId\n\t\t\t\t)?._links?.hasOwnProperty( 'wp:action-unfiltered-html' ),\n\t\t\t\tfocusMode: get( 'core', 'focusMode' ),\n\t\t\t\thasFixedToolbar:\n\t\t\t\t\tget( 'core', 'fixedToolbar' ) || ! isLargeViewport,\n\t\t\t\thiddenBlockTypes: get( 'core', 'hiddenBlockTypes' ),\n\t\t\t\tisDistractionFree: get( 'core', 'distractionFree' ),\n\t\t\t\tkeepCaretInsideBlock: get( 'core', 'keepCaretInsideBlock' ),\n\t\t\t\thasUploadPermissions: canUser( 'create', 'media' ) ?? true,\n\t\t\t\tuserCanCreatePages: canUser( 'create', 'pages' ),\n\t\t\t\tpageOnFront: siteSettings?.page_on_front,\n\t\t\t\tpageForPosts: siteSettings?.page_for_posts,\n\t\t\t\tuserPatternCategories: getUserPatternCategories(),\n\t\t\t\trestBlockPatternCategories: getBlockPatternCategories(),\n\t\t\t\tsectionRootClientId: getSectionRootBlock(),\n\t\t\t};\n\t\t},\n\t\t[ postType, postId, isLargeViewport, renderingMode ]\n\t);\n\n\tconst { merged: mergedGlobalStyles } = useGlobalStylesContext();\n\tconst globalStylesData = mergedGlobalStyles.styles ?? DEFAULT_STYLES;\n\n\tconst settingsBlockPatterns =\n\t\tsettings.__experimentalAdditionalBlockPatterns ?? // WP 6.0\n\t\tsettings.__experimentalBlockPatterns; // WP 5.9\n\tconst settingsBlockPatternCategories =\n\t\tsettings.__experimentalAdditionalBlockPatternCategories ?? // WP 6.0\n\t\tsettings.__experimentalBlockPatternCategories; // WP 5.9\n\n\tconst blockPatterns = useMemo(\n\t\t() =>\n\t\t\t[ ...( settingsBlockPatterns || [] ) ].filter(\n\t\t\t\t( { postTypes } ) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t! postTypes ||\n\t\t\t\t\t\t( Array.isArray( postTypes ) &&\n\t\t\t\t\t\t\tpostTypes.includes( postType ) )\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t),\n\t\t[ settingsBlockPatterns, postType ]\n\t);\n\n\tconst blockPatternCategories = useMemo(\n\t\t() =>\n\t\t\t[\n\t\t\t\t...( settingsBlockPatternCategories || [] ),\n\t\t\t\t...( restBlockPatternCategories || [] ),\n\t\t\t].filter(\n\t\t\t\t( x, index, arr ) =>\n\t\t\t\t\tindex === arr.findIndex( ( y ) => x.name === y.name )\n\t\t\t),\n\t\t[ settingsBlockPatternCategories, restBlockPatternCategories ]\n\t);\n\n\tconst { undo, setIsInserterOpened } = useDispatch( editorStore );\n\n\tconst { saveEntityRecord } = useDispatch( coreStore );\n\n\t/**\n\t * Creates a Post entity.\n\t * This is utilised by the Link UI to allow for on-the-fly creation of Posts/Pages.\n\t *\n\t * @param {Object} options parameters for the post being created. These mirror those used on 3rd param of saveEntityRecord.\n\t * @return {Object} the post type object that was created.\n\t */\n\tconst createPageEntity = useCallback(\n\t\t( options ) => {\n\t\t\tif ( ! userCanCreatePages ) {\n\t\t\t\treturn Promise.reject( {\n\t\t\t\t\tmessage: __(\n\t\t\t\t\t\t'You do not have permission to create Pages.'\n\t\t\t\t\t),\n\t\t\t\t} );\n\t\t\t}\n\t\t\treturn saveEntityRecord( 'postType', 'page', options );\n\t\t},\n\t\t[ saveEntityRecord, userCanCreatePages ]\n\t);\n\n\tconst allowedBlockTypes = useMemo( () => {\n\t\t// Omit hidden block types if exists and non-empty.\n\t\tif ( hiddenBlockTypes && hiddenBlockTypes.length > 0 ) {\n\t\t\t// Defer to passed setting for `allowedBlockTypes` if provided as\n\t\t\t// anything other than `true` (where `true` is equivalent to allow\n\t\t\t// all block types).\n\t\t\tconst defaultAllowedBlockTypes =\n\t\t\t\ttrue === settings.allowedBlockTypes\n\t\t\t\t\t? blockTypes.map( ( { name } ) => name )\n\t\t\t\t\t: settings.allowedBlockTypes || [];\n\n\t\t\treturn defaultAllowedBlockTypes.filter(\n\t\t\t\t( type ) => ! hiddenBlockTypes.includes( type )\n\t\t\t);\n\t\t}\n\n\t\treturn settings.allowedBlockTypes;\n\t}, [ settings.allowedBlockTypes, hiddenBlockTypes, blockTypes ] );\n\n\tconst forceDisableFocusMode = settings.focusMode === false;\n\n\treturn useMemo( () => {\n\t\tconst blockEditorSettings = {\n\t\t\t...Object.fromEntries(\n\t\t\t\tObject.entries( settings ).filter( ( [ key ] ) =>\n\t\t\t\t\tBLOCK_EDITOR_SETTINGS.includes( key )\n\t\t\t\t)\n\t\t\t),\n\t\t\t[ globalStylesDataKey ]: globalStylesData,\n\t\t\tallowedBlockTypes,\n\t\t\tallowRightClickOverrides,\n\t\t\tfocusMode: focusMode && ! forceDisableFocusMode,\n\t\t\thasFixedToolbar,\n\t\t\tisDistractionFree,\n\t\t\tkeepCaretInsideBlock,\n\t\t\tmediaUpload: hasUploadPermissions ? mediaUpload : undefined,\n\t\t\t__experimentalBlockPatterns: blockPatterns,\n\t\t\t[ selectBlockPatternsKey ]: ( select ) => {\n\t\t\t\tconst { hasFinishedResolution, getBlockPatternsForPostType } =\n\t\t\t\t\tunlock( select( coreStore ) );\n\t\t\t\tconst patterns = getBlockPatternsForPostType( postType );\n\t\t\t\treturn hasFinishedResolution( 'getBlockPatterns' )\n\t\t\t\t\t? patterns\n\t\t\t\t\t: undefined;\n\t\t\t},\n\t\t\t[ reusableBlocksSelectKey ]: __experimentalReusableBlocksSelect,\n\t\t\t__experimentalBlockPatternCategories: blockPatternCategories,\n\t\t\t__experimentalUserPatternCategories: userPatternCategories,\n\t\t\t__experimentalFetchLinkSuggestions: ( search, searchOptions ) =>\n\t\t\t\tfetchLinkSuggestions( search, searchOptions, settings ),\n\t\t\tinserterMediaCategories,\n\t\t\t__experimentalFetchRichUrlData: fetchUrlData,\n\t\t\t// Todo: This only checks the top level post, not the post within a template or any other entity that can be edited.\n\t\t\t// This might be better as a generic \"canUser\" selector.\n\t\t\t__experimentalCanUserUseUnfilteredHTML: canUseUnfilteredHTML,\n\t\t\t//Todo: this is only needed for native and should probably be removed.\n\t\t\t__experimentalUndo: undo,\n\t\t\t// Check whether we want all site editor frames to have outlines\n\t\t\t// including the navigation / pattern / parts editors.\n\t\t\toutlineMode: postType === 'wp_template',\n\t\t\t// Check these two properties: they were not present in the site editor.\n\t\t\t__experimentalCreatePageEntity: createPageEntity,\n\t\t\t__experimentalUserCanCreatePages: userCanCreatePages,\n\t\t\tpageOnFront,\n\t\t\tpageForPosts,\n\t\t\t__experimentalPreferPatternsOnRoot: postType === 'wp_template',\n\t\t\ttemplateLock:\n\t\t\t\tpostType === 'wp_navigation' ? 'insert' : settings.templateLock,\n\t\t\ttemplate:\n\t\t\t\tpostType === 'wp_navigation'\n\t\t\t\t\t? [ [ 'core/navigation', {}, [] ] ]\n\t\t\t\t\t: settings.template,\n\t\t\t__experimentalSetIsInserterOpened: setIsInserterOpened,\n\t\t};\n\t\tlock( blockEditorSettings, {\n\t\t\tsectionRootClientId,\n\t\t} );\n\t\treturn blockEditorSettings;\n\t}, [\n\t\tallowedBlockTypes,\n\t\tallowRightClickOverrides,\n\t\tfocusMode,\n\t\tforceDisableFocusMode,\n\t\thasFixedToolbar,\n\t\tisDistractionFree,\n\t\tkeepCaretInsideBlock,\n\t\tsettings,\n\t\thasUploadPermissions,\n\t\tuserPatternCategories,\n\t\tblockPatterns,\n\t\tblockPatternCategories,\n\t\tcanUseUnfilteredHTML,\n\t\tundo,\n\t\tcreatePageEntity,\n\t\tuserCanCreatePages,\n\t\tpageOnFront,\n\t\tpageForPosts,\n\t\tpostType,\n\t\tsetIsInserterOpened,\n\t\tsectionRootClientId,\n\t\tglobalStylesData,\n\t] );\n}\n\nexport default useBlockEditorSettings;\n","/**\n * WordPress dependencies\n */\nimport { useSelect, useRegistry } from '@wordpress/data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { useEffect } from '@wordpress/element';\nimport { applyFilters } from '@wordpress/hooks';\n\nconst DEFAULT_CONTENT_ONLY_BLOCKS = [\n\t'core/post-title',\n\t'core/post-featured-image',\n\t'core/post-content',\n\t'core/template-part',\n];\n\n/**\n * Component that when rendered, makes it so that the site editor allows only\n * page content to be edited.\n */\nexport default function DisableNonPageContentBlocks() {\n\tconst contentOnlyBlocks = applyFilters(\n\t\t'editor.postContentBlockTypes',\n\t\tDEFAULT_CONTENT_ONLY_BLOCKS\n\t);\n\n\t// Note that there are two separate subscription because the result for each\n\t// returns a new array.\n\tconst contentOnlyIds = useSelect( ( select ) => {\n\t\tconst { getBlocksByName, getBlockParents, getBlockName } =\n\t\t\tselect( blockEditorStore );\n\t\treturn getBlocksByName( contentOnlyBlocks ).filter( ( clientId ) =>\n\t\t\tgetBlockParents( clientId ).every( ( parentClientId ) => {\n\t\t\t\tconst parentBlockName = getBlockName( parentClientId );\n\t\t\t\treturn (\n\t\t\t\t\t// Ignore descendents of the query block.\n\t\t\t\t\tparentBlockName !== 'core/query' &&\n\t\t\t\t\t// Enable only the top-most block.\n\t\t\t\t\t! contentOnlyBlocks.includes( parentBlockName )\n\t\t\t\t);\n\t\t\t} )\n\t\t);\n\t}, [] );\n\tconst disabledIds = useSelect( ( select ) => {\n\t\tconst { getBlocksByName, getBlockOrder } = select( blockEditorStore );\n\t\treturn getBlocksByName( [ 'core/template-part' ] ).flatMap(\n\t\t\t( clientId ) => getBlockOrder( clientId )\n\t\t);\n\t}, [] );\n\n\tconst registry = useRegistry();\n\n\tuseEffect( () => {\n\t\tconst { setBlockEditingMode, unsetBlockEditingMode } =\n\t\t\tregistry.dispatch( blockEditorStore );\n\n\t\tregistry.batch( () => {\n\t\t\tsetBlockEditingMode( '', 'disabled' );\n\t\t\tfor ( const clientId of contentOnlyIds ) {\n\t\t\t\tsetBlockEditingMode( clientId, 'contentOnly' );\n\t\t\t}\n\t\t\tfor ( const clientId of disabledIds ) {\n\t\t\t\tsetBlockEditingMode( clientId, 'disabled' );\n\t\t\t}\n\t\t} );\n\n\t\treturn () => {\n\t\t\tregistry.batch( () => {\n\t\t\t\tunsetBlockEditingMode( '' );\n\t\t\t\tfor ( const clientId of contentOnlyIds ) {\n\t\t\t\t\tunsetBlockEditingMode( clientId );\n\t\t\t\t}\n\t\t\t\tfor ( const clientId of disabledIds ) {\n\t\t\t\t\tunsetBlockEditingMode( clientId );\n\t\t\t\t}\n\t\t\t} );\n\t\t};\n\t}, [ contentOnlyIds, disabledIds, registry ] );\n\n\treturn null;\n}\n","/**\n * WordPress dependencies\n */\nimport { useEffect } from '@wordpress/element';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\n\n/**\n * For the Navigation block editor, we need to force the block editor to contentOnly for that block.\n *\n * Set block editing mode to contentOnly when entering Navigation focus mode.\n * this ensures that non-content controls on the block will be hidden and thus\n * the user can focus on editing the Navigation Menu content only.\n */\n\nexport default function NavigationBlockEditingMode() {\n\t// In the navigation block editor,\n\t// the navigation block is the only root block.\n\tconst blockClientId = useSelect(\n\t\t( select ) => select( blockEditorStore ).getBlockOrder()?.[ 0 ],\n\t\t[]\n\t);\n\tconst { setBlockEditingMode, unsetBlockEditingMode } =\n\t\tuseDispatch( blockEditorStore );\n\n\tuseEffect( () => {\n\t\tif ( ! blockClientId ) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetBlockEditingMode( blockClientId, 'contentOnly' );\n\n\t\treturn () => {\n\t\t\tunsetBlockEditingMode( blockClientId );\n\t\t};\n\t}, [ blockClientId, unsetBlockEditingMode, setBlockEditingMode ] );\n}\n","/**\n * WordPress dependencies\n */\nimport { useEffect } from '@wordpress/element';\nimport { addFilter, removeFilter } from '@wordpress/hooks';\n\n// These post types are \"structural\" block lists.\n// We should be allowed to use\n// the post content and template parts blocks within them.\nconst POST_TYPES_ALLOWING_POST_CONTENT_TEMPLATE_PART = [\n\t'wp_block',\n\t'wp_template',\n\t'wp_template_part',\n];\n\n/**\n * In some specific contexts,\n * the template part and post content blocks need to be hidden.\n *\n * @param {string} postType Post Type\n * @param {string} mode     Rendering mode\n */\nexport function useHideBlocksFromInserter( postType, mode ) {\n\tuseEffect( () => {\n\t\t/*\n\t\t * Prevent adding template part in the editor.\n\t\t */\n\t\taddFilter(\n\t\t\t'blockEditor.__unstableCanInsertBlockType',\n\t\t\t'removeTemplatePartsFromInserter',\n\t\t\t( canInsert, blockType ) => {\n\t\t\t\tif (\n\t\t\t\t\t! POST_TYPES_ALLOWING_POST_CONTENT_TEMPLATE_PART.includes(\n\t\t\t\t\t\tpostType\n\t\t\t\t\t) &&\n\t\t\t\t\tblockType.name === 'core/template-part' &&\n\t\t\t\t\tmode === 'post-only'\n\t\t\t\t) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn canInsert;\n\t\t\t}\n\t\t);\n\n\t\t/*\n\t\t * Prevent adding post content block (except in query block) in the editor.\n\t\t */\n\t\taddFilter(\n\t\t\t'blockEditor.__unstableCanInsertBlockType',\n\t\t\t'removePostContentFromInserter',\n\t\t\t(\n\t\t\t\tcanInsert,\n\t\t\t\tblockType,\n\t\t\t\trootClientId,\n\t\t\t\t{ getBlockParentsByBlockName }\n\t\t\t) => {\n\t\t\t\tif (\n\t\t\t\t\t! POST_TYPES_ALLOWING_POST_CONTENT_TEMPLATE_PART.includes(\n\t\t\t\t\t\tpostType\n\t\t\t\t\t) &&\n\t\t\t\t\tblockType.name === 'core/post-content'\n\t\t\t\t) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\tgetBlockParentsByBlockName( rootClientId, 'core/query' )\n\t\t\t\t\t\t\t.length > 0\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn canInsert;\n\t\t\t}\n\t\t);\n\n\t\treturn () => {\n\t\t\tremoveFilter(\n\t\t\t\t'blockEditor.__unstableCanInsertBlockType',\n\t\t\t\t'removeTemplatePartsFromInserter'\n\t\t\t);\n\t\t\tremoveFilter(\n\t\t\t\t'blockEditor.__unstableCanInsertBlockType',\n\t\t\t\t'removePostContentFromInserter'\n\t\t\t);\n\t\t};\n\t}, [ postType, mode ] );\n}\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst keyboard = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"m16 15.5h-8v-1.5h8zm-7.5-2.5h-2v-2h2zm3 0h-2v-2h2zm3 0h-2v-2h2zm3 0h-2v-2h2zm-9-3h-2v-2h2zm3 0h-2v-2h2zm3 0h-2v-2h2zm3 0h-2v-2h2z\" />\n\t\t<Path d=\"m18.5 6.5h-13a.5.5 0 0 0 -.5.5v9.5a.5.5 0 0 0 .5.5h13a.5.5 0 0 0 .5-.5v-9.5a.5.5 0 0 0 -.5-.5zm-13-1.5h13a2 2 0 0 1 2 2v9.5a2 2 0 0 1 -2 2h-13a2 2 0 0 1 -2-2v-9.5a2 2 0 0 1 2-2z\" />\n\t</SVG>\n);\n\nexport default keyboard;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst listView = (\n\t<SVG viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t<Path d=\"M3 6h11v1.5H3V6Zm3.5 5.5h11V13h-11v-1.5ZM21 17H10v1.5h11V17Z\" />\n\t</SVG>\n);\n\nexport default listView;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst code = (\n\t<SVG viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t<Path d=\"M20.8 10.7l-4.3-4.3-1.1 1.1 4.3 4.3c.1.1.1.3 0 .4l-4.3 4.3 1.1 1.1 4.3-4.3c.7-.8.7-1.9 0-2.6zM4.2 11.8l4.3-4.3-1-1-4.3 4.3c-.7.7-.7 1.8 0 2.5l4.3 4.3 1.1-1.1-4.3-4.3c-.2-.1-.2-.3-.1-.4z\" />\n\t</SVG>\n);\n\nexport default code;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst drawerLeft = (\n\t<SVG\n\t\twidth=\"24\"\n\t\theight=\"24\"\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\tviewBox=\"0 0 24 24\"\n\t>\n\t\t<Path\n\t\t\tfillRule=\"evenodd\"\n\t\t\tclipRule=\"evenodd\"\n\t\t\td=\"M18 4H6c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zM8.5 18.5H6c-.3 0-.5-.2-.5-.5V6c0-.3.2-.5.5-.5h2.5v13zm10-.5c0 .3-.2.5-.5.5h-8v-13h8c.3 0 .5.2.5.5v12z\"\n\t\t/>\n\t</SVG>\n);\n\nexport default drawerLeft;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst drawerRight = (\n\t<SVG\n\t\twidth=\"24\"\n\t\theight=\"24\"\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\tviewBox=\"0 0 24 24\"\n\t>\n\t\t<Path\n\t\t\tfillRule=\"evenodd\"\n\t\t\tclipRule=\"evenodd\"\n\t\t\td=\"M18 4H6c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-4 14.5H6c-.3 0-.5-.2-.5-.5V6c0-.3.2-.5.5-.5h8v13zm4.5-.5c0 .3-.2.5-.5.5h-2.5v-13H18c.3 0 .5.2.5.5v12z\"\n\t\t/>\n\t</SVG>\n);\n\nexport default drawerRight;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst blockDefault = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M19 8h-1V6h-5v2h-2V6H6v2H5c-1.1 0-2 .9-2 2v8c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-8c0-1.1-.9-2-2-2zm.5 10c0 .3-.2.5-.5.5H5c-.3 0-.5-.2-.5-.5v-8c0-.3.2-.5.5-.5h14c.3 0 .5.2.5.5v8z\" />\n\t</SVG>\n);\n\nexport default blockDefault;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst formatListBullets = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M11.1 15.8H20v-1.5h-8.9v1.5zm0-8.6v1.5H20V7.2h-8.9zM6 13c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-7c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\" />\n\t</SVG>\n);\n\nexport default formatListBullets;\n","/**\n * WordPress dependencies\n */\nimport { Path, SVG } from '@wordpress/primitives';\n\nconst external = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M19.5 4.5h-7V6h4.44l-5.97 5.97 1.06 1.06L18 7.06v4.44h1.5v-7Zm-13 1a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2v-3H17v3a.5.5 0 0 1-.5.5h-10a.5.5 0 0 1-.5-.5v-10a.5.5 0 0 1 .5-.5h3V5.5h-3Z\" />\n\t</SVG>\n);\n\nexport default external;\n","/**\n * Internal dependencies\n */\n\nimport { default as pencil } from './pencil';\nexport default pencil;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst pencil = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"m19 7-3-3-8.5 8.5-1 4 4-1L19 7Zm-7 11.5H5V20h7v-1.5Z\" />\n\t</SVG>\n);\n\nexport default pencil;\n","/**\n * WordPress dependencies\n */\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { privateApis as patternsPrivateApis } from '@wordpress/patterns';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { store as interfaceStore } from '@wordpress/interface';\n\n/**\n * Internal dependencies\n */\nimport { unlock } from '../../lock-unlock';\nimport { store as editorStore } from '../../store';\nimport { PATTERN_POST_TYPE } from '../../store/constants';\n\nconst { RenamePatternModal } = unlock( patternsPrivateApis );\nexport const modalName = 'editor/pattern-rename';\n\nexport default function PatternRenameModal() {\n\tconst { record, postType } = useSelect( ( select ) => {\n\t\tconst { getCurrentPostType, getCurrentPostId } = select( editorStore );\n\t\tconst { getEditedEntityRecord } = select( coreStore );\n\t\tconst _postType = getCurrentPostType();\n\t\treturn {\n\t\t\trecord: getEditedEntityRecord(\n\t\t\t\t'postType',\n\t\t\t\t_postType,\n\t\t\t\tgetCurrentPostId()\n\t\t\t),\n\t\t\tpostType: _postType,\n\t\t};\n\t}, [] );\n\tconst { closeModal } = useDispatch( interfaceStore );\n\n\tconst isActive = useSelect( ( select ) =>\n\t\tselect( interfaceStore ).isModalActive( modalName )\n\t);\n\n\tif ( ! isActive || postType !== PATTERN_POST_TYPE ) {\n\t\treturn null;\n\t}\n\n\treturn <RenamePatternModal onClose={ closeModal } pattern={ record } />;\n}\n","/**\n * WordPress dependencies\n */\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { privateApis as patternsPrivateApis } from '@wordpress/patterns';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { store as interfaceStore } from '@wordpress/interface';\n\n/**\n * Internal dependencies\n */\nimport { unlock } from '../../lock-unlock';\nimport { store as editorStore } from '../../store';\nimport { PATTERN_POST_TYPE } from '../../store/constants';\n\nconst { DuplicatePatternModal } = unlock( patternsPrivateApis );\nexport const modalName = 'editor/pattern-duplicate';\n\nexport default function PatternDuplicateModal() {\n\tconst { record, postType } = useSelect( ( select ) => {\n\t\tconst { getCurrentPostType, getCurrentPostId } = select( editorStore );\n\t\tconst { getEditedEntityRecord } = select( coreStore );\n\t\tconst _postType = getCurrentPostType();\n\t\treturn {\n\t\t\trecord: getEditedEntityRecord(\n\t\t\t\t'postType',\n\t\t\t\t_postType,\n\t\t\t\tgetCurrentPostId()\n\t\t\t),\n\t\t\tpostType: _postType,\n\t\t};\n\t}, [] );\n\tconst { closeModal } = useDispatch( interfaceStore );\n\n\tconst isActive = useSelect( ( select ) =>\n\t\tselect( interfaceStore ).isModalActive( modalName )\n\t);\n\n\tif ( ! isActive || postType !== PATTERN_POST_TYPE ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<DuplicatePatternModal\n\t\t\tonClose={ closeModal }\n\t\t\tonSuccess={ () => closeModal() }\n\t\t\tpattern={ record }\n\t\t/>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { __, isRTL } from '@wordpress/i18n';\nimport {\n\tblockDefault,\n\tcode,\n\tdrawerLeft,\n\tdrawerRight,\n\tedit,\n\tformatListBullets,\n\tlistView,\n\texternal,\n\tkeyboard,\n\tsymbol,\n} from '@wordpress/icons';\nimport { useCommandLoader } from '@wordpress/commands';\nimport { store as preferencesStore } from '@wordpress/preferences';\nimport { store as noticesStore } from '@wordpress/notices';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { store as interfaceStore } from '@wordpress/interface';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\nimport { PATTERN_POST_TYPE } from '../../store/constants';\nimport { modalName as patternRenameModalName } from '../pattern-rename-modal';\nimport { modalName as patternDuplicateModalName } from '../pattern-duplicate-modal';\n\nfunction useEditorCommandLoader() {\n\tconst {\n\t\teditorMode,\n\t\tisListViewOpen,\n\t\tshowBlockBreadcrumbs,\n\t\tisDistractionFree,\n\t\tisTopToolbar,\n\t\tisFocusMode,\n\t\tisPreviewMode,\n\t\tisViewable,\n\t\tisCodeEditingEnabled,\n\t\tisRichEditingEnabled,\n\t\tisPublishSidebarEnabled,\n\t} = useSelect( ( select ) => {\n\t\tconst { get } = select( preferencesStore );\n\t\tconst { isListViewOpened, getCurrentPostType, getEditorSettings } =\n\t\t\tselect( editorStore );\n\t\tconst { getSettings } = select( blockEditorStore );\n\t\tconst { getPostType } = select( coreStore );\n\n\t\treturn {\n\t\t\teditorMode: get( 'core', 'editorMode' ) ?? 'visual',\n\t\t\tisListViewOpen: isListViewOpened(),\n\t\t\tshowBlockBreadcrumbs: get( 'core', 'showBlockBreadcrumbs' ),\n\t\t\tisDistractionFree: get( 'core', 'distractionFree' ),\n\t\t\tisFocusMode: get( 'core', 'focusMode' ),\n\t\t\tisTopToolbar: get( 'core', 'fixedToolbar' ),\n\t\t\tisPreviewMode: getSettings().__unstableIsPreviewMode,\n\t\t\tisViewable: getPostType( getCurrentPostType() )?.viewable ?? false,\n\t\t\tisCodeEditingEnabled: getEditorSettings().codeEditingEnabled,\n\t\t\tisRichEditingEnabled: getEditorSettings().richEditingEnabled,\n\t\t\tisPublishSidebarEnabled:\n\t\t\t\tselect( editorStore ).isPublishSidebarEnabled(),\n\t\t};\n\t}, [] );\n\tconst { getActiveComplementaryArea } = useSelect( interfaceStore );\n\tconst { toggle } = useDispatch( preferencesStore );\n\tconst { createInfoNotice } = useDispatch( noticesStore );\n\tconst {\n\t\t__unstableSaveForPreview,\n\t\tsetIsListViewOpened,\n\t\tswitchEditorMode,\n\t\ttoggleDistractionFree,\n\t} = useDispatch( editorStore );\n\tconst { openModal, enableComplementaryArea, disableComplementaryArea } =\n\t\tuseDispatch( interfaceStore );\n\tconst { getCurrentPostId } = useSelect( editorStore );\n\tconst allowSwitchEditorMode = isCodeEditingEnabled && isRichEditingEnabled;\n\n\tif ( isPreviewMode ) {\n\t\treturn { commands: [], isLoading: false };\n\t}\n\n\tconst commands = [];\n\n\tcommands.push( {\n\t\tname: 'core/open-shortcut-help',\n\t\tlabel: __( 'Keyboard shortcuts' ),\n\t\ticon: keyboard,\n\t\tcallback: () => {\n\t\t\topenModal( 'editor/keyboard-shortcut-help' );\n\t\t},\n\t} );\n\n\tcommands.push( {\n\t\tname: 'core/toggle-distraction-free',\n\t\tlabel: isDistractionFree\n\t\t\t? __( 'Exit Distraction Free' )\n\t\t\t: __( 'Enter Distraction Free' ),\n\t\tcallback: ( { close } ) => {\n\t\t\ttoggleDistractionFree();\n\t\t\tclose();\n\t\t},\n\t} );\n\n\tcommands.push( {\n\t\tname: 'core/open-preferences',\n\t\tlabel: __( 'Editor preferences' ),\n\t\tcallback: () => {\n\t\t\topenModal( 'editor/preferences' );\n\t\t},\n\t} );\n\n\tcommands.push( {\n\t\tname: 'core/toggle-spotlight-mode',\n\t\tlabel: __( 'Toggle spotlight' ),\n\t\tcallback: ( { close } ) => {\n\t\t\ttoggle( 'core', 'focusMode' );\n\t\t\tclose();\n\t\t\tcreateInfoNotice(\n\t\t\t\tisFocusMode ? __( 'Spotlight off.' ) : __( 'Spotlight on.' ),\n\t\t\t\t{\n\t\t\t\t\tid: 'core/editor/toggle-spotlight-mode/notice',\n\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t\tactions: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: __( 'Undo' ),\n\t\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\t\ttoggle( 'core', 'focusMode' );\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\t} );\n\n\tcommands.push( {\n\t\tname: 'core/toggle-list-view',\n\t\tlabel: isListViewOpen\n\t\t\t? __( 'Close List View' )\n\t\t\t: __( 'Open List View' ),\n\t\ticon: listView,\n\t\tcallback: ( { close } ) => {\n\t\t\tsetIsListViewOpened( ! isListViewOpen );\n\t\t\tclose();\n\t\t\tcreateInfoNotice(\n\t\t\t\tisListViewOpen ? __( 'List View off.' ) : __( 'List View on.' ),\n\t\t\t\t{\n\t\t\t\t\tid: 'core/editor/toggle-list-view/notice',\n\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\t} );\n\n\tcommands.push( {\n\t\tname: 'core/toggle-top-toolbar',\n\t\tlabel: __( 'Toggle top toolbar' ),\n\t\tcallback: ( { close } ) => {\n\t\t\ttoggle( 'core', 'fixedToolbar' );\n\t\t\tif ( isDistractionFree ) {\n\t\t\t\ttoggleDistractionFree();\n\t\t\t}\n\t\t\tclose();\n\t\t\tcreateInfoNotice(\n\t\t\t\tisTopToolbar\n\t\t\t\t\t? __( 'Top toolbar off.' )\n\t\t\t\t\t: __( 'Top toolbar on.' ),\n\t\t\t\t{\n\t\t\t\t\tid: 'core/editor/toggle-top-toolbar/notice',\n\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t\tactions: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: __( 'Undo' ),\n\t\t\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\t\t\ttoggle( 'core', 'fixedToolbar' );\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\t} );\n\n\tif ( allowSwitchEditorMode ) {\n\t\tcommands.push( {\n\t\t\tname: 'core/toggle-code-editor',\n\t\t\tlabel:\n\t\t\t\teditorMode === 'visual'\n\t\t\t\t\t? __( 'Open code editor' )\n\t\t\t\t\t: __( 'Exit code editor' ),\n\t\t\ticon: code,\n\t\t\tcallback: ( { close } ) => {\n\t\t\t\tswitchEditorMode( editorMode === 'visual' ? 'text' : 'visual' );\n\t\t\t\tclose();\n\t\t\t},\n\t\t} );\n\t}\n\n\tcommands.push( {\n\t\tname: 'core/toggle-breadcrumbs',\n\t\tlabel: showBlockBreadcrumbs\n\t\t\t? __( 'Hide block breadcrumbs' )\n\t\t\t: __( 'Show block breadcrumbs' ),\n\t\tcallback: ( { close } ) => {\n\t\t\ttoggle( 'core', 'showBlockBreadcrumbs' );\n\t\t\tclose();\n\t\t\tcreateInfoNotice(\n\t\t\t\tshowBlockBreadcrumbs\n\t\t\t\t\t? __( 'Breadcrumbs hidden.' )\n\t\t\t\t\t: __( 'Breadcrumbs visible.' ),\n\t\t\t\t{\n\t\t\t\t\tid: 'core/editor/toggle-breadcrumbs/notice',\n\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\t} );\n\n\tcommands.push( {\n\t\tname: 'core/open-settings-sidebar',\n\t\tlabel: __( 'Toggle settings sidebar' ),\n\t\ticon: isRTL() ? drawerLeft : drawerRight,\n\t\tcallback: ( { close } ) => {\n\t\t\tconst activeSidebar = getActiveComplementaryArea( 'core' );\n\t\t\tclose();\n\t\t\tif ( activeSidebar === 'edit-post/document' ) {\n\t\t\t\tdisableComplementaryArea( 'core' );\n\t\t\t} else {\n\t\t\t\tenableComplementaryArea( 'core', 'edit-post/document' );\n\t\t\t}\n\t\t},\n\t} );\n\n\tcommands.push( {\n\t\tname: 'core/open-block-inspector',\n\t\tlabel: __( 'Toggle block inspector' ),\n\t\ticon: blockDefault,\n\t\tcallback: ( { close } ) => {\n\t\t\tconst activeSidebar = getActiveComplementaryArea( 'core' );\n\t\t\tclose();\n\t\t\tif ( activeSidebar === 'edit-post/block' ) {\n\t\t\t\tdisableComplementaryArea( 'core' );\n\t\t\t} else {\n\t\t\t\tenableComplementaryArea( 'core', 'edit-post/block' );\n\t\t\t}\n\t\t},\n\t} );\n\n\tcommands.push( {\n\t\tname: 'core/toggle-publish-sidebar',\n\t\tlabel: isPublishSidebarEnabled\n\t\t\t? __( 'Disable pre-publish checks' )\n\t\t\t: __( 'Enable pre-publish checks' ),\n\t\ticon: formatListBullets,\n\t\tcallback: ( { close } ) => {\n\t\t\tclose();\n\t\t\ttoggle( 'core', 'isPublishSidebarEnabled' );\n\t\t\tcreateInfoNotice(\n\t\t\t\tisPublishSidebarEnabled\n\t\t\t\t\t? __( 'Pre-publish checks disabled.' )\n\t\t\t\t\t: __( 'Pre-publish checks enabled.' ),\n\t\t\t\t{\n\t\t\t\t\tid: 'core/editor/publish-sidebar/notice',\n\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\t} );\n\n\tif ( isViewable ) {\n\t\tcommands.push( {\n\t\t\tname: 'core/preview-link',\n\t\t\tlabel: __( 'Preview in a new tab' ),\n\t\t\ticon: external,\n\t\t\tcallback: async ( { close } ) => {\n\t\t\t\tclose();\n\t\t\t\tconst postId = getCurrentPostId();\n\t\t\t\tconst link = await __unstableSaveForPreview();\n\t\t\t\twindow.open( link, `wp-preview-${ postId }` );\n\t\t\t},\n\t\t} );\n\t}\n\n\treturn {\n\t\tcommands,\n\t\tisLoading: false,\n\t};\n}\n\nfunction useEditedEntityContextualCommands() {\n\tconst { postType } = useSelect( ( select ) => {\n\t\tconst { getCurrentPostType } = select( editorStore );\n\t\treturn {\n\t\t\tpostType: getCurrentPostType(),\n\t\t};\n\t}, [] );\n\tconst { openModal } = useDispatch( interfaceStore );\n\tconst commands = [];\n\n\tif ( postType === PATTERN_POST_TYPE ) {\n\t\tcommands.push( {\n\t\t\tname: 'core/rename-pattern',\n\t\t\tlabel: __( 'Rename pattern' ),\n\t\t\ticon: edit,\n\t\t\tcallback: ( { close } ) => {\n\t\t\t\topenModal( patternRenameModalName );\n\t\t\t\tclose();\n\t\t\t},\n\t\t} );\n\t\tcommands.push( {\n\t\t\tname: 'core/duplicate-pattern',\n\t\t\tlabel: __( 'Duplicate pattern' ),\n\t\t\ticon: symbol,\n\t\t\tcallback: ( { close } ) => {\n\t\t\t\topenModal( patternDuplicateModalName );\n\t\t\t\tclose();\n\t\t\t},\n\t\t} );\n\t}\n\n\treturn { isLoading: false, commands };\n}\n\nexport default function useCommands() {\n\tuseCommandLoader( {\n\t\tname: 'core/editor/edit-ui',\n\t\thook: useEditorCommandLoader,\n\t} );\n\n\tuseCommandLoader( {\n\t\tname: 'core/editor/contextual-commands',\n\t\thook: useEditedEntityContextualCommands,\n\t\tcontext: 'entity-edit',\n\t} );\n}\n","/**\n * WordPress dependencies\n */\n\nimport { _n } from '@wordpress/i18n';\nimport { privateApis as blockEditorPrivateApis } from '@wordpress/block-editor';\nimport { useSelect } from '@wordpress/data';\nimport { useMemo } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { unlock } from '../../lock-unlock';\nimport { store as editorStore } from '../../store';\n\nconst { BlockRemovalWarningModal } = unlock( blockEditorPrivateApis );\n\n// Prevent accidental removal of certain blocks, asking the user for confirmation first.\nconst TEMPLATE_BLOCKS = [\n\t'core/post-content',\n\t'core/post-template',\n\t'core/query',\n];\nconst BLOCK_REMOVAL_RULES = [\n\t{\n\t\t// Template blocks.\n\t\t// The warning is only shown when a user manipulates templates or template parts.\n\t\tpostTypes: [ 'wp_template', 'wp_template_part' ],\n\t\tcallback( removedBlocks ) {\n\t\t\tconst removedTemplateBlocks = removedBlocks.filter( ( { name } ) =>\n\t\t\t\tTEMPLATE_BLOCKS.includes( name )\n\t\t\t);\n\t\t\tif ( removedTemplateBlocks.length ) {\n\t\t\t\treturn _n(\n\t\t\t\t\t'Deleting this block will stop your post or page content from displaying on this template. It is not recommended.',\n\t\t\t\t\t'Some of the deleted blocks will stop your post or page content from displaying on this template. It is not recommended.',\n\t\t\t\t\tremovedBlocks.length\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t},\n\t{\n\t\t// Pattern overrides.\n\t\t// The warning is only shown when the user edits a pattern.\n\t\tpostTypes: [ 'wp_block' ],\n\t\tcallback( removedBlocks ) {\n\t\t\tconst removedBlocksWithOverrides = removedBlocks.filter(\n\t\t\t\t( { attributes } ) =>\n\t\t\t\t\tattributes?.metadata?.bindings &&\n\t\t\t\t\tObject.values( attributes.metadata.bindings ).some(\n\t\t\t\t\t\t( binding ) =>\n\t\t\t\t\t\t\tbinding.source === 'core/pattern-overrides'\n\t\t\t\t\t)\n\t\t\t);\n\t\t\tif ( removedBlocksWithOverrides.length ) {\n\t\t\t\treturn _n(\n\t\t\t\t\t'The deleted block allows instance overrides. Removing it may result in content not displaying where this pattern is used. Are you sure you want to proceed?',\n\t\t\t\t\t'Some of the deleted blocks allow instance overrides. Removing them may result in content not displaying where this pattern is used. Are you sure you want to proceed?',\n\t\t\t\t\tremovedBlocks.length\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t},\n];\n\nexport default function BlockRemovalWarnings() {\n\tconst currentPostType = useSelect(\n\t\t( select ) => select( editorStore ).getCurrentPostType(),\n\t\t[]\n\t);\n\n\tconst removalRulesForPostType = useMemo(\n\t\t() =>\n\t\t\tBLOCK_REMOVAL_RULES.filter( ( rule ) =>\n\t\t\t\trule.postTypes.includes( currentPostType )\n\t\t\t),\n\t\t[ currentPostType ]\n\t);\n\n\t// `BlockRemovalWarnings` is rendered in the editor provider, a shared component\n\t// across react native and web. However, `BlockRemovalWarningModal` is web only.\n\t// Check it exists before trying to render it.\n\tif ( ! BlockRemovalWarningModal ) {\n\t\treturn null;\n\t}\n\n\tif ( ! removalRulesForPostType ) {\n\t\treturn null;\n\t}\n\n\treturn <BlockRemovalWarningModal rules={ removalRulesForPostType } />;\n}\n","/**\n * WordPress dependencies\n */\nimport { Modal } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useState, useMemo, useEffect } from '@wordpress/element';\nimport {\n\tstore as blockEditorStore,\n\t__experimentalBlockPatternsList as BlockPatternsList,\n} from '@wordpress/block-editor';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useAsyncList } from '@wordpress/compose';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { __unstableSerializeAndClean } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\nimport { TEMPLATE_POST_TYPE } from '../../store/constants';\n\nfunction useStartPatterns() {\n\t// A pattern is a start pattern if it includes 'core/post-content' in its blockTypes,\n\t// and it has no postTypes declared and the current post type is page or if\n\t// the current post type is part of the postTypes declared.\n\tconst { blockPatternsWithPostContentBlockType, postType } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getPatternsByBlockTypes, getBlocksByName } =\n\t\t\t\tselect( blockEditorStore );\n\t\t\tconst { getCurrentPostType, getRenderingMode } =\n\t\t\t\tselect( editorStore );\n\t\t\tconst rootClientId =\n\t\t\t\tgetRenderingMode() === 'post-only'\n\t\t\t\t\t? ''\n\t\t\t\t\t: getBlocksByName( 'core/post-content' )?.[ 0 ];\n\t\t\treturn {\n\t\t\t\tblockPatternsWithPostContentBlockType: getPatternsByBlockTypes(\n\t\t\t\t\t'core/post-content',\n\t\t\t\t\trootClientId\n\t\t\t\t),\n\t\t\t\tpostType: getCurrentPostType(),\n\t\t\t};\n\t\t},\n\t\t[]\n\t);\n\n\treturn useMemo( () => {\n\t\t// filter patterns without postTypes declared if the current postType is page\n\t\t// or patterns that declare the current postType in its post type array.\n\t\treturn blockPatternsWithPostContentBlockType.filter( ( pattern ) => {\n\t\t\treturn (\n\t\t\t\t( postType === 'page' && ! pattern.postTypes ) ||\n\t\t\t\t( Array.isArray( pattern.postTypes ) &&\n\t\t\t\t\tpattern.postTypes.includes( postType ) )\n\t\t\t);\n\t\t} );\n\t}, [ postType, blockPatternsWithPostContentBlockType ] );\n}\n\nfunction PatternSelection( { blockPatterns, onChoosePattern } ) {\n\tconst shownBlockPatterns = useAsyncList( blockPatterns );\n\tconst { editEntityRecord } = useDispatch( coreStore );\n\tconst { postType, postId } = useSelect( ( select ) => {\n\t\tconst { getCurrentPostType, getCurrentPostId } = select( editorStore );\n\n\t\treturn {\n\t\t\tpostType: getCurrentPostType(),\n\t\t\tpostId: getCurrentPostId(),\n\t\t};\n\t}, [] );\n\treturn (\n\t\t<BlockPatternsList\n\t\t\tblockPatterns={ blockPatterns }\n\t\t\tshownPatterns={ shownBlockPatterns }\n\t\t\tonClickPattern={ ( _pattern, blocks ) => {\n\t\t\t\teditEntityRecord( 'postType', postType, postId, {\n\t\t\t\t\tblocks,\n\t\t\t\t\tcontent: ( { blocks: blocksForSerialization = [] } ) =>\n\t\t\t\t\t\t__unstableSerializeAndClean( blocksForSerialization ),\n\t\t\t\t} );\n\t\t\t\tonChoosePattern();\n\t\t\t} }\n\t\t/>\n\t);\n}\n\nfunction StartPageOptionsModal( { onClose } ) {\n\tconst startPatterns = useStartPatterns();\n\tconst hasStartPattern = startPatterns.length > 0;\n\n\tif ( ! hasStartPattern ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<Modal\n\t\t\ttitle={ __( 'Choose a pattern' ) }\n\t\t\tisFullScreen\n\t\t\tonRequestClose={ onClose }\n\t\t>\n\t\t\t<div className=\"editor-start-page-options__modal-content\">\n\t\t\t\t<PatternSelection\n\t\t\t\t\tblockPatterns={ startPatterns }\n\t\t\t\t\tonChoosePattern={ onClose }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</Modal>\n\t);\n}\n\nexport default function StartPageOptions() {\n\tconst [ isClosed, setIsClosed ] = useState( false );\n\tconst { shouldEnableModal, postType, postId } = useSelect( ( select ) => {\n\t\tconst {\n\t\t\tisEditedPostDirty,\n\t\t\tisEditedPostEmpty,\n\t\t\tgetCurrentPostType,\n\t\t\tgetCurrentPostId,\n\t\t} = select( editorStore );\n\t\tconst _postType = getCurrentPostType();\n\n\t\treturn {\n\t\t\tshouldEnableModal:\n\t\t\t\t! isEditedPostDirty() &&\n\t\t\t\tisEditedPostEmpty() &&\n\t\t\t\tTEMPLATE_POST_TYPE !== _postType,\n\t\t\tpostType: _postType,\n\t\t\tpostId: getCurrentPostId(),\n\t\t};\n\t}, [] );\n\n\tuseEffect( () => {\n\t\t// Should reset the modal state when navigating to a new page/post.\n\t\tsetIsClosed( false );\n\t}, [ postType, postId ] );\n\n\tif ( ! shouldEnableModal || isClosed ) {\n\t\treturn null;\n\t}\n\n\treturn <StartPageOptionsModal onClose={ () => setIsClosed( true ) } />;\n}\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\nexport const textFormattingShortcuts = [\n\t{\n\t\tkeyCombination: { modifier: 'primary', character: 'b' },\n\t\tdescription: __( 'Make the selected text bold.' ),\n\t},\n\t{\n\t\tkeyCombination: { modifier: 'primary', character: 'i' },\n\t\tdescription: __( 'Make the selected text italic.' ),\n\t},\n\t{\n\t\tkeyCombination: { modifier: 'primary', character: 'k' },\n\t\tdescription: __( 'Convert the selected text into a link.' ),\n\t},\n\t{\n\t\tkeyCombination: { modifier: 'primaryShift', character: 'k' },\n\t\tdescription: __( 'Remove a link.' ),\n\t},\n\t{\n\t\tkeyCombination: { character: '[[' },\n\t\tdescription: __( 'Insert a link to a post or page.' ),\n\t},\n\t{\n\t\tkeyCombination: { modifier: 'primary', character: 'u' },\n\t\tdescription: __( 'Underline the selected text.' ),\n\t},\n\t{\n\t\tkeyCombination: { modifier: 'access', character: 'd' },\n\t\tdescription: __( 'Strikethrough the selected text.' ),\n\t},\n\t{\n\t\tkeyCombination: { modifier: 'access', character: 'x' },\n\t\tdescription: __( 'Make the selected text inline code.' ),\n\t},\n\t{\n\t\tkeyCombination: {\n\t\t\tmodifier: 'access',\n\t\t\tcharacter: '0',\n\t\t},\n\t\taliases: [\n\t\t\t{\n\t\t\t\tmodifier: 'access',\n\t\t\t\tcharacter: '7',\n\t\t\t},\n\t\t],\n\t\tdescription: __( 'Convert the current heading to a paragraph.' ),\n\t},\n\t{\n\t\tkeyCombination: { modifier: 'access', character: '1-6' },\n\t\tdescription: __(\n\t\t\t'Convert the current paragraph or heading to a heading of level 1 to 6.'\n\t\t),\n\t},\n\t{\n\t\tkeyCombination: { modifier: 'primaryShift', character: 'SPACE' },\n\t\tdescription: __( 'Add non breaking space.' ),\n\t},\n];\n","/**\n * WordPress dependencies\n */\nimport { Fragment } from '@wordpress/element';\nimport { displayShortcutList, shortcutAriaLabel } from '@wordpress/keycodes';\n\nfunction KeyCombination( { keyCombination, forceAriaLabel } ) {\n\tconst shortcut = keyCombination.modifier\n\t\t? displayShortcutList[ keyCombination.modifier ](\n\t\t\t\tkeyCombination.character\n\t\t  )\n\t\t: keyCombination.character;\n\tconst ariaLabel = keyCombination.modifier\n\t\t? shortcutAriaLabel[ keyCombination.modifier ](\n\t\t\t\tkeyCombination.character\n\t\t  )\n\t\t: keyCombination.character;\n\n\treturn (\n\t\t<kbd\n\t\t\tclassName=\"editor-keyboard-shortcut-help-modal__shortcut-key-combination\"\n\t\t\taria-label={ forceAriaLabel || ariaLabel }\n\t\t>\n\t\t\t{ ( Array.isArray( shortcut ) ? shortcut : [ shortcut ] ).map(\n\t\t\t\t( character, index ) => {\n\t\t\t\t\tif ( character === '+' ) {\n\t\t\t\t\t\treturn <Fragment key={ index }>{ character }</Fragment>;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<kbd\n\t\t\t\t\t\t\tkey={ index }\n\t\t\t\t\t\t\tclassName=\"editor-keyboard-shortcut-help-modal__shortcut-key\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ character }\n\t\t\t\t\t\t</kbd>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t) }\n\t\t</kbd>\n\t);\n}\n\nfunction Shortcut( { description, keyCombination, aliases = [], ariaLabel } ) {\n\treturn (\n\t\t<>\n\t\t\t<div className=\"editor-keyboard-shortcut-help-modal__shortcut-description\">\n\t\t\t\t{ description }\n\t\t\t</div>\n\t\t\t<div className=\"editor-keyboard-shortcut-help-modal__shortcut-term\">\n\t\t\t\t<KeyCombination\n\t\t\t\t\tkeyCombination={ keyCombination }\n\t\t\t\t\tforceAriaLabel={ ariaLabel }\n\t\t\t\t/>\n\t\t\t\t{ aliases.map( ( alias, index ) => (\n\t\t\t\t\t<KeyCombination\n\t\t\t\t\t\tkeyCombination={ alias }\n\t\t\t\t\t\tforceAriaLabel={ ariaLabel }\n\t\t\t\t\t\tkey={ index }\n\t\t\t\t\t/>\n\t\t\t\t) ) }\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default Shortcut;\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { store as keyboardShortcutsStore } from '@wordpress/keyboard-shortcuts';\n\n/**\n * Internal dependencies\n */\nimport Shortcut from './shortcut';\n\nfunction DynamicShortcut( { name } ) {\n\tconst { keyCombination, description, aliases } = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetShortcutKeyCombination,\n\t\t\t\tgetShortcutDescription,\n\t\t\t\tgetShortcutAliases,\n\t\t\t} = select( keyboardShortcutsStore );\n\n\t\t\treturn {\n\t\t\t\tkeyCombination: getShortcutKeyCombination( name ),\n\t\t\t\taliases: getShortcutAliases( name ),\n\t\t\t\tdescription: getShortcutDescription( name ),\n\t\t\t};\n\t\t},\n\t\t[ name ]\n\t);\n\n\tif ( ! keyCombination ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<Shortcut\n\t\t\tkeyCombination={ keyCombination }\n\t\t\tdescription={ description }\n\t\t\taliases={ aliases }\n\t\t/>\n\t);\n}\n\nexport default DynamicShortcut;\n","/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * WordPress dependencies\n */\nimport { Modal } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport {\n\tuseShortcut,\n\tstore as keyboardShortcutsStore,\n} from '@wordpress/keyboard-shortcuts';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { store as interfaceStore } from '@wordpress/interface';\n\n/**\n * Internal dependencies\n */\nimport { textFormattingShortcuts } from './config';\nimport Shortcut from './shortcut';\nimport DynamicShortcut from './dynamic-shortcut';\n\nconst KEYBOARD_SHORTCUT_HELP_MODAL_NAME = 'editor/keyboard-shortcut-help';\n\nconst ShortcutList = ( { shortcuts } ) => (\n\t/*\n\t * Disable reason: The `list` ARIA role is redundant but\n\t * Safari+VoiceOver won't announce the list otherwise.\n\t */\n\t/* eslint-disable jsx-a11y/no-redundant-roles */\n\t<ul\n\t\tclassName=\"editor-keyboard-shortcut-help-modal__shortcut-list\"\n\t\trole=\"list\"\n\t>\n\t\t{ shortcuts.map( ( shortcut, index ) => (\n\t\t\t<li\n\t\t\t\tclassName=\"editor-keyboard-shortcut-help-modal__shortcut\"\n\t\t\t\tkey={ index }\n\t\t\t>\n\t\t\t\t{ typeof shortcut === 'string' ? (\n\t\t\t\t\t<DynamicShortcut name={ shortcut } />\n\t\t\t\t) : (\n\t\t\t\t\t<Shortcut { ...shortcut } />\n\t\t\t\t) }\n\t\t\t</li>\n\t\t) ) }\n\t</ul>\n\t/* eslint-enable jsx-a11y/no-redundant-roles */\n);\n\nconst ShortcutSection = ( { title, shortcuts, className } ) => (\n\t<section\n\t\tclassName={ clsx(\n\t\t\t'editor-keyboard-shortcut-help-modal__section',\n\t\t\tclassName\n\t\t) }\n\t>\n\t\t{ !! title && (\n\t\t\t<h2 className=\"editor-keyboard-shortcut-help-modal__section-title\">\n\t\t\t\t{ title }\n\t\t\t</h2>\n\t\t) }\n\t\t<ShortcutList shortcuts={ shortcuts } />\n\t</section>\n);\n\nconst ShortcutCategorySection = ( {\n\ttitle,\n\tcategoryName,\n\tadditionalShortcuts = [],\n} ) => {\n\tconst categoryShortcuts = useSelect(\n\t\t( select ) => {\n\t\t\treturn select( keyboardShortcutsStore ).getCategoryShortcuts(\n\t\t\t\tcategoryName\n\t\t\t);\n\t\t},\n\t\t[ categoryName ]\n\t);\n\n\treturn (\n\t\t<ShortcutSection\n\t\t\ttitle={ title }\n\t\t\tshortcuts={ categoryShortcuts.concat( additionalShortcuts ) }\n\t\t/>\n\t);\n};\n\nfunction KeyboardShortcutHelpModal() {\n\tconst isModalActive = useSelect(\n\t\t( select ) =>\n\t\t\tselect( interfaceStore ).isModalActive(\n\t\t\t\tKEYBOARD_SHORTCUT_HELP_MODAL_NAME\n\t\t\t),\n\t\t[]\n\t);\n\tconst { openModal, closeModal } = useDispatch( interfaceStore );\n\tconst toggleModal = () => {\n\t\tif ( isModalActive ) {\n\t\t\tcloseModal();\n\t\t} else {\n\t\t\topenModal( KEYBOARD_SHORTCUT_HELP_MODAL_NAME );\n\t\t}\n\t};\n\tuseShortcut( 'core/editor/keyboard-shortcuts', toggleModal );\n\n\tif ( ! isModalActive ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<Modal\n\t\t\tclassName=\"editor-keyboard-shortcut-help-modal\"\n\t\t\ttitle={ __( 'Keyboard shortcuts' ) }\n\t\t\tcloseButtonLabel={ __( 'Close' ) }\n\t\t\tonRequestClose={ toggleModal }\n\t\t>\n\t\t\t<ShortcutSection\n\t\t\t\tclassName=\"editor-keyboard-shortcut-help-modal__main-shortcuts\"\n\t\t\t\tshortcuts={ [ 'core/editor/keyboard-shortcuts' ] }\n\t\t\t/>\n\t\t\t<ShortcutCategorySection\n\t\t\t\ttitle={ __( 'Global shortcuts' ) }\n\t\t\t\tcategoryName=\"global\"\n\t\t\t/>\n\n\t\t\t<ShortcutCategorySection\n\t\t\t\ttitle={ __( 'Selection shortcuts' ) }\n\t\t\t\tcategoryName=\"selection\"\n\t\t\t/>\n\n\t\t\t<ShortcutCategorySection\n\t\t\t\ttitle={ __( 'Block shortcuts' ) }\n\t\t\t\tcategoryName=\"block\"\n\t\t\t\tadditionalShortcuts={ [\n\t\t\t\t\t{\n\t\t\t\t\t\tkeyCombination: { character: '/' },\n\t\t\t\t\t\tdescription: __(\n\t\t\t\t\t\t\t'Change the block type after adding a new paragraph.'\n\t\t\t\t\t\t),\n\t\t\t\t\t\t/* translators: The forward-slash character. e.g. '/'. */\n\t\t\t\t\t\tariaLabel: __( 'Forward-slash' ),\n\t\t\t\t\t},\n\t\t\t\t] }\n\t\t\t/>\n\t\t\t<ShortcutSection\n\t\t\t\ttitle={ __( 'Text formatting' ) }\n\t\t\t\tshortcuts={ textFormattingShortcuts }\n\t\t\t/>\n\t\t\t<ShortcutCategorySection\n\t\t\t\ttitle={ __( 'List View shortcuts' ) }\n\t\t\t\tcategoryName=\"list-view\"\n\t\t\t/>\n\t\t</Modal>\n\t);\n}\n\nexport default KeyboardShortcutHelpModal;\n","/**\n * WordPress dependencies\n */\nimport {\n\tBlockSettingsMenuControls,\n\t__unstableBlockSettingsMenuFirstItem as BlockSettingsMenuFirstItem,\n\tstore as blockEditorStore,\n\tuseBlockDisplayInformation,\n} from '@wordpress/block-editor';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { __experimentalText as Text, MenuItem } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\nimport { unlock } from '../../lock-unlock';\n\nfunction ContentOnlySettingsMenuItems( { clientId, onClose } ) {\n\tconst { entity, onNavigateToEntityRecord, canEditTemplates } = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetBlockEditingMode,\n\t\t\t\tgetBlockParentsByBlockName,\n\t\t\t\tgetSettings,\n\t\t\t\tgetBlockAttributes,\n\t\t\t} = select( blockEditorStore );\n\t\t\tconst contentOnly =\n\t\t\t\tgetBlockEditingMode( clientId ) === 'contentOnly';\n\t\t\tif ( ! contentOnly ) {\n\t\t\t\treturn {};\n\t\t\t}\n\t\t\tconst patternParent = getBlockParentsByBlockName(\n\t\t\t\tclientId,\n\t\t\t\t'core/block',\n\t\t\t\ttrue\n\t\t\t)[ 0 ];\n\n\t\t\tlet record;\n\t\t\tif ( patternParent ) {\n\t\t\t\trecord = select( coreStore ).getEntityRecord(\n\t\t\t\t\t'postType',\n\t\t\t\t\t'wp_block',\n\t\t\t\t\tgetBlockAttributes( patternParent ).ref\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tconst { getCurrentTemplateId } = select( editorStore );\n\t\t\t\tconst templateId = getCurrentTemplateId();\n\t\t\t\tconst { getContentLockingParent } = unlock(\n\t\t\t\t\tselect( blockEditorStore )\n\t\t\t\t);\n\t\t\t\tif ( ! getContentLockingParent( clientId ) && templateId ) {\n\t\t\t\t\trecord = select( coreStore ).getEntityRecord(\n\t\t\t\t\t\t'postType',\n\t\t\t\t\t\t'wp_template',\n\t\t\t\t\t\ttemplateId\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst _canEditTemplates = select( coreStore ).canUser(\n\t\t\t\t'create',\n\t\t\t\t'templates'\n\t\t\t);\n\t\t\treturn {\n\t\t\t\tcanEditTemplates: _canEditTemplates,\n\t\t\t\tentity: record,\n\t\t\t\tonNavigateToEntityRecord:\n\t\t\t\t\tgetSettings().onNavigateToEntityRecord,\n\t\t\t};\n\t\t},\n\t\t[ clientId ]\n\t);\n\n\tif ( ! entity ) {\n\t\treturn (\n\t\t\t<TemplateLockContentOnlyMenuItems\n\t\t\t\tclientId={ clientId }\n\t\t\t\tonClose={ onClose }\n\t\t\t/>\n\t\t);\n\t}\n\n\tconst isPattern = entity.type === 'wp_block';\n\tlet helpText = isPattern\n\t\t? __(\n\t\t\t\t'Edit the pattern to move, delete, or make further changes to this block.'\n\t\t  )\n\t\t: __(\n\t\t\t\t'Edit the template to move, delete, or make further changes to this block.'\n\t\t  );\n\n\tif ( ! canEditTemplates ) {\n\t\thelpText = __(\n\t\t\t'Only users with permissions to edit the template can move or delete this block'\n\t\t);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<BlockSettingsMenuFirstItem>\n\t\t\t\t<MenuItem\n\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\tonNavigateToEntityRecord( {\n\t\t\t\t\t\t\tpostId: entity.id,\n\t\t\t\t\t\t\tpostType: entity.type,\n\t\t\t\t\t\t} );\n\t\t\t\t\t} }\n\t\t\t\t\tdisabled={ ! canEditTemplates }\n\t\t\t\t>\n\t\t\t\t\t{ isPattern ? __( 'Edit pattern' ) : __( 'Edit template' ) }\n\t\t\t\t</MenuItem>\n\t\t\t</BlockSettingsMenuFirstItem>\n\t\t\t<Text\n\t\t\t\tvariant=\"muted\"\n\t\t\t\tas=\"p\"\n\t\t\t\tclassName=\"editor-content-only-settings-menu__description\"\n\t\t\t>\n\t\t\t\t{ helpText }\n\t\t\t</Text>\n\t\t</>\n\t);\n}\n\nfunction TemplateLockContentOnlyMenuItems( { clientId, onClose } ) {\n\tconst { contentLockingParent } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getContentLockingParent } = unlock(\n\t\t\t\tselect( blockEditorStore )\n\t\t\t);\n\t\t\treturn {\n\t\t\t\tcontentLockingParent: getContentLockingParent( clientId ),\n\t\t\t};\n\t\t},\n\t\t[ clientId ]\n\t);\n\tconst blockDisplayInformation =\n\t\tuseBlockDisplayInformation( contentLockingParent );\n\t// Disable reason: We're using a hook here so it has to be on top-level.\n\t// eslint-disable-next-line @wordpress/no-unused-vars-before-return\n\tconst { modifyContentLockBlock, selectBlock } = unlock(\n\t\tuseDispatch( blockEditorStore )\n\t);\n\n\tif ( ! blockDisplayInformation?.title ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<BlockSettingsMenuFirstItem>\n\t\t\t\t<MenuItem\n\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\tselectBlock( contentLockingParent );\n\t\t\t\t\t\tmodifyContentLockBlock( contentLockingParent );\n\t\t\t\t\t\tonClose();\n\t\t\t\t\t} }\n\t\t\t\t>\n\t\t\t\t\t{ __( 'Unlock' ) }\n\t\t\t\t</MenuItem>\n\t\t\t</BlockSettingsMenuFirstItem>\n\t\t\t<Text\n\t\t\t\tvariant=\"muted\"\n\t\t\t\tas=\"p\"\n\t\t\t\tclassName=\"editor-content-only-settings-menu__description\"\n\t\t\t>\n\t\t\t\t{ __(\n\t\t\t\t\t'Temporarily unlock the parent block to edit, delete or make further changes to this block.'\n\t\t\t\t) }\n\t\t\t</Text>\n\t\t</>\n\t);\n}\n\nexport default function ContentOnlySettingsMenu() {\n\treturn (\n\t\t<BlockSettingsMenuControls>\n\t\t\t{ ( { selectedClientIds, onClose } ) =>\n\t\t\t\tselectedClientIds.length === 1 && (\n\t\t\t\t\t<ContentOnlySettingsMenuItems\n\t\t\t\t\t\tclientId={ selectedClientIds[ 0 ] }\n\t\t\t\t\t\tonClose={ onClose }\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t}\n\t\t</BlockSettingsMenuControls>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { Modal, Flex, FlexItem, Button } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useState, useMemo, useEffect } from '@wordpress/element';\nimport { __experimentalBlockPatternsList as BlockPatternsList } from '@wordpress/block-editor';\nimport { useSelect } from '@wordpress/data';\nimport { useAsyncList } from '@wordpress/compose';\nimport { parse } from '@wordpress/blocks';\nimport { store as coreStore, useEntityBlockEditor } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\nimport { TEMPLATE_POST_TYPE } from '../../store/constants';\n\nfunction useFallbackTemplateContent( slug, isCustom = false ) {\n\treturn useSelect(\n\t\t( select ) => {\n\t\t\tconst { getEntityRecord, getDefaultTemplateId } =\n\t\t\t\tselect( coreStore );\n\t\t\tconst templateId = getDefaultTemplateId( {\n\t\t\t\tslug,\n\t\t\t\tis_custom: isCustom,\n\t\t\t\tignore_empty: true,\n\t\t\t} );\n\t\t\treturn templateId\n\t\t\t\t? getEntityRecord( 'postType', TEMPLATE_POST_TYPE, templateId )\n\t\t\t\t\t\t?.content?.raw\n\t\t\t\t: undefined;\n\t\t},\n\t\t[ slug, isCustom ]\n\t);\n}\n\nfunction useStartPatterns( fallbackContent ) {\n\tconst { slug, patterns } = useSelect( ( select ) => {\n\t\tconst { getCurrentPostType, getCurrentPostId } = select( editorStore );\n\t\tconst { getEntityRecord, getBlockPatterns } = select( coreStore );\n\t\tconst postId = getCurrentPostId();\n\t\tconst postType = getCurrentPostType();\n\t\tconst record = getEntityRecord( 'postType', postType, postId );\n\t\treturn {\n\t\t\tslug: record.slug,\n\t\t\tpatterns: getBlockPatterns(),\n\t\t};\n\t}, [] );\n\n\tconst currentThemeStylesheet = useSelect(\n\t\t( select ) => select( coreStore ).getCurrentTheme().stylesheet\n\t);\n\n\t// Duplicated from packages/block-library/src/pattern/edit.js.\n\tfunction injectThemeAttributeInBlockTemplateContent( block ) {\n\t\tif (\n\t\t\tblock.innerBlocks.find(\n\t\t\t\t( innerBlock ) => innerBlock.name === 'core/template-part'\n\t\t\t)\n\t\t) {\n\t\t\tblock.innerBlocks = block.innerBlocks.map( ( innerBlock ) => {\n\t\t\t\tif (\n\t\t\t\t\tinnerBlock.name === 'core/template-part' &&\n\t\t\t\t\tinnerBlock.attributes.theme === undefined\n\t\t\t\t) {\n\t\t\t\t\tinnerBlock.attributes.theme = currentThemeStylesheet;\n\t\t\t\t}\n\t\t\t\treturn innerBlock;\n\t\t\t} );\n\t\t}\n\n\t\tif (\n\t\t\tblock.name === 'core/template-part' &&\n\t\t\tblock.attributes.theme === undefined\n\t\t) {\n\t\t\tblock.attributes.theme = currentThemeStylesheet;\n\t\t}\n\t\treturn block;\n\t}\n\n\treturn useMemo( () => {\n\t\t// filter patterns that are supposed to be used in the current template being edited.\n\t\treturn [\n\t\t\t{\n\t\t\t\tname: 'fallback',\n\t\t\t\tblocks: parse( fallbackContent ),\n\t\t\t\ttitle: __( 'Fallback content' ),\n\t\t\t},\n\t\t\t...patterns\n\t\t\t\t.filter( ( pattern ) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\tArray.isArray( pattern.templateTypes ) &&\n\t\t\t\t\t\tpattern.templateTypes.some( ( templateType ) =>\n\t\t\t\t\t\t\tslug.startsWith( templateType )\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t} )\n\t\t\t\t.map( ( pattern ) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...pattern,\n\t\t\t\t\t\tblocks: parse( pattern.content ).map( ( block ) =>\n\t\t\t\t\t\t\tinjectThemeAttributeInBlockTemplateContent( block )\n\t\t\t\t\t\t),\n\t\t\t\t\t};\n\t\t\t\t} ),\n\t\t];\n\t}, [ fallbackContent, slug, patterns ] );\n}\n\nfunction PatternSelection( { fallbackContent, onChoosePattern, postType } ) {\n\tconst [ , , onChange ] = useEntityBlockEditor( 'postType', postType );\n\tconst blockPatterns = useStartPatterns( fallbackContent );\n\tconst shownBlockPatterns = useAsyncList( blockPatterns );\n\treturn (\n\t\t<BlockPatternsList\n\t\t\tblockPatterns={ blockPatterns }\n\t\t\tshownPatterns={ shownBlockPatterns }\n\t\t\tonClickPattern={ ( pattern, blocks ) => {\n\t\t\t\tonChange( blocks, { selection: undefined } );\n\t\t\t\tonChoosePattern();\n\t\t\t} }\n\t\t/>\n\t);\n}\n\nfunction StartModal( { slug, isCustom, onClose, postType } ) {\n\tconst fallbackContent = useFallbackTemplateContent( slug, isCustom );\n\tif ( ! fallbackContent ) {\n\t\treturn null;\n\t}\n\treturn (\n\t\t<Modal\n\t\t\tclassName=\"editor-start-template-options__modal\"\n\t\t\ttitle={ __( 'Choose a pattern' ) }\n\t\t\tcloseLabel={ __( 'Cancel' ) }\n\t\t\tfocusOnMount=\"firstElement\"\n\t\t\tonRequestClose={ onClose }\n\t\t\tisFullScreen\n\t\t>\n\t\t\t<div className=\"editor-start-template-options__modal-content\">\n\t\t\t\t<PatternSelection\n\t\t\t\t\tfallbackContent={ fallbackContent }\n\t\t\t\t\tslug={ slug }\n\t\t\t\t\tisCustom={ isCustom }\n\t\t\t\t\tpostType={ postType }\n\t\t\t\t\tonChoosePattern={ () => {\n\t\t\t\t\t\tonClose();\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<Flex\n\t\t\t\tclassName=\"editor-start-template-options__modal__actions\"\n\t\t\t\tjustify=\"flex-end\"\n\t\t\t\texpanded={ false }\n\t\t\t>\n\t\t\t\t<FlexItem>\n\t\t\t\t\t<Button variant=\"tertiary\" onClick={ onClose }>\n\t\t\t\t\t\t{ __( 'Skip' ) }\n\t\t\t\t\t</Button>\n\t\t\t\t</FlexItem>\n\t\t\t</Flex>\n\t\t</Modal>\n\t);\n}\n\nexport default function StartTemplateOptions() {\n\tconst [ isClosed, setIsClosed ] = useState( false );\n\tconst { shouldOpenModal, slug, isCustom, postType, postId } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getCurrentPostType, getCurrentPostId } =\n\t\t\t\tselect( editorStore );\n\t\t\tconst _postType = getCurrentPostType();\n\t\t\tconst _postId = getCurrentPostId();\n\t\t\tconst { getEditedEntityRecord, hasEditsForEntityRecord } =\n\t\t\t\tselect( coreStore );\n\t\t\tconst templateRecord = getEditedEntityRecord(\n\t\t\t\t'postType',\n\t\t\t\t_postType,\n\t\t\t\t_postId\n\t\t\t);\n\t\t\tconst hasEdits = hasEditsForEntityRecord(\n\t\t\t\t'postType',\n\t\t\t\t_postType,\n\t\t\t\t_postId\n\t\t\t);\n\n\t\t\treturn {\n\t\t\t\tshouldOpenModal:\n\t\t\t\t\t! hasEdits &&\n\t\t\t\t\t'' === templateRecord.content &&\n\t\t\t\t\tTEMPLATE_POST_TYPE === _postType,\n\t\t\t\tslug: templateRecord.slug,\n\t\t\t\tisCustom: templateRecord.is_custom,\n\t\t\t\tpostType: _postType,\n\t\t\t\tpostId: _postId,\n\t\t\t};\n\t\t},\n\t\t[]\n\t);\n\n\tuseEffect( () => {\n\t\t// Should reset the modal state when navigating to a new page/post.\n\t\tsetIsClosed( false );\n\t}, [ postType, postId ] );\n\n\tif ( ! shouldOpenModal || isClosed ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<StartModal\n\t\t\tslug={ slug }\n\t\t\tisCustom={ isCustom }\n\t\t\tpostType={ postType }\n\t\t\tonClose={ () => setIsClosed( true ) }\n\t\t/>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { MenuItem } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\n\nexport default function ConvertToRegularBlocks( { clientId, onClose } ) {\n\tconst { getBlocks } = useSelect( blockEditorStore );\n\tconst { replaceBlocks } = useDispatch( blockEditorStore );\n\n\tconst canRemove = useSelect(\n\t\t( select ) => select( blockEditorStore ).canRemoveBlock( clientId ),\n\t\t[ clientId ]\n\t);\n\n\tif ( ! canRemove ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<MenuItem\n\t\t\tonClick={ () => {\n\t\t\t\treplaceBlocks( clientId, getBlocks( clientId ) );\n\t\t\t\tonClose();\n\t\t\t} }\n\t\t>\n\t\t\t{ __( 'Detach' ) }\n\t\t</MenuItem>\n\t);\n}\n","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n        if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n        dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n        if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n        dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n","/**\n * Locale character mapping rules.\n */\ninterface Locale {\n  regexp: RegExp;\n  map: Record<string, string>;\n}\n\n/**\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n */\nconst SUPPORTED_LOCALE: Record<string, Locale> = {\n  tr: {\n    regexp: /\\u0130|\\u0049|\\u0049\\u0307/g,\n    map: {\n      İ: \"\\u0069\",\n      I: \"\\u0131\",\n      İ: \"\\u0069\",\n    },\n  },\n  az: {\n    regexp: /\\u0130/g,\n    map: {\n      İ: \"\\u0069\",\n      I: \"\\u0131\",\n      İ: \"\\u0069\",\n    },\n  },\n  lt: {\n    regexp: /\\u0049|\\u004A|\\u012E|\\u00CC|\\u00CD|\\u0128/g,\n    map: {\n      I: \"\\u0069\\u0307\",\n      J: \"\\u006A\\u0307\",\n      Į: \"\\u012F\\u0307\",\n      Ì: \"\\u0069\\u0307\\u0300\",\n      Í: \"\\u0069\\u0307\\u0301\",\n      Ĩ: \"\\u0069\\u0307\\u0303\",\n    },\n  },\n};\n\n/**\n * Localized lower case.\n */\nexport function localeLowerCase(str: string, locale: string) {\n  const lang = SUPPORTED_LOCALE[locale.toLowerCase()];\n  if (lang) return lowerCase(str.replace(lang.regexp, (m) => lang.map[m]));\n  return lowerCase(str);\n}\n\n/**\n * Lower case as a function.\n */\nexport function lowerCase(str: string) {\n  return str.toLowerCase();\n}\n","import { lowerCase } from \"lower-case\";\n\nexport interface Options {\n  splitRegexp?: RegExp | RegExp[];\n  stripRegexp?: RegExp | RegExp[];\n  delimiter?: string;\n  transform?: (part: string, index: number, parts: string[]) => string;\n}\n\n// Support camel case (\"camelCase\" -> \"camel Case\" and \"CAMELCase\" -> \"CAMEL Case\").\nconst DEFAULT_SPLIT_REGEXP = [/([a-z0-9])([A-Z])/g, /([A-Z])([A-Z][a-z])/g];\n\n// Remove all non-word characters.\nconst DEFAULT_STRIP_REGEXP = /[^A-Z0-9]+/gi;\n\n/**\n * Normalize the string into something other libraries can manipulate easier.\n */\nexport function noCase(input: string, options: Options = {}) {\n  const {\n    splitRegexp = DEFAULT_SPLIT_REGEXP,\n    stripRegexp = DEFAULT_STRIP_REGEXP,\n    transform = lowerCase,\n    delimiter = \" \",\n  } = options;\n\n  let result = replace(\n    replace(input, splitRegexp, \"$1\\0$2\"),\n    stripRegexp,\n    \"\\0\"\n  );\n  let start = 0;\n  let end = result.length;\n\n  // Trim the delimiter from around the output string.\n  while (result.charAt(start) === \"\\0\") start++;\n  while (result.charAt(end - 1) === \"\\0\") end--;\n\n  // Transform each token independently.\n  return result.slice(start, end).split(\"\\0\").map(transform).join(delimiter);\n}\n\n/**\n * Replace `re` in the input string with the replacement value.\n */\nfunction replace(input: string, re: RegExp | RegExp[], value: string) {\n  if (re instanceof RegExp) return input.replace(re, value);\n  return re.reduce((input, re) => input.replace(re, value), input);\n}\n","import { dotCase, Options } from \"dot-case\";\n\nexport { Options };\n\nexport function paramCase(input: string, options: Options = {}) {\n  return dotCase(input, {\n    delimiter: \"-\",\n    ...options,\n  });\n}\n","import { noCase, Options } from \"no-case\";\n\nexport { Options };\n\nexport function dotCase(input: string, options: Options = {}) {\n  return noCase(input, {\n    delimiter: \".\",\n    ...options,\n  });\n}\n","/**\n * External dependencies\n */\nimport { paramCase as kebabCase } from 'change-case';\n\n/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { TEMPLATE_PART_POST_TYPE } from '../../store/constants';\n\nexport const useExistingTemplateParts = () => {\n\treturn useSelect(\n\t\t( select ) =>\n\t\t\tselect( coreStore ).getEntityRecords(\n\t\t\t\t'postType',\n\t\t\t\tTEMPLATE_PART_POST_TYPE,\n\t\t\t\t{\n\t\t\t\t\tper_page: -1,\n\t\t\t\t}\n\t\t\t),\n\t\t[]\n\t);\n};\n\n/**\n * Return a unique template part title based on\n * the given title and existing template parts.\n *\n * @param {string} title         The original template part title.\n * @param {Object} templateParts The array of template part entities.\n * @return {string} A unique template part title.\n */\nexport const getUniqueTemplatePartTitle = ( title, templateParts ) => {\n\tconst lowercaseTitle = title.toLowerCase();\n\tconst existingTitles = templateParts.map( ( templatePart ) =>\n\t\ttemplatePart.title.rendered.toLowerCase()\n\t);\n\n\tif ( ! existingTitles.includes( lowercaseTitle ) ) {\n\t\treturn title;\n\t}\n\n\tlet suffix = 2;\n\twhile ( existingTitles.includes( `${ lowercaseTitle } ${ suffix }` ) ) {\n\t\tsuffix++;\n\t}\n\n\treturn `${ title } ${ suffix }`;\n};\n\n/**\n * Get a valid slug for a template part.\n * Currently template parts only allow latin chars.\n * The fallback slug will receive suffix by default.\n *\n * @param {string} title The template part title.\n * @return {string} A valid template part slug.\n */\nexport const getCleanTemplatePartSlug = ( title ) => {\n\treturn kebabCase( title ).replace( /[^\\w-]+/g, '' ) || 'wp-custom-part';\n};\n","/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport {\n\tIcon,\n\tBaseControl,\n\tTextControl,\n\tFlex,\n\tFlexItem,\n\tFlexBlock,\n\tButton,\n\tModal,\n\t__experimentalRadioGroup as RadioGroup,\n\t__experimentalRadio as Radio,\n\t__experimentalHStack as HStack,\n\t__experimentalVStack as VStack,\n} from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useState } from '@wordpress/element';\nimport { useInstanceId } from '@wordpress/compose';\nimport { store as noticesStore } from '@wordpress/notices';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { check } from '@wordpress/icons';\nimport { serialize } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\nimport {\n\tTEMPLATE_PART_POST_TYPE,\n\tTEMPLATE_PART_AREA_DEFAULT_CATEGORY,\n} from '../../store/constants';\nimport {\n\tuseExistingTemplateParts,\n\tgetUniqueTemplatePartTitle,\n\tgetCleanTemplatePartSlug,\n} from './utils';\n\nexport default function CreateTemplatePartModal( {\n\tmodalTitle,\n\t...restProps\n} ) {\n\tconst defaultModalTitle = useSelect(\n\t\t( select ) =>\n\t\t\tselect( coreStore ).getPostType( TEMPLATE_PART_POST_TYPE )?.labels\n\t\t\t\t?.add_new_item,\n\t\t[]\n\t);\n\treturn (\n\t\t<Modal\n\t\t\ttitle={ modalTitle || defaultModalTitle }\n\t\t\tonRequestClose={ restProps.closeModal }\n\t\t\toverlayClassName=\"editor-create-template-part-modal\"\n\t\t\tfocusOnMount=\"firstContentElement\"\n\t\t\tsize=\"medium\"\n\t\t>\n\t\t\t<CreateTemplatePartModalContents { ...restProps } />\n\t\t</Modal>\n\t);\n}\n\nexport function CreateTemplatePartModalContents( {\n\tdefaultArea = TEMPLATE_PART_AREA_DEFAULT_CATEGORY,\n\tblocks = [],\n\tconfirmLabel = __( 'Add' ),\n\tcloseModal,\n\tonCreate,\n\tonError,\n\tdefaultTitle = '',\n} ) {\n\tconst { createErrorNotice } = useDispatch( noticesStore );\n\tconst { saveEntityRecord } = useDispatch( coreStore );\n\tconst existingTemplateParts = useExistingTemplateParts();\n\n\tconst [ title, setTitle ] = useState( defaultTitle );\n\tconst [ area, setArea ] = useState( defaultArea );\n\tconst [ isSubmitting, setIsSubmitting ] = useState( false );\n\tconst instanceId = useInstanceId( CreateTemplatePartModal );\n\n\tconst templatePartAreas = useSelect(\n\t\t( select ) =>\n\t\t\tselect( editorStore ).__experimentalGetDefaultTemplatePartAreas(),\n\t\t[]\n\t);\n\tasync function createTemplatePart() {\n\t\tif ( ! title || isSubmitting ) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tsetIsSubmitting( true );\n\t\t\tconst uniqueTitle = getUniqueTemplatePartTitle(\n\t\t\t\ttitle,\n\t\t\t\texistingTemplateParts\n\t\t\t);\n\t\t\tconst cleanSlug = getCleanTemplatePartSlug( uniqueTitle );\n\n\t\t\tconst templatePart = await saveEntityRecord(\n\t\t\t\t'postType',\n\t\t\t\tTEMPLATE_PART_POST_TYPE,\n\t\t\t\t{\n\t\t\t\t\tslug: cleanSlug,\n\t\t\t\t\ttitle: uniqueTitle,\n\t\t\t\t\tcontent: serialize( blocks ),\n\t\t\t\t\tarea,\n\t\t\t\t},\n\t\t\t\t{ throwOnError: true }\n\t\t\t);\n\t\t\tawait onCreate( templatePart );\n\n\t\t\t// TODO: Add a success notice?\n\t\t} catch ( error ) {\n\t\t\tconst errorMessage =\n\t\t\t\terror.message && error.code !== 'unknown_error'\n\t\t\t\t\t? error.message\n\t\t\t\t\t: __(\n\t\t\t\t\t\t\t'An error occurred while creating the template part.'\n\t\t\t\t\t  );\n\n\t\t\tcreateErrorNotice( errorMessage, { type: 'snackbar' } );\n\n\t\t\tonError?.();\n\t\t} finally {\n\t\t\tsetIsSubmitting( false );\n\t\t}\n\t}\n\treturn (\n\t\t<form\n\t\t\tonSubmit={ async ( event ) => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tawait createTemplatePart();\n\t\t\t} }\n\t\t>\n\t\t\t<VStack spacing=\"4\">\n\t\t\t\t<TextControl\n\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\tlabel={ __( 'Name' ) }\n\t\t\t\t\tvalue={ title }\n\t\t\t\t\tonChange={ setTitle }\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<BaseControl\n\t\t\t\t\tlabel={ __( 'Area' ) }\n\t\t\t\t\tid={ `editor-create-template-part-modal__area-selection-${ instanceId }` }\n\t\t\t\t\tclassName=\"editor-create-template-part-modal__area-base-control\"\n\t\t\t\t>\n\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\tlabel={ __( 'Area' ) }\n\t\t\t\t\t\tclassName=\"editor-create-template-part-modal__area-radio-group\"\n\t\t\t\t\t\tid={ `editor-create-template-part-modal__area-selection-${ instanceId }` }\n\t\t\t\t\t\tonChange={ setArea }\n\t\t\t\t\t\tchecked={ area }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ templatePartAreas.map(\n\t\t\t\t\t\t\t( { icon, label, area: value, description } ) => (\n\t\t\t\t\t\t\t\t<Radio\n\t\t\t\t\t\t\t\t\tkey={ label }\n\t\t\t\t\t\t\t\t\tvalue={ value }\n\t\t\t\t\t\t\t\t\tclassName=\"editor-create-template-part-modal__area-radio\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Flex align=\"start\" justify=\"start\">\n\t\t\t\t\t\t\t\t\t\t<FlexItem>\n\t\t\t\t\t\t\t\t\t\t\t<Icon icon={ icon } />\n\t\t\t\t\t\t\t\t\t\t</FlexItem>\n\t\t\t\t\t\t\t\t\t\t<FlexBlock className=\"editor-create-template-part-modal__option-label\">\n\t\t\t\t\t\t\t\t\t\t\t{ label }\n\t\t\t\t\t\t\t\t\t\t\t<div>{ description }</div>\n\t\t\t\t\t\t\t\t\t\t</FlexBlock>\n\n\t\t\t\t\t\t\t\t\t\t<FlexItem className=\"editor-create-template-part-modal__checkbox\">\n\t\t\t\t\t\t\t\t\t\t\t{ area === value && (\n\t\t\t\t\t\t\t\t\t\t\t\t<Icon icon={ check } />\n\t\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t\t</FlexItem>\n\t\t\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t\t</Radio>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) }\n\t\t\t\t\t</RadioGroup>\n\t\t\t\t</BaseControl>\n\t\t\t\t<HStack justify=\"right\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\tcloseModal();\n\t\t\t\t\t\t} }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Cancel' ) }\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\taria-disabled={ ! title || isSubmitting }\n\t\t\t\t\t\tisBusy={ isSubmitting }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ confirmLabel }\n\t\t\t\t\t</Button>\n\t\t\t\t</HStack>\n\t\t\t</VStack>\n\t\t</form>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { MenuItem } from '@wordpress/components';\nimport { createBlock } from '@wordpress/blocks';\nimport { __ } from '@wordpress/i18n';\nimport { useState } from '@wordpress/element';\nimport { store as noticesStore } from '@wordpress/notices';\nimport { symbolFilled } from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport CreateTemplatePartModal from '../create-template-part-modal';\n\nexport default function ConvertToTemplatePart( { clientIds, blocks } ) {\n\tconst [ isModalOpen, setIsModalOpen ] = useState( false );\n\tconst { replaceBlocks } = useDispatch( blockEditorStore );\n\tconst { createSuccessNotice } = useDispatch( noticesStore );\n\n\tconst { canCreate } = useSelect( ( select ) => {\n\t\treturn {\n\t\t\tcanCreate:\n\t\t\t\tselect( blockEditorStore ).canInsertBlockType(\n\t\t\t\t\t'core/template-part'\n\t\t\t\t),\n\t\t};\n\t}, [] );\n\n\tif ( ! canCreate ) {\n\t\treturn null;\n\t}\n\n\tconst onConvert = async ( templatePart ) => {\n\t\treplaceBlocks(\n\t\t\tclientIds,\n\t\t\tcreateBlock( 'core/template-part', {\n\t\t\t\tslug: templatePart.slug,\n\t\t\t\ttheme: templatePart.theme,\n\t\t\t} )\n\t\t);\n\t\tcreateSuccessNotice( __( 'Template part created.' ), {\n\t\t\ttype: 'snackbar',\n\t\t} );\n\n\t\t// The modal and this component will be unmounted because of `replaceBlocks` above,\n\t\t// so no need to call `closeModal` or `onClose`.\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<MenuItem\n\t\t\t\ticon={ symbolFilled }\n\t\t\t\tonClick={ () => {\n\t\t\t\t\tsetIsModalOpen( true );\n\t\t\t\t} }\n\t\t\t\taria-expanded={ isModalOpen }\n\t\t\t\taria-haspopup=\"dialog\"\n\t\t\t>\n\t\t\t\t{ __( 'Create template part' ) }\n\t\t\t</MenuItem>\n\t\t\t{ isModalOpen && (\n\t\t\t\t<CreateTemplatePartModal\n\t\t\t\t\tcloseModal={ () => {\n\t\t\t\t\t\tsetIsModalOpen( false );\n\t\t\t\t\t} }\n\t\t\t\t\tblocks={ blocks }\n\t\t\t\t\tonCreate={ onConvert }\n\t\t\t\t/>\n\t\t\t) }\n\t\t</>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport {\n\tBlockSettingsMenuControls,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport ConvertToRegularBlocks from './convert-to-regular';\nimport ConvertToTemplatePart from './convert-to-template-part';\n\nexport default function TemplatePartMenuItems() {\n\treturn (\n\t\t<BlockSettingsMenuControls>\n\t\t\t{ ( { selectedClientIds, onClose } ) => (\n\t\t\t\t<TemplatePartConverterMenuItem\n\t\t\t\t\tclientIds={ selectedClientIds }\n\t\t\t\t\tonClose={ onClose }\n\t\t\t\t/>\n\t\t\t) }\n\t\t</BlockSettingsMenuControls>\n\t);\n}\n\nfunction TemplatePartConverterMenuItem( { clientIds, onClose } ) {\n\tconst { isContentOnly, blocks } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getBlocksByClientId, getBlockEditingMode } =\n\t\t\t\tselect( blockEditorStore );\n\t\t\treturn {\n\t\t\t\tblocks: getBlocksByClientId( clientIds ),\n\t\t\t\tisContentOnly:\n\t\t\t\t\tclientIds.length === 1 &&\n\t\t\t\t\tgetBlockEditingMode( clientIds[ 0 ] ) === 'contentOnly',\n\t\t\t};\n\t\t},\n\t\t[ clientIds ]\n\t);\n\n\t// Do not show the convert button if the block is in content-only mode.\n\tif ( isContentOnly ) {\n\t\treturn null;\n\t}\n\n\t// Allow converting a single template part to standard blocks.\n\tif ( blocks.length === 1 && blocks[ 0 ]?.name === 'core/template-part' ) {\n\t\treturn (\n\t\t\t<ConvertToRegularBlocks\n\t\t\t\tclientId={ clientIds[ 0 ] }\n\t\t\t\tonClose={ onClose }\n\t\t\t/>\n\t\t);\n\t}\n\treturn <ConvertToTemplatePart clientIds={ clientIds } blocks={ blocks } />;\n}\n","/**\n * WordPress dependencies\n */\nimport { useEffect, useLayoutEffect, useMemo } from '@wordpress/element';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\nimport { EntityProvider, useEntityBlockEditor } from '@wordpress/core-data';\nimport {\n\tBlockEditorProvider,\n\tBlockContextProvider,\n\tprivateApis as blockEditorPrivateApis,\n} from '@wordpress/block-editor';\nimport { store as noticesStore } from '@wordpress/notices';\nimport { privateApis as editPatternsPrivateApis } from '@wordpress/patterns';\nimport { createBlock } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport withRegistryProvider from './with-registry-provider';\nimport { store as editorStore } from '../../store';\nimport useBlockEditorSettings from './use-block-editor-settings';\nimport { unlock } from '../../lock-unlock';\nimport DisableNonPageContentBlocks from './disable-non-page-content-blocks';\nimport NavigationBlockEditingMode from './navigation-block-editing-mode';\nimport { useHideBlocksFromInserter } from './use-hide-blocks-from-inserter';\nimport useCommands from '../commands';\nimport BlockRemovalWarnings from '../block-removal-warnings';\nimport StartPageOptions from '../start-page-options';\nimport KeyboardShortcutHelpModal from '../keyboard-shortcut-help-modal';\nimport ContentOnlySettingsMenu from '../block-settings-menu/content-only-settings-menu';\nimport StartTemplateOptions from '../start-template-options';\nimport EditorKeyboardShortcuts from '../global-keyboard-shortcuts';\nimport PatternRenameModal from '../pattern-rename-modal';\nimport PatternDuplicateModal from '../pattern-duplicate-modal';\nimport TemplatePartMenuItems from '../template-part-menu-items';\n\nconst { ExperimentalBlockEditorProvider } = unlock( blockEditorPrivateApis );\nconst { PatternsMenuItems } = unlock( editPatternsPrivateApis );\n\nconst noop = () => {};\n\n/**\n * These are global entities that are only there to split blocks into logical units\n * They don't provide a \"context\" for the current post/page being rendered.\n * So we should not use their ids as post context. This is important to allow post blocks\n * (post content, post title) to be used within them without issues.\n */\nconst NON_CONTEXTUAL_POST_TYPES = [\n\t'wp_block',\n\t'wp_template',\n\t'wp_navigation',\n\t'wp_template_part',\n];\n\n/**\n * Depending on the post, template and template mode,\n * returns the appropriate blocks and change handlers for the block editor provider.\n *\n * @param {Array}   post     Block list.\n * @param {boolean} template Whether the page content has focus (and the surrounding template is inert). If `true` return page content blocks. Default `false`.\n * @param {string}  mode     Rendering mode.\n *\n * @example\n * ```jsx\n * const [ blocks, onInput, onChange ] = useBlockEditorProps( post, template, mode );\n * ```\n *\n * @return {Array} Block editor props.\n */\nfunction useBlockEditorProps( post, template, mode ) {\n\tconst rootLevelPost =\n\t\tmode === 'post-only' || ! template ? 'post' : 'template';\n\tconst [ postBlocks, onInput, onChange ] = useEntityBlockEditor(\n\t\t'postType',\n\t\tpost.type,\n\t\t{ id: post.id }\n\t);\n\tconst [ templateBlocks, onInputTemplate, onChangeTemplate ] =\n\t\tuseEntityBlockEditor( 'postType', template?.type, {\n\t\t\tid: template?.id,\n\t\t} );\n\tconst maybeNavigationBlocks = useMemo( () => {\n\t\tif ( post.type === 'wp_navigation' ) {\n\t\t\treturn [\n\t\t\t\tcreateBlock( 'core/navigation', {\n\t\t\t\t\tref: post.id,\n\t\t\t\t\t// As the parent editor is locked with `templateLock`, the template locking\n\t\t\t\t\t// must be explicitly \"unset\" on the block itself to allow the user to modify\n\t\t\t\t\t// the block's content.\n\t\t\t\t\ttemplateLock: false,\n\t\t\t\t} ),\n\t\t\t];\n\t\t}\n\t}, [ post.type, post.id ] );\n\n\t// It is important that we don't create a new instance of blocks on every change\n\t// We should only create a new instance if the blocks them selves change, not a dependency of them.\n\tconst blocks = useMemo( () => {\n\t\tif ( maybeNavigationBlocks ) {\n\t\t\treturn maybeNavigationBlocks;\n\t\t}\n\n\t\tif ( rootLevelPost === 'template' ) {\n\t\t\treturn templateBlocks;\n\t\t}\n\n\t\treturn postBlocks;\n\t}, [ maybeNavigationBlocks, rootLevelPost, templateBlocks, postBlocks ] );\n\n\t// Handle fallback to postBlocks outside of the above useMemo, to ensure\n\t// that constructed block templates that call `createBlock` are not generated\n\t// too frequently. This ensures that clientIds are stable.\n\tconst disableRootLevelChanges =\n\t\t( !! template && mode === 'template-locked' ) ||\n\t\tpost.type === 'wp_navigation';\n\tif ( disableRootLevelChanges ) {\n\t\treturn [ blocks, noop, noop ];\n\t}\n\n\treturn [\n\t\tblocks,\n\t\trootLevelPost === 'post' ? onInput : onInputTemplate,\n\t\trootLevelPost === 'post' ? onChange : onChangeTemplate,\n\t];\n}\n\n/**\n * This component provides the editor context and manages the state of the block editor.\n *\n * @param {Object}  props                                The component props.\n * @param {Object}  props.post                           The post object.\n * @param {Object}  props.settings                       The editor settings.\n * @param {boolean} props.recovery                       Indicates if the editor is in recovery mode.\n * @param {Array}   props.initialEdits                   The initial edits for the editor.\n * @param {Object}  props.children                       The child components.\n * @param {Object}  [props.BlockEditorProviderComponent] The block editor provider component to use. Defaults to ExperimentalBlockEditorProvider.\n * @param {Object}  [props.__unstableTemplate]           The template object.\n *\n * @example\n * ```jsx\n * <ExperimentalEditorProvider\n *   post={ post }\n *   settings={ settings }\n *   recovery={ recovery }\n *   initialEdits={ initialEdits }\n *   __unstableTemplate={ template }\n * >\n *   { children }\n * </ExperimentalEditorProvider>\n *\n * @return {Object} The rendered ExperimentalEditorProvider component.\n */\nexport const ExperimentalEditorProvider = withRegistryProvider(\n\t( {\n\t\tpost,\n\t\tsettings,\n\t\trecovery,\n\t\tinitialEdits,\n\t\tchildren,\n\t\tBlockEditorProviderComponent = ExperimentalBlockEditorProvider,\n\t\t__unstableTemplate: template,\n\t} ) => {\n\t\tconst { editorSettings, selection, isReady, mode } = useSelect(\n\t\t\t( select ) => {\n\t\t\t\tconst {\n\t\t\t\t\tgetEditorSettings,\n\t\t\t\t\tgetEditorSelection,\n\t\t\t\t\tgetRenderingMode,\n\t\t\t\t\t__unstableIsEditorReady,\n\t\t\t\t} = select( editorStore );\n\t\t\t\treturn {\n\t\t\t\t\teditorSettings: getEditorSettings(),\n\t\t\t\t\tisReady: __unstableIsEditorReady(),\n\t\t\t\t\tmode: getRenderingMode(),\n\t\t\t\t\tselection: getEditorSelection(),\n\t\t\t\t};\n\t\t\t},\n\t\t\t[]\n\t\t);\n\t\tconst shouldRenderTemplate = !! template && mode !== 'post-only';\n\t\tconst rootLevelPost = shouldRenderTemplate ? template : post;\n\t\tconst defaultBlockContext = useMemo( () => {\n\t\t\tconst postContext =\n\t\t\t\t! NON_CONTEXTUAL_POST_TYPES.includes( rootLevelPost.type ) ||\n\t\t\t\tshouldRenderTemplate\n\t\t\t\t\t? { postId: post.id, postType: post.type }\n\t\t\t\t\t: {};\n\n\t\t\treturn {\n\t\t\t\t...postContext,\n\t\t\t\ttemplateSlug:\n\t\t\t\t\trootLevelPost.type === 'wp_template'\n\t\t\t\t\t\t? rootLevelPost.slug\n\t\t\t\t\t\t: undefined,\n\t\t\t};\n\t\t}, [\n\t\t\tshouldRenderTemplate,\n\t\t\tpost.id,\n\t\t\tpost.type,\n\t\t\trootLevelPost.type,\n\t\t\trootLevelPost.slug,\n\t\t] );\n\t\tconst { id, type } = rootLevelPost;\n\t\tconst blockEditorSettings = useBlockEditorSettings(\n\t\t\teditorSettings,\n\t\t\ttype,\n\t\t\tid,\n\t\t\tmode\n\t\t);\n\t\tconst [ blocks, onInput, onChange ] = useBlockEditorProps(\n\t\t\tpost,\n\t\t\ttemplate,\n\t\t\tmode\n\t\t);\n\n\t\tconst {\n\t\t\tupdatePostLock,\n\t\t\tsetupEditor,\n\t\t\tupdateEditorSettings,\n\t\t\tsetCurrentTemplateId,\n\t\t\tsetEditedPost,\n\t\t\tsetRenderingMode,\n\t\t} = unlock( useDispatch( editorStore ) );\n\t\tconst { createWarningNotice } = useDispatch( noticesStore );\n\n\t\t// Ideally this should be synced on each change and not just something you do once.\n\t\tuseLayoutEffect( () => {\n\t\t\t// Assume that we don't need to initialize in the case of an error recovery.\n\t\t\tif ( recovery ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdatePostLock( settings.postLock );\n\t\t\tsetupEditor( post, initialEdits, settings.template );\n\t\t\tif ( settings.autosave ) {\n\t\t\t\tcreateWarningNotice(\n\t\t\t\t\t__(\n\t\t\t\t\t\t'There is an autosave of this post that is more recent than the version below.'\n\t\t\t\t\t),\n\t\t\t\t\t{\n\t\t\t\t\t\tid: 'autosave-exists',\n\t\t\t\t\t\tactions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: __( 'View the autosave' ),\n\t\t\t\t\t\t\t\turl: settings.autosave.editLink,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t}, [] );\n\n\t\t// Synchronizes the active post with the state\n\t\tuseEffect( () => {\n\t\t\tsetEditedPost( post.type, post.id );\n\t\t}, [ post.type, post.id, setEditedPost ] );\n\n\t\t// Synchronize the editor settings as they change.\n\t\tuseEffect( () => {\n\t\t\tupdateEditorSettings( settings );\n\t\t}, [ settings, updateEditorSettings ] );\n\n\t\t// Synchronizes the active template with the state.\n\t\tuseEffect( () => {\n\t\t\tsetCurrentTemplateId( template?.id );\n\t\t}, [ template?.id, setCurrentTemplateId ] );\n\n\t\t// Sets the right rendering mode when loading the editor.\n\t\tuseEffect( () => {\n\t\t\tsetRenderingMode( settings.defaultRenderingMode ?? 'post-only' );\n\t\t}, [ settings.defaultRenderingMode, setRenderingMode ] );\n\n\t\tuseHideBlocksFromInserter( post.type, mode );\n\n\t\t// Register the editor commands.\n\t\tuseCommands();\n\n\t\tif ( ! isReady ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn (\n\t\t\t<EntityProvider kind=\"root\" type=\"site\">\n\t\t\t\t<EntityProvider\n\t\t\t\t\tkind=\"postType\"\n\t\t\t\t\ttype={ post.type }\n\t\t\t\t\tid={ post.id }\n\t\t\t\t>\n\t\t\t\t\t<BlockContextProvider value={ defaultBlockContext }>\n\t\t\t\t\t\t<BlockEditorProviderComponent\n\t\t\t\t\t\t\tvalue={ blocks }\n\t\t\t\t\t\t\tonChange={ onChange }\n\t\t\t\t\t\t\tonInput={ onInput }\n\t\t\t\t\t\t\tselection={ selection }\n\t\t\t\t\t\t\tsettings={ blockEditorSettings }\n\t\t\t\t\t\t\tuseSubRegistry={ false }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ children }\n\t\t\t\t\t\t\t{ ! settings.__unstableIsPreviewMode && (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<PatternsMenuItems />\n\t\t\t\t\t\t\t\t\t<TemplatePartMenuItems />\n\t\t\t\t\t\t\t\t\t<ContentOnlySettingsMenu />\n\t\t\t\t\t\t\t\t\t{ mode === 'template-locked' && (\n\t\t\t\t\t\t\t\t\t\t<DisableNonPageContentBlocks />\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t{ type === 'wp_navigation' && (\n\t\t\t\t\t\t\t\t\t\t<NavigationBlockEditingMode />\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t<EditorKeyboardShortcuts />\n\t\t\t\t\t\t\t\t\t<KeyboardShortcutHelpModal />\n\t\t\t\t\t\t\t\t\t<BlockRemovalWarnings />\n\t\t\t\t\t\t\t\t\t<StartPageOptions />\n\t\t\t\t\t\t\t\t\t<StartTemplateOptions />\n\t\t\t\t\t\t\t\t\t<PatternRenameModal />\n\t\t\t\t\t\t\t\t\t<PatternDuplicateModal />\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</BlockEditorProviderComponent>\n\t\t\t\t\t</BlockContextProvider>\n\t\t\t\t</EntityProvider>\n\t\t\t</EntityProvider>\n\t\t);\n\t}\n);\n\n/**\n * This component establishes a new post editing context, and serves as the entry point for a new post editor (or post with template editor).\n *\n * It supports a large number of post types, including post, page, templates,\n * custom post types, patterns, template parts.\n *\n * All modification and changes are performed to the `@wordpress/core-data` store.\n *\n * @param {Object}  props                      The component props.\n * @param {Object}  [props.post]               The post object to edit. This is required.\n * @param {Object}  [props.__unstableTemplate] The template object wrapper the edited post.\n *                                             This is optional and can only be used when the post type supports templates (like posts and pages).\n * @param {Object}  [props.settings]           The settings object to use for the editor.\n *                                             This is optional and can be used to override the default settings.\n * @param {Element} [props.children]           Children elements for which the BlockEditorProvider context should apply.\n *                                             This is optional.\n *\n * @example\n * ```jsx\n * <EditorProvider\n *   post={ post }\n *   settings={ settings }\n *   __unstableTemplate={ template }\n * >\n *   { children }\n * </EditorProvider>\n * ```\n *\n * @return {JSX.Element} The rendered EditorProvider component.\n */\nexport function EditorProvider( props ) {\n\treturn (\n\t\t<ExperimentalEditorProvider\n\t\t\t{ ...props }\n\t\t\tBlockEditorProviderComponent={ BlockEditorProvider }\n\t\t>\n\t\t\t{ props.children }\n\t\t</ExperimentalEditorProvider>\n\t);\n}\n\nexport default EditorProvider;\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"serverSideRender\"];","// Block Creation Components.\n/**\n * WordPress dependencies\n */\nimport deprecated from '@wordpress/deprecated';\nimport { forwardRef } from '@wordpress/element';\nimport {\n\tAutocomplete as RootAutocomplete,\n\tAlignmentToolbar as RootAlignmentToolbar,\n\tBlockAlignmentToolbar as RootBlockAlignmentToolbar,\n\tBlockControls as RootBlockControls,\n\tBlockEdit as RootBlockEdit,\n\tBlockEditorKeyboardShortcuts as RootBlockEditorKeyboardShortcuts,\n\tBlockFormatControls as RootBlockFormatControls,\n\tBlockIcon as RootBlockIcon,\n\tBlockInspector as RootBlockInspector,\n\tBlockList as RootBlockList,\n\tBlockMover as RootBlockMover,\n\tBlockNavigationDropdown as RootBlockNavigationDropdown,\n\tBlockSelectionClearer as RootBlockSelectionClearer,\n\tBlockSettingsMenu as RootBlockSettingsMenu,\n\tBlockTitle as RootBlockTitle,\n\tBlockToolbar as RootBlockToolbar,\n\tColorPalette as RootColorPalette,\n\tContrastChecker as RootContrastChecker,\n\tCopyHandler as RootCopyHandler,\n\tcreateCustomColorsHOC as rootCreateCustomColorsHOC,\n\tDefaultBlockAppender as RootDefaultBlockAppender,\n\tFontSizePicker as RootFontSizePicker,\n\tgetColorClassName as rootGetColorClassName,\n\tgetColorObjectByAttributeValues as rootGetColorObjectByAttributeValues,\n\tgetColorObjectByColorValue as rootGetColorObjectByColorValue,\n\tgetFontSize as rootGetFontSize,\n\tgetFontSizeClass as rootGetFontSizeClass,\n\tInserter as RootInserter,\n\tInnerBlocks as RootInnerBlocks,\n\tInspectorAdvancedControls as RootInspectorAdvancedControls,\n\tInspectorControls as RootInspectorControls,\n\tPanelColorSettings as RootPanelColorSettings,\n\tPlainText as RootPlainText,\n\tRichText as RootRichText,\n\tRichTextShortcut as RootRichTextShortcut,\n\tRichTextToolbarButton as RootRichTextToolbarButton,\n\t__unstableRichTextInputEvent as __unstableRootRichTextInputEvent,\n\tMediaPlaceholder as RootMediaPlaceholder,\n\tMediaUpload as RootMediaUpload,\n\tMediaUploadCheck as RootMediaUploadCheck,\n\tMultiSelectScrollIntoView as RootMultiSelectScrollIntoView,\n\tNavigableToolbar as RootNavigableToolbar,\n\tObserveTyping as RootObserveTyping,\n\tSkipToSelectedBlock as RootSkipToSelectedBlock,\n\tURLInput as RootURLInput,\n\tURLInputButton as RootURLInputButton,\n\tURLPopover as RootURLPopover,\n\tWarning as RootWarning,\n\tWritingFlow as RootWritingFlow,\n\twithColorContext as rootWithColorContext,\n\twithColors as rootWithColors,\n\twithFontSizes as rootWithFontSizes,\n} from '@wordpress/block-editor';\n\nexport { default as ServerSideRender } from '@wordpress/server-side-render';\n\nfunction deprecateComponent( name, Wrapped, staticsToHoist = [] ) {\n\tconst Component = forwardRef( ( props, ref ) => {\n\t\tdeprecated( 'wp.editor.' + name, {\n\t\t\tsince: '5.3',\n\t\t\talternative: 'wp.blockEditor.' + name,\n\t\t\tversion: '6.2',\n\t\t} );\n\n\t\treturn <Wrapped ref={ ref } { ...props } />;\n\t} );\n\n\tstaticsToHoist.forEach( ( staticName ) => {\n\t\tComponent[ staticName ] = deprecateComponent(\n\t\t\tname + '.' + staticName,\n\t\t\tWrapped[ staticName ]\n\t\t);\n\t} );\n\n\treturn Component;\n}\n\nfunction deprecateFunction( name, func ) {\n\treturn ( ...args ) => {\n\t\tdeprecated( 'wp.editor.' + name, {\n\t\t\tsince: '5.3',\n\t\t\talternative: 'wp.blockEditor.' + name,\n\t\t\tversion: '6.2',\n\t\t} );\n\n\t\treturn func( ...args );\n\t};\n}\n\n/**\n * @deprecated since 5.3, use `wp.blockEditor.RichText` instead.\n */\nconst RichText = deprecateComponent( 'RichText', RootRichText, [ 'Content' ] );\nRichText.isEmpty = deprecateFunction(\n\t'RichText.isEmpty',\n\tRootRichText.isEmpty\n);\n\nexport { RichText };\n\n/**\n * @deprecated since 5.3, use `wp.blockEditor.Autocomplete` instead.\n */\nexport const Autocomplete = deprecateComponent(\n\t'Autocomplete',\n\tRootAutocomplete\n);\n/**\n * @deprecated since 5.3, use `wp.blockEditor.AlignmentToolbar` instead.\n */\nexport const AlignmentToolbar = deprecateComponent(\n\t'AlignmentToolbar',\n\tRootAlignmentToolbar\n);\n/**\n * @deprecated since 5.3, use `wp.blockEditor.BlockAlignmentToolbar` instead.\n */\nexport const BlockAlignmentToolbar = deprecateComponent(\n\t'BlockAlignmentToolbar',\n\tRootBlockAlignmentToolbar\n);\n/**\n * @deprecated since 5.3, use `wp.blockEditor.BlockControls` instead.\n */\nexport const BlockControls = deprecateComponent(\n\t'BlockControls',\n\tRootBlockControls,\n\t[ 'Slot' ]\n);\n/**\n * @deprecated since 5.3, use `wp.blockEditor.BlockEdit` instead.\n */\nexport const BlockEdit = deprecateComponent( 'BlockEdit', RootBlockEdit );\n/**\n * @deprecated since 5.3, use `wp.blockEditor.BlockEditorKeyboardShortcuts` instead.\n */\nexport const BlockEditorKeyboardShortcuts = deprecateComponent(\n\t'BlockEditorKeyboardShortcuts',\n\tRootBlockEditorKeyboardShortcuts\n);\n/**\n * @deprecated since 5.3, use `wp.blockEditor.BlockFormatControls` instead.\n */\nexport const BlockFormatControls = deprecateComponent(\n\t'BlockFormatControls',\n\tRootBlockFormatControls,\n\t[ 'Slot' ]\n);\n/**\n * @deprecated since 5.3, use `wp.blockEditor.BlockIcon` instead.\n */\nexport const BlockIcon = deprecateComponent( 'BlockIcon', RootBlockIcon );\n/**\n * @deprecated since 5.3, use `wp.blockEditor.BlockInspector` instead.\n */\nexport const BlockInspector = deprecateComponent(\n\t'BlockInspector',\n\tRootBlockInspector\n);\n/**\n * @deprecated since 5.3, use `wp.blockEditor.BlockList` instead.\n */\nexport const BlockList = deprecateComponent( 'BlockList', RootBlockList );\n/**\n * @deprecated since 5.3, use `wp.blockEditor.BlockMover` instead.\n */\nexport const BlockMover = deprecateComponent( 'BlockMover', RootBlockMover );\n/**\n * @deprecated since 5.3, use `wp.blockEditor.BlockNavigationDropdown` instead.\n */\nexport const BlockNavigationDropdown = deprecateComponent(\n\t'BlockNavigationDropdown',\n\tRootBlockNavigationDropdown\n);\n/**\n * @deprecated since 5.3, use `wp.blockEditor.BlockSelectionClearer` instead.\n */\nexport const BlockSelectionClearer = deprecateComponent(\n\t'BlockSelectionClearer',\n\tRootBlockSelectionClearer\n);\n/**\n * @deprecated since 5.3, use `wp.blockEditor.BlockSettingsMenu` instead.\n */\nexport const BlockSettingsMenu = deprecateComponent(\n\t'BlockSettingsMenu',\n\tRootBlockSettingsMenu\n);\n/**\n * @deprecated since 5.3, use `wp.blockEditor.BlockTitle` instead.\n */\nexport const BlockTitle = deprecateComponent( 'BlockTitle', RootBlockTitle );\n/**\n * @deprecated since 5.3, use `wp.blockEditor.BlockToolbar` instead.\n */\nexport const BlockToolbar = deprecateComponent(\n\t'BlockToolbar',\n\tRootBlockToolbar\n);\n/**\n * @deprecated since 5.3, use `wp.blockEditor.ColorPalette` instead.\n */\nexport const ColorPalette = deprecateComponent(\n\t'ColorPalette',\n\tRootColorPalette\n);\n/**\n * @deprecated since 5.3, use `wp.blockEditor.ContrastChecker` instead.\n */\nexport const ContrastChecker = deprecateComponent(\n\t'ContrastChecker',\n\tRootContrastChecker\n);\n/**\n * @deprecated since 5.3, use `wp.blockEditor.CopyHandler` instead.\n */\nexport const CopyHandler = deprecateComponent( 'CopyHandler', RootCopyHandler );\n/**\n * @deprecated since 5.3, use `wp.blockEditor.DefaultBlockAppender` instead.\n */\nexport const DefaultBlockAppender = deprecateComponent(\n\t'DefaultBlockAppender',\n\tRootDefaultBlockAppender\n);\n/**\n * @deprecated since 5.3, use `wp.blockEditor.FontSizePicker` instead.\n */\nexport const FontSizePicker = deprecateComponent(\n\t'FontSizePicker',\n\tRootFontSizePicker\n);\n/**\n * @deprecated since 5.3, use `wp.blockEditor.Inserter` instead.\n */\nexport const Inserter = deprecateComponent( 'Inserter', RootInserter );\n/**\n * @deprecated since 5.3, use `wp.blockEditor.InnerBlocks` instead.\n */\nexport const InnerBlocks = deprecateComponent( 'InnerBlocks', RootInnerBlocks, [\n\t'ButtonBlockAppender',\n\t'DefaultBlockAppender',\n\t'Content',\n] );\n/**\n * @deprecated since 5.3, use `wp.blockEditor.InspectorAdvancedControls` instead.\n */\nexport const InspectorAdvancedControls = deprecateComponent(\n\t'InspectorAdvancedControls',\n\tRootInspectorAdvancedControls,\n\t[ 'Slot' ]\n);\n/**\n * @deprecated since 5.3, use `wp.blockEditor.InspectorControls` instead.\n */\nexport const InspectorControls = deprecateComponent(\n\t'InspectorControls',\n\tRootInspectorControls,\n\t[ 'Slot' ]\n);\n/**\n * @deprecated since 5.3, use `wp.blockEditor.PanelColorSettings` instead.\n */\nexport const PanelColorSettings = deprecateComponent(\n\t'PanelColorSettings',\n\tRootPanelColorSettings\n);\n/**\n * @deprecated since 5.3, use `wp.blockEditor.PlainText` instead.\n */\nexport const PlainText = deprecateComponent( 'PlainText', RootPlainText );\n/**\n * @deprecated since 5.3, use `wp.blockEditor.RichTextShortcut` instead.\n */\nexport const RichTextShortcut = deprecateComponent(\n\t'RichTextShortcut',\n\tRootRichTextShortcut\n);\n/**\n * @deprecated since 5.3, use `wp.blockEditor.RichTextToolbarButton` instead.\n */\nexport const RichTextToolbarButton = deprecateComponent(\n\t'RichTextToolbarButton',\n\tRootRichTextToolbarButton\n);\n/**\n * @deprecated since 5.3, use `wp.blockEditor.__unstableRichTextInputEvent` instead.\n */\nexport const __unstableRichTextInputEvent = deprecateComponent(\n\t'__unstableRichTextInputEvent',\n\t__unstableRootRichTextInputEvent\n);\n/**\n * @deprecated since 5.3, use `wp.blockEditor.MediaPlaceholder` instead.\n */\nexport const MediaPlaceholder = deprecateComponent(\n\t'MediaPlaceholder',\n\tRootMediaPlaceholder\n);\n/**\n * @deprecated since 5.3, use `wp.blockEditor.MediaUpload` instead.\n */\nexport const MediaUpload = deprecateComponent( 'MediaUpload', RootMediaUpload );\n/**\n * @deprecated since 5.3, use `wp.blockEditor.MediaUploadCheck` instead.\n */\nexport const MediaUploadCheck = deprecateComponent(\n\t'MediaUploadCheck',\n\tRootMediaUploadCheck\n);\n/**\n * @deprecated since 5.3, use `wp.blockEditor.MultiSelectScrollIntoView` instead.\n */\nexport const MultiSelectScrollIntoView = deprecateComponent(\n\t'MultiSelectScrollIntoView',\n\tRootMultiSelectScrollIntoView\n);\n/**\n * @deprecated since 5.3, use `wp.blockEditor.NavigableToolbar` instead.\n */\nexport const NavigableToolbar = deprecateComponent(\n\t'NavigableToolbar',\n\tRootNavigableToolbar\n);\n/**\n * @deprecated since 5.3, use `wp.blockEditor.ObserveTyping` instead.\n */\nexport const ObserveTyping = deprecateComponent(\n\t'ObserveTyping',\n\tRootObserveTyping\n);\n/**\n * @deprecated since 5.3, use `wp.blockEditor.SkipToSelectedBlock` instead.\n */\nexport const SkipToSelectedBlock = deprecateComponent(\n\t'SkipToSelectedBlock',\n\tRootSkipToSelectedBlock\n);\n/**\n * @deprecated since 5.3, use `wp.blockEditor.URLInput` instead.\n */\nexport const URLInput = deprecateComponent( 'URLInput', RootURLInput );\n/**\n * @deprecated since 5.3, use `wp.blockEditor.URLInputButton` instead.\n */\nexport const URLInputButton = deprecateComponent(\n\t'URLInputButton',\n\tRootURLInputButton\n);\n/**\n * @deprecated since 5.3, use `wp.blockEditor.URLPopover` instead.\n */\nexport const URLPopover = deprecateComponent( 'URLPopover', RootURLPopover );\n/**\n * @deprecated since 5.3, use `wp.blockEditor.Warning` instead.\n */\nexport const Warning = deprecateComponent( 'Warning', RootWarning );\n/**\n * @deprecated since 5.3, use `wp.blockEditor.WritingFlow` instead.\n */\nexport const WritingFlow = deprecateComponent( 'WritingFlow', RootWritingFlow );\n\n/**\n * @deprecated since 5.3, use `wp.blockEditor.createCustomColorsHOC` instead.\n */\nexport const createCustomColorsHOC = deprecateFunction(\n\t'createCustomColorsHOC',\n\trootCreateCustomColorsHOC\n);\n/**\n * @deprecated since 5.3, use `wp.blockEditor.getColorClassName` instead.\n */\nexport const getColorClassName = deprecateFunction(\n\t'getColorClassName',\n\trootGetColorClassName\n);\n/**\n * @deprecated since 5.3, use `wp.blockEditor.getColorObjectByAttributeValues` instead.\n */\nexport const getColorObjectByAttributeValues = deprecateFunction(\n\t'getColorObjectByAttributeValues',\n\trootGetColorObjectByAttributeValues\n);\n/**\n * @deprecated since 5.3, use `wp.blockEditor.getColorObjectByColorValue` instead.\n */\nexport const getColorObjectByColorValue = deprecateFunction(\n\t'getColorObjectByColorValue',\n\trootGetColorObjectByColorValue\n);\n/**\n * @deprecated since 5.3, use `wp.blockEditor.getFontSize` instead.\n */\nexport const getFontSize = deprecateFunction( 'getFontSize', rootGetFontSize );\n/**\n * @deprecated since 5.3, use `wp.blockEditor.getFontSizeClass` instead.\n */\nexport const getFontSizeClass = deprecateFunction(\n\t'getFontSizeClass',\n\trootGetFontSizeClass\n);\n/**\n * @deprecated since 5.3, use `wp.blockEditor.createCustomColorsHOC` instead.\n */\nexport const withColorContext = deprecateFunction(\n\t'withColorContext',\n\trootWithColorContext\n);\n/**\n * @deprecated since 5.3, use `wp.blockEditor.withColors` instead.\n */\nexport const withColors = deprecateFunction( 'withColors', rootWithColors );\n/**\n * @deprecated since 5.3, use `wp.blockEditor.withFontSizes` instead.\n */\nexport const withFontSizes = deprecateFunction(\n\t'withFontSizes',\n\trootWithFontSizes\n);\n","/**\n * Internal dependencies\n */\nimport EditorKeyboardShortcuts from './global-keyboard-shortcuts';\n\n// Block Creation Components.\nexport * from './autocompleters';\n\n// Post Related Components.\nexport { default as AutosaveMonitor } from './autosave-monitor';\nexport { default as DocumentBar } from './document-bar';\nexport { default as DocumentOutline } from './document-outline';\nexport { default as DocumentOutlineCheck } from './document-outline/check';\nexport { EditorKeyboardShortcuts };\nexport { default as EditorKeyboardShortcutsRegister } from './global-keyboard-shortcuts/register-shortcuts';\nexport { default as EditorHistoryRedo } from './editor-history/redo';\nexport { default as EditorHistoryUndo } from './editor-history/undo';\nexport { default as EditorNotices } from './editor-notices';\nexport { default as EditorSnackbars } from './editor-snackbars';\nexport { default as EntitiesSavedStates } from './entities-saved-states';\nexport { useIsDirty as useEntitiesSavedStatesIsDirty } from './entities-saved-states/hooks/use-is-dirty';\nexport { default as ErrorBoundary } from './error-boundary';\nexport { default as LocalAutosaveMonitor } from './local-autosave-monitor';\nexport { default as PageAttributesCheck } from './page-attributes/check';\nexport { default as PageAttributesOrder } from './page-attributes/order';\nexport { default as PageAttributesPanel } from './page-attributes/panel';\nexport { default as PageAttributesParent } from './page-attributes/parent';\nexport { default as PageTemplate } from './post-template/classic-theme';\nexport { default as PluginDocumentSettingPanel } from './plugin-document-setting-panel';\nexport { default as PluginBlockSettingsMenuItem } from './block-settings-menu/plugin-block-settings-menu-item';\nexport { default as PluginMoreMenuItem } from './plugin-more-menu-item';\nexport { default as PluginPostPublishPanel } from './plugin-post-publish-panel';\nexport { default as PluginPostStatusInfo } from './plugin-post-status-info';\nexport { default as PluginPrePublishPanel } from './plugin-pre-publish-panel';\nexport { default as PluginSidebar } from './plugin-sidebar';\nexport { default as PluginSidebarMoreMenuItem } from './plugin-sidebar-more-menu-item';\nexport { default as PostTemplatePanel } from './post-template/panel';\nexport { default as PostAuthor } from './post-author';\nexport { default as PostAuthorCheck } from './post-author/check';\nexport { default as PostAuthorPanel } from './post-author/panel';\nexport { default as PostComments } from './post-comments';\nexport { default as PostDiscussionPanel } from './post-discussion/panel';\nexport { default as PostExcerpt } from './post-excerpt';\nexport { default as PostExcerptCheck } from './post-excerpt/check';\nexport { default as PostExcerptPanel } from './post-excerpt/panel';\nexport { default as PostFeaturedImage } from './post-featured-image';\nexport { default as PostFeaturedImageCheck } from './post-featured-image/check';\nexport { default as PostFeaturedImagePanel } from './post-featured-image/panel';\nexport { default as PostFormat } from './post-format';\nexport { default as PostFormatCheck } from './post-format/check';\nexport { default as PostLastRevision } from './post-last-revision';\nexport { default as PostLastRevisionCheck } from './post-last-revision/check';\nexport { default as PostLastRevisionPanel } from './post-last-revision/panel';\nexport { default as PostLockedModal } from './post-locked-modal';\nexport { default as PostPendingStatus } from './post-pending-status';\nexport { default as PostPendingStatusCheck } from './post-pending-status/check';\nexport { default as PostPingbacks } from './post-pingbacks';\nexport { default as PostPreviewButton } from './post-preview-button';\nexport { default as PostPublishButton } from './post-publish-button';\nexport { default as PostPublishButtonLabel } from './post-publish-button/label';\nexport { default as PostPublishPanel } from './post-publish-panel';\nexport { default as PostSavedState } from './post-saved-state';\nexport { default as PostSchedule } from './post-schedule';\nexport { default as PostScheduleCheck } from './post-schedule/check';\nexport {\n\tdefault as PostScheduleLabel,\n\tusePostScheduleLabel,\n} from './post-schedule/label';\nexport { default as PostSchedulePanel } from './post-schedule/panel';\nexport { default as PostSlug } from './post-slug';\nexport { default as PostSlugCheck } from './post-slug/check';\nexport { default as PostSticky } from './post-sticky';\nexport { default as PostStickyCheck } from './post-sticky/check';\nexport { default as PostSwitchToDraftButton } from './post-switch-to-draft-button';\nexport { default as PostSyncStatus } from './post-sync-status';\nexport { default as PostTaxonomies } from './post-taxonomies';\nexport { FlatTermSelector as PostTaxonomiesFlatTermSelector } from './post-taxonomies/flat-term-selector';\nexport { HierarchicalTermSelector as PostTaxonomiesHierarchicalTermSelector } from './post-taxonomies/hierarchical-term-selector';\nexport { default as PostTaxonomiesCheck } from './post-taxonomies/check';\nexport { default as PostTaxonomiesPanel } from './post-taxonomies/panel';\nexport { default as PostTextEditor } from './post-text-editor';\nexport { default as PostTitle } from './post-title';\nexport { default as PostTitleRaw } from './post-title/post-title-raw';\nexport { default as PostTrash } from './post-trash';\nexport { default as PostTrashCheck } from './post-trash/check';\nexport { default as PostTypeSupportCheck } from './post-type-support-check';\nexport { default as PostURL } from './post-url';\nexport { default as PostURLCheck } from './post-url/check';\nexport { default as PostURLLabel, usePostURLLabel } from './post-url/label';\nexport { default as PostURLPanel } from './post-url/panel';\nexport { default as PostVisibility } from './post-visibility';\nexport {\n\tdefault as PostVisibilityLabel,\n\tusePostVisibilityLabel,\n} from './post-visibility/label';\nexport { default as PostVisibilityCheck } from './post-visibility/check';\nexport { default as TableOfContents } from './table-of-contents';\nexport { default as ThemeSupportCheck } from './theme-support-check';\nexport { default as UnsavedChangesWarning } from './unsaved-changes-warning';\nexport { default as WordCount } from './word-count';\nexport { default as TimeToRead } from './time-to-read';\nexport { default as CharacterCount } from './character-count';\n\n// State Related Components.\nexport { default as EditorProvider } from './provider';\n\nexport * from './deprecated';\n\n/**\n * Handles the keyboard shortcuts for the editor.\n *\n * It provides functionality for various keyboard shortcuts such as toggling editor mode,\n * toggling distraction-free mode, undo/redo, saving the post, toggling list view,\n * and toggling the sidebar.\n */\nexport const VisualEditorGlobalKeyboardShortcuts = EditorKeyboardShortcuts;\n\n/**\n * Handles the keyboard shortcuts for the editor.\n *\n * It provides functionality for various keyboard shortcuts such as toggling editor mode,\n * toggling distraction-free mode, undo/redo, saving the post, toggling list view,\n * and toggling the sidebar.\n */\nexport const TextEditorGlobalKeyboardShortcuts = EditorKeyboardShortcuts;\n","/**\n * WordPress dependencies\n */\nimport { cleanForSlug as urlCleanForSlug } from '@wordpress/url';\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Performs some basic cleanup of a string for use as a post slug\n *\n * This replicates some of what sanitize_title() does in WordPress core, but\n * is only designed to approximate what the slug will be.\n *\n * Converts Latin-1 Supplement and Latin Extended-A letters to basic Latin letters.\n * Removes combining diacritical marks. Converts whitespace, periods,\n * and forward slashes to hyphens. Removes any remaining non-word characters\n * except hyphens and underscores. Converts remaining string to lowercase.\n * It does not account for octets, HTML entities, or other encoded characters.\n *\n * @param {string} string Title or slug to be processed\n *\n * @return {string} Processed string\n */\nexport function cleanForSlug( string ) {\n\tdeprecated( 'wp.editor.cleanForSlug', {\n\t\tsince: '12.7',\n\t\tplugin: 'Gutenberg',\n\t\talternative: 'wp.url.cleanForSlug',\n\t} );\n\treturn urlCleanForSlug( string );\n}\n","/**\n * WordPress dependencies\n */\nimport { privateApis as componentsPrivateApis } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport { unlock } from '../../lock-unlock';\n\nconst { createPrivateSlotFill } = unlock( componentsPrivateApis );\nconst SLOT_FILL_NAME = 'EditCanvasContainerSlot';\nconst EditorContentSlotFill = createPrivateSlotFill( SLOT_FILL_NAME );\n\nexport default EditorContentSlotFill;\n","/**\n * WordPress dependencies\n */\nimport {\n\t__experimentalUseSlotFills as useSlotFills,\n\tcreateSlotFill,\n} from '@wordpress/components';\n\n// Keeping an old name for backward compatibility.\nconst slotName = '__experimentalMainDashboardButton';\n\nconst { Fill, Slot } = createSlotFill( slotName );\n\nconst BackButton = Fill;\nconst BackButtonSlot = ( { children } ) => {\n\tconst fills = useSlotFills( slotName );\n\tconst hasFills = Boolean( fills && fills.length );\n\n\tif ( ! hasFills ) {\n\t\treturn children;\n\t}\n\n\treturn (\n\t\t<Slot\n\t\t\tbubblesVirtually\n\t\t\tfillProps={ { length: ! fills ? 0 : fills.length } }\n\t\t/>\n\t);\n};\nBackButton.Slot = BackButtonSlot;\n\nexport default BackButton;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst next = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M6.6 6L5.4 7l4.5 5-4.5 5 1.1 1 5.5-6-5.4-6zm6 0l-1.1 1 4.5 5-4.5 5 1.1 1 5.5-6-5.5-6z\" />\n\t</SVG>\n);\n\nexport default next;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst previous = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M11.6 7l-1.1-1L5 12l5.5 6 1.1-1L7 12l4.6-5zm6 0l-1.1-1-5.5 6 5.5 6 1.1-1-4.6-5 4.6-5z\" />\n\t</SVG>\n);\n\nexport default previous;\n","/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tBlockToolbar,\n\tstore as blockEditorStore,\n\tprivateApis as blockEditorPrivateApis,\n} from '@wordpress/block-editor';\nimport { useEffect } from '@wordpress/element';\nimport { Button, Popover } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { next, previous } from '@wordpress/icons';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { unlock } from '../../lock-unlock';\n\nconst { useHasBlockToolbar } = unlock( blockEditorPrivateApis );\n\nfunction CollapsableBlockToolbar( { isCollapsed, onToggle } ) {\n\tconst { blockSelectionStart } = useSelect( ( select ) => {\n\t\treturn {\n\t\t\tblockSelectionStart:\n\t\t\t\tselect( blockEditorStore ).getBlockSelectionStart(),\n\t\t};\n\t}, [] );\n\tconst hasBlockToolbar = useHasBlockToolbar();\n\n\tconst hasBlockSelection = !! blockSelectionStart;\n\n\tuseEffect( () => {\n\t\t// If we have a new block selection, show the block tools\n\t\tif ( blockSelectionStart ) {\n\t\t\tonToggle( false );\n\t\t}\n\t}, [ blockSelectionStart, onToggle ] );\n\n\tif ( ! hasBlockToolbar ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div\n\t\t\t\tclassName={ clsx( 'editor-collapsible-block-toolbar', {\n\t\t\t\t\t'is-collapsed': isCollapsed || ! hasBlockSelection,\n\t\t\t\t} ) }\n\t\t\t>\n\t\t\t\t<BlockToolbar hideDragHandle />\n\t\t\t</div>\n\t\t\t<Popover.Slot name=\"block-toolbar\" />\n\n\t\t\t<Button\n\t\t\t\tclassName=\"editor-collapsible-block-toolbar__toggle\"\n\t\t\t\ticon={ isCollapsed ? next : previous }\n\t\t\t\tonClick={ () => {\n\t\t\t\t\tonToggle( ! isCollapsed );\n\t\t\t\t} }\n\t\t\t\tlabel={\n\t\t\t\t\tisCollapsed\n\t\t\t\t\t\t? __( 'Show block tools' )\n\t\t\t\t\t\t: __( 'Hide block tools' )\n\t\t\t\t}\n\t\t\t\tsize=\"compact\"\n\t\t\t/>\n\t\t</>\n\t);\n}\n\nexport default CollapsableBlockToolbar;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst plus = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M11 12.5V17.5H12.5V12.5H17.5V11H12.5V6H11V11H6V12.5H11Z\" />\n\t</SVG>\n);\n\nexport default plus;\n","/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * WordPress dependencies\n */\nimport { useViewportMatch } from '@wordpress/compose';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { __, _x } from '@wordpress/i18n';\nimport {\n\tNavigableToolbar,\n\tToolSelector,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\nimport { Button, ToolbarItem } from '@wordpress/components';\nimport { listView, plus } from '@wordpress/icons';\nimport { useCallback } from '@wordpress/element';\nimport { store as keyboardShortcutsStore } from '@wordpress/keyboard-shortcuts';\nimport { store as preferencesStore } from '@wordpress/preferences';\n\n/**\n * Internal dependencies\n */\nimport { unlock } from '../../lock-unlock';\nimport { store as editorStore } from '../../store';\nimport EditorHistoryRedo from '../editor-history/redo';\nimport EditorHistoryUndo from '../editor-history/undo';\n\nfunction DocumentTools( { className, disableBlockTools = false } ) {\n\tconst { setIsInserterOpened, setIsListViewOpened } =\n\t\tuseDispatch( editorStore );\n\tconst {\n\t\tisDistractionFree,\n\t\tisInserterOpened,\n\t\tisListViewOpen,\n\t\tlistViewShortcut,\n\t\tinserterSidebarToggleRef,\n\t\tlistViewToggleRef,\n\t\thasFixedToolbar,\n\t\tshowIconLabels,\n\t} = useSelect( ( select ) => {\n\t\tconst { getSettings } = select( blockEditorStore );\n\t\tconst { get } = select( preferencesStore );\n\t\tconst {\n\t\t\tisListViewOpened,\n\t\t\tgetEditorMode,\n\t\t\tgetInserterSidebarToggleRef,\n\t\t\tgetListViewToggleRef,\n\t\t} = unlock( select( editorStore ) );\n\t\tconst { getShortcutRepresentation } = select( keyboardShortcutsStore );\n\t\tconst { __unstableGetEditorMode } = select( blockEditorStore );\n\n\t\treturn {\n\t\t\tisInserterOpened: select( editorStore ).isInserterOpened(),\n\t\t\tisListViewOpen: isListViewOpened(),\n\t\t\tlistViewShortcut: getShortcutRepresentation(\n\t\t\t\t'core/editor/toggle-list-view'\n\t\t\t),\n\t\t\tinserterSidebarToggleRef: getInserterSidebarToggleRef(),\n\t\t\tlistViewToggleRef: getListViewToggleRef(),\n\t\t\thasFixedToolbar: getSettings().hasFixedToolbar,\n\t\t\tshowIconLabels: get( 'core', 'showIconLabels' ),\n\t\t\tisDistractionFree: get( 'core', 'distractionFree' ),\n\t\t\tisVisualMode: getEditorMode() === 'visual',\n\t\t\tisZoomedOutView: __unstableGetEditorMode() === 'zoom-out',\n\t\t};\n\t}, [] );\n\n\tconst preventDefault = ( event ) => {\n\t\t// Because the inserter behaves like a dialog,\n\t\t// if the inserter is opened already then when we click on the toggle button\n\t\t// then the initial click event will close the inserter and then be propagated\n\t\t// to the inserter toggle and it will open it again.\n\t\t// To prevent this we need to stop the propagation of the event.\n\t\t// This won't be necessary when the inserter no longer behaves like a dialog.\n\n\t\tif ( isInserterOpened ) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t};\n\n\tconst isLargeViewport = useViewportMatch( 'medium' );\n\tconst isWideViewport = useViewportMatch( 'wide' );\n\n\t/* translators: accessibility text for the editor toolbar */\n\tconst toolbarAriaLabel = __( 'Document tools' );\n\n\tconst toggleListView = useCallback(\n\t\t() => setIsListViewOpened( ! isListViewOpen ),\n\t\t[ setIsListViewOpened, isListViewOpen ]\n\t);\n\n\tconst toggleInserter = useCallback(\n\t\t() => setIsInserterOpened( ! isInserterOpened ),\n\t\t[ isInserterOpened, setIsInserterOpened ]\n\t);\n\n\t/* translators: button label text should, if possible, be under 16 characters. */\n\tconst longLabel = _x(\n\t\t'Toggle block inserter',\n\t\t'Generic label for block inserter button'\n\t);\n\tconst shortLabel = ! isInserterOpened ? __( 'Add' ) : __( 'Close' );\n\n\treturn (\n\t\t// Some plugins expect and use the `edit-post-header-toolbar` CSS class to\n\t\t// find the toolbar and inject UI elements into it. This is not officially\n\t\t// supported, but we're keeping it in the list of class names for backwards\n\t\t// compatibility.\n\t\t<NavigableToolbar\n\t\t\tclassName={ clsx(\n\t\t\t\t'editor-document-tools',\n\t\t\t\t'edit-post-header-toolbar',\n\t\t\t\tclassName\n\t\t\t) }\n\t\t\taria-label={ toolbarAriaLabel }\n\t\t\tvariant=\"unstyled\"\n\t\t>\n\t\t\t<div className=\"editor-document-tools__left\">\n\t\t\t\t{ ! isDistractionFree && (\n\t\t\t\t\t<ToolbarItem\n\t\t\t\t\t\tref={ inserterSidebarToggleRef }\n\t\t\t\t\t\tas={ Button }\n\t\t\t\t\t\tclassName=\"editor-document-tools__inserter-toggle\"\n\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\tisPressed={ isInserterOpened }\n\t\t\t\t\t\tonMouseDown={ preventDefault }\n\t\t\t\t\t\tonClick={ toggleInserter }\n\t\t\t\t\t\tdisabled={ disableBlockTools }\n\t\t\t\t\t\ticon={ plus }\n\t\t\t\t\t\tlabel={ showIconLabels ? shortLabel : longLabel }\n\t\t\t\t\t\tshowTooltip={ ! showIconLabels }\n\t\t\t\t\t\taria-expanded={ isInserterOpened }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t{ ( isWideViewport || ! showIconLabels ) && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{ isLargeViewport && ! hasFixedToolbar && (\n\t\t\t\t\t\t\t<ToolbarItem\n\t\t\t\t\t\t\t\tas={ ToolSelector }\n\t\t\t\t\t\t\t\tshowTooltip={ ! showIconLabels }\n\t\t\t\t\t\t\t\tvariant={\n\t\t\t\t\t\t\t\t\tshowIconLabels ? 'tertiary' : undefined\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdisabled={ disableBlockTools }\n\t\t\t\t\t\t\t\tsize=\"compact\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t<ToolbarItem\n\t\t\t\t\t\t\tas={ EditorHistoryUndo }\n\t\t\t\t\t\t\tshowTooltip={ ! showIconLabels }\n\t\t\t\t\t\t\tvariant={ showIconLabels ? 'tertiary' : undefined }\n\t\t\t\t\t\t\tsize=\"compact\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ToolbarItem\n\t\t\t\t\t\t\tas={ EditorHistoryRedo }\n\t\t\t\t\t\t\tshowTooltip={ ! showIconLabels }\n\t\t\t\t\t\t\tvariant={ showIconLabels ? 'tertiary' : undefined }\n\t\t\t\t\t\t\tsize=\"compact\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{ ! isDistractionFree && (\n\t\t\t\t\t\t\t<ToolbarItem\n\t\t\t\t\t\t\t\tas={ Button }\n\t\t\t\t\t\t\t\tclassName=\"editor-document-tools__document-overview-toggle\"\n\t\t\t\t\t\t\t\ticon={ listView }\n\t\t\t\t\t\t\t\tdisabled={ disableBlockTools }\n\t\t\t\t\t\t\t\tisPressed={ isListViewOpen }\n\t\t\t\t\t\t\t\t/* translators: button label text should, if possible, be under 16 characters. */\n\t\t\t\t\t\t\t\tlabel={ __( 'Document Overview' ) }\n\t\t\t\t\t\t\t\tonClick={ toggleListView }\n\t\t\t\t\t\t\t\tshortcut={ listViewShortcut }\n\t\t\t\t\t\t\t\tshowTooltip={ ! showIconLabels }\n\t\t\t\t\t\t\t\tvariant={\n\t\t\t\t\t\t\t\t\tshowIconLabels ? 'tertiary' : undefined\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\taria-expanded={ isListViewOpen }\n\t\t\t\t\t\t\t\tref={ listViewToggleRef }\n\t\t\t\t\t\t\t\tsize=\"compact\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</>\n\t\t\t\t) }\n\t\t\t</div>\n\t\t</NavigableToolbar>\n\t);\n}\n\nexport default DocumentTools;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst moreVertical = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M13 19h-2v-2h2v2zm0-6h-2v-2h2v2zm0-6h-2V5h2v2z\" />\n\t</SVG>\n);\n\nexport default moreVertical;\n","/**\n * WordPress dependencies\n */\nimport { MenuItem } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\nimport { useCopyToClipboard } from '@wordpress/compose';\nimport { store as noticesStore } from '@wordpress/notices';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { __unstableSerializeAndClean } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nexport default function CopyContentMenuItem() {\n\tconst { createNotice } = useDispatch( noticesStore );\n\tconst { getCurrentPostId, getCurrentPostType } = useSelect( editorStore );\n\tconst { getEditedEntityRecord } = useSelect( coreStore );\n\n\tfunction getText() {\n\t\tconst record = getEditedEntityRecord(\n\t\t\t'postType',\n\t\t\tgetCurrentPostType(),\n\t\t\tgetCurrentPostId()\n\t\t);\n\t\tif ( ! record ) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif ( typeof record.content === 'function' ) {\n\t\t\treturn record.content( record );\n\t\t} else if ( record.blocks ) {\n\t\t\treturn __unstableSerializeAndClean( record.blocks );\n\t\t} else if ( record.content ) {\n\t\t\treturn record.content;\n\t\t}\n\t}\n\n\tfunction onSuccess() {\n\t\tcreateNotice( 'info', __( 'All content copied.' ), {\n\t\t\tisDismissible: true,\n\t\t\ttype: 'snackbar',\n\t\t} );\n\t}\n\n\tconst ref = useCopyToClipboard( getText, onSuccess );\n\n\treturn <MenuItem ref={ ref }>{ __( 'Copy all blocks' ) }</MenuItem>;\n}\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { MenuItemsChoice, MenuGroup } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as keyboardShortcutsStore } from '@wordpress/keyboard-shortcuts';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\n/**\n * Set of available mode options.\n *\n * @type {Array}\n */\nconst MODES = [\n\t{\n\t\tvalue: 'visual',\n\t\tlabel: __( 'Visual editor' ),\n\t},\n\t{\n\t\tvalue: 'text',\n\t\tlabel: __( 'Code editor' ),\n\t},\n];\n\nfunction ModeSwitcher() {\n\tconst { shortcut, isRichEditingEnabled, isCodeEditingEnabled, mode } =\n\t\tuseSelect(\n\t\t\t( select ) => ( {\n\t\t\t\tshortcut: select(\n\t\t\t\t\tkeyboardShortcutsStore\n\t\t\t\t).getShortcutRepresentation( 'core/editor/toggle-mode' ),\n\t\t\t\tisRichEditingEnabled:\n\t\t\t\t\tselect( editorStore ).getEditorSettings()\n\t\t\t\t\t\t.richEditingEnabled,\n\t\t\t\tisCodeEditingEnabled:\n\t\t\t\t\tselect( editorStore ).getEditorSettings()\n\t\t\t\t\t\t.codeEditingEnabled,\n\t\t\t\tmode: select( editorStore ).getEditorMode(),\n\t\t\t} ),\n\t\t\t[]\n\t\t);\n\tconst { switchEditorMode } = useDispatch( editorStore );\n\n\tlet selectedMode = mode;\n\tif ( ! isRichEditingEnabled && mode === 'visual' ) {\n\t\tselectedMode = 'text';\n\t}\n\tif ( ! isCodeEditingEnabled && mode === 'text' ) {\n\t\tselectedMode = 'visual';\n\t}\n\n\tconst choices = MODES.map( ( choice ) => {\n\t\tif ( ! isCodeEditingEnabled && choice.value === 'text' ) {\n\t\t\tchoice = {\n\t\t\t\t...choice,\n\t\t\t\tdisabled: true,\n\t\t\t};\n\t\t}\n\t\tif ( ! isRichEditingEnabled && choice.value === 'visual' ) {\n\t\t\tchoice = {\n\t\t\t\t...choice,\n\t\t\t\tdisabled: true,\n\t\t\t\tinfo: __(\n\t\t\t\t\t'You can enable the visual editor in your profile settings.'\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\t\tif ( choice.value !== selectedMode && ! choice.disabled ) {\n\t\t\treturn { ...choice, shortcut };\n\t\t}\n\t\treturn choice;\n\t} );\n\n\treturn (\n\t\t<MenuGroup label={ __( 'Editor' ) }>\n\t\t\t<MenuItemsChoice\n\t\t\t\tchoices={ choices }\n\t\t\t\tvalue={ selectedMode }\n\t\t\t\tonSelect={ switchEditorMode }\n\t\t\t/>\n\t\t</MenuGroup>\n\t);\n}\n\nexport default ModeSwitcher;\n","/**\n * WordPress dependencies\n */\nimport { createSlotFill } from '@wordpress/components';\n\nconst { Fill: ToolsMoreMenuGroup, Slot } =\n\tcreateSlotFill( 'ToolsMoreMenuGroup' );\n\nToolsMoreMenuGroup.Slot = ( { fillProps } ) => <Slot fillProps={ fillProps } />;\n\nexport default ToolsMoreMenuGroup;\n","/**\n * WordPress dependencies\n */\nimport { createSlotFill } from '@wordpress/components';\nimport { Platform } from '@wordpress/element';\n\nconst { Fill: ViewMoreMenuGroup, Slot } = createSlotFill(\n\tPlatform.OS === 'web' ? Symbol( 'ViewMoreMenuGroup' ) : 'ViewMoreMenuGroup'\n);\n\nViewMoreMenuGroup.Slot = ( { fillProps } ) => <Slot fillProps={ fillProps } />;\n\nexport default ViewMoreMenuGroup;\n","/**\n * WordPress dependencies\n */\nimport { __, _x } from '@wordpress/i18n';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { displayShortcut } from '@wordpress/keycodes';\nimport { external, moreVertical } from '@wordpress/icons';\nimport {\n\tMenuGroup,\n\tMenuItem,\n\tVisuallyHidden,\n\tDropdownMenu,\n} from '@wordpress/components';\nimport {\n\tPreferenceToggleMenuItem,\n\tstore as preferencesStore,\n} from '@wordpress/preferences';\nimport { store as interfaceStore, ActionItem } from '@wordpress/interface';\n\n/**\n * Internal dependencies\n */\nimport CopyContentMenuItem from './copy-content-menu-item';\nimport ModeSwitcher from '../mode-switcher';\nimport ToolsMoreMenuGroup from './tools-more-menu-group';\nimport ViewMoreMenuGroup from './view-more-menu-group';\nimport { store as editorStore } from '../../store';\n\nexport default function MoreMenu() {\n\tconst { openModal } = useDispatch( interfaceStore );\n\tconst { set: setPreference } = useDispatch( preferencesStore );\n\tconst { toggleDistractionFree } = useDispatch( editorStore );\n\tconst showIconLabels = useSelect(\n\t\t( select ) =>\n\t\t\tselect( preferencesStore ).get( 'core', 'showIconLabels' ),\n\t\t[]\n\t);\n\tconst turnOffDistractionFree = () => {\n\t\tsetPreference( 'core', 'distractionFree', false );\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<DropdownMenu\n\t\t\t\ticon={ moreVertical }\n\t\t\t\tlabel={ __( 'Options' ) }\n\t\t\t\tpopoverProps={ {\n\t\t\t\t\tplacement: 'bottom-end',\n\t\t\t\t\tclassName: 'more-menu-dropdown__content',\n\t\t\t\t} }\n\t\t\t\ttoggleProps={ {\n\t\t\t\t\tshowTooltip: ! showIconLabels,\n\t\t\t\t\t...( showIconLabels && { variant: 'tertiary' } ),\n\t\t\t\t\ttooltipPosition: 'bottom',\n\t\t\t\t\tsize: 'compact',\n\t\t\t\t} }\n\t\t\t>\n\t\t\t\t{ ( { onClose } ) => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<MenuGroup label={ _x( 'View', 'noun' ) }>\n\t\t\t\t\t\t\t<PreferenceToggleMenuItem\n\t\t\t\t\t\t\t\tscope=\"core\"\n\t\t\t\t\t\t\t\tname=\"fixedToolbar\"\n\t\t\t\t\t\t\t\tonToggle={ turnOffDistractionFree }\n\t\t\t\t\t\t\t\tlabel={ __( 'Top toolbar' ) }\n\t\t\t\t\t\t\t\tinfo={ __(\n\t\t\t\t\t\t\t\t\t'Access all block and document tools in a single place'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\tmessageActivated={ __(\n\t\t\t\t\t\t\t\t\t'Top toolbar activated'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\tmessageDeactivated={ __(\n\t\t\t\t\t\t\t\t\t'Top toolbar deactivated'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<PreferenceToggleMenuItem\n\t\t\t\t\t\t\t\tscope=\"core\"\n\t\t\t\t\t\t\t\tname=\"distractionFree\"\n\t\t\t\t\t\t\t\tlabel={ __( 'Distraction free' ) }\n\t\t\t\t\t\t\t\tinfo={ __( 'Write with calmness' ) }\n\t\t\t\t\t\t\t\thandleToggling={ false }\n\t\t\t\t\t\t\t\tonToggle={ toggleDistractionFree }\n\t\t\t\t\t\t\t\tmessageActivated={ __(\n\t\t\t\t\t\t\t\t\t'Distraction free mode activated'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\tmessageDeactivated={ __(\n\t\t\t\t\t\t\t\t\t'Distraction free mode deactivated'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\tshortcut={ displayShortcut.primaryShift(\n\t\t\t\t\t\t\t\t\t'\\\\'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<PreferenceToggleMenuItem\n\t\t\t\t\t\t\t\tscope=\"core\"\n\t\t\t\t\t\t\t\tname=\"focusMode\"\n\t\t\t\t\t\t\t\tlabel={ __( 'Spotlight mode' ) }\n\t\t\t\t\t\t\t\tinfo={ __( 'Focus on one block at a time' ) }\n\t\t\t\t\t\t\t\tmessageActivated={ __(\n\t\t\t\t\t\t\t\t\t'Spotlight mode activated'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\tmessageDeactivated={ __(\n\t\t\t\t\t\t\t\t\t'Spotlight mode deactivated'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<ViewMoreMenuGroup.Slot fillProps={ { onClose } } />\n\t\t\t\t\t\t</MenuGroup>\n\t\t\t\t\t\t<ModeSwitcher />\n\t\t\t\t\t\t<ActionItem.Slot\n\t\t\t\t\t\t\tname=\"core/plugin-more-menu\"\n\t\t\t\t\t\t\tlabel={ __( 'Plugins' ) }\n\t\t\t\t\t\t\tas={ MenuGroup }\n\t\t\t\t\t\t\tfillProps={ { onClick: onClose } }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<MenuGroup label={ __( 'Tools' ) }>\n\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\tonClick={ () =>\n\t\t\t\t\t\t\t\t\topenModal( 'editor/keyboard-shortcut-help' )\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tshortcut={ displayShortcut.access( 'h' ) }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ __( 'Keyboard shortcuts' ) }\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t<CopyContentMenuItem />\n\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\ticon={ external }\n\t\t\t\t\t\t\t\thref={ __(\n\t\t\t\t\t\t\t\t\t'https://wordpress.org/documentation/article/wordpress-block-editor/'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ __( 'Help' ) }\n\t\t\t\t\t\t\t\t<VisuallyHidden as=\"span\">\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t/* translators: accessibility text */\n\t\t\t\t\t\t\t\t\t\t__( '(opens in a new tab)' )\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</VisuallyHidden>\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t<ToolsMoreMenuGroup.Slot\n\t\t\t\t\t\t\t\tfillProps={ { onClose } }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</MenuGroup>\n\t\t\t\t\t\t<MenuGroup>\n\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\tonClick={ () =>\n\t\t\t\t\t\t\t\t\topenModal( 'editor/preferences' )\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ __( 'Preferences' ) }\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t</MenuGroup>\n\t\t\t\t\t</>\n\t\t\t\t) }\n\t\t\t</DropdownMenu>\n\t\t</>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useViewportMatch, compose } from '@wordpress/compose';\nimport { withDispatch, withSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport PostPublishButton from './index';\nimport { store as editorStore } from '../../store';\n\nexport function PostPublishButtonOrToggle( {\n\tforceIsDirty,\n\thasPublishAction,\n\tisBeingScheduled,\n\tisPending,\n\tisPublished,\n\tisPublishSidebarEnabled,\n\tisPublishSidebarOpened,\n\tisScheduled,\n\ttogglePublishSidebar,\n\tsetEntitiesSavedStatesCallback,\n\tpostStatusHasChanged,\n\tpostStatus,\n} ) {\n\tconst IS_TOGGLE = 'toggle';\n\tconst IS_BUTTON = 'button';\n\tconst isSmallerThanMediumViewport = useViewportMatch( 'medium', '<' );\n\tlet component;\n\n\t/**\n\t * Conditions to show a BUTTON (publish directly) or a TOGGLE (open publish sidebar):\n\t *\n\t * 1) We want to show a BUTTON when the post status is at the _final stage_\n\t * for a particular role (see https://wordpress.org/documentation/article/post-status/):\n\t *\n\t * - is published\n\t * - post status has changed explicitely to something different than 'future' or 'publish'\n\t * - is scheduled to be published\n\t * - is pending and can't be published (but only for viewports >= medium).\n\t * \t Originally, we considered showing a button for pending posts that couldn't be published\n\t * \t (for example, for an author with the contributor role). Some languages can have\n\t * \t long translations for \"Submit for review\", so given the lack of UI real estate available\n\t * \t we decided to take into account the viewport in that case.\n\t *  \t See: https://github.com/WordPress/gutenberg/issues/10475\n\t *\n\t * 2) Then, in small viewports, we'll show a TOGGLE.\n\t *\n\t * 3) Finally, we'll use the publish sidebar status to decide:\n\t *\n\t * - if it is enabled, we show a TOGGLE\n\t * - if it is disabled, we show a BUTTON\n\t */\n\tif (\n\t\tisPublished ||\n\t\t( postStatusHasChanged &&\n\t\t\t! [ 'future', 'publish' ].includes( postStatus ) ) ||\n\t\t( isScheduled && isBeingScheduled ) ||\n\t\t( isPending && ! hasPublishAction && ! isSmallerThanMediumViewport )\n\t) {\n\t\tcomponent = IS_BUTTON;\n\t} else if ( isSmallerThanMediumViewport || isPublishSidebarEnabled ) {\n\t\tcomponent = IS_TOGGLE;\n\t} else {\n\t\tcomponent = IS_BUTTON;\n\t}\n\n\treturn (\n\t\t<PostPublishButton\n\t\t\tforceIsDirty={ forceIsDirty }\n\t\t\tisOpen={ isPublishSidebarOpened }\n\t\t\tisToggle={ component === IS_TOGGLE }\n\t\t\tonToggle={ togglePublishSidebar }\n\t\t\tsetEntitiesSavedStatesCallback={ setEntitiesSavedStatesCallback }\n\t\t/>\n\t);\n}\n\nexport default compose(\n\twithSelect( ( select ) => ( {\n\t\thasPublishAction:\n\t\t\tselect( editorStore ).getCurrentPost()?._links?.[\n\t\t\t\t'wp:action-publish'\n\t\t\t] ?? false,\n\t\tisBeingScheduled: select( editorStore ).isEditedPostBeingScheduled(),\n\t\tisPending: select( editorStore ).isCurrentPostPending(),\n\t\tisPublished: select( editorStore ).isCurrentPostPublished(),\n\t\tisPublishSidebarEnabled:\n\t\t\tselect( editorStore ).isPublishSidebarEnabled(),\n\t\tisPublishSidebarOpened: select( editorStore ).isPublishSidebarOpened(),\n\t\tisScheduled: select( editorStore ).isCurrentPostScheduled(),\n\t\tpostStatus: select( editorStore ).getEditedPostAttribute( 'status' ),\n\t\tpostStatusHasChanged: select( editorStore ).getPostEdits()?.status,\n\t} ) ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { togglePublishSidebar } = dispatch( editorStore );\n\t\treturn {\n\t\t\ttogglePublishSidebar,\n\t\t};\n\t} )\n)( PostPublishButtonOrToggle );\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Button } from '@wordpress/components';\nimport { external } from '@wordpress/icons';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { useSelect } from '@wordpress/data';\nimport { store as preferencesStore } from '@wordpress/preferences';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nexport default function PostViewLink() {\n\tconst { hasLoaded, permalink, isPublished, label, showIconLabels } =\n\t\tuseSelect( ( select ) => {\n\t\t\t// Grab post type to retrieve the view_item label.\n\t\t\tconst postTypeSlug = select( editorStore ).getCurrentPostType();\n\t\t\tconst postType = select( coreStore ).getPostType( postTypeSlug );\n\t\t\tconst { get } = select( preferencesStore );\n\n\t\t\treturn {\n\t\t\t\tpermalink: select( editorStore ).getPermalink(),\n\t\t\t\tisPublished: select( editorStore ).isCurrentPostPublished(),\n\t\t\t\tlabel: postType?.labels.view_item,\n\t\t\t\thasLoaded: !! postType,\n\t\t\t\tshowIconLabels: get( 'core', 'showIconLabels' ),\n\t\t\t};\n\t\t}, [] );\n\n\t// Only render the view button if the post is published and has a permalink.\n\tif ( ! isPublished || ! permalink || ! hasLoaded ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<Button\n\t\t\ticon={ external }\n\t\t\tlabel={ label || __( 'View post' ) }\n\t\t\thref={ permalink }\n\t\t\ttarget=\"_blank\"\n\t\t\tshowTooltip={ ! showIconLabels }\n\t\t\tsize=\"compact\"\n\t\t/>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst mobile = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M15 4H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h6c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm.5 14c0 .3-.2.5-.5.5H9c-.3 0-.5-.2-.5-.5V6c0-.3.2-.5.5-.5h6c.3 0 .5.2.5.5v12zm-4.5-.5h2V16h-2v1.5z\" />\n\t</SVG>\n);\n\nexport default mobile;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst tablet = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M17 4H7c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm.5 14c0 .3-.2.5-.5.5H7c-.3 0-.5-.2-.5-.5V6c0-.3.2-.5.5-.5h10c.3 0 .5.2.5.5v12zm-7.5-.5h4V16h-4v1.5z\" />\n\t</SVG>\n);\n\nexport default tablet;\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst desktop = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path d=\"M20.5 16h-.7V8c0-1.1-.9-2-2-2H6.2c-1.1 0-2 .9-2 2v8h-.7c-.8 0-1.5.7-1.5 1.5h20c0-.8-.7-1.5-1.5-1.5zM5.7 8c0-.3.2-.5.5-.5h11.6c.3 0 .5.2.5.5v7.6H5.7V8z\" />\n\t</SVG>\n);\n\nexport default desktop;\n","/**\n * WordPress dependencies\n */\nimport { useViewportMatch } from '@wordpress/compose';\nimport {\n\tDropdownMenu,\n\tMenuGroup,\n\tMenuItem,\n\tVisuallyHidden,\n\tIcon,\n} from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { check, desktop, mobile, tablet, external } from '@wordpress/icons';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { store as preferencesStore } from '@wordpress/preferences';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\nimport PostPreviewButton from '../post-preview-button';\n\nexport default function PreviewDropdown( { forceIsAutosaveable, disabled } ) {\n\tconst { deviceType, homeUrl, isTemplate, isViewable, showIconLabels } =\n\t\tuseSelect( ( select ) => {\n\t\t\tconst { getDeviceType, getCurrentPostType } = select( editorStore );\n\t\t\tconst { getUnstableBase, getPostType } = select( coreStore );\n\t\t\tconst { get } = select( preferencesStore );\n\t\t\tconst _currentPostType = getCurrentPostType();\n\t\t\treturn {\n\t\t\t\tdeviceType: getDeviceType(),\n\t\t\t\thomeUrl: getUnstableBase()?.home,\n\t\t\t\tisTemplate: _currentPostType === 'wp_template',\n\t\t\t\tisViewable: getPostType( _currentPostType )?.viewable ?? false,\n\t\t\t\tshowIconLabels: get( 'core', 'showIconLabels' ),\n\t\t\t};\n\t\t}, [] );\n\tconst { setDeviceType } = useDispatch( editorStore );\n\tconst isMobile = useViewportMatch( 'medium', '<' );\n\tif ( isMobile ) {\n\t\treturn null;\n\t}\n\n\tconst popoverProps = {\n\t\tplacement: 'bottom-end',\n\t};\n\tconst toggleProps = {\n\t\tclassName: 'editor-preview-dropdown__toggle',\n\t\tsize: 'compact',\n\t\tshowTooltip: ! showIconLabels,\n\t\tdisabled,\n\t\t__experimentalIsFocusable: disabled,\n\t};\n\tconst menuProps = {\n\t\t'aria-label': __( 'View options' ),\n\t};\n\n\tconst deviceIcons = {\n\t\tmobile,\n\t\ttablet,\n\t\tdesktop,\n\t};\n\n\treturn (\n\t\t<DropdownMenu\n\t\t\tclassName=\"editor-preview-dropdown\"\n\t\t\tpopoverProps={ popoverProps }\n\t\t\ttoggleProps={ toggleProps }\n\t\t\tmenuProps={ menuProps }\n\t\t\ticon={ deviceIcons[ deviceType.toLowerCase() ] }\n\t\t\tlabel={ __( 'View' ) }\n\t\t\tdisableOpenOnArrowDown={ disabled }\n\t\t>\n\t\t\t{ ( { onClose } ) => (\n\t\t\t\t<>\n\t\t\t\t\t<MenuGroup>\n\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\tonClick={ () => setDeviceType( 'Desktop' ) }\n\t\t\t\t\t\t\ticon={ deviceType === 'Desktop' && check }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Desktop' ) }\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\tonClick={ () => setDeviceType( 'Tablet' ) }\n\t\t\t\t\t\t\ticon={ deviceType === 'Tablet' && check }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Tablet' ) }\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\tonClick={ () => setDeviceType( 'Mobile' ) }\n\t\t\t\t\t\t\ticon={ deviceType === 'Mobile' && check }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Mobile' ) }\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t</MenuGroup>\n\t\t\t\t\t{ isTemplate && (\n\t\t\t\t\t\t<MenuGroup>\n\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\thref={ homeUrl }\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\ticon={ external }\n\t\t\t\t\t\t\t\tonClick={ onClose }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ __( 'View site' ) }\n\t\t\t\t\t\t\t\t<VisuallyHidden as=\"span\">\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t/* translators: accessibility text */\n\t\t\t\t\t\t\t\t\t\t__( '(opens in a new tab)' )\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</VisuallyHidden>\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t</MenuGroup>\n\t\t\t\t\t) }\n\t\t\t\t\t{ isViewable && (\n\t\t\t\t\t\t<MenuGroup>\n\t\t\t\t\t\t\t<PostPreviewButton\n\t\t\t\t\t\t\t\tclassName=\"editor-preview-dropdown__button-external\"\n\t\t\t\t\t\t\t\trole=\"menuitem\"\n\t\t\t\t\t\t\t\tforceIsAutosaveable={ forceIsAutosaveable }\n\t\t\t\t\t\t\t\ttextContent={\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t{ __( 'Preview in new tab' ) }\n\t\t\t\t\t\t\t\t\t\t<Icon icon={ external } />\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tonPreview={ onClose }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</MenuGroup>\n\t\t\t\t\t) }\n\t\t\t\t</>\n\t\t\t) }\n\t\t</DropdownMenu>\n\t);\n}\n","/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { useViewportMatch } from '@wordpress/compose';\nimport { __unstableMotion as motion } from '@wordpress/components';\nimport { store as preferencesStore } from '@wordpress/preferences';\nimport { useState } from '@wordpress/element';\nimport { PinnedItems } from '@wordpress/interface';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport BackButton from './back-button';\nimport CollapsableBlockToolbar from '../collapsible-block-toolbar';\nimport DocumentBar from '../document-bar';\nimport DocumentTools from '../document-tools';\nimport MoreMenu from '../more-menu';\nimport PostPreviewButton from '../post-preview-button';\nimport PostPublishButtonOrToggle from '../post-publish-button/post-publish-button-or-toggle';\nimport PostSavedState from '../post-saved-state';\nimport PostViewLink from '../post-view-link';\nimport PreviewDropdown from '../preview-dropdown';\nimport { store as editorStore } from '../../store';\n\nconst toolbarVariations = {\n\tdistractionFreeDisabled: { y: '-50px' },\n\tdistractionFreeHover: { y: 0 },\n\tdistractionFreeHidden: { y: '-50px' },\n\tvisible: { y: 0 },\n\thidden: { y: 0 },\n};\n\nconst backButtonVariations = {\n\tdistractionFreeDisabled: { x: '-100%' },\n\tdistractionFreeHover: { x: 0 },\n\tdistractionFreeHidden: { x: '-100%' },\n\tvisible: { x: 0 },\n\thidden: { x: 0 },\n};\n\nfunction Header( {\n\tcustomSaveButton,\n\tforceIsDirty,\n\tforceDisableBlockTools,\n\tsetEntitiesSavedStatesCallback,\n\ttitle,\n\ticon,\n} ) {\n\tconst isWideViewport = useViewportMatch( 'large' );\n\tconst isLargeViewport = useViewportMatch( 'medium' );\n\tconst {\n\t\tisTextEditor,\n\t\tisPublishSidebarOpened,\n\t\tshowIconLabels,\n\t\thasFixedToolbar,\n\t\tisNestedEntity,\n\t\tisZoomedOutView,\n\t} = useSelect( ( select ) => {\n\t\tconst { get: getPreference } = select( preferencesStore );\n\t\tconst {\n\t\t\tgetEditorMode,\n\t\t\tgetEditorSettings,\n\t\t\tisPublishSidebarOpened: _isPublishSidebarOpened,\n\t\t} = select( editorStore );\n\t\tconst { __unstableGetEditorMode } = select( blockEditorStore );\n\n\t\treturn {\n\t\t\tisTextEditor: getEditorMode() === 'text',\n\t\t\tisPublishSidebarOpened: _isPublishSidebarOpened(),\n\t\t\tshowIconLabels: getPreference( 'core', 'showIconLabels' ),\n\t\t\thasFixedToolbar: getPreference( 'core', 'fixedToolbar' ),\n\t\t\tisNestedEntity:\n\t\t\t\t!! getEditorSettings().onNavigateToPreviousEntityRecord,\n\t\t\tisZoomedOutView: __unstableGetEditorMode() === 'zoom-out',\n\t\t};\n\t}, [] );\n\n\tconst hasTopToolbar = isLargeViewport && hasFixedToolbar;\n\n\tconst [ isBlockToolsCollapsed, setIsBlockToolsCollapsed ] =\n\t\tuseState( true );\n\n\t// The edit-post-header classname is only kept for backward compatibilty\n\t// as some plugins might be relying on its presence.\n\treturn (\n\t\t<div className=\"editor-header edit-post-header\">\n\t\t\t<motion.div\n\t\t\t\tvariants={ backButtonVariations }\n\t\t\t\ttransition={ { type: 'tween' } }\n\t\t\t>\n\t\t\t\t<BackButton.Slot />\n\t\t\t</motion.div>\n\t\t\t<motion.div\n\t\t\t\tvariants={ toolbarVariations }\n\t\t\t\tclassName=\"editor-header__toolbar\"\n\t\t\t\ttransition={ { type: 'tween' } }\n\t\t\t>\n\t\t\t\t<DocumentTools\n\t\t\t\t\tdisableBlockTools={ forceDisableBlockTools || isTextEditor }\n\t\t\t\t/>\n\t\t\t\t{ hasTopToolbar && (\n\t\t\t\t\t<CollapsableBlockToolbar\n\t\t\t\t\t\tisCollapsed={ isBlockToolsCollapsed }\n\t\t\t\t\t\tonToggle={ setIsBlockToolsCollapsed }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t<div\n\t\t\t\t\tclassName={ clsx( 'editor-header__center', {\n\t\t\t\t\t\t'is-collapsed':\n\t\t\t\t\t\t\t! isBlockToolsCollapsed && hasTopToolbar,\n\t\t\t\t\t} ) }\n\t\t\t\t>\n\t\t\t\t\t<DocumentBar title={ title } icon={ icon } />\n\t\t\t\t</div>\n\t\t\t</motion.div>\n\t\t\t<motion.div\n\t\t\t\tvariants={ toolbarVariations }\n\t\t\t\ttransition={ { type: 'tween' } }\n\t\t\t\tclassName=\"editor-header__settings\"\n\t\t\t>\n\t\t\t\t{ ! customSaveButton && ! isPublishSidebarOpened && (\n\t\t\t\t\t// This button isn't completely hidden by the publish sidebar.\n\t\t\t\t\t// We can't hide the whole toolbar when the publish sidebar is open because\n\t\t\t\t\t// we want to prevent mounting/unmounting the PostPublishButtonOrToggle DOM node.\n\t\t\t\t\t// We track that DOM node to return focus to the PostPublishButtonOrToggle\n\t\t\t\t\t// when the publish sidebar has been closed.\n\t\t\t\t\t<PostSavedState forceIsDirty={ forceIsDirty } />\n\t\t\t\t) }\n\t\t\t\t<PreviewDropdown\n\t\t\t\t\tforceIsAutosaveable={ forceIsDirty }\n\t\t\t\t\tdisabled={ isNestedEntity || isZoomedOutView }\n\t\t\t\t/>\n\t\t\t\t<PostPreviewButton\n\t\t\t\t\tclassName=\"editor-header__post-preview-button\"\n\t\t\t\t\tforceIsAutosaveable={ forceIsDirty }\n\t\t\t\t/>\n\t\t\t\t<PostViewLink />\n\t\t\t\t{ ! customSaveButton && (\n\t\t\t\t\t<PostPublishButtonOrToggle\n\t\t\t\t\t\tforceIsDirty={ forceIsDirty }\n\t\t\t\t\t\tsetEntitiesSavedStatesCallback={\n\t\t\t\t\t\t\tsetEntitiesSavedStatesCallback\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t{ customSaveButton }\n\t\t\t\t{ ( isWideViewport || ! showIconLabels ) && (\n\t\t\t\t\t<PinnedItems.Slot scope=\"core\" />\n\t\t\t\t) }\n\t\t\t\t<MoreMenu />\n\t\t\t</motion.div>\n\t\t</div>\n\t);\n}\n\nexport default Header;\n","/**\n * WordPress dependencies\n */\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport {\n\tstore as blockEditorStore,\n\tprivateApis as blockEditorPrivateApis,\n} from '@wordpress/block-editor';\nimport {\n\tuseViewportMatch,\n\t__experimentalUseDialog as useDialog,\n} from '@wordpress/compose';\nimport { useCallback, useRef } from '@wordpress/element';\nimport { store as preferencesStore } from '@wordpress/preferences';\nimport { ESCAPE } from '@wordpress/keycodes';\nimport { store as interfaceStore } from '@wordpress/interface';\n\n/**\n * Internal dependencies\n */\nimport { unlock } from '../../lock-unlock';\nimport { store as editorStore } from '../../store';\n\nconst { PrivateInserterLibrary } = unlock( blockEditorPrivateApis );\n\nexport default function InserterSidebar() {\n\tconst {\n\t\tblockSectionRootClientId,\n\t\tinserterSidebarToggleRef,\n\t\tinsertionPoint,\n\t\tshowMostUsedBlocks,\n\t\tsidebarIsOpened,\n\t} = useSelect( ( select ) => {\n\t\tconst {\n\t\t\tgetInserterSidebarToggleRef,\n\t\t\tgetInsertionPoint,\n\t\t\tisPublishSidebarOpened,\n\t\t} = unlock( select( editorStore ) );\n\t\tconst { getBlockRootClientId, __unstableGetEditorMode, getSettings } =\n\t\t\tselect( blockEditorStore );\n\t\tconst { get } = select( preferencesStore );\n\t\tconst { getActiveComplementaryArea } = select( interfaceStore );\n\t\tconst getBlockSectionRootClientId = () => {\n\t\t\tif ( __unstableGetEditorMode() === 'zoom-out' ) {\n\t\t\t\tconst { sectionRootClientId } = unlock( getSettings() );\n\t\t\t\tif ( sectionRootClientId ) {\n\t\t\t\t\treturn sectionRootClientId;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn getBlockRootClientId();\n\t\t};\n\t\treturn {\n\t\t\tinserterSidebarToggleRef: getInserterSidebarToggleRef(),\n\t\t\tinsertionPoint: getInsertionPoint(),\n\t\t\tshowMostUsedBlocks: get( 'core', 'mostUsedBlocks' ),\n\t\t\tblockSectionRootClientId: getBlockSectionRootClientId(),\n\t\t\tsidebarIsOpened: !! (\n\t\t\t\tgetActiveComplementaryArea( 'core' ) || isPublishSidebarOpened()\n\t\t\t),\n\t\t};\n\t}, [] );\n\tconst { setIsInserterOpened } = useDispatch( editorStore );\n\tconst { disableComplementaryArea } = useDispatch( interfaceStore );\n\n\tconst isMobileViewport = useViewportMatch( 'medium', '<' );\n\tconst [ inserterDialogRef, inserterDialogProps ] = useDialog( {\n\t\tonClose: () => setIsInserterOpened( false ),\n\t\tfocusOnMount: true,\n\t} );\n\tconst libraryRef = useRef();\n\n\t// When closing the inserter, focus should return to the toggle button.\n\tconst closeInserterSidebar = useCallback( () => {\n\t\tsetIsInserterOpened( false );\n\t\tinserterSidebarToggleRef.current?.focus();\n\t}, [ inserterSidebarToggleRef, setIsInserterOpened ] );\n\n\tconst closeOnEscape = useCallback(\n\t\t( event ) => {\n\t\t\tif ( event.keyCode === ESCAPE && ! event.defaultPrevented ) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tcloseInserterSidebar();\n\t\t\t}\n\t\t},\n\t\t[ closeInserterSidebar ]\n\t);\n\n\tconst inserterContents = (\n\t\t<div className=\"editor-inserter-sidebar__content\">\n\t\t\t<PrivateInserterLibrary\n\t\t\t\tshowMostUsedBlocks={ showMostUsedBlocks }\n\t\t\t\tshowInserterHelpPanel\n\t\t\t\tshouldFocusBlock={ isMobileViewport }\n\t\t\t\trootClientId={\n\t\t\t\t\tblockSectionRootClientId ?? insertionPoint.rootClientId\n\t\t\t\t}\n\t\t\t\t__experimentalInsertionIndex={ insertionPoint.insertionIndex }\n\t\t\t\t__experimentalInitialTab={ insertionPoint.tab }\n\t\t\t\t__experimentalInitialCategory={ insertionPoint.category }\n\t\t\t\t__experimentalFilterValue={ insertionPoint.filterValue }\n\t\t\t\tonPatternCategorySelection={\n\t\t\t\t\tsidebarIsOpened\n\t\t\t\t\t\t? () => disableComplementaryArea( 'core' )\n\t\t\t\t\t\t: undefined\n\t\t\t\t}\n\t\t\t\tref={ libraryRef }\n\t\t\t\tonClose={ closeInserterSidebar }\n\t\t\t/>\n\t\t</div>\n\t);\n\n\tif ( window.__experimentalEnableZoomedOutPatternsTab ) {\n\t\treturn (\n\t\t\t// eslint-disable-next-line jsx-a11y/no-static-element-interactions\n\t\t\t<div\n\t\t\t\tonKeyDown={ closeOnEscape }\n\t\t\t\tclassName=\"editor-inserter-sidebar\"\n\t\t\t>\n\t\t\t\t{ inserterContents }\n\t\t\t</div>\n\t\t);\n\t}\n\treturn (\n\t\t<div\n\t\t\tref={ inserterDialogRef }\n\t\t\t{ ...inserterDialogProps }\n\t\t\tclassName=\"editor-inserter-sidebar\"\n\t\t>\n\t\t\t{ inserterContents }\n\t\t</div>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { __experimentalText as Text } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport CharacterCount from '../character-count';\nimport WordCount from '../word-count';\nimport TimeToRead from '../time-to-read';\nimport DocumentOutline from '../document-outline';\n\nexport default function ListViewOutline() {\n\treturn (\n\t\t<>\n\t\t\t<div className=\"editor-list-view-sidebar__outline\">\n\t\t\t\t<div>\n\t\t\t\t\t<Text>{ __( 'Characters:' ) }</Text>\n\t\t\t\t\t<Text>\n\t\t\t\t\t\t<CharacterCount />\n\t\t\t\t\t</Text>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<Text>{ __( 'Words:' ) }</Text>\n\t\t\t\t\t<WordCount />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<Text>{ __( 'Time to read:' ) }</Text>\n\t\t\t\t\t<TimeToRead />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<DocumentOutline />\n\t\t</>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { __experimentalListView as ListView } from '@wordpress/block-editor';\nimport {\n\tButton,\n\tprivateApis as componentsPrivateApis,\n} from '@wordpress/components';\nimport { useFocusOnMount, useMergeRefs } from '@wordpress/compose';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { focus } from '@wordpress/dom';\nimport { useCallback, useRef, useState } from '@wordpress/element';\nimport { __, _x } from '@wordpress/i18n';\nimport { closeSmall } from '@wordpress/icons';\nimport { useShortcut } from '@wordpress/keyboard-shortcuts';\nimport { ESCAPE } from '@wordpress/keycodes';\n\n/**\n * Internal dependencies\n */\nimport ListViewOutline from './list-view-outline';\nimport { unlock } from '../../lock-unlock';\nimport { store as editorStore } from '../../store';\n\nconst { Tabs } = unlock( componentsPrivateApis );\n\nexport default function ListViewSidebar() {\n\tconst { setIsListViewOpened } = useDispatch( editorStore );\n\tconst { getListViewToggleRef } = unlock( useSelect( editorStore ) );\n\n\t// This hook handles focus when the sidebar first renders.\n\tconst focusOnMountRef = useFocusOnMount( 'firstElement' );\n\n\t// When closing the list view, focus should return to the toggle button.\n\tconst closeListView = useCallback( () => {\n\t\tsetIsListViewOpened( false );\n\t\tgetListViewToggleRef().current?.focus();\n\t}, [ getListViewToggleRef, setIsListViewOpened ] );\n\n\tconst closeOnEscape = useCallback(\n\t\t( event ) => {\n\t\t\tif ( event.keyCode === ESCAPE && ! event.defaultPrevented ) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tcloseListView();\n\t\t\t}\n\t\t},\n\t\t[ closeListView ]\n\t);\n\n\t// Use internal state instead of a ref to make sure that the component\n\t// re-renders when the dropZoneElement updates.\n\tconst [ dropZoneElement, setDropZoneElement ] = useState( null );\n\t// Tracks our current tab.\n\tconst [ tab, setTab ] = useState( 'list-view' );\n\n\t// This ref refers to the sidebar as a whole.\n\tconst sidebarRef = useRef();\n\t// This ref refers to the tab panel.\n\tconst tabsRef = useRef();\n\t// This ref refers to the list view application area.\n\tconst listViewRef = useRef();\n\n\t// Must merge the refs together so focus can be handled properly in the next function.\n\tconst listViewContainerRef = useMergeRefs( [\n\t\tfocusOnMountRef,\n\t\tlistViewRef,\n\t\tsetDropZoneElement,\n\t] );\n\n\t/*\n\t * Callback function to handle list view or outline focus.\n\t *\n\t * @param {string} currentTab The current tab. Either list view or outline.\n\t *\n\t * @return void\n\t */\n\tfunction handleSidebarFocus( currentTab ) {\n\t\t// Tab panel focus.\n\t\tconst tabPanelFocus = focus.tabbable.find( tabsRef.current )[ 0 ];\n\t\t// List view tab is selected.\n\t\tif ( currentTab === 'list-view' ) {\n\t\t\t// Either focus the list view or the tab panel. Must have a fallback because the list view does not render when there are no blocks.\n\t\t\tconst listViewApplicationFocus = focus.tabbable.find(\n\t\t\t\tlistViewRef.current\n\t\t\t)[ 0 ];\n\t\t\tconst listViewFocusArea = sidebarRef.current.contains(\n\t\t\t\tlistViewApplicationFocus\n\t\t\t)\n\t\t\t\t? listViewApplicationFocus\n\t\t\t\t: tabPanelFocus;\n\t\t\tlistViewFocusArea.focus();\n\t\t\t// Outline tab is selected.\n\t\t} else {\n\t\t\ttabPanelFocus.focus();\n\t\t}\n\t}\n\n\tconst handleToggleListViewShortcut = useCallback( () => {\n\t\t// If the sidebar has focus, it is safe to close.\n\t\tif (\n\t\t\tsidebarRef.current.contains(\n\t\t\t\tsidebarRef.current.ownerDocument.activeElement\n\t\t\t)\n\t\t) {\n\t\t\tcloseListView();\n\t\t} else {\n\t\t\t// If the list view or outline does not have focus, focus should be moved to it.\n\t\t\thandleSidebarFocus( tab );\n\t\t}\n\t}, [ closeListView, tab ] );\n\n\t// This only fires when the sidebar is open because of the conditional rendering.\n\t// It is the same shortcut to open but that is defined as a global shortcut and only fires when the sidebar is closed.\n\tuseShortcut( 'core/editor/toggle-list-view', handleToggleListViewShortcut );\n\n\treturn (\n\t\t// eslint-disable-next-line jsx-a11y/no-static-element-interactions\n\t\t<div\n\t\t\tclassName=\"editor-list-view-sidebar\"\n\t\t\tonKeyDown={ closeOnEscape }\n\t\t\tref={ sidebarRef }\n\t\t>\n\t\t\t<Tabs\n\t\t\t\tonSelect={ ( tabName ) => setTab( tabName ) }\n\t\t\t\tselectOnMove={ false }\n\t\t\t\t// The initial tab value is set explicitly to avoid an initial\n\t\t\t\t// render where no tab is selected. This ensures that the\n\t\t\t\t// tabpanel height is correct so the relevant scroll container\n\t\t\t\t// can be rendered internally.\n\t\t\t\tdefaultTabId=\"list-view\"\n\t\t\t>\n\t\t\t\t<div className=\"editor-list-view-sidebar__header\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"editor-list-view-sidebar__close-button\"\n\t\t\t\t\t\ticon={ closeSmall }\n\t\t\t\t\t\tlabel={ __( 'Close' ) }\n\t\t\t\t\t\tonClick={ closeListView }\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t/>\n\t\t\t\t\t<Tabs.TabList\n\t\t\t\t\t\tclassName=\"editor-list-view-sidebar__tabs-tablist\"\n\t\t\t\t\t\tref={ tabsRef }\n\t\t\t\t\t>\n\t\t\t\t\t\t<Tabs.Tab\n\t\t\t\t\t\t\tclassName=\"editor-list-view-sidebar__tabs-tab\"\n\t\t\t\t\t\t\ttabId=\"list-view\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ _x( 'List View', 'Post overview' ) }\n\t\t\t\t\t\t</Tabs.Tab>\n\t\t\t\t\t\t<Tabs.Tab\n\t\t\t\t\t\t\tclassName=\"editor-list-view-sidebar__tabs-tab\"\n\t\t\t\t\t\t\ttabId=\"outline\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ _x( 'Outline', 'Post overview' ) }\n\t\t\t\t\t\t</Tabs.Tab>\n\t\t\t\t\t</Tabs.TabList>\n\t\t\t\t</div>\n\n\t\t\t\t<Tabs.TabPanel\n\t\t\t\t\tref={ listViewContainerRef }\n\t\t\t\t\tclassName=\"editor-list-view-sidebar__tabs-tabpanel\"\n\t\t\t\t\ttabId=\"list-view\"\n\t\t\t\t\tfocusable={ false }\n\t\t\t\t>\n\t\t\t\t\t<div className=\"editor-list-view-sidebar__list-view-container\">\n\t\t\t\t\t\t<div className=\"editor-list-view-sidebar__list-view-panel-content\">\n\t\t\t\t\t\t\t<ListView dropZoneElement={ dropZoneElement } />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Tabs.TabPanel>\n\t\t\t\t<Tabs.TabPanel\n\t\t\t\t\tclassName=\"editor-list-view-sidebar__tabs-tabpanel\"\n\t\t\t\t\ttabId=\"outline\"\n\t\t\t\t\tfocusable={ false }\n\t\t\t\t>\n\t\t\t\t\t<div className=\"editor-list-view-sidebar__list-view-container\">\n\t\t\t\t\t\t<ListViewOutline />\n\t\t\t\t\t</div>\n\t\t\t\t</Tabs.TabPanel>\n\t\t\t</Tabs>\n\t\t</div>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { Button, createSlotFill } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useCallback } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport EntitiesSavedStates from '../entities-saved-states';\nimport PostPublishPanel from '../post-publish-panel';\nimport PluginPrePublishPanel from '../plugin-pre-publish-panel';\nimport PluginPostPublishPanel from '../plugin-post-publish-panel';\nimport { store as editorStore } from '../../store';\nimport { unlock } from '../../lock-unlock';\n\nconst { Fill, Slot } = createSlotFill( 'ActionsPanel' );\n\nexport const ActionsPanelFill = Fill;\n\nexport default function SavePublishPanels( {\n\tsetEntitiesSavedStatesCallback,\n\tcloseEntitiesSavedStates,\n\tisEntitiesSavedStatesOpen,\n\tforceIsDirtyPublishPanel,\n} ) {\n\tconst { closePublishSidebar, togglePublishSidebar } =\n\t\tuseDispatch( editorStore );\n\tconst {\n\t\tpublishSidebarOpened,\n\t\thasNonPostEntityChanges,\n\t\thasPostMetaChanges,\n\t} = useSelect(\n\t\t( select ) => ( {\n\t\t\tpublishSidebarOpened:\n\t\t\t\tselect( editorStore ).isPublishSidebarOpened(),\n\t\t\thasNonPostEntityChanges:\n\t\t\t\tselect( editorStore ).hasNonPostEntityChanges(),\n\t\t\thasPostMetaChanges: unlock(\n\t\t\t\tselect( editorStore )\n\t\t\t).hasPostMetaChanges(),\n\t\t} ),\n\t\t[]\n\t);\n\n\tconst openEntitiesSavedStates = useCallback(\n\t\t() => setEntitiesSavedStatesCallback( true ),\n\t\t[]\n\t);\n\n\t// It is ok for these components to be unmounted when not in visual use.\n\t// We don't want more than one present at a time, decide which to render.\n\tlet unmountableContent;\n\tif ( publishSidebarOpened ) {\n\t\tunmountableContent = (\n\t\t\t<PostPublishPanel\n\t\t\t\tonClose={ closePublishSidebar }\n\t\t\t\tforceIsDirty={ forceIsDirtyPublishPanel }\n\t\t\t\tPrePublishExtension={ PluginPrePublishPanel.Slot }\n\t\t\t\tPostPublishExtension={ PluginPostPublishPanel.Slot }\n\t\t\t/>\n\t\t);\n\t} else if ( hasNonPostEntityChanges || hasPostMetaChanges ) {\n\t\tunmountableContent = (\n\t\t\t<div className=\"editor-layout__toggle-entities-saved-states-panel\">\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\tclassName=\"editor-layout__toggle-entities-saved-states-panel-button\"\n\t\t\t\t\tonClick={ openEntitiesSavedStates }\n\t\t\t\t\taria-expanded={ false }\n\t\t\t\t>\n\t\t\t\t\t{ __( 'Open save panel' ) }\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\tunmountableContent = (\n\t\t\t<div className=\"editor-layout__toggle-publish-panel\">\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\tclassName=\"editor-layout__toggle-publish-panel-button\"\n\t\t\t\t\tonClick={ togglePublishSidebar }\n\t\t\t\t\taria-expanded={ false }\n\t\t\t\t>\n\t\t\t\t\t{ __( 'Open publish panel' ) }\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t// Since EntitiesSavedStates controls its own panel, we can keep it\n\t// always mounted to retain its own component state (such as checkboxes).\n\treturn (\n\t\t<>\n\t\t\t{ isEntitiesSavedStatesOpen && (\n\t\t\t\t<EntitiesSavedStates close={ closeEntitiesSavedStates } />\n\t\t\t) }\n\t\t\t<Slot bubblesVirtually />\n\t\t\t{ ! isEntitiesSavedStatesOpen && unmountableContent }\n\t\t</>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { Button } from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\nimport { store as keyboardShortcutsStore } from '@wordpress/keyboard-shortcuts';\nimport { useEffect, useRef } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\nimport PostTextEditor from '../post-text-editor';\nimport PostTitleRaw from '../post-title/post-title-raw';\n\nexport default function TextEditor( { autoFocus = false } ) {\n\tconst { switchEditorMode } = useDispatch( editorStore );\n\tconst { shortcut, isRichEditingEnabled } = useSelect( ( select ) => {\n\t\tconst { getEditorSettings } = select( editorStore );\n\t\tconst { getShortcutRepresentation } = select( keyboardShortcutsStore );\n\n\t\treturn {\n\t\t\tshortcut: getShortcutRepresentation( 'core/editor/toggle-mode' ),\n\t\t\tisRichEditingEnabled: getEditorSettings().richEditingEnabled,\n\t\t};\n\t}, [] );\n\n\tconst titleRef = useRef();\n\tuseEffect( () => {\n\t\tif ( autoFocus ) {\n\t\t\treturn;\n\t\t}\n\t\ttitleRef?.current?.focus();\n\t}, [ autoFocus ] );\n\n\treturn (\n\t\t<div className=\"editor-text-editor\">\n\t\t\t{ isRichEditingEnabled && (\n\t\t\t\t<div className=\"editor-text-editor__toolbar\">\n\t\t\t\t\t<h2>{ __( 'Editing code' ) }</h2>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\tonClick={ () => switchEditorMode( 'visual' ) }\n\t\t\t\t\t\tshortcut={ shortcut }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Exit code editor' ) }\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t) }\n\t\t\t<div className=\"editor-text-editor__body\">\n\t\t\t\t<PostTitleRaw ref={ titleRef } />\n\t\t\t\t<PostTextEditor />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { useEffect, useState } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport { __experimentalConfirmDialog as ConfirmDialog } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\n/**\n * Component that:\n *\n * - Displays a 'Edit your template to edit this block' notification when the\n *   user is focusing on editing page content and clicks on a disabled template\n *   block.\n * - Displays a 'Edit your template to edit this block' dialog when the user\n *   is focusing on editing page conetnt and double clicks on a disabled\n *   template block.\n *\n * @param {Object}                                 props\n * @param {import('react').RefObject<HTMLElement>} props.contentRef Ref to the block\n *                                                                  editor iframe canvas.\n */\nexport default function EditTemplateBlocksNotification( { contentRef } ) {\n\tconst { onNavigateToEntityRecord, templateId } = useSelect( ( select ) => {\n\t\tconst { getEditorSettings, getCurrentTemplateId } =\n\t\t\tselect( editorStore );\n\n\t\treturn {\n\t\t\tonNavigateToEntityRecord:\n\t\t\t\tgetEditorSettings().onNavigateToEntityRecord,\n\t\t\ttemplateId: getCurrentTemplateId(),\n\t\t};\n\t}, [] );\n\n\tconst canEditTemplate = useSelect(\n\t\t( select ) =>\n\t\t\tselect( coreStore ).canUser( 'create', 'templates' ) ?? false\n\t);\n\n\tconst [ isDialogOpen, setIsDialogOpen ] = useState( false );\n\n\tuseEffect( () => {\n\t\tconst handleDblClick = ( event ) => {\n\t\t\tif ( ! canEditTemplate ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( ! event.target.classList.contains( 'is-root-container' ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsetIsDialogOpen( true );\n\t\t};\n\n\t\tconst canvas = contentRef.current;\n\t\tcanvas?.addEventListener( 'dblclick', handleDblClick );\n\t\treturn () => {\n\t\t\tcanvas?.removeEventListener( 'dblclick', handleDblClick );\n\t\t};\n\t}, [ contentRef, canEditTemplate ] );\n\n\tif ( ! canEditTemplate ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<ConfirmDialog\n\t\t\tisOpen={ isDialogOpen }\n\t\t\tconfirmButtonText={ __( 'Edit template' ) }\n\t\t\tonConfirm={ () => {\n\t\t\t\tsetIsDialogOpen( false );\n\t\t\t\tonNavigateToEntityRecord( {\n\t\t\t\t\tpostId: templateId,\n\t\t\t\t\tpostType: 'wp_template',\n\t\t\t\t} );\n\t\t\t} }\n\t\t\tonCancel={ () => setIsDialogOpen( false ) }\n\t\t\tsize=\"medium\"\n\t\t>\n\t\t\t{ __(\n\t\t\t\t'You’ve tried to select a block that is part of a template, which may be used on other posts and pages. Would you like to edit the template?'\n\t\t\t) }\n\t\t</ConfirmDialog>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { LEFT, RIGHT } from '@wordpress/keycodes';\nimport {\n\tVisuallyHidden,\n\tTooltip,\n\t__unstableMotion as motion,\n} from '@wordpress/components';\n\nconst DELTA_DISTANCE = 20; // The distance to resize per keydown in pixels.\n\nexport default function ResizeHandle( { direction, resizeWidthBy } ) {\n\tfunction handleKeyDown( event ) {\n\t\tconst { keyCode } = event;\n\n\t\tif (\n\t\t\t( direction === 'left' && keyCode === LEFT ) ||\n\t\t\t( direction === 'right' && keyCode === RIGHT )\n\t\t) {\n\t\t\tresizeWidthBy( DELTA_DISTANCE );\n\t\t} else if (\n\t\t\t( direction === 'left' && keyCode === RIGHT ) ||\n\t\t\t( direction === 'right' && keyCode === LEFT )\n\t\t) {\n\t\t\tresizeWidthBy( -DELTA_DISTANCE );\n\t\t}\n\t}\n\n\tconst resizeHandleVariants = {\n\t\tactive: {\n\t\t\topacity: 1,\n\t\t\tscaleY: 1.3,\n\t\t},\n\t};\n\n\tconst resizableHandleHelpId = `resizable-editor__resize-help-${ direction }`;\n\n\treturn (\n\t\t<>\n\t\t\t<Tooltip text={ __( 'Drag to resize' ) }>\n\t\t\t\t<motion.button\n\t\t\t\t\tclassName={ `editor-resizable-editor__resize-handle is-${ direction }` }\n\t\t\t\t\taria-label={ __( 'Drag to resize' ) }\n\t\t\t\t\taria-describedby={ resizableHandleHelpId }\n\t\t\t\t\tonKeyDown={ handleKeyDown }\n\t\t\t\t\tvariants={ resizeHandleVariants }\n\t\t\t\t\twhileFocus=\"active\"\n\t\t\t\t\twhileHover=\"active\"\n\t\t\t\t\twhileTap=\"active\"\n\t\t\t\t\tkey=\"handle\"\n\t\t\t\t\trole=\"separator\"\n\t\t\t\t\taria-orientation=\"vertical\"\n\t\t\t\t/>\n\t\t\t</Tooltip>\n\t\t\t<VisuallyHidden id={ resizableHandleHelpId }>\n\t\t\t\t{ __( 'Use left and right arrow keys to resize the canvas.' ) }\n\t\t\t</VisuallyHidden>\n\t\t</>\n\t);\n}\n","/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * WordPress dependencies\n */\nimport { useState, useRef, useCallback } from '@wordpress/element';\nimport { ResizableBox } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport ResizeHandle from './resize-handle';\n\n// Removes the inline styles in the drag handles.\nconst HANDLE_STYLES_OVERRIDE = {\n\tposition: undefined,\n\tuserSelect: undefined,\n\tcursor: undefined,\n\twidth: undefined,\n\theight: undefined,\n\ttop: undefined,\n\tright: undefined,\n\tbottom: undefined,\n\tleft: undefined,\n};\n\nfunction ResizableEditor( { className, enableResizing, height, children } ) {\n\tconst [ width, setWidth ] = useState( '100%' );\n\tconst resizableRef = useRef();\n\tconst resizeWidthBy = useCallback( ( deltaPixels ) => {\n\t\tif ( resizableRef.current ) {\n\t\t\tsetWidth( resizableRef.current.offsetWidth + deltaPixels );\n\t\t}\n\t}, [] );\n\treturn (\n\t\t<ResizableBox\n\t\t\tclassName={ clsx( 'editor-resizable-editor', className, {\n\t\t\t\t'is-resizable': enableResizing,\n\t\t\t} ) }\n\t\t\tref={ ( api ) => {\n\t\t\t\tresizableRef.current = api?.resizable;\n\t\t\t} }\n\t\t\tsize={ {\n\t\t\t\twidth: enableResizing ? width : '100%',\n\t\t\t\theight: enableResizing && height ? height : '100%',\n\t\t\t} }\n\t\t\tonResizeStop={ ( event, direction, element ) => {\n\t\t\t\tsetWidth( element.style.width );\n\t\t\t} }\n\t\t\tminWidth={ 300 }\n\t\t\tmaxWidth=\"100%\"\n\t\t\tmaxHeight=\"100%\"\n\t\t\tenable={ {\n\t\t\t\tleft: enableResizing,\n\t\t\t\tright: enableResizing,\n\t\t\t} }\n\t\t\tshowHandle={ enableResizing }\n\t\t\t// The editor is centered horizontally, resizing it only\n\t\t\t// moves half the distance. Hence double the ratio to correctly\n\t\t\t// align the cursor to the resizer handle.\n\t\t\tresizeRatio={ 2 }\n\t\t\thandleComponent={ {\n\t\t\t\tleft: (\n\t\t\t\t\t<ResizeHandle\n\t\t\t\t\t\tdirection=\"left\"\n\t\t\t\t\t\tresizeWidthBy={ resizeWidthBy }\n\t\t\t\t\t/>\n\t\t\t\t),\n\t\t\t\tright: (\n\t\t\t\t\t<ResizeHandle\n\t\t\t\t\t\tdirection=\"right\"\n\t\t\t\t\t\tresizeWidthBy={ resizeWidthBy }\n\t\t\t\t\t/>\n\t\t\t\t),\n\t\t\t} }\n\t\t\thandleClasses={ undefined }\n\t\t\thandleStyles={ {\n\t\t\t\tleft: HANDLE_STYLES_OVERRIDE,\n\t\t\t\tright: HANDLE_STYLES_OVERRIDE,\n\t\t\t} }\n\t\t>\n\t\t\t{ children }\n\t\t</ResizableBox>\n\t);\n}\n\nexport default ResizableEditor;\n","/**\n * WordPress dependencies\n */\nimport { useRefEffect } from '@wordpress/compose';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport { unlock } from '../lock-unlock';\n\nconst DISTANCE_THRESHOLD = 500;\n\nfunction clamp( value, min, max ) {\n\treturn Math.min( Math.max( value, min ), max );\n}\n\nfunction distanceFromRect( x, y, rect ) {\n\tconst dx = x - clamp( x, rect.left, rect.right );\n\tconst dy = y - clamp( y, rect.top, rect.bottom );\n\treturn Math.sqrt( dx * dx + dy * dy );\n}\n\nexport default function useSelectNearestEditableBlock( {\n\tisEnabled = true,\n} = {} ) {\n\tconst { getEnabledClientIdsTree, getBlockName, getBlockOrder } = unlock(\n\t\tuseSelect( blockEditorStore )\n\t);\n\tconst { selectBlock } = useDispatch( blockEditorStore );\n\n\treturn useRefEffect(\n\t\t( element ) => {\n\t\t\tif ( ! isEnabled ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst selectNearestEditableBlock = ( x, y ) => {\n\t\t\t\tconst editableBlockClientIds =\n\t\t\t\t\tgetEnabledClientIdsTree().flatMap( ( { clientId } ) => {\n\t\t\t\t\t\tconst blockName = getBlockName( clientId );\n\t\t\t\t\t\tif ( blockName === 'core/template-part' ) {\n\t\t\t\t\t\t\treturn [];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( blockName === 'core/post-content' ) {\n\t\t\t\t\t\t\tconst innerBlocks = getBlockOrder( clientId );\n\t\t\t\t\t\t\tif ( innerBlocks.length ) {\n\t\t\t\t\t\t\t\treturn innerBlocks;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn [ clientId ];\n\t\t\t\t\t} );\n\n\t\t\t\tlet nearestDistance = Infinity,\n\t\t\t\t\tnearestClientId = null;\n\n\t\t\t\tfor ( const clientId of editableBlockClientIds ) {\n\t\t\t\t\tconst block = element.querySelector(\n\t\t\t\t\t\t`[data-block=\"${ clientId }\"]`\n\t\t\t\t\t);\n\t\t\t\t\tif ( ! block ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tconst rect = block.getBoundingClientRect();\n\t\t\t\t\tconst distance = distanceFromRect( x, y, rect );\n\t\t\t\t\tif (\n\t\t\t\t\t\tdistance < nearestDistance &&\n\t\t\t\t\t\tdistance < DISTANCE_THRESHOLD\n\t\t\t\t\t) {\n\t\t\t\t\t\tnearestDistance = distance;\n\t\t\t\t\t\tnearestClientId = clientId;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( nearestClientId ) {\n\t\t\t\t\tselectBlock( nearestClientId );\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst handleClick = ( event ) => {\n\t\t\t\tconst shouldSelect =\n\t\t\t\t\tevent.target === element ||\n\t\t\t\t\tevent.target.classList.contains( 'is-root-container' );\n\t\t\t\tif ( shouldSelect ) {\n\t\t\t\t\tselectNearestEditableBlock( event.clientX, event.clientY );\n\t\t\t\t}\n\t\t\t};\n\n\t\t\telement.addEventListener( 'click', handleClick );\n\t\t\treturn () => element.removeEventListener( 'click', handleClick );\n\t\t},\n\t\t[ isEnabled ]\n\t);\n}\n","/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tBlockList,\n\tstore as blockEditorStore,\n\t__unstableUseTypewriter as useTypewriter,\n\t__unstableUseTypingObserver as useTypingObserver,\n\tuseSettings,\n\tRecursionProvider,\n\tprivateApis as blockEditorPrivateApis,\n\t__experimentalUseResizeCanvas as useResizeCanvas,\n} from '@wordpress/block-editor';\nimport { useEffect, useRef, useMemo } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport { parse } from '@wordpress/blocks';\nimport { store as coreStore } from '@wordpress/core-data';\nimport {\n\tuseMergeRefs,\n\tuseViewportMatch,\n\tuseResizeObserver,\n} from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport PostTitle from '../post-title';\nimport { store as editorStore } from '../../store';\nimport { unlock } from '../../lock-unlock';\nimport EditTemplateBlocksNotification from './edit-template-blocks-notification';\nimport ResizableEditor from '../resizable-editor';\nimport useSelectNearestEditableBlock from '../../hooks/use-select-nearest-editable-block';\nimport {\n\tNAVIGATION_POST_TYPE,\n\tPATTERN_POST_TYPE,\n\tTEMPLATE_PART_POST_TYPE,\n\tTEMPLATE_POST_TYPE,\n} from '../../store/constants';\n\nconst {\n\tLayoutStyle,\n\tuseLayoutClasses,\n\tuseLayoutStyles,\n\tExperimentalBlockCanvas: BlockCanvas,\n\tuseFlashEditableBlocks,\n} = unlock( blockEditorPrivateApis );\n\n/**\n * These post types have a special editor where they don't allow you to fill the title\n * and they don't apply the layout styles.\n */\nconst DESIGN_POST_TYPES = [\n\tPATTERN_POST_TYPE,\n\tTEMPLATE_POST_TYPE,\n\tNAVIGATION_POST_TYPE,\n\tTEMPLATE_PART_POST_TYPE,\n];\n\n/**\n * Given an array of nested blocks, find the first Post Content\n * block inside it, recursing through any nesting levels,\n * and return its attributes.\n *\n * @param {Array} blocks A list of blocks.\n *\n * @return {Object | undefined} The Post Content block.\n */\nfunction getPostContentAttributes( blocks ) {\n\tfor ( let i = 0; i < blocks.length; i++ ) {\n\t\tif ( blocks[ i ].name === 'core/post-content' ) {\n\t\t\treturn blocks[ i ].attributes;\n\t\t}\n\t\tif ( blocks[ i ].innerBlocks.length ) {\n\t\t\tconst nestedPostContent = getPostContentAttributes(\n\t\t\t\tblocks[ i ].innerBlocks\n\t\t\t);\n\n\t\t\tif ( nestedPostContent ) {\n\t\t\t\treturn nestedPostContent;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction checkForPostContentAtRootLevel( blocks ) {\n\tfor ( let i = 0; i < blocks.length; i++ ) {\n\t\tif ( blocks[ i ].name === 'core/post-content' ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction VisualEditor( {\n\t// Ideally as we unify post and site editors, we won't need these props.\n\tautoFocus,\n\tstyles,\n\tdisableIframe = false,\n\tiframeProps,\n\tcontentRef,\n\tclassName,\n} ) {\n\tconst [ resizeObserver, sizes ] = useResizeObserver();\n\tconst isMobileViewport = useViewportMatch( 'small', '<' );\n\tconst {\n\t\trenderingMode,\n\t\tpostContentAttributes,\n\t\teditedPostTemplate = {},\n\t\twrapperBlockName,\n\t\twrapperUniqueId,\n\t\tdeviceType,\n\t\tisFocusedEntity,\n\t\tisDesignPostType,\n\t\tpostType,\n\t\tisPreview,\n\t} = useSelect( ( select ) => {\n\t\tconst {\n\t\t\tgetCurrentPostId,\n\t\t\tgetCurrentPostType,\n\t\t\tgetCurrentTemplateId,\n\t\t\tgetEditorSettings,\n\t\t\tgetRenderingMode,\n\t\t\tgetDeviceType,\n\t\t} = select( editorStore );\n\t\tconst { getPostType, canUser, getEditedEntityRecord } =\n\t\t\tselect( coreStore );\n\t\tconst postTypeSlug = getCurrentPostType();\n\t\tconst _renderingMode = getRenderingMode();\n\t\tlet _wrapperBlockName;\n\n\t\tif ( postTypeSlug === PATTERN_POST_TYPE ) {\n\t\t\t_wrapperBlockName = 'core/block';\n\t\t} else if ( _renderingMode === 'post-only' ) {\n\t\t\t_wrapperBlockName = 'core/post-content';\n\t\t}\n\n\t\tconst editorSettings = getEditorSettings();\n\t\tconst supportsTemplateMode = editorSettings.supportsTemplateMode;\n\t\tconst postTypeObject = getPostType( postTypeSlug );\n\t\tconst canEditTemplate = canUser( 'create', 'templates' );\n\t\tconst currentTemplateId = getCurrentTemplateId();\n\t\tconst template = currentTemplateId\n\t\t\t? getEditedEntityRecord(\n\t\t\t\t\t'postType',\n\t\t\t\t\tTEMPLATE_POST_TYPE,\n\t\t\t\t\tcurrentTemplateId\n\t\t\t  )\n\t\t\t: undefined;\n\n\t\treturn {\n\t\t\trenderingMode: _renderingMode,\n\t\t\tpostContentAttributes: editorSettings.postContentAttributes,\n\t\t\tisDesignPostType: DESIGN_POST_TYPES.includes( postTypeSlug ),\n\t\t\t// Post template fetch returns a 404 on classic themes, which\n\t\t\t// messes with e2e tests, so check it's a block theme first.\n\t\t\teditedPostTemplate:\n\t\t\t\tpostTypeObject?.viewable &&\n\t\t\t\tsupportsTemplateMode &&\n\t\t\t\tcanEditTemplate\n\t\t\t\t\t? template\n\t\t\t\t\t: undefined,\n\t\t\twrapperBlockName: _wrapperBlockName,\n\t\t\twrapperUniqueId: getCurrentPostId(),\n\t\t\tdeviceType: getDeviceType(),\n\t\t\tisFocusedEntity: !! editorSettings.onNavigateToPreviousEntityRecord,\n\t\t\tpostType: postTypeSlug,\n\t\t\tisPreview: editorSettings.__unstableIsPreviewMode,\n\t\t};\n\t}, [] );\n\tconst { isCleanNewPost } = useSelect( editorStore );\n\tconst {\n\t\thasRootPaddingAwareAlignments,\n\t\tthemeHasDisabledLayoutStyles,\n\t\tthemeSupportsLayout,\n\t\tisZoomOutMode,\n\t} = useSelect( ( select ) => {\n\t\tconst { getSettings, __unstableGetEditorMode } =\n\t\t\tselect( blockEditorStore );\n\t\tconst _settings = getSettings();\n\t\treturn {\n\t\t\tthemeHasDisabledLayoutStyles: _settings.disableLayoutStyles,\n\t\t\tthemeSupportsLayout: _settings.supportsLayout,\n\t\t\thasRootPaddingAwareAlignments:\n\t\t\t\t_settings.__experimentalFeatures?.useRootPaddingAwareAlignments,\n\t\t\tisZoomOutMode: __unstableGetEditorMode() === 'zoom-out',\n\t\t};\n\t}, [] );\n\n\tconst deviceStyles = useResizeCanvas( deviceType );\n\tconst [ globalLayoutSettings ] = useSettings( 'layout' );\n\n\t// fallbackLayout is used if there is no Post Content,\n\t// and for Post Title.\n\tconst fallbackLayout = useMemo( () => {\n\t\tif ( renderingMode !== 'post-only' || isDesignPostType ) {\n\t\t\treturn { type: 'default' };\n\t\t}\n\n\t\tif ( themeSupportsLayout ) {\n\t\t\t// We need to ensure support for wide and full alignments,\n\t\t\t// so we add the constrained type.\n\t\t\treturn { ...globalLayoutSettings, type: 'constrained' };\n\t\t}\n\t\t// Set default layout for classic themes so all alignments are supported.\n\t\treturn { type: 'default' };\n\t}, [\n\t\trenderingMode,\n\t\tthemeSupportsLayout,\n\t\tglobalLayoutSettings,\n\t\tisDesignPostType,\n\t] );\n\n\tconst newestPostContentAttributes = useMemo( () => {\n\t\tif (\n\t\t\t! editedPostTemplate?.content &&\n\t\t\t! editedPostTemplate?.blocks &&\n\t\t\tpostContentAttributes\n\t\t) {\n\t\t\treturn postContentAttributes;\n\t\t}\n\t\t// When in template editing mode, we can access the blocks directly.\n\t\tif ( editedPostTemplate?.blocks ) {\n\t\t\treturn getPostContentAttributes( editedPostTemplate?.blocks );\n\t\t}\n\t\t// If there are no blocks, we have to parse the content string.\n\t\t// Best double-check it's a string otherwise the parse function gets unhappy.\n\t\tconst parseableContent =\n\t\t\ttypeof editedPostTemplate?.content === 'string'\n\t\t\t\t? editedPostTemplate?.content\n\t\t\t\t: '';\n\n\t\treturn getPostContentAttributes( parse( parseableContent ) ) || {};\n\t}, [\n\t\teditedPostTemplate?.content,\n\t\teditedPostTemplate?.blocks,\n\t\tpostContentAttributes,\n\t] );\n\n\tconst hasPostContentAtRootLevel = useMemo( () => {\n\t\tif ( ! editedPostTemplate?.content && ! editedPostTemplate?.blocks ) {\n\t\t\treturn false;\n\t\t}\n\t\t// When in template editing mode, we can access the blocks directly.\n\t\tif ( editedPostTemplate?.blocks ) {\n\t\t\treturn checkForPostContentAtRootLevel( editedPostTemplate?.blocks );\n\t\t}\n\t\t// If there are no blocks, we have to parse the content string.\n\t\t// Best double-check it's a string otherwise the parse function gets unhappy.\n\t\tconst parseableContent =\n\t\t\ttypeof editedPostTemplate?.content === 'string'\n\t\t\t\t? editedPostTemplate?.content\n\t\t\t\t: '';\n\n\t\treturn (\n\t\t\tcheckForPostContentAtRootLevel( parse( parseableContent ) ) || false\n\t\t);\n\t}, [ editedPostTemplate?.content, editedPostTemplate?.blocks ] );\n\n\tconst { layout = {}, align = '' } = newestPostContentAttributes || {};\n\n\tconst postContentLayoutClasses = useLayoutClasses(\n\t\tnewestPostContentAttributes,\n\t\t'core/post-content'\n\t);\n\n\tconst blockListLayoutClass = clsx(\n\t\t{\n\t\t\t'is-layout-flow': ! themeSupportsLayout,\n\t\t},\n\t\tthemeSupportsLayout && postContentLayoutClasses,\n\t\talign && `align${ align }`\n\t);\n\n\tconst postContentLayoutStyles = useLayoutStyles(\n\t\tnewestPostContentAttributes,\n\t\t'core/post-content',\n\t\t'.block-editor-block-list__layout.is-root-container'\n\t);\n\n\t// Update type for blocks using legacy layouts.\n\tconst postContentLayout = useMemo( () => {\n\t\treturn layout &&\n\t\t\t( layout?.type === 'constrained' ||\n\t\t\t\tlayout?.inherit ||\n\t\t\t\tlayout?.contentSize ||\n\t\t\t\tlayout?.wideSize )\n\t\t\t? { ...globalLayoutSettings, ...layout, type: 'constrained' }\n\t\t\t: { ...globalLayoutSettings, ...layout, type: 'default' };\n\t}, [\n\t\tlayout?.type,\n\t\tlayout?.inherit,\n\t\tlayout?.contentSize,\n\t\tlayout?.wideSize,\n\t\tglobalLayoutSettings,\n\t] );\n\n\t// If there is a Post Content block we use its layout for the block list;\n\t// if not, this must be a classic theme, in which case we use the fallback layout.\n\tconst blockListLayout = postContentAttributes\n\t\t? postContentLayout\n\t\t: fallbackLayout;\n\n\tconst postEditorLayout =\n\t\tblockListLayout?.type === 'default' && ! hasPostContentAtRootLevel\n\t\t\t? fallbackLayout\n\t\t\t: blockListLayout;\n\tconst observeTypingRef = useTypingObserver();\n\tconst titleRef = useRef();\n\tuseEffect( () => {\n\t\tif ( ! autoFocus || ! isCleanNewPost() ) {\n\t\t\treturn;\n\t\t}\n\t\ttitleRef?.current?.focus();\n\t}, [ autoFocus, isCleanNewPost ] );\n\n\t// Add some styles for alignwide/alignfull Post Content and its children.\n\tconst alignCSS = `.is-root-container.alignwide { max-width: var(--wp--style--global--wide-size); margin-left: auto; margin-right: auto;}\n\t\t.is-root-container.alignwide:where(.is-layout-flow) > :not(.alignleft):not(.alignright) { max-width: var(--wp--style--global--wide-size);}\n\t\t.is-root-container.alignfull { max-width: none; margin-left: auto; margin-right: auto;}\n\t\t.is-root-container.alignfull:where(.is-layout-flow) > :not(.alignleft):not(.alignright) { max-width: none;}`;\n\n\tconst localRef = useRef();\n\tconst typewriterRef = useTypewriter();\n\tcontentRef = useMergeRefs( [\n\t\tlocalRef,\n\t\tcontentRef,\n\t\trenderingMode === 'post-only' ? typewriterRef : null,\n\t\tuseFlashEditableBlocks( {\n\t\t\tisEnabled: renderingMode === 'template-locked',\n\t\t} ),\n\t\tuseSelectNearestEditableBlock( {\n\t\t\tisEnabled: renderingMode === 'template-locked',\n\t\t} ),\n\t] );\n\n\tconst zoomOutProps = isZoomOutMode\n\t\t? {\n\t\t\t\tscale: 'default',\n\t\t\t\tframeSize: '20px',\n\t\t  }\n\t\t: {};\n\n\tconst forceFullHeight = postType === NAVIGATION_POST_TYPE;\n\tconst enableResizing =\n\t\t[\n\t\t\tNAVIGATION_POST_TYPE,\n\t\t\tTEMPLATE_PART_POST_TYPE,\n\t\t\tPATTERN_POST_TYPE,\n\t\t].includes( postType ) &&\n\t\t// Disable in previews / view mode.\n\t\t! isPreview &&\n\t\t// Disable resizing in mobile viewport.\n\t\t! isMobileViewport &&\n\t\t// Dsiable resizing in zoomed-out mode.\n\t\t! isZoomOutMode;\n\tconst shouldIframe =\n\t\t! disableIframe || [ 'Tablet', 'Mobile' ].includes( deviceType );\n\n\tconst iframeStyles = useMemo( () => {\n\t\treturn [\n\t\t\t...( styles ?? [] ),\n\t\t\t{\n\t\t\t\tcss: `.is-root-container{display:flow-root;${\n\t\t\t\t\t// Some themes will have `min-height: 100vh` for the root container,\n\t\t\t\t\t// which isn't a requirement in auto resize mode.\n\t\t\t\t\tenableResizing ? 'min-height:0!important;' : ''\n\t\t\t\t}}`,\n\t\t\t},\n\t\t];\n\t}, [ styles, enableResizing ] );\n\n\treturn (\n\t\t<div\n\t\t\tclassName={ clsx(\n\t\t\t\t'editor-visual-editor',\n\t\t\t\t// this class is here for backward compatibility reasons.\n\t\t\t\t'edit-post-visual-editor',\n\t\t\t\tclassName,\n\t\t\t\t{\n\t\t\t\t\t'has-padding': isFocusedEntity || enableResizing,\n\t\t\t\t\t'is-resizable': enableResizing,\n\t\t\t\t\t'is-iframed': shouldIframe,\n\t\t\t\t}\n\t\t\t) }\n\t\t>\n\t\t\t<ResizableEditor\n\t\t\t\tenableResizing={ enableResizing }\n\t\t\t\theight={\n\t\t\t\t\tsizes.height && ! forceFullHeight ? sizes.height : '100%'\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t<BlockCanvas\n\t\t\t\t\tshouldIframe={ shouldIframe }\n\t\t\t\t\tcontentRef={ contentRef }\n\t\t\t\t\tstyles={ iframeStyles }\n\t\t\t\t\theight=\"100%\"\n\t\t\t\t\tiframeProps={ {\n\t\t\t\t\t\t...iframeProps,\n\t\t\t\t\t\t...zoomOutProps,\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t...iframeProps?.style,\n\t\t\t\t\t\t\t...deviceStyles,\n\t\t\t\t\t\t},\n\t\t\t\t\t} }\n\t\t\t\t>\n\t\t\t\t\t{ themeSupportsLayout &&\n\t\t\t\t\t\t! themeHasDisabledLayoutStyles &&\n\t\t\t\t\t\trenderingMode === 'post-only' &&\n\t\t\t\t\t\t! isDesignPostType && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<LayoutStyle\n\t\t\t\t\t\t\t\t\tselector=\".editor-visual-editor__post-title-wrapper\"\n\t\t\t\t\t\t\t\t\tlayout={ fallbackLayout }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<LayoutStyle\n\t\t\t\t\t\t\t\t\tselector=\".block-editor-block-list__layout.is-root-container\"\n\t\t\t\t\t\t\t\t\tlayout={ postEditorLayout }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{ align && <LayoutStyle css={ alignCSS } /> }\n\t\t\t\t\t\t\t\t{ postContentLayoutStyles && (\n\t\t\t\t\t\t\t\t\t<LayoutStyle\n\t\t\t\t\t\t\t\t\t\tlayout={ postContentLayout }\n\t\t\t\t\t\t\t\t\t\tcss={ postContentLayoutStyles }\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t) }\n\t\t\t\t\t{ renderingMode === 'post-only' && ! isDesignPostType && (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={ clsx(\n\t\t\t\t\t\t\t\t'editor-visual-editor__post-title-wrapper',\n\t\t\t\t\t\t\t\t// The following class is only here for backward comapatibility\n\t\t\t\t\t\t\t\t// some themes might be using it to style the post title.\n\t\t\t\t\t\t\t\t'edit-post-visual-editor__post-title-wrapper',\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t'has-global-padding':\n\t\t\t\t\t\t\t\t\t\thasRootPaddingAwareAlignments,\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\tcontentEditable={ false }\n\t\t\t\t\t\t\tref={ observeTypingRef }\n\t\t\t\t\t\t\tstyle={ {\n\t\t\t\t\t\t\t\t// This is using inline styles\n\t\t\t\t\t\t\t\t// so it's applied for both iframed and non iframed editors.\n\t\t\t\t\t\t\t\tmarginTop: '4rem',\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<PostTitle ref={ titleRef } />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) }\n\t\t\t\t\t<RecursionProvider\n\t\t\t\t\t\tblockName={ wrapperBlockName }\n\t\t\t\t\t\tuniqueId={ wrapperUniqueId }\n\t\t\t\t\t>\n\t\t\t\t\t\t<BlockList\n\t\t\t\t\t\t\tclassName={ clsx(\n\t\t\t\t\t\t\t\t'is-' + deviceType.toLowerCase() + '-preview',\n\t\t\t\t\t\t\t\trenderingMode !== 'post-only' ||\n\t\t\t\t\t\t\t\t\tisDesignPostType\n\t\t\t\t\t\t\t\t\t? 'wp-site-blocks'\n\t\t\t\t\t\t\t\t\t: `${ blockListLayoutClass } wp-block-post-content` // Ensure root level blocks receive default/flow blockGap styling rules.\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\tlayout={ blockListLayout }\n\t\t\t\t\t\t\tdropZoneElement={\n\t\t\t\t\t\t\t\t// When iframed, pass in the html element of the iframe to\n\t\t\t\t\t\t\t\t// ensure the drop zone extends to the edges of the iframe.\n\t\t\t\t\t\t\t\tdisableIframe\n\t\t\t\t\t\t\t\t\t? localRef.current\n\t\t\t\t\t\t\t\t\t: localRef.current?.parentNode\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t__unstableDisableDropZone={\n\t\t\t\t\t\t\t\t// In template preview mode, disable drop zones at the root of the template.\n\t\t\t\t\t\t\t\trenderingMode === 'template-locked'\n\t\t\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t\t\t: false\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{ renderingMode === 'template-locked' && (\n\t\t\t\t\t\t\t<EditTemplateBlocksNotification\n\t\t\t\t\t\t\t\tcontentRef={ localRef }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</RecursionProvider>\n\t\t\t\t\t{\n\t\t\t\t\t\t// Avoid resize listeners when not needed,\n\t\t\t\t\t\t// these will trigger unnecessary re-renders\n\t\t\t\t\t\t// when animating the iframe width.\n\t\t\t\t\t\tenableResizing && resizeObserver\n\t\t\t\t\t}\n\t\t\t\t</BlockCanvas>\n\t\t\t</ResizableEditor>\n\t\t</div>\n\t);\n}\n\nexport default VisualEditor;\n","/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * WordPress dependencies\n */\nimport { InterfaceSkeleton, ComplementaryArea } from '@wordpress/interface';\nimport { useSelect } from '@wordpress/data';\nimport { __, _x } from '@wordpress/i18n';\nimport { store as preferencesStore } from '@wordpress/preferences';\nimport {\n\tstore as blockEditorStore,\n\tBlockBreadcrumb,\n\tBlockToolbar,\n} from '@wordpress/block-editor';\nimport { store as keyboardShortcutsStore } from '@wordpress/keyboard-shortcuts';\nimport { useViewportMatch } from '@wordpress/compose';\nimport { useState, useCallback } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\nimport EditorNotices from '../editor-notices';\nimport Header from '../header';\nimport InserterSidebar from '../inserter-sidebar';\nimport ListViewSidebar from '../list-view-sidebar';\nimport SavePublishPanels from '../save-publish-panels';\nimport TextEditor from '../text-editor';\nimport VisualEditor from '../visual-editor';\nimport EditorContentSlotFill from './content-slot-fill';\n\nconst interfaceLabels = {\n\t/* translators: accessibility text for the editor top bar landmark region. */\n\theader: __( 'Editor top bar' ),\n\t/* translators: accessibility text for the editor content landmark region. */\n\tbody: __( 'Editor content' ),\n\t/* translators: accessibility text for the editor settings landmark region. */\n\tsidebar: __( 'Editor settings' ),\n\t/* translators: accessibility text for the editor publish landmark region. */\n\tactions: __( 'Editor publish' ),\n\t/* translators: accessibility text for the editor footer landmark region. */\n\tfooter: __( 'Editor footer' ),\n};\n\nexport default function EditorInterface( {\n\tclassName,\n\tenableRegionNavigation,\n\tstyles,\n\tchildren,\n\tforceIsDirty,\n\tcontentRef,\n\tdisableIframe,\n\tautoFocus,\n\tcustomSaveButton,\n\tforceDisableBlockTools,\n\ttitle,\n\ticon,\n\tiframeProps,\n} ) {\n\tconst {\n\t\tmode,\n\t\tisRichEditingEnabled,\n\t\tisInserterOpened,\n\t\tisListViewOpened,\n\t\tisDistractionFree,\n\t\tisPreviewMode,\n\t\tpreviousShortcut,\n\t\tnextShortcut,\n\t\tshowBlockBreadcrumbs,\n\t\tdocumentLabel,\n\t\tblockEditorMode,\n\t} = useSelect( ( select ) => {\n\t\tconst { get } = select( preferencesStore );\n\t\tconst { getEditorSettings, getPostTypeLabel } = select( editorStore );\n\t\tconst editorSettings = getEditorSettings();\n\t\tconst postTypeLabel = getPostTypeLabel();\n\n\t\treturn {\n\t\t\tmode: select( editorStore ).getEditorMode(),\n\t\t\tisRichEditingEnabled: editorSettings.richEditingEnabled,\n\t\t\tisInserterOpened: select( editorStore ).isInserterOpened(),\n\t\t\tisListViewOpened: select( editorStore ).isListViewOpened(),\n\t\t\tisDistractionFree: get( 'core', 'distractionFree' ),\n\t\t\tisPreviewMode: editorSettings.__unstableIsPreviewMode,\n\t\t\tpreviousShortcut: select(\n\t\t\t\tkeyboardShortcutsStore\n\t\t\t).getAllShortcutKeyCombinations( 'core/editor/previous-region' ),\n\t\t\tnextShortcut: select(\n\t\t\t\tkeyboardShortcutsStore\n\t\t\t).getAllShortcutKeyCombinations( 'core/editor/next-region' ),\n\t\t\tshowBlockBreadcrumbs: get( 'core', 'showBlockBreadcrumbs' ),\n\t\t\t// translators: Default label for the Document in the Block Breadcrumb.\n\t\t\tdocumentLabel: postTypeLabel || _x( 'Document', 'noun' ),\n\t\t\tblockEditorMode:\n\t\t\t\tselect( blockEditorStore ).__unstableGetEditorMode(),\n\t\t};\n\t}, [] );\n\tconst isWideViewport = useViewportMatch( 'large' );\n\tconst isLargeViewport = useViewportMatch( 'medium' );\n\tconst secondarySidebarLabel = isListViewOpened\n\t\t? __( 'Document Overview' )\n\t\t: __( 'Block Library' );\n\n\t// Local state for save panel.\n\t// Note 'truthy' callback implies an open panel.\n\tconst [ entitiesSavedStatesCallback, setEntitiesSavedStatesCallback ] =\n\t\tuseState( false );\n\tconst closeEntitiesSavedStates = useCallback(\n\t\t( arg ) => {\n\t\t\tif ( typeof entitiesSavedStatesCallback === 'function' ) {\n\t\t\t\tentitiesSavedStatesCallback( arg );\n\t\t\t}\n\t\t\tsetEntitiesSavedStatesCallback( false );\n\t\t},\n\t\t[ entitiesSavedStatesCallback ]\n\t);\n\n\treturn (\n\t\t<InterfaceSkeleton\n\t\t\tenableRegionNavigation={ enableRegionNavigation }\n\t\t\tisDistractionFree={ isDistractionFree && isWideViewport }\n\t\t\tclassName={ clsx( 'editor-editor-interface', className, {\n\t\t\t\t'is-entity-save-view-open': !! entitiesSavedStatesCallback,\n\t\t\t\t'is-distraction-free':\n\t\t\t\t\tisDistractionFree && isWideViewport && ! isPreviewMode,\n\t\t\t} ) }\n\t\t\tlabels={ {\n\t\t\t\t...interfaceLabels,\n\t\t\t\tsecondarySidebar: secondarySidebarLabel,\n\t\t\t} }\n\t\t\theader={\n\t\t\t\t! isPreviewMode && (\n\t\t\t\t\t<Header\n\t\t\t\t\t\tforceIsDirty={ forceIsDirty }\n\t\t\t\t\t\tsetEntitiesSavedStatesCallback={\n\t\t\t\t\t\t\tsetEntitiesSavedStatesCallback\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcustomSaveButton={ customSaveButton }\n\t\t\t\t\t\tforceDisableBlockTools={ forceDisableBlockTools }\n\t\t\t\t\t\ttitle={ title }\n\t\t\t\t\t\ticon={ icon }\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t}\n\t\t\teditorNotices={ <EditorNotices /> }\n\t\t\tsecondarySidebar={\n\t\t\t\t! isPreviewMode &&\n\t\t\t\tmode === 'visual' &&\n\t\t\t\t( ( isInserterOpened && <InserterSidebar /> ) ||\n\t\t\t\t\t( isListViewOpened && <ListViewSidebar /> ) )\n\t\t\t}\n\t\t\tsidebar={\n\t\t\t\t! isPreviewMode &&\n\t\t\t\t! isDistractionFree && <ComplementaryArea.Slot scope=\"core\" />\n\t\t\t}\n\t\t\tcontent={\n\t\t\t\t<>\n\t\t\t\t\t{ ! isDistractionFree && ! isPreviewMode && (\n\t\t\t\t\t\t<EditorNotices />\n\t\t\t\t\t) }\n\n\t\t\t\t\t<EditorContentSlotFill.Slot>\n\t\t\t\t\t\t{ ( [ editorCanvasView ] ) =>\n\t\t\t\t\t\t\teditorCanvasView ? (\n\t\t\t\t\t\t\t\teditorCanvasView\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t{ ! isPreviewMode &&\n\t\t\t\t\t\t\t\t\t\t( mode === 'text' ||\n\t\t\t\t\t\t\t\t\t\t\t! isRichEditingEnabled ) && (\n\t\t\t\t\t\t\t\t\t\t\t<TextEditor\n\t\t\t\t\t\t\t\t\t\t\t\t// We should auto-focus the canvas (title) on load.\n\t\t\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line jsx-a11y/no-autofocus\n\t\t\t\t\t\t\t\t\t\t\t\tautoFocus={ autoFocus }\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t{ ! isPreviewMode &&\n\t\t\t\t\t\t\t\t\t\t! isLargeViewport &&\n\t\t\t\t\t\t\t\t\t\tmode === 'visual' && (\n\t\t\t\t\t\t\t\t\t\t\t<BlockToolbar hideDragHandle />\n\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t{ ( isPreviewMode ||\n\t\t\t\t\t\t\t\t\t\t( isRichEditingEnabled &&\n\t\t\t\t\t\t\t\t\t\t\tmode === 'visual' ) ) && (\n\t\t\t\t\t\t\t\t\t\t<VisualEditor\n\t\t\t\t\t\t\t\t\t\t\tstyles={ styles }\n\t\t\t\t\t\t\t\t\t\t\tcontentRef={ contentRef }\n\t\t\t\t\t\t\t\t\t\t\tdisableIframe={ disableIframe }\n\t\t\t\t\t\t\t\t\t\t\t// We should auto-focus the canvas (title) on load.\n\t\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line jsx-a11y/no-autofocus\n\t\t\t\t\t\t\t\t\t\t\tautoFocus={ autoFocus }\n\t\t\t\t\t\t\t\t\t\t\tiframeProps={ iframeProps }\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t{ children }\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t</EditorContentSlotFill.Slot>\n\t\t\t\t</>\n\t\t\t}\n\t\t\tfooter={\n\t\t\t\t! isPreviewMode &&\n\t\t\t\t! isDistractionFree &&\n\t\t\t\tisLargeViewport &&\n\t\t\t\tshowBlockBreadcrumbs &&\n\t\t\t\tisRichEditingEnabled &&\n\t\t\t\tblockEditorMode !== 'zoom-out' &&\n\t\t\t\tmode === 'visual' && (\n\t\t\t\t\t<BlockBreadcrumb rootLabelText={ documentLabel } />\n\t\t\t\t)\n\t\t\t}\n\t\t\tactions={\n\t\t\t\t! isPreviewMode ? (\n\t\t\t\t\t<SavePublishPanels\n\t\t\t\t\t\tcloseEntitiesSavedStates={ closeEntitiesSavedStates }\n\t\t\t\t\t\tisEntitiesSavedStatesOpen={\n\t\t\t\t\t\t\tentitiesSavedStatesCallback\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsetEntitiesSavedStatesCallback={\n\t\t\t\t\t\t\tsetEntitiesSavedStatesCallback\n\t\t\t\t\t\t}\n\t\t\t\t\t\tforceIsDirtyPublishPanel={ forceIsDirty }\n\t\t\t\t\t/>\n\t\t\t\t) : undefined\n\t\t\t}\n\t\t\tshortcuts={ {\n\t\t\t\tprevious: previousShortcut,\n\t\t\t\tnext: nextShortcut,\n\t\t\t} }\n\t\t/>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { privateApis as patternsPrivateApis } from '@wordpress/patterns';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\nimport { unlock } from '../../lock-unlock';\n\nconst { OverridesPanel } = unlock( patternsPrivateApis );\n\nexport default function PatternOverridesPanel() {\n\tconst supportsPatternOverridesPanel = useSelect(\n\t\t( select ) => select( editorStore ).getCurrentPostType() === 'wp_block',\n\t\t[]\n\t);\n\n\tif ( ! supportsPatternOverridesPanel ) {\n\t\treturn null;\n\t}\n\n\treturn <OverridesPanel />;\n}\n","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\n\nconst trash = (\n\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t<Path\n\t\t\tfillRule=\"evenodd\"\n\t\t\tclipRule=\"evenodd\"\n\t\t\td=\"M12 5.5A2.25 2.25 0 0 0 9.878 7h4.244A2.251 2.251 0 0 0 12 5.5ZM12 4a3.751 3.751 0 0 0-3.675 3H5v1.5h1.27l.818 8.997a2.75 2.75 0 0 0 2.739 2.501h4.347a2.75 2.75 0 0 0 2.738-2.5L17.73 8.5H19V7h-3.325A3.751 3.751 0 0 0 12 4Zm4.224 4.5H7.776l.806 8.861a1.25 1.25 0 0 0 1.245 1.137h4.347a1.25 1.25 0 0 0 1.245-1.137l.805-8.861Z\"\n\t\t/>\n\t</SVG>\n);\n\nexport default trash;\n","\"stream\"in Blob.prototype||Object.defineProperty(Blob.prototype,\"stream\",{value(){return new Response(this).body}}),\"setBigUint64\"in DataView.prototype||Object.defineProperty(DataView.prototype,\"setBigUint64\",{value(e,n,t){const i=Number(0xffffffffn&n),r=Number(n>>32n);this.setUint32(e+(t?0:4),i,t),this.setUint32(e+(t?4:0),r,t)}});var e=e=>new DataView(new ArrayBuffer(e)),n=e=>new Uint8Array(e.buffer||e),t=e=>(new TextEncoder).encode(String(e)),i=e=>Math.min(4294967295,Number(e)),r=e=>Math.min(65535,Number(e));function f(e,i){if(void 0===i||i instanceof Date||(i=new Date(i)),e instanceof File)return{isFile:1,t:i||new Date(e.lastModified),i:e.stream()};if(e instanceof Response)return{isFile:1,t:i||new Date(e.headers.get(\"Last-Modified\")||Date.now()),i:e.body};if(void 0===i)i=new Date;else if(isNaN(i))throw new Error(\"Invalid modification date.\");if(void 0===e)return{isFile:0,t:i};if(\"string\"==typeof e)return{isFile:1,t:i,i:t(e)};if(e instanceof Blob)return{isFile:1,t:i,i:e.stream()};if(e instanceof Uint8Array||e instanceof ReadableStream)return{isFile:1,t:i,i:e};if(e instanceof ArrayBuffer||ArrayBuffer.isView(e))return{isFile:1,t:i,i:n(e)};if(Symbol.asyncIterator in e)return{isFile:1,t:i,i:o(e[Symbol.asyncIterator]())};throw new TypeError(\"Unsupported input format.\")}function o(e,n=e){return new ReadableStream({async pull(n){let t=0;for(;n.desiredSize>t;){const i=await e.next();if(!i.value){n.close();break}{const e=a(i.value);n.enqueue(e),t+=e.byteLength}}},cancel(e){n.throw?.(e)}})}function a(e){return\"string\"==typeof e?t(e):e instanceof Uint8Array?e:n(e)}function s(e,i,r){let[f,o]=function(e){return e?e instanceof Uint8Array?[e,1]:ArrayBuffer.isView(e)||e instanceof ArrayBuffer?[n(e),1]:[t(e),0]:[void 0,0]}(i);if(e instanceof File)return{o:d(f||t(e.name)),u:BigInt(e.size),l:o};if(e instanceof Response){const n=e.headers.get(\"content-disposition\"),i=n&&n.match(/;\\s*filename\\*?=[\"']?(.*?)[\"']?$/i),a=i&&i[1]||e.url&&new URL(e.url).pathname.split(\"/\").findLast(Boolean),s=a&&decodeURIComponent(a),u=r||+e.headers.get(\"content-length\");return{o:d(f||t(s)),u:BigInt(u),l:o}}return f=d(f,void 0!==e||void 0!==r),\"string\"==typeof e?{o:f,u:BigInt(t(e).length),l:o}:e instanceof Blob?{o:f,u:BigInt(e.size),l:o}:e instanceof ArrayBuffer||ArrayBuffer.isView(e)?{o:f,u:BigInt(e.byteLength),l:o}:{o:f,u:u(e,r),l:o}}function u(e,n){return n>-1?BigInt(n):e?void 0:0n}function d(e,n=1){if(!e||e.every((c=>47===c)))throw new Error(\"The file must have a name.\");if(n)for(;47===e[e.length-1];)e=e.subarray(0,-1);else 47!==e[e.length-1]&&(e=new Uint8Array([...e,47]));return e}var l=new Uint32Array(256);for(let e=0;e<256;++e){let n=e;for(let e=0;e<8;++e)n=n>>>1^(1&n&&3988292384);l[e]=n}function y(e,n=0){n^=-1;for(var t=0,i=e.length;t<i;t++)n=n>>>8^l[255&n^e[t]];return(-1^n)>>>0}function w(e,n,t=0){const i=e.getSeconds()>>1|e.getMinutes()<<5|e.getHours()<<11,r=e.getDate()|e.getMonth()+1<<5|e.getFullYear()-1980<<9;n.setUint16(t,i,1),n.setUint16(t+2,r,1)}function B({o:e,l:n},t){return 8*(!n||(t??function(e){try{b.decode(e)}catch{return 0}return 1}(e)))}var b=new TextDecoder(\"utf8\",{fatal:1});function p(t,i=0){const r=e(30);return r.setUint32(0,1347093252),r.setUint32(4,754976768|i),w(t.t,r,10),r.setUint16(26,t.o.length,1),n(r)}async function*g(e){let{i:n}=e;if(\"then\"in n&&(n=await n),n instanceof Uint8Array)yield n,e.m=y(n,0),e.u=BigInt(n.length);else{e.u=0n;const t=n.getReader();for(;;){const{value:n,done:i}=await t.read();if(i)break;e.m=y(n,e.m),e.u+=BigInt(n.length),yield n}}}function I(t,r){const f=e(16+(r?8:0));return f.setUint32(0,1347094280),f.setUint32(4,t.isFile?t.m:0,1),r?(f.setBigUint64(8,t.u,1),f.setBigUint64(16,t.u,1)):(f.setUint32(8,i(t.u),1),f.setUint32(12,i(t.u),1)),n(f)}function v(t,r,f=0,o=0){const a=e(46);return a.setUint32(0,1347092738),a.setUint32(4,755182848),a.setUint16(8,2048|f),w(t.t,a,12),a.setUint32(16,t.isFile?t.m:0,1),a.setUint32(20,i(t.u),1),a.setUint32(24,i(t.u),1),a.setUint16(28,t.o.length,1),a.setUint16(30,o,1),a.setUint16(40,t.isFile?33204:16893,1),a.setUint32(42,i(r),1),n(a)}function h(t,i,r){const f=e(r);return f.setUint16(0,1,1),f.setUint16(2,r-4,1),16&r&&(f.setBigUint64(4,t.u,1),f.setBigUint64(12,t.u,1)),f.setBigUint64(r-8,i,1),n(f)}function D(e){return e instanceof File||e instanceof Response?[[e],[e]]:[[e.input,e.name,e.size],[e.input,e.lastModified]]}var S=e=>function(e){let n=BigInt(22),t=0n,i=0;for(const r of e){if(!r.o)throw new Error(\"Every file must have a non-empty name.\");if(void 0===r.u)throw new Error(`Missing size for file \"${(new TextDecoder).decode(r.o)}\".`);const e=r.u>=0xffffffffn,f=t>=0xffffffffn;t+=BigInt(46+r.o.length+(e&&8))+r.u,n+=BigInt(r.o.length+46+(12*f|28*e)),i||(i=e)}return(i||t>=0xffffffffn)&&(n+=BigInt(76)),n+t}(function*(e){for(const n of e)yield s(...D(n)[0])}(e));function A(e,n={}){const t={\"Content-Type\":\"application/zip\",\"Content-Disposition\":\"attachment\"};return(\"bigint\"==typeof n.length||Number.isInteger(n.length))&&n.length>0&&(t[\"Content-Length\"]=String(n.length)),n.metadata&&(t[\"Content-Length\"]=String(S(n.metadata))),new Response(N(e,n),{headers:t})}function N(t,a={}){const u=function(e){const n=e[Symbol.iterator in e?Symbol.iterator:Symbol.asyncIterator]();return{async next(){const e=await n.next();if(e.done)return e;const[t,i]=D(e.value);return{done:0,value:Object.assign(f(...i),s(...t))}},throw:n.throw?.bind(n),[Symbol.asyncIterator](){return this}}}(t);return o(async function*(t,f){const o=[];let a=0n,s=0n,u=0;for await(const e of t){const n=B(e,f.buffersAreUTF8);yield p(e,n),yield new Uint8Array(e.o),e.isFile&&(yield*g(e));const t=e.u>=0xffffffffn,i=12*(a>=0xffffffffn)|28*t;yield I(e,t),o.push(v(e,a,n,i)),o.push(e.o),i&&o.push(h(e,a,i)),t&&(a+=8n),s++,a+=BigInt(46+e.o.length)+e.u,u||(u=t)}let d=0n;for(const e of o)yield e,d+=BigInt(e.length);if(u||a>=0xffffffffn){const t=e(76);t.setUint32(0,1347094022),t.setBigUint64(4,BigInt(44),1),t.setUint32(12,755182848),t.setBigUint64(24,s,1),t.setBigUint64(32,s,1),t.setBigUint64(40,d,1),t.setBigUint64(48,a,1),t.setUint32(56,1347094023),t.setBigUint64(64,a+d,1),t.setUint32(72,1,1),yield n(t)}const l=e(22);l.setUint32(0,1347093766),l.setUint16(8,r(s),1),l.setUint16(10,r(s),1),l.setUint32(12,i(d),1),l.setUint32(16,i(a),1),yield n(l)}(u,a),u)}export{A as downloadZip,N as makeZip,S as predictLength};","/**\n * External dependencies\n */\nimport { paramCase as kebabCase } from 'change-case';\nimport { downloadZip } from 'client-zip';\n\n/**\n * WordPress dependencies\n */\nimport { downloadBlob } from '@wordpress/blob';\nimport { __ } from '@wordpress/i18n';\nimport { privateApis as patternsPrivateApis } from '@wordpress/patterns';\n\n/**\n * Internal dependencies\n */\nimport { unlock } from '../../lock-unlock';\n\n// Patterns.\nconst { PATTERN_TYPES } = unlock( patternsPrivateApis );\n\nfunction getJsonFromItem( item ) {\n\treturn JSON.stringify(\n\t\t{\n\t\t\t__file: item.type,\n\t\t\ttitle: item.title || item.name,\n\t\t\tcontent: item.patternPost.content.raw,\n\t\t\tsyncStatus: item.patternPost.wp_pattern_sync_status,\n\t\t},\n\t\tnull,\n\t\t2\n\t);\n}\n\nexport const exportPatternAsJSONAction = {\n\tid: 'export-pattern',\n\tlabel: __( 'Export as JSON' ),\n\tsupportsBulk: true,\n\tisEligible: ( item ) => {\n\t\tif ( ! item.type ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn item.type === PATTERN_TYPES.user;\n\t},\n\tcallback: async ( items ) => {\n\t\tif ( items.length === 1 ) {\n\t\t\treturn downloadBlob(\n\t\t\t\t`${ kebabCase( items[ 0 ].title || items[ 0 ].name ) }.json`,\n\t\t\t\tgetJsonFromItem( items[ 0 ] ),\n\t\t\t\t'application/json'\n\t\t\t);\n\t\t}\n\t\tconst nameCount = {};\n\t\tconst filesToZip = items.map( ( item ) => {\n\t\t\tconst name = kebabCase( item.title || item.name );\n\t\t\tnameCount[ name ] = ( nameCount[ name ] || 0 ) + 1;\n\t\t\treturn {\n\t\t\t\tname: `${\n\t\t\t\t\tname +\n\t\t\t\t\t( nameCount[ name ] > 1\n\t\t\t\t\t\t? '-' + ( nameCount[ name ] - 1 )\n\t\t\t\t\t\t: '' )\n\t\t\t\t}.json`,\n\t\t\t\tlastModified: new Date(),\n\t\t\t\tinput: getJsonFromItem( item ),\n\t\t\t};\n\t\t} );\n\t\treturn downloadBlob(\n\t\t\t__( 'patterns-export' ) + '.zip',\n\t\t\tawait downloadZip( filesToZip ).blob(),\n\t\t\t'application/zip'\n\t\t);\n\t},\n};\n","/**\n * WordPress dependencies\n */\nimport { external, trash, backup } from '@wordpress/icons';\nimport { addQueryArgs } from '@wordpress/url';\nimport { useDispatch, useSelect, useRegistry } from '@wordpress/data';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { __, _n, sprintf, _x } from '@wordpress/i18n';\nimport { store as noticesStore } from '@wordpress/notices';\nimport { useMemo, useState } from '@wordpress/element';\nimport { privateApis as patternsPrivateApis } from '@wordpress/patterns';\n\nimport {\n\tButton,\n\tTextControl,\n\t__experimentalText as Text,\n\t__experimentalHStack as HStack,\n\t__experimentalVStack as VStack,\n} from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport {\n\tTEMPLATE_ORIGINS,\n\tTEMPLATE_PART_POST_TYPE,\n\tTEMPLATE_POST_TYPE,\n\tPATTERN_POST_TYPE,\n} from '../../store/constants';\nimport { store as editorStore } from '../../store';\nimport { unlock } from '../../lock-unlock';\nimport isTemplateRevertable from '../../store/utils/is-template-revertable';\nimport { exportPatternAsJSONAction } from './export-pattern-action';\nimport { CreateTemplatePartModalContents } from '../create-template-part-modal';\n\n// Patterns.\nconst { PATTERN_TYPES, CreatePatternModalContents, useDuplicatePatternProps } =\n\tunlock( patternsPrivateApis );\n\n/**\n * Check if a template is removable.\n *\n * @param {Object} template The template entity to check.\n * @return {boolean} Whether the template is removable.\n */\nfunction isTemplateRemovable( template ) {\n\tif ( ! template ) {\n\t\treturn false;\n\t}\n\t// In patterns list page we map the templates parts to a different object\n\t// than the one returned from the endpoint. This is why we need to check for\n\t// two props whether is custom or has a theme file.\n\treturn (\n\t\t[ template.source, template.templatePart?.source ].includes(\n\t\t\tTEMPLATE_ORIGINS.custom\n\t\t) &&\n\t\t! template.has_theme_file &&\n\t\t! template.templatePart?.has_theme_file\n\t);\n}\nconst canDeleteOrReset = ( item ) => {\n\tconst isTemplatePart = item.type === TEMPLATE_PART_POST_TYPE;\n\tconst isUserPattern = item.type === PATTERN_TYPES.user;\n\treturn isUserPattern || ( isTemplatePart && item.isCustom );\n};\n\nfunction getItemTitle( item ) {\n\tif ( typeof item.title === 'string' ) {\n\t\treturn decodeEntities( item.title );\n\t}\n\treturn decodeEntities( item.title?.rendered || '' );\n}\n\n// This action is used for templates, patterns and template parts.\n// Every other post type uses the similar `trashPostAction` which\n// moves the post to trash.\nconst deletePostAction = {\n\tid: 'delete-post',\n\tlabel: __( 'Delete' ),\n\tisPrimary: true,\n\ticon: trash,\n\tisEligible( post ) {\n\t\tif (\n\t\t\t[ TEMPLATE_POST_TYPE, TEMPLATE_PART_POST_TYPE ].includes(\n\t\t\t\tpost.type\n\t\t\t)\n\t\t) {\n\t\t\treturn isTemplateRemovable( post );\n\t\t}\n\t\t// We can only remove user patterns.\n\t\treturn post.type === PATTERN_TYPES.user;\n\t},\n\tsupportsBulk: true,\n\thideModalHeader: true,\n\tRenderModal: ( { items, closeModal, onActionPerformed } ) => {\n\t\tconst [ isBusy, setIsBusy ] = useState( false );\n\t\tconst { removeTemplates } = unlock( useDispatch( editorStore ) );\n\t\treturn (\n\t\t\t<VStack spacing=\"5\">\n\t\t\t\t<Text>\n\t\t\t\t\t{ items.length > 1\n\t\t\t\t\t\t? sprintf(\n\t\t\t\t\t\t\t\t// translators: %d: number of items to delete.\n\t\t\t\t\t\t\t\t_n(\n\t\t\t\t\t\t\t\t\t'Delete %d item?',\n\t\t\t\t\t\t\t\t\t'Delete %d items?',\n\t\t\t\t\t\t\t\t\titems.length\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\titems.length\n\t\t\t\t\t\t  )\n\t\t\t\t\t\t: sprintf(\n\t\t\t\t\t\t\t\t// translators: %s: The template or template part's titles\n\t\t\t\t\t\t\t\t__( 'Delete \"%s\"?' ),\n\t\t\t\t\t\t\t\tgetItemTitle( items[ 0 ] )\n\t\t\t\t\t\t  ) }\n\t\t\t\t</Text>\n\t\t\t\t<HStack justify=\"right\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\tonClick={ closeModal }\n\t\t\t\t\t\tdisabled={ isBusy }\n\t\t\t\t\t\t__experimentalIsFocusable\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Cancel' ) }\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\tonClick={ async () => {\n\t\t\t\t\t\t\tsetIsBusy( true );\n\t\t\t\t\t\t\tawait removeTemplates( items, {\n\t\t\t\t\t\t\t\tallowUndo: false,\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\tonActionPerformed?.( items );\n\t\t\t\t\t\t\tsetIsBusy( false );\n\t\t\t\t\t\t\tcloseModal();\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tisBusy={ isBusy }\n\t\t\t\t\t\tdisabled={ isBusy }\n\t\t\t\t\t\t__experimentalIsFocusable\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Delete' ) }\n\t\t\t\t\t</Button>\n\t\t\t\t</HStack>\n\t\t\t</VStack>\n\t\t);\n\t},\n};\n\nconst trashPostAction = {\n\tid: 'move-to-trash',\n\tlabel: __( 'Move to Trash' ),\n\tisPrimary: true,\n\ticon: trash,\n\tisEligible( item ) {\n\t\treturn ! [ 'auto-draft', 'trash' ].includes( item.status );\n\t},\n\tsupportsBulk: true,\n\thideModalHeader: true,\n\tRenderModal: ( { items, closeModal, onActionPerformed } ) => {\n\t\tconst [ isBusy, setIsBusy ] = useState( false );\n\t\tconst { createSuccessNotice, createErrorNotice } =\n\t\t\tuseDispatch( noticesStore );\n\t\tconst { deleteEntityRecord } = useDispatch( coreStore );\n\t\treturn (\n\t\t\t<VStack spacing=\"5\">\n\t\t\t\t<Text>\n\t\t\t\t\t{ items.length === 1\n\t\t\t\t\t\t? sprintf(\n\t\t\t\t\t\t\t\t// translators: %s: The item's title.\n\t\t\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t\t\t'Are you sure you want to move to trash \"%s\"?'\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tgetItemTitle( items[ 0 ] )\n\t\t\t\t\t\t  )\n\t\t\t\t\t\t: sprintf(\n\t\t\t\t\t\t\t\t// translators: %d: The number of items (2 or more).\n\t\t\t\t\t\t\t\t_n(\n\t\t\t\t\t\t\t\t\t'Are you sure you want to move to trash %d item?',\n\t\t\t\t\t\t\t\t\t'Are you sure you want to move to trash %d items?',\n\t\t\t\t\t\t\t\t\titems.length\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\titems.length\n\t\t\t\t\t\t  ) }\n\t\t\t\t</Text>\n\t\t\t\t<HStack justify=\"right\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\tonClick={ closeModal }\n\t\t\t\t\t\tdisabled={ isBusy }\n\t\t\t\t\t\t__experimentalIsFocusable\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Cancel' ) }\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\tonClick={ async () => {\n\t\t\t\t\t\t\tsetIsBusy( true );\n\t\t\t\t\t\t\tconst promiseResult = await Promise.allSettled(\n\t\t\t\t\t\t\t\titems.map( ( item ) =>\n\t\t\t\t\t\t\t\t\tdeleteEntityRecord(\n\t\t\t\t\t\t\t\t\t\t'postType',\n\t\t\t\t\t\t\t\t\t\titem.type,\n\t\t\t\t\t\t\t\t\t\titem.id,\n\t\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t\t\t{ throwOnError: true }\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t// If all the promises were fulfilled with success.\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tpromiseResult.every(\n\t\t\t\t\t\t\t\t\t( { status } ) => status === 'fulfilled'\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tlet successMessage;\n\t\t\t\t\t\t\t\tif ( promiseResult.length === 1 ) {\n\t\t\t\t\t\t\t\t\tsuccessMessage = sprintf(\n\t\t\t\t\t\t\t\t\t\t/* translators: The item's title. */\n\t\t\t\t\t\t\t\t\t\t__( '\"%s\" moved to trash.' ),\n\t\t\t\t\t\t\t\t\t\tgetItemTitle( items[ 0 ] )\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t} else if ( items[ 0 ].type === 'page' ) {\n\t\t\t\t\t\t\t\t\tsuccessMessage = sprintf(\n\t\t\t\t\t\t\t\t\t\t/* translators: The number of items. */\n\t\t\t\t\t\t\t\t\t\t__( '%s items moved to trash.' ),\n\t\t\t\t\t\t\t\t\t\titems.length\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsuccessMessage = sprintf(\n\t\t\t\t\t\t\t\t\t\t/* translators: The number of posts. */\n\t\t\t\t\t\t\t\t\t\t__( '%s items move to trash.' ),\n\t\t\t\t\t\t\t\t\t\titems.length\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcreateSuccessNotice( successMessage, {\n\t\t\t\t\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t\t\t\t\t\tid: 'move-to-trash-action',\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// If there was at least one failure.\n\t\t\t\t\t\t\t\tlet errorMessage;\n\t\t\t\t\t\t\t\t// If we were trying to delete a single item.\n\t\t\t\t\t\t\t\tif ( promiseResult.length === 1 ) {\n\t\t\t\t\t\t\t\t\tif ( promiseResult[ 0 ].reason?.message ) {\n\t\t\t\t\t\t\t\t\t\terrorMessage =\n\t\t\t\t\t\t\t\t\t\t\tpromiseResult[ 0 ].reason.message;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\terrorMessage = __(\n\t\t\t\t\t\t\t\t\t\t\t'An error occurred while moving to trash the item.'\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// If we were trying to delete multiple items.\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tconst errorMessages = new Set();\n\t\t\t\t\t\t\t\t\tconst failedPromises = promiseResult.filter(\n\t\t\t\t\t\t\t\t\t\t( { status } ) => status === 'rejected'\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tfor ( const failedPromise of failedPromises ) {\n\t\t\t\t\t\t\t\t\t\tif ( failedPromise.reason?.message ) {\n\t\t\t\t\t\t\t\t\t\t\terrorMessages.add(\n\t\t\t\t\t\t\t\t\t\t\t\tfailedPromise.reason.message\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif ( errorMessages.size === 0 ) {\n\t\t\t\t\t\t\t\t\t\terrorMessage = __(\n\t\t\t\t\t\t\t\t\t\t\t'An error occurred while moving to trash the items.'\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t} else if ( errorMessages.size === 1 ) {\n\t\t\t\t\t\t\t\t\t\terrorMessage = sprintf(\n\t\t\t\t\t\t\t\t\t\t\t/* translators: %s: an error message */\n\t\t\t\t\t\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t\t\t\t\t\t'An error occurred while moving to trash the item: %s'\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t[ ...errorMessages ][ 0 ]\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\terrorMessage = sprintf(\n\t\t\t\t\t\t\t\t\t\t\t/* translators: %s: a list of comma separated error messages */\n\t\t\t\t\t\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t\t\t\t\t\t'Some errors occurred while moving to trash the items: %s'\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t[ ...errorMessages ].join( ',' )\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcreateErrorNotice( errorMessage, {\n\t\t\t\t\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ( onActionPerformed ) {\n\t\t\t\t\t\t\t\tonActionPerformed( items );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsetIsBusy( false );\n\t\t\t\t\t\t\tcloseModal();\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tisBusy={ isBusy }\n\t\t\t\t\t\tdisabled={ isBusy }\n\t\t\t\t\t\t__experimentalIsFocusable\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Trash' ) }\n\t\t\t\t\t</Button>\n\t\t\t\t</HStack>\n\t\t\t</VStack>\n\t\t);\n\t},\n};\n\nfunction useCanUserEligibilityCheckPostType( capability, resource, action ) {\n\tconst registry = useRegistry();\n\treturn useMemo(\n\t\t() => ( {\n\t\t\t...action,\n\t\t\tisEligible( item ) {\n\t\t\t\treturn (\n\t\t\t\t\taction.isEligible( item ) &&\n\t\t\t\t\tregistry\n\t\t\t\t\t\t.select( coreStore )\n\t\t\t\t\t\t.canUser( capability, resource, item.id )\n\t\t\t\t);\n\t\t\t},\n\t\t} ),\n\t\t[ action, registry, capability, resource ]\n\t);\n}\n\nfunction useTrashPostAction( resource ) {\n\treturn useCanUserEligibilityCheckPostType(\n\t\t'delete',\n\t\tresource,\n\t\ttrashPostAction\n\t);\n}\n\nconst permanentlyDeletePostAction = {\n\tid: 'permanently-delete',\n\tlabel: __( 'Permanently delete' ),\n\tsupportsBulk: true,\n\tisEligible( { status } ) {\n\t\treturn status === 'trash';\n\t},\n\tasync callback( posts, { registry } ) {\n\t\tconst { createSuccessNotice, createErrorNotice } =\n\t\t\tregistry.dispatch( noticesStore );\n\t\tconst { deleteEntityRecord } = registry.dispatch( coreStore );\n\t\tconst promiseResult = await Promise.allSettled(\n\t\t\tposts.map( ( post ) => {\n\t\t\t\treturn deleteEntityRecord(\n\t\t\t\t\t'postType',\n\t\t\t\t\tpost.type,\n\t\t\t\t\tpost.id,\n\t\t\t\t\t{ force: true },\n\t\t\t\t\t{ throwOnError: true }\n\t\t\t\t);\n\t\t\t} )\n\t\t);\n\t\t// If all the promises were fulfilled with success.\n\t\tif ( promiseResult.every( ( { status } ) => status === 'fulfilled' ) ) {\n\t\t\tlet successMessage;\n\t\t\tif ( promiseResult.length === 1 ) {\n\t\t\t\tsuccessMessage = sprintf(\n\t\t\t\t\t/* translators: The posts's title. */\n\t\t\t\t\t__( '\"%s\" permanently deleted.' ),\n\t\t\t\t\tgetItemTitle( posts[ 0 ] )\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tsuccessMessage = __( 'The posts were permanently deleted.' );\n\t\t\t}\n\t\t\tcreateSuccessNotice( successMessage, {\n\t\t\t\ttype: 'snackbar',\n\t\t\t\tid: 'permanently-delete-post-action',\n\t\t\t} );\n\t\t} else {\n\t\t\t// If there was at lease one failure.\n\t\t\tlet errorMessage;\n\t\t\t// If we were trying to permanently delete a single post.\n\t\t\tif ( promiseResult.length === 1 ) {\n\t\t\t\tif ( promiseResult[ 0 ].reason?.message ) {\n\t\t\t\t\terrorMessage = promiseResult[ 0 ].reason.message;\n\t\t\t\t} else {\n\t\t\t\t\terrorMessage = __(\n\t\t\t\t\t\t'An error occurred while permanently deleting the post.'\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\t// If we were trying to permanently delete multiple posts\n\t\t\t} else {\n\t\t\t\tconst errorMessages = new Set();\n\t\t\t\tconst failedPromises = promiseResult.filter(\n\t\t\t\t\t( { status } ) => status === 'rejected'\n\t\t\t\t);\n\t\t\t\tfor ( const failedPromise of failedPromises ) {\n\t\t\t\t\tif ( failedPromise.reason?.message ) {\n\t\t\t\t\t\terrorMessages.add( failedPromise.reason.message );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ( errorMessages.size === 0 ) {\n\t\t\t\t\terrorMessage = __(\n\t\t\t\t\t\t'An error occurred while permanently deleting the posts.'\n\t\t\t\t\t);\n\t\t\t\t} else if ( errorMessages.size === 1 ) {\n\t\t\t\t\terrorMessage = sprintf(\n\t\t\t\t\t\t/* translators: %s: an error message */\n\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t'An error occurred while permanently deleting the posts: %s'\n\t\t\t\t\t\t),\n\t\t\t\t\t\t[ ...errorMessages ][ 0 ]\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\terrorMessage = sprintf(\n\t\t\t\t\t\t/* translators: %s: a list of comma separated error messages */\n\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t'Some errors occurred while permanently deleting the posts: %s'\n\t\t\t\t\t\t),\n\t\t\t\t\t\t[ ...errorMessages ].join( ',' )\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcreateErrorNotice( errorMessage, {\n\t\t\t\ttype: 'snackbar',\n\t\t\t} );\n\t\t}\n\t},\n};\n\nfunction usePermanentlyDeletePostAction( resource ) {\n\treturn useCanUserEligibilityCheckPostType(\n\t\t'delete',\n\t\tresource,\n\t\tpermanentlyDeletePostAction\n\t);\n}\n\nconst restorePostAction = {\n\tid: 'restore',\n\tlabel: __( 'Restore' ),\n\tisPrimary: true,\n\ticon: backup,\n\tsupportsBulk: true,\n\tisEligible( { status } ) {\n\t\treturn status === 'trash';\n\t},\n\tasync callback( posts, { registry, onActionPerformed } ) {\n\t\tconst { createSuccessNotice, createErrorNotice } =\n\t\t\tregistry.dispatch( noticesStore );\n\t\tconst { editEntityRecord, saveEditedEntityRecord } =\n\t\t\tregistry.dispatch( coreStore );\n\t\tawait Promise.allSettled(\n\t\t\tposts.map( ( post ) => {\n\t\t\t\treturn editEntityRecord( 'postType', post.type, post.id, {\n\t\t\t\t\tstatus: 'draft',\n\t\t\t\t} );\n\t\t\t} )\n\t\t);\n\t\tconst promiseResult = await Promise.allSettled(\n\t\t\tposts.map( ( post ) => {\n\t\t\t\treturn saveEditedEntityRecord( 'postType', post.type, post.id, {\n\t\t\t\t\tthrowOnError: true,\n\t\t\t\t} );\n\t\t\t} )\n\t\t);\n\n\t\tif ( promiseResult.every( ( { status } ) => status === 'fulfilled' ) ) {\n\t\t\tlet successMessage;\n\t\t\tif ( posts.length === 1 ) {\n\t\t\t\tsuccessMessage = sprintf(\n\t\t\t\t\t/* translators: The number of posts. */\n\t\t\t\t\t__( '\"%s\" has been restored.' ),\n\t\t\t\t\tgetItemTitle( posts[ 0 ] )\n\t\t\t\t);\n\t\t\t} else if ( posts[ 0 ].type === 'page' ) {\n\t\t\t\tsuccessMessage = sprintf(\n\t\t\t\t\t/* translators: The number of posts. */\n\t\t\t\t\t__( '%d pages have been restored.' ),\n\t\t\t\t\tposts.length\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tsuccessMessage = sprintf(\n\t\t\t\t\t/* translators: The number of posts. */\n\t\t\t\t\t__( '%d posts have been restored.' ),\n\t\t\t\t\tposts.length\n\t\t\t\t);\n\t\t\t}\n\t\t\tcreateSuccessNotice( successMessage, {\n\t\t\t\ttype: 'snackbar',\n\t\t\t\tid: 'restore-post-action',\n\t\t\t} );\n\t\t\tif ( onActionPerformed ) {\n\t\t\t\tonActionPerformed( posts );\n\t\t\t}\n\t\t} else {\n\t\t\t// If there was at lease one failure.\n\t\t\tlet errorMessage;\n\t\t\t// If we were trying to move a single post to the trash.\n\t\t\tif ( promiseResult.length === 1 ) {\n\t\t\t\tif ( promiseResult[ 0 ].reason?.message ) {\n\t\t\t\t\terrorMessage = promiseResult[ 0 ].reason.message;\n\t\t\t\t} else {\n\t\t\t\t\terrorMessage = __(\n\t\t\t\t\t\t'An error occurred while restoring the post.'\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\t// If we were trying to move multiple posts to the trash\n\t\t\t} else {\n\t\t\t\tconst errorMessages = new Set();\n\t\t\t\tconst failedPromises = promiseResult.filter(\n\t\t\t\t\t( { status } ) => status === 'rejected'\n\t\t\t\t);\n\t\t\t\tfor ( const failedPromise of failedPromises ) {\n\t\t\t\t\tif ( failedPromise.reason?.message ) {\n\t\t\t\t\t\terrorMessages.add( failedPromise.reason.message );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ( errorMessages.size === 0 ) {\n\t\t\t\t\terrorMessage = __(\n\t\t\t\t\t\t'An error occurred while restoring the posts.'\n\t\t\t\t\t);\n\t\t\t\t} else if ( errorMessages.size === 1 ) {\n\t\t\t\t\terrorMessage = sprintf(\n\t\t\t\t\t\t/* translators: %s: an error message */\n\t\t\t\t\t\t__( 'An error occurred while restoring the posts: %s' ),\n\t\t\t\t\t\t[ ...errorMessages ][ 0 ]\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\terrorMessage = sprintf(\n\t\t\t\t\t\t/* translators: %s: a list of comma separated error messages */\n\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t'Some errors occurred while restoring the posts: %s'\n\t\t\t\t\t\t),\n\t\t\t\t\t\t[ ...errorMessages ].join( ',' )\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcreateErrorNotice( errorMessage, {\n\t\t\t\ttype: 'snackbar',\n\t\t\t} );\n\t\t}\n\t},\n};\n\nfunction useRestorePostAction( resource ) {\n\treturn useCanUserEligibilityCheckPostType(\n\t\t'update',\n\t\tresource,\n\t\trestorePostAction\n\t);\n}\n\nconst viewPostAction = {\n\tid: 'view-post',\n\tlabel: __( 'View' ),\n\tisPrimary: true,\n\ticon: external,\n\tisEligible( post ) {\n\t\treturn post.status !== 'trash';\n\t},\n\tcallback( posts, { onActionPerformed } ) {\n\t\tconst post = posts[ 0 ];\n\t\twindow.open( post.link, '_blank' );\n\t\tif ( onActionPerformed ) {\n\t\t\tonActionPerformed( posts );\n\t\t}\n\t},\n};\n\nconst postRevisionsAction = {\n\tid: 'view-post-revisions',\n\tcontext: 'list',\n\tlabel( items ) {\n\t\tconst revisionsCount =\n\t\t\titems[ 0 ]._links?.[ 'version-history' ]?.[ 0 ]?.count ?? 0;\n\t\treturn sprintf(\n\t\t\t/* translators: %s: number of revisions */\n\t\t\t__( 'View revisions (%s)' ),\n\t\t\trevisionsCount\n\t\t);\n\t},\n\tisEligible: ( post ) => {\n\t\tif ( post.status === 'trash' ) {\n\t\t\treturn false;\n\t\t}\n\t\tconst lastRevisionId =\n\t\t\tpost?._links?.[ 'predecessor-version' ]?.[ 0 ]?.id ?? null;\n\t\tconst revisionsCount =\n\t\t\tpost?._links?.[ 'version-history' ]?.[ 0 ]?.count ?? 0;\n\t\treturn lastRevisionId && revisionsCount > 1;\n\t},\n\tcallback( posts, { onActionPerformed } ) {\n\t\tconst post = posts[ 0 ];\n\t\tconst href = addQueryArgs( 'revision.php', {\n\t\t\trevision: post?._links?.[ 'predecessor-version' ]?.[ 0 ]?.id,\n\t\t} );\n\t\tdocument.location.href = href;\n\t\tif ( onActionPerformed ) {\n\t\t\tonActionPerformed( posts );\n\t\t}\n\t},\n};\n\nconst renamePostAction = {\n\tid: 'rename-post',\n\tlabel: __( 'Rename' ),\n\tisEligible( post ) {\n\t\tif ( post.status === 'trash' ) {\n\t\t\treturn false;\n\t\t}\n\t\t// Templates, template parts and patterns have special checks for renaming.\n\t\tif (\n\t\t\t! [\n\t\t\t\tTEMPLATE_POST_TYPE,\n\t\t\t\tTEMPLATE_PART_POST_TYPE,\n\t\t\t\t...Object.values( PATTERN_TYPES ),\n\t\t\t].includes( post.type )\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t\t// In the case of templates, we can only rename custom templates.\n\t\tif ( post.type === TEMPLATE_POST_TYPE ) {\n\t\t\treturn isTemplateRemovable( post ) && post.is_custom;\n\t\t}\n\t\t// Make necessary checks for template parts and patterns.\n\t\tconst isTemplatePart = post.type === TEMPLATE_PART_POST_TYPE;\n\t\tconst isUserPattern = post.type === PATTERN_TYPES.user;\n\t\t// In patterns list page we map the templates parts to a different object\n\t\t// than the one returned from the endpoint. This is why we need to check for\n\t\t// two props whether is custom or has a theme file.\n\t\tconst isCustomPattern =\n\t\t\tisUserPattern ||\n\t\t\t( isTemplatePart &&\n\t\t\t\t( post.isCustom || post.source === TEMPLATE_ORIGINS.custom ) );\n\t\tconst hasThemeFile =\n\t\t\tisTemplatePart &&\n\t\t\t( post.templatePart?.has_theme_file || post.has_theme_file );\n\t\treturn isCustomPattern && ! hasThemeFile;\n\t},\n\tRenderModal: ( { items, closeModal, onActionPerformed } ) => {\n\t\tconst [ item ] = items;\n\t\tconst originalTitle = decodeEntities(\n\t\t\ttypeof item.title === 'string' ? item.title : item.title.rendered\n\t\t);\n\t\tconst [ title, setTitle ] = useState( () => originalTitle );\n\t\tconst { editEntityRecord, saveEditedEntityRecord } =\n\t\t\tuseDispatch( coreStore );\n\t\tconst { createSuccessNotice, createErrorNotice } =\n\t\t\tuseDispatch( noticesStore );\n\n\t\tasync function onRename( event ) {\n\t\t\tevent.preventDefault();\n\t\t\ttry {\n\t\t\t\tawait editEntityRecord( 'postType', item.type, item.id, {\n\t\t\t\t\ttitle,\n\t\t\t\t} );\n\t\t\t\t// Update state before saving rerenders the list.\n\t\t\t\tsetTitle( '' );\n\t\t\t\tcloseModal();\n\t\t\t\t// Persist edited entity.\n\t\t\t\tawait saveEditedEntityRecord( 'postType', item.type, item.id, {\n\t\t\t\t\tthrowOnError: true,\n\t\t\t\t} );\n\t\t\t\tcreateSuccessNotice( __( 'Name updated' ), {\n\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t} );\n\t\t\t\tonActionPerformed?.( items );\n\t\t\t} catch ( error ) {\n\t\t\t\tconst errorMessage =\n\t\t\t\t\terror.message && error.code !== 'unknown_error'\n\t\t\t\t\t\t? error.message\n\t\t\t\t\t\t: __( 'An error occurred while updating the name' );\n\t\t\t\tcreateErrorNotice( errorMessage, { type: 'snackbar' } );\n\t\t\t}\n\t\t}\n\n\t\treturn (\n\t\t\t<form onSubmit={ onRename }>\n\t\t\t\t<VStack spacing=\"5\">\n\t\t\t\t\t<TextControl\n\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\tlabel={ __( 'Name' ) }\n\t\t\t\t\t\tvalue={ title }\n\t\t\t\t\t\tonChange={ setTitle }\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<HStack justify=\"right\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\tcloseModal();\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Cancel' ) }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Save' ) }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</HStack>\n\t\t\t\t</VStack>\n\t\t\t</form>\n\t\t);\n\t},\n};\n\nfunction useRenamePostAction( resource ) {\n\treturn useCanUserEligibilityCheckPostType(\n\t\t'update',\n\t\tresource,\n\t\trenamePostAction\n\t);\n}\n\nconst useDuplicatePostAction = ( postType ) => {\n\tconst { userCanCreatePost } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getPostType, canUser } = select( coreStore );\n\t\t\tconst resource = getPostType( postType )?.rest_base || '';\n\t\t\treturn {\n\t\t\t\tuserCanCreatePost: canUser( 'create', resource ),\n\t\t\t};\n\t\t},\n\t\t[ postType ]\n\t);\n\treturn useMemo(\n\t\t() =>\n\t\t\tuserCanCreatePost && {\n\t\t\t\tid: 'duplicate-post',\n\t\t\t\tlabel: _x( 'Duplicate', 'action label' ),\n\t\t\t\tisEligible( { status } ) {\n\t\t\t\t\treturn status !== 'trash';\n\t\t\t\t},\n\t\t\t\tRenderModal: ( { items, closeModal, onActionPerformed } ) => {\n\t\t\t\t\tconst [ item ] = items;\n\t\t\t\t\tconst [ isCreatingPage, setIsCreatingPage ] =\n\t\t\t\t\t\tuseState( false );\n\t\t\t\t\tconst [ title, setTitle ] = useState(\n\t\t\t\t\t\tsprintf(\n\t\t\t\t\t\t\t/* translators: %s: Existing item title */\n\t\t\t\t\t\t\t__( '%s (Copy)' ),\n\t\t\t\t\t\t\tgetItemTitle( item )\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\n\t\t\t\t\tconst { saveEntityRecord } = useDispatch( coreStore );\n\t\t\t\t\tconst { createSuccessNotice, createErrorNotice } =\n\t\t\t\t\t\tuseDispatch( noticesStore );\n\n\t\t\t\t\tasync function createPage( event ) {\n\t\t\t\t\t\tevent.preventDefault();\n\n\t\t\t\t\t\tif ( isCreatingPage ) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst newItemOject = {\n\t\t\t\t\t\t\tstatus: 'draft',\n\t\t\t\t\t\t\ttitle,\n\t\t\t\t\t\t\tslug: title || __( 'No title' ),\n\t\t\t\t\t\t\tcomment_status: item.comment_status,\n\t\t\t\t\t\t\tcontent:\n\t\t\t\t\t\t\t\ttypeof item.content === 'string'\n\t\t\t\t\t\t\t\t\t? item.content\n\t\t\t\t\t\t\t\t\t: item.content.raw,\n\t\t\t\t\t\t\texcerpt: item.excerpt.raw,\n\t\t\t\t\t\t\tmeta: item.meta,\n\t\t\t\t\t\t\tparent: item.parent,\n\t\t\t\t\t\t\tpassword: item.password,\n\t\t\t\t\t\t\ttemplate: item.template,\n\t\t\t\t\t\t\tformat: item.format,\n\t\t\t\t\t\t\tfeatured_media: item.featured_media,\n\t\t\t\t\t\t\tmenu_order: item.menu_order,\n\t\t\t\t\t\t\tping_status: item.ping_status,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tconst assignablePropertiesPrefix = 'wp:action-assign-';\n\t\t\t\t\t\t// Get all the properties that the current user is able to assign normally author, categories, tags,\n\t\t\t\t\t\t// and custom taxonomies.\n\t\t\t\t\t\tconst assignableProperties = Object.keys(\n\t\t\t\t\t\t\titem?._links || {}\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.filter( ( property ) =>\n\t\t\t\t\t\t\t\tproperty.startsWith(\n\t\t\t\t\t\t\t\t\tassignablePropertiesPrefix\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.map( ( property ) =>\n\t\t\t\t\t\t\t\tproperty.slice(\n\t\t\t\t\t\t\t\t\tassignablePropertiesPrefix.length\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tassignableProperties.forEach( ( property ) => {\n\t\t\t\t\t\t\tif ( item[ property ] ) {\n\t\t\t\t\t\t\t\tnewItemOject[ property ] = item[ property ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tsetIsCreatingPage( true );\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst newItem = await saveEntityRecord(\n\t\t\t\t\t\t\t\t'postType',\n\t\t\t\t\t\t\t\titem.type,\n\t\t\t\t\t\t\t\tnewItemOject,\n\t\t\t\t\t\t\t\t{ throwOnError: true }\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tcreateSuccessNotice(\n\t\t\t\t\t\t\t\tsprintf(\n\t\t\t\t\t\t\t\t\t// translators: %s: Title of the created template e.g: \"Category\".\n\t\t\t\t\t\t\t\t\t__( '\"%s\" successfully created.' ),\n\t\t\t\t\t\t\t\t\tdecodeEntities(\n\t\t\t\t\t\t\t\t\t\tnewItem.title?.rendered || title\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tid: 'duplicate-post-action',\n\t\t\t\t\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tif ( onActionPerformed ) {\n\t\t\t\t\t\t\t\tonActionPerformed( [ newItem ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch ( error ) {\n\t\t\t\t\t\t\tconst errorMessage =\n\t\t\t\t\t\t\t\terror.message && error.code !== 'unknown_error'\n\t\t\t\t\t\t\t\t\t? error.message\n\t\t\t\t\t\t\t\t\t: __(\n\t\t\t\t\t\t\t\t\t\t\t'An error occurred while duplicating the page.'\n\t\t\t\t\t\t\t\t\t  );\n\n\t\t\t\t\t\t\tcreateErrorNotice( errorMessage, {\n\t\t\t\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tsetIsCreatingPage( false );\n\t\t\t\t\t\t\tcloseModal();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<form onSubmit={ createPage }>\n\t\t\t\t\t\t\t<VStack spacing={ 3 }>\n\t\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\t\tlabel={ __( 'Title' ) }\n\t\t\t\t\t\t\t\t\tonChange={ setTitle }\n\t\t\t\t\t\t\t\t\tplaceholder={ __( 'No title' ) }\n\t\t\t\t\t\t\t\t\tvalue={ title }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<HStack spacing={ 2 } justify=\"end\">\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\t\t\t\t\tonClick={ closeModal }\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{ __( 'Cancel' ) }\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\tisBusy={ isCreatingPage }\n\t\t\t\t\t\t\t\t\t\taria-disabled={ isCreatingPage }\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{ _x( 'Duplicate', 'action label' ) }\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</HStack>\n\t\t\t\t\t\t\t</VStack>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t},\n\t\t[ userCanCreatePost ]\n\t);\n};\n\nconst isTemplatePartRevertable = ( item ) => {\n\tif ( ! item ) {\n\t\treturn false;\n\t}\n\tconst hasThemeFile = item.templatePart?.has_theme_file;\n\treturn canDeleteOrReset( item ) && hasThemeFile;\n};\n\nconst resetTemplateAction = {\n\tid: 'reset-template',\n\tlabel: __( 'Reset' ),\n\tisEligible: ( item ) => {\n\t\treturn item.type === TEMPLATE_PART_POST_TYPE\n\t\t\t? isTemplatePartRevertable( item )\n\t\t\t: isTemplateRevertable( item );\n\t},\n\ticon: backup,\n\tsupportsBulk: true,\n\thideModalHeader: true,\n\tRenderModal: ( { items, closeModal, onActionPerformed } ) => {\n\t\tconst [ isBusy, setIsBusy ] = useState( false );\n\t\tconst { revertTemplate, removeTemplates } = unlock(\n\t\t\tuseDispatch( editorStore )\n\t\t);\n\t\tconst { saveEditedEntityRecord } = useDispatch( coreStore );\n\t\tconst { createSuccessNotice, createErrorNotice } =\n\t\t\tuseDispatch( noticesStore );\n\t\tconst onConfirm = async () => {\n\t\t\ttry {\n\t\t\t\tif ( items[ 0 ].type === TEMPLATE_PART_POST_TYPE ) {\n\t\t\t\t\tawait removeTemplates( items );\n\t\t\t\t} else {\n\t\t\t\t\tfor ( const template of items ) {\n\t\t\t\t\t\tif ( template.type === TEMPLATE_POST_TYPE ) {\n\t\t\t\t\t\t\tawait revertTemplate( template, {\n\t\t\t\t\t\t\t\tallowUndo: false,\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\tawait saveEditedEntityRecord(\n\t\t\t\t\t\t\t\t'postType',\n\t\t\t\t\t\t\t\ttemplate.type,\n\t\t\t\t\t\t\t\ttemplate.id\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcreateSuccessNotice(\n\t\t\t\t\t\titems.length > 1\n\t\t\t\t\t\t\t? sprintf(\n\t\t\t\t\t\t\t\t\t/* translators: The number of items. */\n\t\t\t\t\t\t\t\t\t__( '%s items reset.' ),\n\t\t\t\t\t\t\t\t\titems.length\n\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t: sprintf(\n\t\t\t\t\t\t\t\t\t/* translators: The template/part's name. */\n\t\t\t\t\t\t\t\t\t__( '\"%s\" reset.' ),\n\t\t\t\t\t\t\t\t\tdecodeEntities( getItemTitle( items[ 0 ] ) )\n\t\t\t\t\t\t\t  ),\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t\t\t\tid: 'revert-template-action',\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} catch ( error ) {\n\t\t\t\tlet fallbackErrorMessage;\n\t\t\t\tif ( items[ 0 ].type === TEMPLATE_POST_TYPE ) {\n\t\t\t\t\tfallbackErrorMessage =\n\t\t\t\t\t\titems.length === 1\n\t\t\t\t\t\t\t? __(\n\t\t\t\t\t\t\t\t\t'An error occurred while reverting the template.'\n\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t: __(\n\t\t\t\t\t\t\t\t\t'An error occurred while reverting the templates.'\n\t\t\t\t\t\t\t  );\n\t\t\t\t} else {\n\t\t\t\t\tfallbackErrorMessage =\n\t\t\t\t\t\titems.length === 1\n\t\t\t\t\t\t\t? __(\n\t\t\t\t\t\t\t\t\t'An error occurred while reverting the template part.'\n\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t: __(\n\t\t\t\t\t\t\t\t\t'An error occurred while reverting the template parts.'\n\t\t\t\t\t\t\t  );\n\t\t\t\t}\n\t\t\t\tconst errorMessage =\n\t\t\t\t\terror.message && error.code !== 'unknown_error'\n\t\t\t\t\t\t? error.message\n\t\t\t\t\t\t: fallbackErrorMessage;\n\n\t\t\t\tcreateErrorNotice( errorMessage, { type: 'snackbar' } );\n\t\t\t}\n\t\t};\n\t\treturn (\n\t\t\t<VStack spacing=\"5\">\n\t\t\t\t<Text>\n\t\t\t\t\t{ __( 'Reset to default and clear all customizations?' ) }\n\t\t\t\t</Text>\n\t\t\t\t<HStack justify=\"right\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\tonClick={ closeModal }\n\t\t\t\t\t\tdisabled={ isBusy }\n\t\t\t\t\t\t__experimentalIsFocusable\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Cancel' ) }\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\tonClick={ async () => {\n\t\t\t\t\t\t\tsetIsBusy( true );\n\t\t\t\t\t\t\tawait onConfirm( items );\n\t\t\t\t\t\t\tonActionPerformed?.( items );\n\t\t\t\t\t\t\tsetIsBusy( false );\n\t\t\t\t\t\t\tcloseModal();\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tisBusy={ isBusy }\n\t\t\t\t\t\tdisabled={ isBusy }\n\t\t\t\t\t\t__experimentalIsFocusable\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Reset' ) }\n\t\t\t\t\t</Button>\n\t\t\t\t</HStack>\n\t\t\t</VStack>\n\t\t);\n\t},\n};\n\nexport const duplicatePatternAction = {\n\tid: 'duplicate-pattern',\n\tlabel: _x( 'Duplicate', 'action label' ),\n\tisEligible: ( item ) => item.type !== TEMPLATE_PART_POST_TYPE,\n\tmodalHeader: _x( 'Duplicate pattern', 'action label' ),\n\tRenderModal: ( { items, closeModal } ) => {\n\t\tconst [ item ] = items;\n\t\tconst isThemePattern = item.type === PATTERN_TYPES.theme;\n\t\tconst duplicatedProps = useDuplicatePatternProps( {\n\t\t\tpattern:\n\t\t\t\tisThemePattern || ! item.patternPost ? item : item.patternPost,\n\t\t\tonSuccess: () => closeModal(),\n\t\t} );\n\t\treturn (\n\t\t\t<CreatePatternModalContents\n\t\t\t\tonClose={ closeModal }\n\t\t\t\tconfirmLabel={ _x( 'Duplicate', 'action label' ) }\n\t\t\t\t{ ...duplicatedProps }\n\t\t\t/>\n\t\t);\n\t},\n};\n\nexport const duplicateTemplatePartAction = {\n\tid: 'duplicate-template-part',\n\tlabel: _x( 'Duplicate', 'action label' ),\n\tisEligible: ( item ) => item.type === TEMPLATE_PART_POST_TYPE,\n\tmodalHeader: _x( 'Duplicate template part', 'action label' ),\n\tRenderModal: ( { items, closeModal } ) => {\n\t\tconst [ item ] = items;\n\t\tconst { createSuccessNotice } = useDispatch( noticesStore );\n\t\tfunction onTemplatePartSuccess() {\n\t\t\tcreateSuccessNotice(\n\t\t\t\tsprintf(\n\t\t\t\t\t// translators: %s: The new template part's title e.g. 'Call to action (copy)'.\n\t\t\t\t\t__( '\"%s\" duplicated.' ),\n\t\t\t\t\titem.title\n\t\t\t\t),\n\t\t\t\t{ type: 'snackbar', id: 'edit-site-patterns-success' }\n\t\t\t);\n\t\t\tcloseModal();\n\t\t}\n\t\treturn (\n\t\t\t<CreateTemplatePartModalContents\n\t\t\t\tblocks={ item.blocks }\n\t\t\t\tdefaultArea={ item.templatePart?.area || item.area }\n\t\t\t\tdefaultTitle={ sprintf(\n\t\t\t\t\t/* translators: %s: Existing template part title */\n\t\t\t\t\t__( '%s (Copy)' ),\n\t\t\t\t\titem.title\n\t\t\t\t) }\n\t\t\t\tonCreate={ onTemplatePartSuccess }\n\t\t\t\tonError={ closeModal }\n\t\t\t\tconfirmLabel={ _x( 'Duplicate', 'action label' ) }\n\t\t\t/>\n\t\t);\n\t},\n};\n\nexport function usePostActions( { postType, onActionPerformed, context } ) {\n\tconst {\n\t\tdefaultActions,\n\t\tpostTypeObject,\n\t\tuserCanCreatePostType,\n\t\tresource,\n\t\tcachedCanUserResolvers,\n\t} = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getPostType, canUser, getCachedResolvers } =\n\t\t\t\tselect( coreStore );\n\t\t\tconst { getEntityActions } = unlock( select( editorStore ) );\n\t\t\tconst _postTypeObject = getPostType( postType );\n\t\t\tconst _resource = _postTypeObject?.rest_base || '';\n\t\t\treturn {\n\t\t\t\tpostTypeObject: _postTypeObject,\n\t\t\t\tdefaultActions: getEntityActions( 'postType', postType ),\n\t\t\t\tuserCanCreatePostType: canUser( 'create', _resource ),\n\t\t\t\tresource: _resource,\n\t\t\t\tcachedCanUserResolvers: getCachedResolvers()?.canUser,\n\t\t\t};\n\t\t},\n\t\t[ postType ]\n\t);\n\n\tconst duplicatePostAction = useDuplicatePostAction( postType );\n\tconst trashPostActionForPostType = useTrashPostAction( resource );\n\tconst permanentlyDeletePostActionForPostType =\n\t\tusePermanentlyDeletePostAction( resource );\n\tconst renamePostActionForPostType = useRenamePostAction( resource );\n\tconst restorePostActionForPostType = useRestorePostAction( resource );\n\tconst isTemplateOrTemplatePart = [\n\t\tTEMPLATE_POST_TYPE,\n\t\tTEMPLATE_PART_POST_TYPE,\n\t].includes( postType );\n\tconst isPattern = postType === PATTERN_POST_TYPE;\n\tconst isLoaded = !! postTypeObject;\n\tconst supportsRevisions = !! postTypeObject?.supports?.revisions;\n\tconst supportsTitle = !! postTypeObject?.supports?.title;\n\treturn useMemo( () => {\n\t\tif ( ! isLoaded ) {\n\t\t\treturn [];\n\t\t}\n\n\t\tlet actions = [\n\t\t\tpostTypeObject?.viewable && viewPostAction,\n\t\t\tsupportsRevisions && postRevisionsAction,\n\t\t\tglobalThis.IS_GUTENBERG_PLUGIN\n\t\t\t\t? ! isTemplateOrTemplatePart &&\n\t\t\t\t  ! isPattern &&\n\t\t\t\t  duplicatePostAction\n\t\t\t\t: false,\n\t\t\tisTemplateOrTemplatePart &&\n\t\t\t\tuserCanCreatePostType &&\n\t\t\t\tduplicateTemplatePartAction,\n\t\t\tisPattern && userCanCreatePostType && duplicatePatternAction,\n\t\t\tsupportsTitle && renamePostActionForPostType,\n\t\t\tisPattern && exportPatternAsJSONAction,\n\t\t\tisTemplateOrTemplatePart\n\t\t\t\t? resetTemplateAction\n\t\t\t\t: restorePostActionForPostType,\n\t\t\tisTemplateOrTemplatePart || isPattern\n\t\t\t\t? deletePostAction\n\t\t\t\t: trashPostActionForPostType,\n\t\t\t! isTemplateOrTemplatePart &&\n\t\t\t\tpermanentlyDeletePostActionForPostType,\n\t\t\t...defaultActions,\n\t\t].filter( Boolean );\n\t\t// Filter actions based on provided context. If not provided\n\t\t// all actions are returned. We'll have a single entry for getting the actions\n\t\t// and the consumer should provide the context to filter the actions, if needed.\n\t\t// Actions should also provide the `context` they support, if it's specific, to\n\t\t// compare with the provided context to get all the actions.\n\t\t// Right now the only supported context is `list`.\n\t\tactions = actions.filter( ( action ) => {\n\t\t\tif ( ! action.context ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn action.context === context;\n\t\t} );\n\n\t\tif ( onActionPerformed ) {\n\t\t\tfor ( let i = 0; i < actions.length; ++i ) {\n\t\t\t\tif ( actions[ i ].callback ) {\n\t\t\t\t\tconst existingCallback = actions[ i ].callback;\n\t\t\t\t\tactions[ i ] = {\n\t\t\t\t\t\t...actions[ i ],\n\t\t\t\t\t\tcallback: ( items, { _onActionPerformed } ) => {\n\t\t\t\t\t\t\texistingCallback( items, ( _items ) => {\n\t\t\t\t\t\t\t\tif ( _onActionPerformed ) {\n\t\t\t\t\t\t\t\t\t_onActionPerformed( _items );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tonActionPerformed( actions[ i ].id, _items );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tif ( actions[ i ].RenderModal ) {\n\t\t\t\t\tconst ExistingRenderModal = actions[ i ].RenderModal;\n\t\t\t\t\tactions[ i ] = {\n\t\t\t\t\t\t...actions[ i ],\n\t\t\t\t\t\tRenderModal: ( props ) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<ExistingRenderModal\n\t\t\t\t\t\t\t\t\t{ ...props }\n\t\t\t\t\t\t\t\t\tonActionPerformed={ ( _items ) => {\n\t\t\t\t\t\t\t\t\t\tif ( props.onActionPerformed ) {\n\t\t\t\t\t\t\t\t\t\t\tprops.onActionPerformed( _items );\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tonActionPerformed(\n\t\t\t\t\t\t\t\t\t\t\tactions[ i ].id,\n\t\t\t\t\t\t\t\t\t\t\t_items\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn actions;\n\t\t// We are making this use memo depend on cachedCanUserResolvers as a way to make the component using this hook re-render\n\t\t// when user capabilities are resolved. This makes sure the isEligible functions of actions dependent on capabilities are re-evaluated.\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [\n\t\tdefaultActions,\n\t\tuserCanCreatePostType,\n\t\tisTemplateOrTemplatePart,\n\t\tisPattern,\n\t\tpostTypeObject?.viewable,\n\t\tduplicatePostAction,\n\t\ttrashPostActionForPostType,\n\t\trestorePostActionForPostType,\n\t\trenamePostActionForPostType,\n\t\tpermanentlyDeletePostActionForPostType,\n\t\tonActionPerformed,\n\t\tisLoaded,\n\t\tsupportsRevisions,\n\t\tsupportsTitle,\n\t\tcontext,\n\t\tcachedCanUserResolvers,\n\t] );\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { useState, useMemo } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport {\n\tprivateApis as componentsPrivateApis,\n\tButton,\n\tModal,\n} from '@wordpress/components';\nimport { moreVertical } from '@wordpress/icons';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { unlock } from '../../lock-unlock';\nimport { usePostActions } from './actions';\nimport { store as editorStore } from '../../store';\n\nconst {\n\tDropdownMenuV2: DropdownMenu,\n\tDropdownMenuGroupV2: DropdownMenuGroup,\n\tDropdownMenuItemV2: DropdownMenuItem,\n\tDropdownMenuItemLabelV2: DropdownMenuItemLabel,\n\tkebabCase,\n} = unlock( componentsPrivateApis );\n\nexport default function PostActions( { onActionPerformed, buttonProps } ) {\n\tconst [ isActionsMenuOpen, setIsActionsMenuOpen ] = useState( false );\n\tconst { item, postType } = useSelect( ( select ) => {\n\t\tconst { getCurrentPostType, getCurrentPostId } = select( editorStore );\n\t\tconst { getEditedEntityRecord } = select( coreStore );\n\t\tconst _postType = getCurrentPostType();\n\t\treturn {\n\t\t\titem: getEditedEntityRecord(\n\t\t\t\t'postType',\n\t\t\t\t_postType,\n\t\t\t\tgetCurrentPostId()\n\t\t\t),\n\t\t\tpostType: _postType,\n\t\t};\n\t}, [] );\n\tconst allActions = usePostActions( { postType, onActionPerformed } );\n\n\tconst actions = useMemo( () => {\n\t\treturn allActions.filter( ( action ) => {\n\t\t\treturn ! action.isEligible || action.isEligible( item );\n\t\t} );\n\t}, [ allActions, item ] );\n\n\treturn (\n\t\t<DropdownMenu\n\t\t\topen={ isActionsMenuOpen }\n\t\t\ttrigger={\n\t\t\t\t<Button\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\ticon={ moreVertical }\n\t\t\t\t\tlabel={ __( 'Actions' ) }\n\t\t\t\t\tdisabled={ ! actions.length }\n\t\t\t\t\t__experimentalIsFocusable\n\t\t\t\t\tclassName=\"editor-all-actions-button\"\n\t\t\t\t\tonClick={ () =>\n\t\t\t\t\t\tsetIsActionsMenuOpen( ! isActionsMenuOpen )\n\t\t\t\t\t}\n\t\t\t\t\t{ ...buttonProps }\n\t\t\t\t/>\n\t\t\t}\n\t\t\tonOpenChange={ setIsActionsMenuOpen }\n\t\t\tplacement=\"bottom-end\"\n\t\t>\n\t\t\t<ActionsDropdownMenuGroup\n\t\t\t\tactions={ actions }\n\t\t\t\titem={ item }\n\t\t\t\tonClose={ () => {\n\t\t\t\t\tsetIsActionsMenuOpen( false );\n\t\t\t\t} }\n\t\t\t/>\n\t\t</DropdownMenu>\n\t);\n}\n\n// From now on all the functions on this file are copied as from the dataviews packages,\n// The editor packages should not be using the dataviews packages directly,\n// and the dataviews package should not be using the editor packages directly,\n// so duplicating the code here seems like the least bad option.\n\n// Copied as is from packages/dataviews/src/item-actions.js\nfunction DropdownMenuItemTrigger( { action, onClick, items } ) {\n\tconst label =\n\t\ttypeof action.label === 'string' ? action.label : action.label( items );\n\treturn (\n\t\t<DropdownMenuItem\n\t\t\tonClick={ onClick }\n\t\t\thideOnClick={ ! action.RenderModal }\n\t\t>\n\t\t\t<DropdownMenuItemLabel>{ label }</DropdownMenuItemLabel>\n\t\t</DropdownMenuItem>\n\t);\n}\n\n// Copied as is from packages/dataviews/src/item-actions.js\n// With an added onClose prop.\nfunction ActionWithModal( { action, item, ActionTrigger, onClose } ) {\n\tconst [ isModalOpen, setIsModalOpen ] = useState( false );\n\tconst actionTriggerProps = {\n\t\taction,\n\t\tonClick: () => setIsModalOpen( true ),\n\t\titems: [ item ],\n\t};\n\tconst { RenderModal, hideModalHeader } = action;\n\treturn (\n\t\t<>\n\t\t\t<ActionTrigger { ...actionTriggerProps } />\n\t\t\t{ isModalOpen && (\n\t\t\t\t<Modal\n\t\t\t\t\ttitle={ action.modalHeader || action.label }\n\t\t\t\t\t__experimentalHideHeader={ !! hideModalHeader }\n\t\t\t\t\tonRequestClose={ () => {\n\t\t\t\t\t\tsetIsModalOpen( false );\n\t\t\t\t\t} }\n\t\t\t\t\toverlayClassName={ `editor-action-modal editor-action-modal__${ kebabCase(\n\t\t\t\t\t\taction.id\n\t\t\t\t\t) }` }\n\t\t\t\t\tfocusOnMount=\"firstContentElement\"\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t>\n\t\t\t\t\t<RenderModal\n\t\t\t\t\t\titems={ [ item ] }\n\t\t\t\t\t\tcloseModal={ () => {\n\t\t\t\t\t\t\tsetIsModalOpen( false );\n\t\t\t\t\t\t\tonClose();\n\t\t\t\t\t\t} }\n\t\t\t\t\t/>\n\t\t\t\t</Modal>\n\t\t\t) }\n\t\t</>\n\t);\n}\n\n// Copied as is from packages/dataviews/src/item-actions.js\n// With an added onClose prop.\nfunction ActionsDropdownMenuGroup( { actions, item, onClose } ) {\n\treturn (\n\t\t<DropdownMenuGroup>\n\t\t\t{ actions.map( ( action ) => {\n\t\t\t\tif ( action.RenderModal ) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ActionWithModal\n\t\t\t\t\t\t\tkey={ action.id }\n\t\t\t\t\t\t\taction={ action }\n\t\t\t\t\t\t\titem={ item }\n\t\t\t\t\t\t\tActionTrigger={ DropdownMenuItemTrigger }\n\t\t\t\t\t\t\tonClose={ onClose }\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn (\n\t\t\t\t\t<DropdownMenuItemTrigger\n\t\t\t\t\t\tkey={ action.id }\n\t\t\t\t\t\taction={ action }\n\t\t\t\t\t\tonClick={ () => action.callback( [ item ] ) }\n\t\t\t\t\t\titems={ [ item ] }\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t} ) }\n\t\t</DropdownMenuGroup>\n\t);\n}\n","/**\n * External dependencies\n */\nimport clsx from 'clsx';\n/**\n * WordPress dependencies\n */\nimport {\n\tIcon,\n\t__experimentalHStack as HStack,\n\t__experimentalText as Text,\n} from '@wordpress/components';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { useSelect } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\nimport { decodeEntities } from '@wordpress/html-entities';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\nimport {\n\tTEMPLATE_POST_TYPE,\n\tTEMPLATE_PART_POST_TYPE,\n\tPATTERN_POST_TYPE,\n\tGLOBAL_POST_TYPES,\n} from '../../store/constants';\nimport { unlock } from '../../lock-unlock';\n\nexport default function PostCardPanel( { actions } ) {\n\tconst { isFrontPage, isPostsPage, title, icon, isSync } = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetEditedPostAttribute,\n\t\t\t\tgetCurrentPostType,\n\t\t\t\tgetCurrentPostId,\n\t\t\t\t__experimentalGetTemplateInfo,\n\t\t\t} = select( editorStore );\n\t\t\tconst { getEditedEntityRecord } = select( coreStore );\n\t\t\tconst siteSettings = getEditedEntityRecord( 'root', 'site' );\n\t\t\tconst _type = getCurrentPostType();\n\t\t\tconst _id = getCurrentPostId();\n\t\t\tconst _record = getEditedEntityRecord( 'postType', _type, _id );\n\t\t\tconst _templateInfo =\n\t\t\t\t[ TEMPLATE_POST_TYPE, TEMPLATE_PART_POST_TYPE ].includes(\n\t\t\t\t\t_type\n\t\t\t\t) && __experimentalGetTemplateInfo( _record );\n\t\t\tlet _isSync = false;\n\t\t\tif ( GLOBAL_POST_TYPES.includes( _type ) ) {\n\t\t\t\tif ( PATTERN_POST_TYPE === _type ) {\n\t\t\t\t\t// When the post is first created, the top level wp_pattern_sync_status is not set so get meta value instead.\n\t\t\t\t\tconst currentSyncStatus =\n\t\t\t\t\t\tgetEditedPostAttribute( 'meta' )\n\t\t\t\t\t\t\t?.wp_pattern_sync_status === 'unsynced'\n\t\t\t\t\t\t\t? 'unsynced'\n\t\t\t\t\t\t\t: getEditedPostAttribute(\n\t\t\t\t\t\t\t\t\t'wp_pattern_sync_status'\n\t\t\t\t\t\t\t  );\n\t\t\t\t\t_isSync = currentSyncStatus !== 'unsynced';\n\t\t\t\t} else {\n\t\t\t\t\t_isSync = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\ttitle:\n\t\t\t\t\t_templateInfo?.title || getEditedPostAttribute( 'title' ),\n\t\t\t\ticon: unlock( select( editorStore ) ).getPostIcon( _type, {\n\t\t\t\t\tarea: _record?.area,\n\t\t\t\t} ),\n\t\t\t\tisSync: _isSync,\n\t\t\t\tisFrontPage: siteSettings?.page_on_front === _id,\n\t\t\t\tisPostsPage: siteSettings?.page_for_posts === _id,\n\t\t\t};\n\t\t},\n\t\t[]\n\t);\n\treturn (\n\t\t<div className=\"editor-post-card-panel\">\n\t\t\t<HStack\n\t\t\t\tspacing={ 2 }\n\t\t\t\tclassName=\"editor-post-card-panel__header\"\n\t\t\t\talign=\"flex-start\"\n\t\t\t>\n\t\t\t\t<Icon\n\t\t\t\t\tclassName={ clsx( 'editor-post-card-panel__icon', {\n\t\t\t\t\t\t'is-sync': isSync,\n\t\t\t\t\t} ) }\n\t\t\t\t\ticon={ icon }\n\t\t\t\t/>\n\t\t\t\t<Text\n\t\t\t\t\tnumberOfLines={ 2 }\n\t\t\t\t\ttruncate\n\t\t\t\t\tclassName=\"editor-post-card-panel__title\"\n\t\t\t\t\tweight={ 500 }\n\t\t\t\t\tas=\"h2\"\n\t\t\t\t\tlineHeight=\"20px\"\n\t\t\t\t>\n\t\t\t\t\t{ title ? decodeEntities( title ) : __( 'No Title' ) }\n\t\t\t\t\t{ isFrontPage && (\n\t\t\t\t\t\t<span className=\"editor-post-card-panel__title-badge\">\n\t\t\t\t\t\t\t{ __( 'Front Page' ) }\n\t\t\t\t\t\t</span>\n\t\t\t\t\t) }\n\t\t\t\t\t{ isPostsPage && (\n\t\t\t\t\t\t<span className=\"editor-post-card-panel__title-badge\">\n\t\t\t\t\t\t\t{ __( 'Posts Page' ) }\n\t\t\t\t\t\t</span>\n\t\t\t\t\t) }\n\t\t\t\t</Text>\n\t\t\t\t{ actions }\n\t\t\t</HStack>\n\t\t</div>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { __experimentalText as Text } from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\nimport { __, _x, _n, sprintf } from '@wordpress/i18n';\nimport { count as wordCount } from '@wordpress/wordcount';\nimport { useMemo } from '@wordpress/element';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\nimport {\n\tTEMPLATE_POST_TYPE,\n\tTEMPLATE_PART_POST_TYPE,\n} from '../../store/constants';\n\n// Taken from packages/editor/src/components/time-to-read/index.js.\nconst AVERAGE_READING_RATE = 189;\n\n// This component renders the wordcount and reading time for the post.\nexport default function PostContentInformation() {\n\tconst { postContent } = useSelect( ( select ) => {\n\t\tconst { getEditedPostAttribute, getCurrentPostType, getCurrentPostId } =\n\t\t\tselect( editorStore );\n\t\tconst { getEntityRecord } = select( coreStore );\n\t\tconst siteSettings = getEntityRecord( 'root', 'site' );\n\t\tconst postType = getCurrentPostType();\n\t\tconst _id = getCurrentPostId();\n\t\tconst isPostsPage = +_id === siteSettings?.page_for_posts;\n\t\tconst showPostContentInfo =\n\t\t\t! isPostsPage &&\n\t\t\t! [ TEMPLATE_POST_TYPE, TEMPLATE_PART_POST_TYPE ].includes(\n\t\t\t\tpostType\n\t\t\t);\n\t\treturn {\n\t\t\tpostContent:\n\t\t\t\tshowPostContentInfo && getEditedPostAttribute( 'content' ),\n\t\t};\n\t}, [] );\n\n\t/*\n\t * translators: If your word count is based on single characters (e.g. East Asian characters),\n\t * enter 'characters_excluding_spaces' or 'characters_including_spaces'. Otherwise, enter 'words'.\n\t * Do not translate into your own language.\n\t */\n\tconst wordCountType = _x( 'words', 'Word count type. Do not translate!' );\n\tconst wordsCounted = useMemo(\n\t\t() => ( postContent ? wordCount( postContent, wordCountType ) : 0 ),\n\t\t[ postContent, wordCountType ]\n\t);\n\tif ( ! wordsCounted ) {\n\t\treturn null;\n\t}\n\tconst readingTime = Math.round( wordsCounted / AVERAGE_READING_RATE );\n\tconst wordsCountText = sprintf(\n\t\t// translators: %s: the number of words in the post.\n\t\t_n( '%s word', '%s words', wordsCounted ),\n\t\twordsCounted.toLocaleString()\n\t);\n\tconst minutesText =\n\t\treadingTime <= 1\n\t\t\t? __( '1 minute' )\n\t\t\t: sprintf(\n\t\t\t\t\t// translators: %s: the number of minutes to read the post.\n\t\t\t\t\t_n( '%s minute', '%s minutes', readingTime ),\n\t\t\t\t\treadingTime.toLocaleString()\n\t\t\t  );\n\treturn (\n\t\t<div className=\"editor-post-content-information\">\n\t\t\t<Text>\n\t\t\t\t{ sprintf(\n\t\t\t\t\t/* translators: 1: How many words a post has. 2: the number of minutes to read the post (e.g. 130 words, 2 minutes read time.) */\n\t\t\t\t\t__( '%1$s, %2$s read time.' ),\n\t\t\t\t\twordsCountText,\n\t\t\t\t\tminutesText\n\t\t\t\t) }\n\t\t\t</Text>\n\t\t</div>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { Button, Dropdown } from '@wordpress/components';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { useSelect } from '@wordpress/data';\nimport { useState, useMemo } from '@wordpress/element';\nimport { __experimentalInspectorPopoverHeader as InspectorPopoverHeader } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport { default as PostFormatForm, POST_FORMATS } from './';\nimport PostFormatCheck from './check';\nimport PostPanelRow from '../post-panel-row';\nimport { store as editorStore } from '../../store';\n\n/**\n * Renders the Post Author Panel component.\n *\n * @return {Component} The component to be rendered.\n */\nfunction PostFormat() {\n\tconst { postFormat } = useSelect( ( select ) => {\n\t\tconst { getEditedPostAttribute } = select( editorStore );\n\t\tconst _postFormat = getEditedPostAttribute( 'format' );\n\t\treturn {\n\t\t\tpostFormat: _postFormat ?? 'standard',\n\t\t};\n\t}, [] );\n\tconst activeFormat = POST_FORMATS.find(\n\t\t( format ) => format.id === postFormat\n\t);\n\n\t// Use internal state instead of a ref to make sure that the component\n\t// re-renders when the popover's anchor updates.\n\tconst [ popoverAnchor, setPopoverAnchor ] = useState( null );\n\t// Memoize popoverProps to avoid returning a new object every time.\n\tconst popoverProps = useMemo(\n\t\t() => ( {\n\t\t\t// Anchor the popover to the middle of the entire row so that it doesn't\n\t\t\t// move around when the label changes.\n\t\t\tanchor: popoverAnchor,\n\t\t\tplacement: 'left-start',\n\t\t\toffset: 36,\n\t\t\tshift: true,\n\t\t} ),\n\t\t[ popoverAnchor ]\n\t);\n\treturn (\n\t\t<PostFormatCheck>\n\t\t\t<PostPanelRow label={ __( 'Format' ) } ref={ setPopoverAnchor }>\n\t\t\t\t<Dropdown\n\t\t\t\t\tpopoverProps={ popoverProps }\n\t\t\t\t\tcontentClassName=\"editor-post-format__dialog\"\n\t\t\t\t\tfocusOnMount\n\t\t\t\t\trenderToggle={ ( { isOpen, onToggle } ) => (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tsize=\"compact\"\n\t\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\t\taria-expanded={ isOpen }\n\t\t\t\t\t\t\taria-label={ sprintf(\n\t\t\t\t\t\t\t\t// translators: %s: Current post format.\n\t\t\t\t\t\t\t\t__( 'Change format: %s' ),\n\t\t\t\t\t\t\t\tactiveFormat?.caption\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\tonClick={ onToggle }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ activeFormat?.caption }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t) }\n\t\t\t\t\trenderContent={ ( { onClose } ) => (\n\t\t\t\t\t\t<div className=\"editor-post-format__dialog-content\">\n\t\t\t\t\t\t\t<InspectorPopoverHeader\n\t\t\t\t\t\t\t\ttitle={ __( 'Format' ) }\n\t\t\t\t\t\t\t\tonClose={ onClose }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<PostFormatForm />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) }\n\t\t\t\t/>\n\t\t\t</PostPanelRow>\n\t\t</PostFormatCheck>\n\t);\n}\n\nexport default PostFormat;\n","/**\n * WordPress dependencies\n */\nimport { __experimentalText as Text } from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { humanTimeDiff } from '@wordpress/date';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nexport default function PostLastEditedPanel() {\n\tconst modified = useSelect(\n\t\t( select ) =>\n\t\t\tselect( editorStore ).getEditedPostAttribute( 'modified' ),\n\t\t[]\n\t);\n\tconst lastEditedText =\n\t\tmodified &&\n\t\tsprintf(\n\t\t\t// translators: %s: Human-readable time difference, e.g. \"2 days ago\".\n\t\t\t__( 'Last edited %s.' ),\n\t\t\thumanTimeDiff( modified )\n\t\t);\n\tif ( ! lastEditedText ) {\n\t\treturn null;\n\t}\n\treturn (\n\t\t<div className=\"editor-post-last-edited-panel\">\n\t\t\t<Text>{ lastEditedText }</Text>\n\t\t</div>\n\t);\n}\n","/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * WordPress dependencies\n */\nimport { __experimentalVStack as VStack } from '@wordpress/components';\n\nfunction PostPanelSection( { className, children } ) {\n\treturn (\n\t\t<VStack className={ clsx( 'editor-post-panel__section', className ) }>\n\t\t\t{ children }\n\t\t</VStack>\n\t);\n}\n\nexport default PostPanelSection;\n","/**\n * WordPress dependencies\n */\nimport {\n\tButton,\n\tCheckboxControl,\n\tDropdown,\n\t__experimentalText as Text,\n\t__experimentalVStack as VStack,\n\tTextControl,\n\tRadioControl,\n} from '@wordpress/components';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { useState, useMemo } from '@wordpress/element';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { __experimentalInspectorPopoverHeader as InspectorPopoverHeader } from '@wordpress/block-editor';\nimport { useInstanceId } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport {\n\tTEMPLATE_POST_TYPE,\n\tTEMPLATE_PART_POST_TYPE,\n\tPATTERN_POST_TYPE,\n\tNAVIGATION_POST_TYPE,\n} from '../../store/constants';\nimport PostPanelRow from '../post-panel-row';\nimport PostSticky from '../post-sticky';\nimport { PrivatePostSchedule } from '../post-schedule';\nimport { store as editorStore } from '../../store';\n\nconst labels = {\n\t'auto-draft': __( 'Draft' ),\n\tdraft: __( 'Draft' ),\n\tpending: __( 'Pending' ),\n\tprivate: __( 'Private' ),\n\tfuture: __( 'Scheduled' ),\n\tpublish: __( 'Published' ),\n};\n\nconst STATUS_OPTIONS = [\n\t{\n\t\tlabel: (\n\t\t\t<>\n\t\t\t\t{ __( 'Draft' ) }\n\t\t\t\t<Text variant=\"muted\" size={ 12 }>\n\t\t\t\t\t{ __( 'Not ready to publish.' ) }\n\t\t\t\t</Text>\n\t\t\t</>\n\t\t),\n\t\tvalue: 'draft',\n\t},\n\t{\n\t\tlabel: (\n\t\t\t<>\n\t\t\t\t{ __( 'Pending' ) }\n\t\t\t\t<Text variant=\"muted\" size={ 12 }>\n\t\t\t\t\t{ __( 'Waiting for review before publishing.' ) }\n\t\t\t\t</Text>\n\t\t\t</>\n\t\t),\n\t\tvalue: 'pending',\n\t},\n\t{\n\t\tlabel: (\n\t\t\t<>\n\t\t\t\t{ __( 'Private' ) }\n\t\t\t\t<Text variant=\"muted\" size={ 12 }>\n\t\t\t\t\t{ __( 'Only visible to site admins and editors.' ) }\n\t\t\t\t</Text>\n\t\t\t</>\n\t\t),\n\t\tvalue: 'private',\n\t},\n\t{\n\t\tlabel: (\n\t\t\t<>\n\t\t\t\t{ __( 'Scheduled' ) }\n\t\t\t\t<Text variant=\"muted\" size={ 12 }>\n\t\t\t\t\t{ __( 'Publish automatically on a chosen date.' ) }\n\t\t\t\t</Text>\n\t\t\t</>\n\t\t),\n\t\tvalue: 'future',\n\t},\n\t{\n\t\tlabel: (\n\t\t\t<>\n\t\t\t\t{ __( 'Published' ) }\n\t\t\t\t<Text variant=\"muted\" size={ 12 }>\n\t\t\t\t\t{ __( 'Visible to everyone.' ) }\n\t\t\t\t</Text>\n\t\t\t</>\n\t\t),\n\t\tvalue: 'publish',\n\t},\n];\n\nconst DESIGN_POST_TYPES = [\n\tTEMPLATE_POST_TYPE,\n\tTEMPLATE_PART_POST_TYPE,\n\tPATTERN_POST_TYPE,\n\tNAVIGATION_POST_TYPE,\n];\n\nexport default function PostStatus() {\n\tconst { status, date, password, postId, postType, canEdit } = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetEditedPostAttribute,\n\t\t\t\tgetCurrentPostId,\n\t\t\t\tgetCurrentPostType,\n\t\t\t\tgetCurrentPost,\n\t\t\t} = select( editorStore );\n\t\t\treturn {\n\t\t\t\tstatus: getEditedPostAttribute( 'status' ),\n\t\t\t\tdate: getEditedPostAttribute( 'date' ),\n\t\t\t\tpassword: getEditedPostAttribute( 'password' ),\n\t\t\t\tpostId: getCurrentPostId(),\n\t\t\t\tpostType: getCurrentPostType(),\n\t\t\t\tcanEdit:\n\t\t\t\t\tgetCurrentPost()._links?.[ 'wp:action-publish' ] ?? false,\n\t\t\t};\n\t\t},\n\t\t[]\n\t);\n\tconst [ showPassword, setShowPassword ] = useState( !! password );\n\tconst passwordInputId = useInstanceId(\n\t\tPostStatus,\n\t\t'editor-change-status__password-input'\n\t);\n\tconst { editEntityRecord } = useDispatch( coreStore );\n\tconst [ popoverAnchor, setPopoverAnchor ] = useState( null );\n\t// Memoize popoverProps to avoid returning a new object every time.\n\tconst popoverProps = useMemo(\n\t\t() => ( {\n\t\t\t// Anchor the popover to the middle of the entire row so that it doesn't\n\t\t\t// move around when the label changes.\n\t\t\tanchor: popoverAnchor,\n\t\t\t'aria-label': __( 'Status & visibility' ),\n\t\t\theaderTitle: __( 'Status & visibility' ),\n\t\t\tplacement: 'left-start',\n\t\t\toffset: 36,\n\t\t\tshift: true,\n\t\t} ),\n\t\t[ popoverAnchor ]\n\t);\n\n\tif ( DESIGN_POST_TYPES.includes( postType ) ) {\n\t\treturn null;\n\t}\n\n\tconst updatePost = ( {\n\t\tstatus: newStatus = status,\n\t\tpassword: newPassword = password,\n\t\tdate: newDate = date,\n\t} ) => {\n\t\teditEntityRecord( 'postType', postType, postId, {\n\t\t\tstatus: newStatus,\n\t\t\tdate: newDate,\n\t\t\tpassword: newPassword,\n\t\t} );\n\t};\n\n\tconst handleTogglePassword = ( value ) => {\n\t\tsetShowPassword( value );\n\t\tif ( ! value ) {\n\t\t\tupdatePost( { password: '' } );\n\t\t}\n\t};\n\n\tconst handleStatus = ( value ) => {\n\t\tlet newDate = date;\n\t\tlet newPassword = password;\n\t\tif ( status === 'future' && new Date( date ) > new Date() ) {\n\t\t\tnewDate = null;\n\t\t}\n\t\tif ( value === 'private' && password ) {\n\t\t\tnewPassword = '';\n\t\t}\n\t\tupdatePost( {\n\t\t\tstatus: value,\n\t\t\tdate: newDate,\n\t\t\tpassword: newPassword,\n\t\t} );\n\t};\n\n\treturn (\n\t\t<PostPanelRow label={ __( 'Status' ) } ref={ setPopoverAnchor }>\n\t\t\t{ canEdit ? (\n\t\t\t\t<Dropdown\n\t\t\t\t\tclassName=\"editor-post-status\"\n\t\t\t\t\tcontentClassName=\"editor-change-status__content\"\n\t\t\t\t\tpopoverProps={ popoverProps }\n\t\t\t\t\tfocusOnMount\n\t\t\t\t\trenderToggle={ ( { onToggle } ) => (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\t\tsize=\"compact\"\n\t\t\t\t\t\t\tonClick={ onToggle }\n\t\t\t\t\t\t\taria-label={ sprintf(\n\t\t\t\t\t\t\t\t// translators: %s: Current post status.\n\t\t\t\t\t\t\t\t__( 'Change post status: %s' ),\n\t\t\t\t\t\t\t\tlabels[ status ]\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ labels[ status ] }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t) }\n\t\t\t\t\trenderContent={ ( { onClose } ) => (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<InspectorPopoverHeader\n\t\t\t\t\t\t\t\ttitle={ __( 'Status & visibility' ) }\n\t\t\t\t\t\t\t\tonClose={ onClose }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t\t<VStack spacing={ 4 }>\n\t\t\t\t\t\t\t\t\t<RadioControl\n\t\t\t\t\t\t\t\t\t\tclassName=\"editor-change-status__options\"\n\t\t\t\t\t\t\t\t\t\thideLabelFromVision\n\t\t\t\t\t\t\t\t\t\tlabel={ __( 'Status' ) }\n\t\t\t\t\t\t\t\t\t\toptions={ STATUS_OPTIONS }\n\t\t\t\t\t\t\t\t\t\tonChange={ handleStatus }\n\t\t\t\t\t\t\t\t\t\tselected={\n\t\t\t\t\t\t\t\t\t\t\tstatus === 'auto-draft'\n\t\t\t\t\t\t\t\t\t\t\t\t? 'draft'\n\t\t\t\t\t\t\t\t\t\t\t\t: status\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t{ status === 'future' && (\n\t\t\t\t\t\t\t\t\t\t<div className=\"editor-change-status__publish-date-wrapper\">\n\t\t\t\t\t\t\t\t\t\t\t<PrivatePostSchedule\n\t\t\t\t\t\t\t\t\t\t\t\tshowPopoverHeaderActions={\n\t\t\t\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tisCompact\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t{ status !== 'private' && (\n\t\t\t\t\t\t\t\t\t\t<VStack\n\t\t\t\t\t\t\t\t\t\t\tas=\"fieldset\"\n\t\t\t\t\t\t\t\t\t\t\tspacing={ 4 }\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"editor-change-status__password-fieldset\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<CheckboxControl\n\t\t\t\t\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\t\t\t\t\tlabel={ __(\n\t\t\t\t\t\t\t\t\t\t\t\t\t'Password protected'\n\t\t\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t\t\t\t\t\t\t\t'Only visible to those who know the password'\n\t\t\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={ showPassword }\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleTogglePassword\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t{ showPassword && (\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"editor-change-status__password-input\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={ __(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Password'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tupdatePost( {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpassword: value,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={ password }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder={ __(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Use a secure password'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid={ passwordInputId }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t\t</VStack>\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t<PostSticky />\n\t\t\t\t\t\t\t\t</VStack>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) }\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<div className=\"editor-post-status is-read-only\">\n\t\t\t\t\t{ labels[ status ] }\n\t\t\t\t</div>\n\t\t\t) }\n\t\t</PostPanelRow>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport { debounce } from '@wordpress/compose';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport {\n\tButton,\n\tDropdown,\n\t__experimentalInputControl as InputControl,\n} from '@wordpress/components';\nimport { useState, useMemo } from '@wordpress/element';\nimport { __experimentalInspectorPopoverHeader as InspectorPopoverHeader } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport { TEMPLATE_POST_TYPE } from '../../store/constants';\nimport PostPanelRow from '../post-panel-row';\nimport { store as editorStore } from '../../store';\n\nconst EMPTY_OBJECT = {};\n\nexport default function BlogTitle() {\n\tconst { editEntityRecord } = useDispatch( coreStore );\n\tconst { postsPageTitle, postsPageId, isTemplate, postSlug } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getEntityRecord, getEditedEntityRecord } =\n\t\t\t\tselect( coreStore );\n\t\t\tconst siteSettings = getEntityRecord( 'root', 'site' );\n\t\t\tconst _postsPageRecord = siteSettings?.page_for_posts\n\t\t\t\t? getEditedEntityRecord(\n\t\t\t\t\t\t'postType',\n\t\t\t\t\t\t'page',\n\t\t\t\t\t\tsiteSettings?.page_for_posts\n\t\t\t\t  )\n\t\t\t\t: EMPTY_OBJECT;\n\t\t\tconst { getEditedPostAttribute, getCurrentPostType } =\n\t\t\t\tselect( editorStore );\n\t\t\treturn {\n\t\t\t\tpostsPageId: _postsPageRecord?.id,\n\t\t\t\tpostsPageTitle: _postsPageRecord?.title,\n\t\t\t\tisTemplate: getCurrentPostType() === TEMPLATE_POST_TYPE,\n\t\t\t\tpostSlug: getEditedPostAttribute( 'slug' ),\n\t\t\t};\n\t\t},\n\t\t[]\n\t);\n\t// Use internal state instead of a ref to make sure that the component\n\t// re-renders when the popover's anchor updates.\n\tconst [ popoverAnchor, setPopoverAnchor ] = useState( null );\n\t// Memoize popoverProps to avoid returning a new object every time.\n\tconst popoverProps = useMemo(\n\t\t() => ( {\n\t\t\t// Anchor the popover to the middle of the entire row so that it doesn't\n\t\t\t// move around when the label changes.\n\t\t\tanchor: popoverAnchor,\n\t\t\tplacement: 'left-start',\n\t\t\toffset: 36,\n\t\t\tshift: true,\n\t\t} ),\n\t\t[ popoverAnchor ]\n\t);\n\n\tif (\n\t\t! isTemplate ||\n\t\t! [ 'home', 'index' ].includes( postSlug ) ||\n\t\t! postsPageId\n\t) {\n\t\treturn null;\n\t}\n\n\tconst setPostsPageTitle = ( newValue ) => {\n\t\teditEntityRecord( 'postType', 'page', postsPageId, {\n\t\t\ttitle: newValue,\n\t\t} );\n\t};\n\tconst decodedTitle = decodeEntities( postsPageTitle );\n\treturn (\n\t\t<PostPanelRow label={ __( 'Blog title' ) } ref={ setPopoverAnchor }>\n\t\t\t<Dropdown\n\t\t\t\tpopoverProps={ popoverProps }\n\t\t\t\tcontentClassName=\"editor-blog-title-dropdown__content\"\n\t\t\t\tfocusOnMount\n\t\t\t\trenderToggle={ ( { isOpen, onToggle } ) => (\n\t\t\t\t\t<Button\n\t\t\t\t\t\tsize=\"compact\"\n\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\taria-expanded={ isOpen }\n\t\t\t\t\t\taria-label={ sprintf(\n\t\t\t\t\t\t\t// translators: %s: Current post link.\n\t\t\t\t\t\t\t__( 'Change blog title: %s' ),\n\t\t\t\t\t\t\tdecodedTitle\n\t\t\t\t\t\t) }\n\t\t\t\t\t\tonClick={ onToggle }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ decodedTitle }\n\t\t\t\t\t</Button>\n\t\t\t\t) }\n\t\t\t\trenderContent={ ( { onClose } ) => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<InspectorPopoverHeader\n\t\t\t\t\t\t\ttitle={ __( 'Blog title' ) }\n\t\t\t\t\t\t\tonClose={ onClose }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<InputControl\n\t\t\t\t\t\t\tplaceholder={ __( 'No Title' ) }\n\t\t\t\t\t\t\tsize=\"__unstable-large\"\n\t\t\t\t\t\t\tvalue={ postsPageTitle }\n\t\t\t\t\t\t\tonChange={ debounce( setPostsPageTitle, 300 ) }\n\t\t\t\t\t\t\tlabel={ __( 'Blog title' ) }\n\t\t\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t\t\t'Set the Posts Page title. Appears in search results, and when the page is shared on social media.'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\thideLabelFromVision\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t) }\n\t\t\t/>\n\t\t</PostPanelRow>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\nimport {\n\tButton,\n\tDropdown,\n\t__experimentalNumberControl as NumberControl,\n} from '@wordpress/components';\nimport { useState, useMemo } from '@wordpress/element';\nimport { __experimentalInspectorPopoverHeader as InspectorPopoverHeader } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport { TEMPLATE_POST_TYPE } from '../../store/constants';\nimport { store as editorStore } from '../../store';\nimport PostPanelRow from '../post-panel-row';\n\nexport default function PostsPerPage() {\n\tconst { editEntityRecord } = useDispatch( coreStore );\n\tconst { postsPerPage, isTemplate, postSlug } = useSelect( ( select ) => {\n\t\tconst { getEditedPostAttribute, getCurrentPostType } =\n\t\t\tselect( editorStore );\n\t\tconst { getEditedEntityRecord } = select( coreStore );\n\t\tconst siteSettings = getEditedEntityRecord( 'root', 'site' );\n\t\treturn {\n\t\t\tisTemplate: getCurrentPostType() === TEMPLATE_POST_TYPE,\n\t\t\tpostSlug: getEditedPostAttribute( 'slug' ),\n\t\t\tpostsPerPage: siteSettings?.posts_per_page || 1,\n\t\t};\n\t}, [] );\n\t// Use internal state instead of a ref to make sure that the component\n\t// re-renders when the popover's anchor updates.\n\tconst [ popoverAnchor, setPopoverAnchor ] = useState( null );\n\t// Memoize popoverProps to avoid returning a new object every time.\n\tconst popoverProps = useMemo(\n\t\t() => ( {\n\t\t\t// Anchor the popover to the middle of the entire row so that it doesn't\n\t\t\t// move around when the label changes.\n\t\t\tanchor: popoverAnchor,\n\t\t\tplacement: 'left-start',\n\t\t\toffset: 36,\n\t\t\tshift: true,\n\t\t} ),\n\t\t[ popoverAnchor ]\n\t);\n\n\tif ( ! isTemplate || ! [ 'home', 'index' ].includes( postSlug ) ) {\n\t\treturn null;\n\t}\n\tconst setPostsPerPage = ( newValue ) => {\n\t\teditEntityRecord( 'root', 'site', undefined, {\n\t\t\tposts_per_page: newValue,\n\t\t} );\n\t};\n\treturn (\n\t\t<PostPanelRow label={ __( 'Posts per page' ) } ref={ setPopoverAnchor }>\n\t\t\t<Dropdown\n\t\t\t\tpopoverProps={ popoverProps }\n\t\t\t\tcontentClassName=\"editor-posts-per-page-dropdown__content\"\n\t\t\t\tfocusOnMount\n\t\t\t\trenderToggle={ ( { isOpen, onToggle } ) => (\n\t\t\t\t\t<Button\n\t\t\t\t\t\tsize=\"compact\"\n\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\taria-expanded={ isOpen }\n\t\t\t\t\t\taria-label={ __( 'Change posts per page' ) }\n\t\t\t\t\t\tonClick={ onToggle }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ postsPerPage }\n\t\t\t\t\t</Button>\n\t\t\t\t) }\n\t\t\t\trenderContent={ ( { onClose } ) => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<InspectorPopoverHeader\n\t\t\t\t\t\t\ttitle={ __( 'Posts per page' ) }\n\t\t\t\t\t\t\tonClose={ onClose }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<NumberControl\n\t\t\t\t\t\t\tplaceholder={ 0 }\n\t\t\t\t\t\t\tvalue={ postsPerPage }\n\t\t\t\t\t\t\tsize=\"__unstable-large\"\n\t\t\t\t\t\t\tspinControls=\"custom\"\n\t\t\t\t\t\t\tstep=\"1\"\n\t\t\t\t\t\t\tmin=\"1\"\n\t\t\t\t\t\t\tonChange={ setPostsPerPage }\n\t\t\t\t\t\t\tlabel={ __( 'Posts per page' ) }\n\t\t\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t\t\t'Set the default number of posts to display on blog pages, including categories and tags. Some templates may override this setting.'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\thideLabelFromVision\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t) }\n\t\t\t/>\n\t\t</PostPanelRow>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\nimport {\n\tButton,\n\tDropdown,\n\tRadioControl,\n\t__experimentalVStack as VStack,\n\t__experimentalText as Text,\n} from '@wordpress/components';\nimport { useState, useMemo } from '@wordpress/element';\nimport { __experimentalInspectorPopoverHeader as InspectorPopoverHeader } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport { TEMPLATE_POST_TYPE } from '../../store/constants';\nimport PostPanelRow from '../post-panel-row';\nimport { store as editorStore } from '../../store';\n\nconst COMMENT_OPTIONS = [\n\t{\n\t\tlabel: (\n\t\t\t<>\n\t\t\t\t{ __( 'Open' ) }\n\t\t\t\t<Text variant=\"muted\" size={ 12 }>\n\t\t\t\t\t{ __( 'Visitors can add new comments and replies.' ) }\n\t\t\t\t</Text>\n\t\t\t</>\n\t\t),\n\t\tvalue: 'open',\n\t},\n\t{\n\t\tlabel: (\n\t\t\t<>\n\t\t\t\t{ __( 'Closed' ) }\n\t\t\t\t<Text variant=\"muted\" size={ 12 }>\n\t\t\t\t\t{ __( 'Visitors cannot add new comments or replies.' ) }\n\t\t\t\t</Text>\n\t\t\t\t<Text variant=\"muted\" size={ 12 }>\n\t\t\t\t\t{ __( 'Existing comments remain visible.' ) }\n\t\t\t\t</Text>\n\t\t\t</>\n\t\t),\n\t\tvalue: '',\n\t},\n];\n\nexport default function SiteDiscussion() {\n\tconst { editEntityRecord } = useDispatch( coreStore );\n\tconst { allowCommentsOnNewPosts, isTemplate, postSlug } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getEditedPostAttribute, getCurrentPostType } =\n\t\t\t\tselect( editorStore );\n\t\t\tconst { getEditedEntityRecord } = select( coreStore );\n\t\t\tconst siteSettings = getEditedEntityRecord( 'root', 'site' );\n\t\t\treturn {\n\t\t\t\tisTemplate: getCurrentPostType() === TEMPLATE_POST_TYPE,\n\t\t\t\tpostSlug: getEditedPostAttribute( 'slug' ),\n\t\t\t\tallowCommentsOnNewPosts:\n\t\t\t\t\tsiteSettings?.default_comment_status || '',\n\t\t\t};\n\t\t},\n\t\t[]\n\t);\n\t// Use internal state instead of a ref to make sure that the component\n\t// re-renders when the popover's anchor updates.\n\tconst [ popoverAnchor, setPopoverAnchor ] = useState( null );\n\t// Memoize popoverProps to avoid returning a new object every time.\n\tconst popoverProps = useMemo(\n\t\t() => ( {\n\t\t\t// Anchor the popover to the middle of the entire row so that it doesn't\n\t\t\t// move around when the label changes.\n\t\t\tanchor: popoverAnchor,\n\t\t\tplacement: 'left-start',\n\t\t\toffset: 36,\n\t\t\tshift: true,\n\t\t} ),\n\t\t[ popoverAnchor ]\n\t);\n\n\tif ( ! isTemplate || ! [ 'home', 'index' ].includes( postSlug ) ) {\n\t\treturn null;\n\t}\n\tconst setAllowCommentsOnNewPosts = ( newValue ) => {\n\t\teditEntityRecord( 'root', 'site', undefined, {\n\t\t\tdefault_comment_status: newValue ? 'open' : null,\n\t\t} );\n\t};\n\treturn (\n\t\t<PostPanelRow label={ __( 'Discussion' ) } ref={ setPopoverAnchor }>\n\t\t\t<Dropdown\n\t\t\t\tpopoverProps={ popoverProps }\n\t\t\t\tcontentClassName=\"editor-site-discussion-dropdown__content\"\n\t\t\t\tfocusOnMount\n\t\t\t\trenderToggle={ ( { isOpen, onToggle } ) => (\n\t\t\t\t\t<Button\n\t\t\t\t\t\tsize=\"compact\"\n\t\t\t\t\t\tvariant=\"tertiary\"\n\t\t\t\t\t\taria-expanded={ isOpen }\n\t\t\t\t\t\taria-label={ __( 'Change discussion settings' ) }\n\t\t\t\t\t\tonClick={ onToggle }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ allowCommentsOnNewPosts\n\t\t\t\t\t\t\t? __( 'Comments open' )\n\t\t\t\t\t\t\t: __( 'Comments closed' ) }\n\t\t\t\t\t</Button>\n\t\t\t\t) }\n\t\t\t\trenderContent={ ( { onClose } ) => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<InspectorPopoverHeader\n\t\t\t\t\t\t\ttitle={ __( 'Discussion' ) }\n\t\t\t\t\t\t\tonClose={ onClose }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<VStack spacing={ 3 }>\n\t\t\t\t\t\t\t<Text>\n\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t'Changes will apply to new posts only. Individual posts may override these settings.'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t<RadioControl\n\t\t\t\t\t\t\t\tclassName=\"editor-site-discussion__options\"\n\t\t\t\t\t\t\t\thideLabelFromVision\n\t\t\t\t\t\t\t\tlabel={ __( 'Comment status' ) }\n\t\t\t\t\t\t\t\toptions={ COMMENT_OPTIONS }\n\t\t\t\t\t\t\t\tonChange={ setAllowCommentsOnNewPosts }\n\t\t\t\t\t\t\t\tselected={ allowCommentsOnNewPosts }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</VStack>\n\t\t\t\t\t</>\n\t\t\t\t) }\n\t\t\t/>\n\t\t</PostPanelRow>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport {\n\tButton,\n\t__experimentalHeading as Heading,\n} from '@wordpress/components';\n\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\nimport { unlock } from '../../lock-unlock';\nimport { TEMPLATE_POST_TYPE } from '../../store/constants';\n\nfunction TemplateAreaItem( { area, clientId } ) {\n\tconst { selectBlock, toggleBlockHighlight } =\n\t\tuseDispatch( blockEditorStore );\n\tconst templatePartArea = useSelect(\n\t\t( select ) => {\n\t\t\tconst defaultAreas =\n\t\t\t\tselect(\n\t\t\t\t\teditorStore\n\t\t\t\t).__experimentalGetDefaultTemplatePartAreas();\n\n\t\t\treturn defaultAreas.find(\n\t\t\t\t( defaultArea ) => defaultArea.area === area\n\t\t\t);\n\t\t},\n\t\t[ area ]\n\t);\n\n\tconst highlightBlock = () => toggleBlockHighlight( clientId, true );\n\tconst cancelHighlightBlock = () => toggleBlockHighlight( clientId, false );\n\n\treturn (\n\t\t<Button\n\t\t\tclassName=\"editor-template-areas__item\"\n\t\t\ticon={ templatePartArea?.icon }\n\t\t\tonMouseOver={ highlightBlock }\n\t\t\tonMouseLeave={ cancelHighlightBlock }\n\t\t\tonFocus={ highlightBlock }\n\t\t\tonBlur={ cancelHighlightBlock }\n\t\t\tonClick={ () => {\n\t\t\t\tselectBlock( clientId );\n\t\t\t} }\n\t\t>\n\t\t\t{ templatePartArea?.label }\n\t\t</Button>\n\t);\n}\n\nexport default function TemplateAreas() {\n\tconst { isTemplate, templateParts } = useSelect( ( select ) => {\n\t\tconst _isTemplate =\n\t\t\tselect( editorStore ).getCurrentPostType() === TEMPLATE_POST_TYPE;\n\n\t\treturn {\n\t\t\tisTemplate: _isTemplate,\n\t\t\ttemplateParts:\n\t\t\t\t_isTemplate &&\n\t\t\t\tunlock(\n\t\t\t\t\tselect( editorStore )\n\t\t\t\t).getCurrentTemplateTemplateParts(),\n\t\t};\n\t}, [] );\n\n\tif ( ! isTemplate || ! templateParts.length ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<section className=\"editor-template-areas\">\n\t\t\t<Heading level={ 3 } className=\"editor-template-areas__title\">\n\t\t\t\t{ __( 'Areas' ) }\n\t\t\t</Heading>\n\n\t\t\t<ul className=\"editor-template-areas__list\">\n\t\t\t\t{ templateParts.map( ( { templatePart, block } ) => (\n\t\t\t\t\t<li key={ block.clientId }>\n\t\t\t\t\t\t<TemplateAreaItem\n\t\t\t\t\t\t\tarea={ templatePart.area }\n\t\t\t\t\t\t\tclientId={ block.clientId }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</li>\n\t\t\t\t) ) }\n\t\t\t</ul>\n\t\t</section>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { __experimentalVStack as VStack } from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport PluginPostStatusInfo from '../plugin-post-status-info';\nimport PostActions from '../post-actions';\nimport PostAuthorPanel from '../post-author/panel';\nimport PostCardPanel from '../post-card-panel';\nimport PostContentInformation from '../post-content-information';\nimport PageAttributesPanel from '../page-attributes/panel';\nimport PostDiscussionPanel from '../post-discussion/panel';\nimport { PrivatePostExcerptPanel as PostExcerptPanel } from '../post-excerpt/panel';\nimport PostFeaturedImagePanel from '../post-featured-image/panel';\nimport PostFormatPanel from '../post-format/panel';\nimport PostLastEditedPanel from '../post-last-edited-panel';\nimport PostPanelSection from '../post-panel-section';\nimport PostSchedulePanel from '../post-schedule/panel';\nimport PostStatusPanel from '../post-status';\nimport PostSyncStatus from '../post-sync-status';\nimport PostTemplatePanel from '../post-template/panel';\nimport PostURLPanel from '../post-url/panel';\nimport BlogTitle from '../blog-title';\nimport PostsPerPage from '../posts-per-page';\nimport SiteDiscussion from '../site-discussion';\nimport { store as editorStore } from '../../store';\nimport TemplateAreas from '../template-areas';\nimport { PrivatePostLastRevision } from '../post-last-revision';\n\n/**\n * Module Constants\n */\nconst PANEL_NAME = 'post-status';\n\nexport default function PostSummary( { onActionPerformed } ) {\n\tconst { isRemovedPostStatusPanel } = useSelect( ( select ) => {\n\t\t// We use isEditorPanelRemoved to hide the panel if it was programatically removed. We do\n\t\t// not use isEditorPanelEnabled since this panel should not be disabled through the UI.\n\t\tconst { isEditorPanelRemoved, getCurrentPostType } =\n\t\t\tselect( editorStore );\n\t\treturn {\n\t\t\tisRemovedPostStatusPanel: isEditorPanelRemoved( PANEL_NAME ),\n\t\t\tpostType: getCurrentPostType(),\n\t\t};\n\t}, [] );\n\n\treturn (\n\t\t<PostPanelSection className=\"editor-post-summary\">\n\t\t\t<PluginPostStatusInfo.Slot>\n\t\t\t\t{ ( fills ) => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<VStack spacing={ 4 }>\n\t\t\t\t\t\t\t<PostCardPanel\n\t\t\t\t\t\t\t\tactions={\n\t\t\t\t\t\t\t\t\t<PostActions\n\t\t\t\t\t\t\t\t\t\tonActionPerformed={ onActionPerformed }\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<PostFeaturedImagePanel withPanelBody={ false } />\n\t\t\t\t\t\t\t<PostExcerptPanel />\n\t\t\t\t\t\t\t<VStack spacing={ 1 }>\n\t\t\t\t\t\t\t\t<PostContentInformation />\n\t\t\t\t\t\t\t\t<PostLastEditedPanel />\n\t\t\t\t\t\t\t</VStack>\n\t\t\t\t\t\t\t{ ! isRemovedPostStatusPanel && (\n\t\t\t\t\t\t\t\t<VStack spacing={ 4 }>\n\t\t\t\t\t\t\t\t\t<VStack spacing={ 1 }>\n\t\t\t\t\t\t\t\t\t\t<PostStatusPanel />\n\t\t\t\t\t\t\t\t\t\t<PostSchedulePanel />\n\t\t\t\t\t\t\t\t\t\t<PostURLPanel />\n\t\t\t\t\t\t\t\t\t\t<PostAuthorPanel />\n\t\t\t\t\t\t\t\t\t\t<PostTemplatePanel />\n\t\t\t\t\t\t\t\t\t\t<PostDiscussionPanel />\n\t\t\t\t\t\t\t\t\t\t<PrivatePostLastRevision />\n\t\t\t\t\t\t\t\t\t\t<PageAttributesPanel />\n\t\t\t\t\t\t\t\t\t\t<PostSyncStatus />\n\t\t\t\t\t\t\t\t\t\t<BlogTitle />\n\t\t\t\t\t\t\t\t\t\t<PostsPerPage />\n\t\t\t\t\t\t\t\t\t\t<SiteDiscussion />\n\t\t\t\t\t\t\t\t\t\t<PostFormatPanel />\n\t\t\t\t\t\t\t\t\t</VStack>\n\t\t\t\t\t\t\t\t\t<TemplateAreas />\n\t\t\t\t\t\t\t\t\t{ fills }\n\t\t\t\t\t\t\t\t</VStack>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</VStack>\n\t\t\t\t\t</>\n\t\t\t\t) }\n\t\t\t</PluginPostStatusInfo.Slot>\n\t\t</PostPanelSection>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { useMemo } from '@wordpress/element';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { parse } from '@wordpress/blocks';\nimport { privateApis as patternsPrivateApis } from '@wordpress/patterns';\n\n/**\n * Internal dependencies\n */\nimport { unlock } from '../../lock-unlock';\nimport { store as editorStore } from '../../store';\n\nconst { EXCLUDED_PATTERN_SOURCES, PATTERN_TYPES } =\n\tunlock( patternsPrivateApis );\n\nfunction injectThemeAttributeInBlockTemplateContent(\n\tblock,\n\tcurrentThemeStylesheet\n) {\n\tblock.innerBlocks = block.innerBlocks.map( ( innerBlock ) => {\n\t\treturn injectThemeAttributeInBlockTemplateContent(\n\t\t\tinnerBlock,\n\t\t\tcurrentThemeStylesheet\n\t\t);\n\t} );\n\n\tif (\n\t\tblock.name === 'core/template-part' &&\n\t\tblock.attributes.theme === undefined\n\t) {\n\t\tblock.attributes.theme = currentThemeStylesheet;\n\t}\n\treturn block;\n}\n\n/**\n * Filter all patterns and return only the ones that are compatible with the current template.\n *\n * @param {Array}  patterns An array of patterns.\n * @param {Object} template The current template.\n * @return {Array} Array of patterns that are compatible with the current template.\n */\nfunction filterPatterns( patterns, template ) {\n\t// Filter out duplicates.\n\tconst filterOutDuplicatesByName = ( currentItem, index, items ) =>\n\t\tindex === items.findIndex( ( item ) => currentItem.name === item.name );\n\n\t// Filter out core/directory patterns not included in theme.json.\n\tconst filterOutExcludedPatternSources = ( pattern ) =>\n\t\t! EXCLUDED_PATTERN_SOURCES.includes( pattern.source );\n\n\t// Looks for patterns that have the same template type as the current template,\n\t// or have a block type that matches the current template area.\n\tconst filterCompatiblePatterns = ( pattern ) =>\n\t\tpattern.templateTypes?.includes( template.slug ) ||\n\t\tpattern.blockTypes?.includes( 'core/template-part/' + template.area );\n\n\treturn patterns.filter( ( pattern, index, items ) => {\n\t\treturn (\n\t\t\tfilterOutDuplicatesByName( pattern, index, items ) &&\n\t\t\tfilterOutExcludedPatternSources( pattern ) &&\n\t\t\tfilterCompatiblePatterns( pattern )\n\t\t);\n\t} );\n}\n\nfunction preparePatterns( patterns, currentThemeStylesheet ) {\n\treturn patterns.map( ( pattern ) => ( {\n\t\t...pattern,\n\t\tkeywords: pattern.keywords || [],\n\t\ttype: PATTERN_TYPES.theme,\n\t\tblocks: parse( pattern.content, {\n\t\t\t__unstableSkipMigrationLogs: true,\n\t\t} ).map( ( block ) =>\n\t\t\tinjectThemeAttributeInBlockTemplateContent(\n\t\t\t\tblock,\n\t\t\t\tcurrentThemeStylesheet\n\t\t\t)\n\t\t),\n\t} ) );\n}\n\nexport function useAvailablePatterns( template ) {\n\tconst { blockPatterns, restBlockPatterns, currentThemeStylesheet } =\n\t\tuseSelect( ( select ) => {\n\t\t\tconst { getEditorSettings } = select( editorStore );\n\t\t\tconst settings = getEditorSettings();\n\n\t\t\treturn {\n\t\t\t\tblockPatterns:\n\t\t\t\t\tsettings.__experimentalAdditionalBlockPatterns ??\n\t\t\t\t\tsettings.__experimentalBlockPatterns,\n\t\t\t\trestBlockPatterns: select( coreStore ).getBlockPatterns(),\n\t\t\t\tcurrentThemeStylesheet:\n\t\t\t\t\tselect( coreStore ).getCurrentTheme().stylesheet,\n\t\t\t};\n\t\t}, [] );\n\n\treturn useMemo( () => {\n\t\tconst mergedPatterns = [\n\t\t\t...( blockPatterns || [] ),\n\t\t\t...( restBlockPatterns || [] ),\n\t\t];\n\t\tconst filteredPatterns = filterPatterns( mergedPatterns, template );\n\t\treturn preparePatterns(\n\t\t\tfilteredPatterns,\n\t\t\ttemplate,\n\t\t\tcurrentThemeStylesheet\n\t\t);\n\t}, [ blockPatterns, restBlockPatterns, template, currentThemeStylesheet ] );\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { PanelBody } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useAsyncList } from '@wordpress/compose';\nimport { __experimentalBlockPatternsList as BlockPatternsList } from '@wordpress/block-editor';\nimport { serialize } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\nimport { useAvailablePatterns } from './hooks';\nimport {\n\tTEMPLATE_POST_TYPE,\n\tTEMPLATE_PART_POST_TYPE,\n} from '../../store/constants';\n\nfunction TemplatesList( { availableTemplates, onSelect } ) {\n\tconst shownTemplates = useAsyncList( availableTemplates );\n\tif ( ! availableTemplates || availableTemplates?.length === 0 ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<BlockPatternsList\n\t\t\tlabel={ __( 'Templates' ) }\n\t\t\tblockPatterns={ availableTemplates }\n\t\t\tshownPatterns={ shownTemplates }\n\t\t\tonClickPattern={ onSelect }\n\t\t\tshowTitlesAsTooltip\n\t\t/>\n\t);\n}\n\nfunction PostTransform() {\n\tconst { record, postType, postId } = useSelect( ( select ) => {\n\t\tconst { getCurrentPostType, getCurrentPostId } = select( editorStore );\n\t\tconst { getEditedEntityRecord } = select( coreStore );\n\t\tconst type = getCurrentPostType();\n\t\tconst id = getCurrentPostId();\n\t\treturn {\n\t\t\tpostType: type,\n\t\t\tpostId: id,\n\t\t\trecord: getEditedEntityRecord( 'postType', type, id ),\n\t\t};\n\t}, [] );\n\tconst { editEntityRecord } = useDispatch( coreStore );\n\tconst availablePatterns = useAvailablePatterns( record );\n\tconst onTemplateSelect = async ( selectedTemplate ) => {\n\t\tawait editEntityRecord( 'postType', postType, postId, {\n\t\t\tblocks: selectedTemplate.blocks,\n\t\t\tcontent: serialize( selectedTemplate.blocks ),\n\t\t} );\n\t};\n\tif ( ! availablePatterns?.length ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<PanelBody\n\t\t\ttitle={ __( 'Design' ) }\n\t\t\tinitialOpen={ record.type === TEMPLATE_PART_POST_TYPE }\n\t\t>\n\t\t\t<TemplatesList\n\t\t\t\tavailableTemplates={ availablePatterns }\n\t\t\t\tonSelect={ onTemplateSelect }\n\t\t\t/>\n\t\t</PanelBody>\n\t);\n}\n\nexport default function PostTransformPanel() {\n\tconst { postType } = useSelect( ( select ) => {\n\t\tconst { getCurrentPostType } = select( editorStore );\n\t\treturn {\n\t\t\tpostType: getCurrentPostType(),\n\t\t};\n\t}, [] );\n\n\tif (\n\t\t! [ TEMPLATE_PART_POST_TYPE, TEMPLATE_POST_TYPE ].includes( postType )\n\t) {\n\t\treturn null;\n\t}\n\n\treturn <PostTransform />;\n}\n","export const sidebars = {\n\tdocument: 'edit-post/document',\n\tblock: 'edit-post/block',\n};\n","/**\n * WordPress dependencies\n */\nimport { privateApis as componentsPrivateApis } from '@wordpress/components';\nimport { __, _x } from '@wordpress/i18n';\nimport { useSelect } from '@wordpress/data';\nimport { forwardRef } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\nimport { unlock } from '../../lock-unlock';\nimport { sidebars } from './constants';\n\nconst { Tabs } = unlock( componentsPrivateApis );\n\nconst SidebarHeader = ( _, ref ) => {\n\tconst { documentLabel } = useSelect( ( select ) => {\n\t\tconst { getPostTypeLabel } = select( editorStore );\n\n\t\treturn {\n\t\t\t// translators: Default label for the Document sidebar tab, not selected.\n\t\t\tdocumentLabel: getPostTypeLabel() || _x( 'Document', 'noun' ),\n\t\t};\n\t}, [] );\n\n\treturn (\n\t\t<Tabs.TabList ref={ ref }>\n\t\t\t<Tabs.Tab\n\t\t\t\ttabId={ sidebars.document }\n\t\t\t\t// Used for focus management in the SettingsSidebar component.\n\t\t\t\tdata-tab-id={ sidebars.document }\n\t\t\t>\n\t\t\t\t{ documentLabel }\n\t\t\t</Tabs.Tab>\n\t\t\t<Tabs.Tab\n\t\t\t\ttabId={ sidebars.block }\n\t\t\t\t// Used for focus management in the SettingsSidebar component.\n\t\t\t\tdata-tab-id={ sidebars.block }\n\t\t\t>\n\t\t\t\t{ /* translators: Text label for the Block Settings Sidebar tab. */ }\n\t\t\t\t{ __( 'Block' ) }\n\t\t\t</Tabs.Tab>\n\t\t</Tabs.TabList>\n\t);\n};\n\nexport default forwardRef( SidebarHeader );\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport {\n\tstore as blockEditorStore,\n\tprivateApis as blockEditorPrivateApis,\n} from '@wordpress/block-editor';\nimport { PanelBody } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { unlock } from '../../lock-unlock';\n\nconst { BlockQuickNavigation } = unlock( blockEditorPrivateApis );\n\nconst PAGE_CONTENT_BLOCKS = [\n\t'core/post-content',\n\t'core/post-featured-image',\n\t'core/post-title',\n];\n\nexport default function TemplateContentPanel() {\n\tconst clientIds = useSelect( ( select ) => {\n\t\tconst { getBlocksByName } = select( blockEditorStore );\n\t\treturn getBlocksByName( PAGE_CONTENT_BLOCKS );\n\t}, [] );\n\n\treturn (\n\t\t<PanelBody title={ __( 'Content' ) }>\n\t\t\t<BlockQuickNavigation clientIds={ clientIds } />\n\t\t</PanelBody>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { useMemo } from '@wordpress/element';\nimport { store as blocksStore } from '@wordpress/blocks';\nimport {\n\tstore as blockEditorStore,\n\tprivateApis as blockEditorPrivateApis,\n} from '@wordpress/block-editor';\nimport { PanelBody } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { unlock } from '../../lock-unlock';\nimport { TEMPLATE_PART_POST_TYPE } from '../../store/constants';\nimport { store as editorStore } from '../../store';\n\nconst { BlockQuickNavigation } = unlock( blockEditorPrivateApis );\n\nfunction TemplatePartContentPanelInner() {\n\tconst blockTypes = useSelect( ( select ) => {\n\t\tconst { getBlockTypes } = select( blocksStore );\n\t\treturn getBlockTypes();\n\t}, [] );\n\tconst themeBlockNames = useMemo( () => {\n\t\treturn blockTypes\n\t\t\t.filter( ( blockType ) => {\n\t\t\t\treturn blockType.category === 'theme';\n\t\t\t} )\n\t\t\t.map( ( { name } ) => name );\n\t}, [ blockTypes ] );\n\tconst themeBlocks = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getBlocksByName } = select( blockEditorStore );\n\t\t\treturn getBlocksByName( themeBlockNames );\n\t\t},\n\t\t[ themeBlockNames ]\n\t);\n\tif ( themeBlocks.length === 0 ) {\n\t\treturn null;\n\t}\n\treturn (\n\t\t<PanelBody title={ __( 'Content' ) }>\n\t\t\t<BlockQuickNavigation clientIds={ themeBlocks } />\n\t\t</PanelBody>\n\t);\n}\n\nexport default function TemplatePartContentPanel() {\n\tconst postType = useSelect( ( select ) => {\n\t\tconst { getCurrentPostType } = select( editorStore );\n\t\treturn getCurrentPostType();\n\t}, [] );\n\tif ( postType !== TEMPLATE_PART_POST_TYPE ) {\n\t\treturn null;\n\t}\n\n\treturn <TemplatePartContentPanelInner />;\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useEffect } from '@wordpress/element';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { store as preferencesStore } from '@wordpress/preferences';\nimport { store as interfaceStore } from '@wordpress/interface';\n\n/**\n * This listener hook monitors for block selection and triggers the appropriate\n * sidebar state.\n */\nfunction useAutoSwitchEditorSidebars() {\n\tconst { hasBlockSelection } = useSelect( ( select ) => {\n\t\treturn {\n\t\t\thasBlockSelection:\n\t\t\t\t!! select( blockEditorStore ).getBlockSelectionStart(),\n\t\t};\n\t}, [] );\n\n\tconst { getActiveComplementaryArea } = useSelect( interfaceStore );\n\tconst { enableComplementaryArea } = useDispatch( interfaceStore );\n\tconst { get: getPreference } = useSelect( preferencesStore );\n\n\tuseEffect( () => {\n\t\tconst activeGeneralSidebar = getActiveComplementaryArea( 'core' );\n\t\tconst isEditorSidebarOpened = [\n\t\t\t'edit-post/document',\n\t\t\t'edit-post/block',\n\t\t].includes( activeGeneralSidebar );\n\t\tconst isDistractionFree = getPreference( 'core', 'distractionFree' );\n\t\tif ( ! isEditorSidebarOpened || isDistractionFree ) {\n\t\t\treturn;\n\t\t}\n\t\tif ( hasBlockSelection ) {\n\t\t\tenableComplementaryArea( 'core', 'edit-post/block' );\n\t\t} else {\n\t\t\tenableComplementaryArea( 'core', 'edit-post/document' );\n\t\t}\n\t}, [\n\t\thasBlockSelection,\n\t\tgetActiveComplementaryArea,\n\t\tenableComplementaryArea,\n\t\tgetPreference,\n\t] );\n}\n\nexport default useAutoSwitchEditorSidebars;\n","/**\n * WordPress dependencies\n */\nimport {\n\tBlockInspector,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport {\n\tPlatform,\n\tuseCallback,\n\tuseContext,\n\tuseEffect,\n\tuseRef,\n} from '@wordpress/element';\nimport { isRTL, __ } from '@wordpress/i18n';\nimport { drawerLeft, drawerRight } from '@wordpress/icons';\nimport { store as keyboardShortcutsStore } from '@wordpress/keyboard-shortcuts';\nimport { privateApis as componentsPrivateApis } from '@wordpress/components';\nimport { store as interfaceStore } from '@wordpress/interface';\n\n/**\n * Internal dependencies\n */\nimport PatternOverridesPanel from '../pattern-overrides-panel';\nimport PluginDocumentSettingPanel from '../plugin-document-setting-panel';\nimport PluginSidebar from '../plugin-sidebar';\nimport PostSummary from './post-summary';\nimport PostTaxonomiesPanel from '../post-taxonomies/panel';\nimport PostTransformPanel from '../post-transform-panel';\nimport SidebarHeader from './header';\nimport TemplateContentPanel from '../template-content-panel';\nimport TemplatePartContentPanel from '../template-part-content-panel';\nimport useAutoSwitchEditorSidebars from '../provider/use-auto-switch-editor-sidebars';\nimport { sidebars } from './constants';\nimport { unlock } from '../../lock-unlock';\nimport { store as editorStore } from '../../store';\nimport {\n\tNAVIGATION_POST_TYPE,\n\tTEMPLATE_PART_POST_TYPE,\n\tTEMPLATE_POST_TYPE,\n} from '../../store/constants';\n\nconst { Tabs } = unlock( componentsPrivateApis );\n\nconst SIDEBAR_ACTIVE_BY_DEFAULT = Platform.select( {\n\tweb: true,\n\tnative: false,\n} );\n\nconst SidebarContent = ( {\n\ttabName,\n\tkeyboardShortcut,\n\trenderingMode,\n\tonActionPerformed,\n\textraPanels,\n} ) => {\n\tconst tabListRef = useRef( null );\n\t// Because `PluginSidebar` renders a `ComplementaryArea`, we\n\t// need to forward the `Tabs` context so it can be passed through the\n\t// underlying slot/fill.\n\tconst tabsContextValue = useContext( Tabs.Context );\n\n\t// This effect addresses a race condition caused by tabbing from the last\n\t// block in the editor into the settings sidebar. Without this effect, the\n\t// selected tab and browser focus can become separated in an unexpected way\n\t// (e.g the \"block\" tab is focused, but the \"post\" tab is selected).\n\tuseEffect( () => {\n\t\tconst tabsElements = Array.from(\n\t\t\ttabListRef.current?.querySelectorAll( '[role=\"tab\"]' ) || []\n\t\t);\n\t\tconst selectedTabElement = tabsElements.find(\n\t\t\t// We are purposefully using a custom `data-tab-id` attribute here\n\t\t\t// because we don't want rely on any assumptions about `Tabs`\n\t\t\t// component internals.\n\t\t\t( element ) => element.getAttribute( 'data-tab-id' ) === tabName\n\t\t);\n\t\tconst activeElement = selectedTabElement?.ownerDocument.activeElement;\n\t\tconst tabsHasFocus = tabsElements.some( ( element ) => {\n\t\t\treturn activeElement && activeElement.id === element.id;\n\t\t} );\n\t\tif (\n\t\t\ttabsHasFocus &&\n\t\t\tselectedTabElement &&\n\t\t\tselectedTabElement.id !== activeElement?.id\n\t\t) {\n\t\t\tselectedTabElement?.focus();\n\t\t}\n\t}, [ tabName ] );\n\n\treturn (\n\t\t<PluginSidebar\n\t\t\tidentifier={ tabName }\n\t\t\theader={\n\t\t\t\t<Tabs.Context.Provider value={ tabsContextValue }>\n\t\t\t\t\t<SidebarHeader ref={ tabListRef } />\n\t\t\t\t</Tabs.Context.Provider>\n\t\t\t}\n\t\t\tcloseLabel={ __( 'Close Settings' ) }\n\t\t\t// This classname is added so we can apply a corrective negative\n\t\t\t// margin to the panel.\n\t\t\t// see https://github.com/WordPress/gutenberg/pull/55360#pullrequestreview-1737671049\n\t\t\tclassName=\"editor-sidebar__panel\"\n\t\t\theaderClassName=\"editor-sidebar__panel-tabs\"\n\t\t\t/* translators: button label text should, if possible, be under 16 characters. */\n\t\t\ttitle={ __( 'Settings' ) }\n\t\t\ttoggleShortcut={ keyboardShortcut }\n\t\t\ticon={ isRTL() ? drawerLeft : drawerRight }\n\t\t\tisActiveByDefault={ SIDEBAR_ACTIVE_BY_DEFAULT }\n\t\t>\n\t\t\t<Tabs.Context.Provider value={ tabsContextValue }>\n\t\t\t\t<Tabs.TabPanel tabId={ sidebars.document } focusable={ false }>\n\t\t\t\t\t<PostSummary onActionPerformed={ onActionPerformed } />\n\t\t\t\t\t<PluginDocumentSettingPanel.Slot />\n\t\t\t\t\t{ renderingMode !== 'post-only' && (\n\t\t\t\t\t\t<TemplateContentPanel />\n\t\t\t\t\t) }\n\t\t\t\t\t<TemplatePartContentPanel />\n\t\t\t\t\t<PostTransformPanel />\n\t\t\t\t\t<PostTaxonomiesPanel />\n\t\t\t\t\t<PatternOverridesPanel />\n\t\t\t\t\t{ extraPanels }\n\t\t\t\t</Tabs.TabPanel>\n\t\t\t\t<Tabs.TabPanel tabId={ sidebars.block } focusable={ false }>\n\t\t\t\t\t<BlockInspector />\n\t\t\t\t</Tabs.TabPanel>\n\t\t\t</Tabs.Context.Provider>\n\t\t</PluginSidebar>\n\t);\n};\n\nconst Sidebar = ( { extraPanels, onActionPerformed } ) => {\n\tuseAutoSwitchEditorSidebars();\n\tconst { tabName, keyboardShortcut, showSummary, renderingMode } = useSelect(\n\t\t( select ) => {\n\t\t\tconst shortcut = select(\n\t\t\t\tkeyboardShortcutsStore\n\t\t\t).getShortcutRepresentation( 'core/editor/toggle-sidebar' );\n\n\t\t\tconst sidebar =\n\t\t\t\tselect( interfaceStore ).getActiveComplementaryArea( 'core' );\n\t\t\tconst _isEditorSidebarOpened = [\n\t\t\t\tsidebars.block,\n\t\t\t\tsidebars.document,\n\t\t\t].includes( sidebar );\n\t\t\tlet _tabName = sidebar;\n\t\t\tif ( ! _isEditorSidebarOpened ) {\n\t\t\t\t_tabName = !! select(\n\t\t\t\t\tblockEditorStore\n\t\t\t\t).getBlockSelectionStart()\n\t\t\t\t\t? sidebars.block\n\t\t\t\t\t: sidebars.document;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ttabName: _tabName,\n\t\t\t\tkeyboardShortcut: shortcut,\n\t\t\t\tshowSummary: ! [\n\t\t\t\t\tTEMPLATE_POST_TYPE,\n\t\t\t\t\tTEMPLATE_PART_POST_TYPE,\n\t\t\t\t\tNAVIGATION_POST_TYPE,\n\t\t\t\t].includes( select( editorStore ).getCurrentPostType() ),\n\t\t\t\trenderingMode: select( editorStore ).getRenderingMode(),\n\t\t\t};\n\t\t},\n\t\t[]\n\t);\n\n\tconst { enableComplementaryArea } = useDispatch( interfaceStore );\n\n\tconst onTabSelect = useCallback(\n\t\t( newSelectedTabId ) => {\n\t\t\tif ( !! newSelectedTabId ) {\n\t\t\t\tenableComplementaryArea( 'core', newSelectedTabId );\n\t\t\t}\n\t\t},\n\t\t[ enableComplementaryArea ]\n\t);\n\n\treturn (\n\t\t<Tabs\n\t\t\tselectedTabId={ tabName }\n\t\t\tonSelect={ onTabSelect }\n\t\t\tselectOnMove={ false }\n\t\t>\n\t\t\t<SidebarContent\n\t\t\t\ttabName={ tabName }\n\t\t\t\tkeyboardShortcut={ keyboardShortcut }\n\t\t\t\tshowSummary={ showSummary }\n\t\t\t\trenderingMode={ renderingMode }\n\t\t\t\tonActionPerformed={ onActionPerformed }\n\t\t\t\textraPanels={ extraPanels }\n\t\t\t/>\n\t\t</Tabs>\n\t);\n};\n\nexport default Sidebar;\n","/**\n * WordPress dependencies\n */\nimport { compose } from '@wordpress/compose';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { privateApis as preferencesPrivateApis } from '@wordpress/preferences';\n\n/**\n * Internal dependencies\n */\nimport { unlock } from '../../lock-unlock';\nimport { store as editorStore } from '../../store';\n\nconst { PreferenceBaseOption } = unlock( preferencesPrivateApis );\n\nexport default compose(\n\twithSelect( ( select ) => ( {\n\t\tisChecked: select( editorStore ).isPublishSidebarEnabled(),\n\t} ) ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { enablePublishSidebar, disablePublishSidebar } =\n\t\t\tdispatch( editorStore );\n\t\treturn {\n\t\t\tonChange: ( isEnabled ) =>\n\t\t\t\tisEnabled ? enablePublishSidebar() : disablePublishSidebar(),\n\t\t};\n\t} )\n)( PreferenceBaseOption );\n","/**\n * WordPress dependencies\n */\nimport { BlockIcon } from '@wordpress/block-editor';\nimport { CheckboxControl } from '@wordpress/components';\n\nfunction BlockTypesChecklist( { blockTypes, value, onItemChange } ) {\n\treturn (\n\t\t<ul className=\"editor-block-manager__checklist\">\n\t\t\t{ blockTypes.map( ( blockType ) => (\n\t\t\t\t<li\n\t\t\t\t\tkey={ blockType.name }\n\t\t\t\t\tclassName=\"editor-block-manager__checklist-item\"\n\t\t\t\t>\n\t\t\t\t\t<CheckboxControl\n\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\tlabel={ blockType.title }\n\t\t\t\t\t\tchecked={ value.includes( blockType.name ) }\n\t\t\t\t\t\tonChange={ ( ...args ) =>\n\t\t\t\t\t\t\tonItemChange( blockType.name, ...args )\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<BlockIcon icon={ blockType.icon } />\n\t\t\t\t</li>\n\t\t\t) ) }\n\t\t</ul>\n\t);\n}\n\nexport default BlockTypesChecklist;\n","/**\n * WordPress dependencies\n */\nimport { useMemo, useCallback } from '@wordpress/element';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { useInstanceId } from '@wordpress/compose';\nimport { CheckboxControl } from '@wordpress/components';\nimport { store as preferencesStore } from '@wordpress/preferences';\n\n/**\n * Internal dependencies\n */\nimport BlockTypesChecklist from './checklist';\nimport { store as editorStore } from '../../store';\nimport { unlock } from '../../lock-unlock';\n\nfunction BlockManagerCategory( { title, blockTypes } ) {\n\tconst instanceId = useInstanceId( BlockManagerCategory );\n\tconst { allowedBlockTypes, hiddenBlockTypes } = useSelect( ( select ) => {\n\t\tconst { getEditorSettings } = select( editorStore );\n\t\tconst { get } = select( preferencesStore );\n\t\treturn {\n\t\t\tallowedBlockTypes: getEditorSettings().allowedBlockTypes,\n\t\t\thiddenBlockTypes: get( 'core', 'hiddenBlockTypes' ),\n\t\t};\n\t}, [] );\n\tconst filteredBlockTypes = useMemo( () => {\n\t\tif ( allowedBlockTypes === true ) {\n\t\t\treturn blockTypes;\n\t\t}\n\t\treturn blockTypes.filter( ( { name } ) => {\n\t\t\treturn allowedBlockTypes?.includes( name );\n\t\t} );\n\t}, [ allowedBlockTypes, blockTypes ] );\n\tconst { showBlockTypes, hideBlockTypes } = unlock(\n\t\tuseDispatch( editorStore )\n\t);\n\tconst toggleVisible = useCallback(\n\t\t( blockName, nextIsChecked ) => {\n\t\t\tif ( nextIsChecked ) {\n\t\t\t\tshowBlockTypes( blockName );\n\t\t\t} else {\n\t\t\t\thideBlockTypes( blockName );\n\t\t\t}\n\t\t},\n\t\t[ showBlockTypes, hideBlockTypes ]\n\t);\n\tconst toggleAllVisible = useCallback(\n\t\t( nextIsChecked ) => {\n\t\t\tconst blockNames = blockTypes.map( ( { name } ) => name );\n\t\t\tif ( nextIsChecked ) {\n\t\t\t\tshowBlockTypes( blockNames );\n\t\t\t} else {\n\t\t\t\thideBlockTypes( blockNames );\n\t\t\t}\n\t\t},\n\t\t[ blockTypes, showBlockTypes, hideBlockTypes ]\n\t);\n\n\tif ( ! filteredBlockTypes.length ) {\n\t\treturn null;\n\t}\n\n\tconst checkedBlockNames = filteredBlockTypes\n\t\t.map( ( { name } ) => name )\n\t\t.filter( ( type ) => ! ( hiddenBlockTypes ?? [] ).includes( type ) );\n\n\tconst titleId = 'editor-block-manager__category-title-' + instanceId;\n\n\tconst isAllChecked = checkedBlockNames.length === filteredBlockTypes.length;\n\tconst isIndeterminate = ! isAllChecked && checkedBlockNames.length > 0;\n\n\treturn (\n\t\t<div\n\t\t\trole=\"group\"\n\t\t\taria-labelledby={ titleId }\n\t\t\tclassName=\"editor-block-manager__category\"\n\t\t>\n\t\t\t<CheckboxControl\n\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\tchecked={ isAllChecked }\n\t\t\t\tonChange={ toggleAllVisible }\n\t\t\t\tclassName=\"editor-block-manager__category-title\"\n\t\t\t\tindeterminate={ isIndeterminate }\n\t\t\t\tlabel={ <span id={ titleId }>{ title }</span> }\n\t\t\t/>\n\t\t\t<BlockTypesChecklist\n\t\t\t\tblockTypes={ filteredBlockTypes }\n\t\t\t\tvalue={ checkedBlockNames }\n\t\t\t\tonItemChange={ toggleVisible }\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default BlockManagerCategory;\n","/**\n * WordPress dependencies\n */\nimport { store as blocksStore } from '@wordpress/blocks';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { SearchControl, Button } from '@wordpress/components';\nimport { __, _n, sprintf } from '@wordpress/i18n';\nimport { useEffect, useState } from '@wordpress/element';\nimport { useDebounce, compose } from '@wordpress/compose';\nimport { speak } from '@wordpress/a11y';\nimport { store as preferencesStore } from '@wordpress/preferences';\n\n/**\n * Internal dependencies\n */\nimport { unlock } from '../../lock-unlock';\nimport { store as editorStore } from '../../store';\nimport BlockManagerCategory from './category';\n\nfunction BlockManager( {\n\tblockTypes,\n\tcategories,\n\thasBlockSupport,\n\tisMatchingSearchTerm,\n\tnumberOfHiddenBlocks,\n\tenableAllBlockTypes,\n} ) {\n\tconst debouncedSpeak = useDebounce( speak, 500 );\n\tconst [ search, setSearch ] = useState( '' );\n\n\t// Filtering occurs here (as opposed to `withSelect`) to avoid\n\t// wasted renders by consequence of `Array#filter` producing\n\t// a new value reference on each call.\n\tblockTypes = blockTypes.filter(\n\t\t( blockType ) =>\n\t\t\thasBlockSupport( blockType, 'inserter', true ) &&\n\t\t\t( ! search || isMatchingSearchTerm( blockType, search ) ) &&\n\t\t\t( ! blockType.parent ||\n\t\t\t\tblockType.parent.includes( 'core/post-content' ) )\n\t);\n\n\t// Announce search results on change\n\tuseEffect( () => {\n\t\tif ( ! search ) {\n\t\t\treturn;\n\t\t}\n\t\tconst count = blockTypes.length;\n\t\tconst resultsFoundMessage = sprintf(\n\t\t\t/* translators: %d: number of results. */\n\t\t\t_n( '%d result found.', '%d results found.', count ),\n\t\t\tcount\n\t\t);\n\t\tdebouncedSpeak( resultsFoundMessage );\n\t}, [ blockTypes.length, search, debouncedSpeak ] );\n\n\treturn (\n\t\t<div className=\"editor-block-manager__content\">\n\t\t\t{ !! numberOfHiddenBlocks && (\n\t\t\t\t<div className=\"editor-block-manager__disabled-blocks-count\">\n\t\t\t\t\t{ sprintf(\n\t\t\t\t\t\t/* translators: %d: number of blocks. */\n\t\t\t\t\t\t_n(\n\t\t\t\t\t\t\t'%d block is hidden.',\n\t\t\t\t\t\t\t'%d blocks are hidden.',\n\t\t\t\t\t\t\tnumberOfHiddenBlocks\n\t\t\t\t\t\t),\n\t\t\t\t\t\tnumberOfHiddenBlocks\n\t\t\t\t\t) }\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\tonClick={ () => enableAllBlockTypes( blockTypes ) }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Reset' ) }\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t) }\n\t\t\t<SearchControl\n\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\tlabel={ __( 'Search for a block' ) }\n\t\t\t\tplaceholder={ __( 'Search for a block' ) }\n\t\t\t\tvalue={ search }\n\t\t\t\tonChange={ ( nextSearch ) => setSearch( nextSearch ) }\n\t\t\t\tclassName=\"editor-block-manager__search\"\n\t\t\t/>\n\t\t\t<div\n\t\t\t\ttabIndex=\"0\"\n\t\t\t\trole=\"region\"\n\t\t\t\taria-label={ __( 'Available block types' ) }\n\t\t\t\tclassName=\"editor-block-manager__results\"\n\t\t\t>\n\t\t\t\t{ blockTypes.length === 0 && (\n\t\t\t\t\t<p className=\"editor-block-manager__no-results\">\n\t\t\t\t\t\t{ __( 'No blocks found.' ) }\n\t\t\t\t\t</p>\n\t\t\t\t) }\n\t\t\t\t{ categories.map( ( category ) => (\n\t\t\t\t\t<BlockManagerCategory\n\t\t\t\t\t\tkey={ category.slug }\n\t\t\t\t\t\ttitle={ category.title }\n\t\t\t\t\t\tblockTypes={ blockTypes.filter(\n\t\t\t\t\t\t\t( blockType ) =>\n\t\t\t\t\t\t\t\tblockType.category === category.slug\n\t\t\t\t\t\t) }\n\t\t\t\t\t/>\n\t\t\t\t) ) }\n\t\t\t\t<BlockManagerCategory\n\t\t\t\t\ttitle={ __( 'Uncategorized' ) }\n\t\t\t\t\tblockTypes={ blockTypes.filter(\n\t\t\t\t\t\t( { category } ) => ! category\n\t\t\t\t\t) }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\tconst {\n\t\t\tgetBlockTypes,\n\t\t\tgetCategories,\n\t\t\thasBlockSupport,\n\t\t\tisMatchingSearchTerm,\n\t\t} = select( blocksStore );\n\t\tconst { get } = select( preferencesStore );\n\n\t\t// Some hidden blocks become unregistered\n\t\t// by removing for instance the plugin that registered them, yet\n\t\t// they're still remain as hidden by the user's action.\n\t\t// We consider \"hidden\", blocks which were hidden and\n\t\t// are still registered.\n\t\tconst blockTypes = getBlockTypes();\n\t\tconst hiddenBlockTypes = (\n\t\t\tget( 'core', 'hiddenBlockTypes' ) ?? []\n\t\t).filter( ( hiddenBlock ) => {\n\t\t\treturn blockTypes.some(\n\t\t\t\t( registeredBlock ) => registeredBlock.name === hiddenBlock\n\t\t\t);\n\t\t} );\n\t\tconst numberOfHiddenBlocks =\n\t\t\tArray.isArray( hiddenBlockTypes ) && hiddenBlockTypes.length;\n\n\t\treturn {\n\t\t\tblockTypes,\n\t\t\tcategories: getCategories(),\n\t\t\thasBlockSupport,\n\t\t\tisMatchingSearchTerm,\n\t\t\tnumberOfHiddenBlocks,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { showBlockTypes } = unlock( dispatch( editorStore ) );\n\t\treturn {\n\t\t\tenableAllBlockTypes: ( blockTypes ) => {\n\t\t\t\tconst blockNames = blockTypes.map( ( { name } ) => name );\n\t\t\t\tshowBlockTypes( blockNames );\n\t\t\t},\n\t\t};\n\t} ),\n] )( BlockManager );\n","/**\n * WordPress dependencies\n */\n\nimport { __ } from '@wordpress/i18n';\nimport { useViewportMatch } from '@wordpress/compose';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useMemo } from '@wordpress/element';\nimport {\n\tstore as preferencesStore,\n\tprivateApis as preferencesPrivateApis,\n} from '@wordpress/preferences';\nimport { store as interfaceStore } from '@wordpress/interface';\n\n/**\n * Internal dependencies\n */\nimport EnablePanelOption from './enable-panel';\nimport EnablePluginDocumentSettingPanelOption from './enable-plugin-document-setting-panel';\nimport EnablePublishSidebarOption from './enable-publish-sidebar';\nimport BlockManager from '../block-manager';\nimport PostTaxonomies from '../post-taxonomies';\nimport PostFeaturedImageCheck from '../post-featured-image/check';\nimport PostExcerptCheck from '../post-excerpt/check';\nimport PageAttributesCheck from '../page-attributes/check';\nimport PostTypeSupportCheck from '../post-type-support-check';\nimport { store as editorStore } from '../../store';\nimport { unlock } from '../../lock-unlock';\n\nconst {\n\tPreferencesModal,\n\tPreferencesModalTabs,\n\tPreferencesModalSection,\n\tPreferenceToggleControl,\n} = unlock( preferencesPrivateApis );\n\nexport default function EditorPreferencesModal( { extraSections = {} } ) {\n\tconst isLargeViewport = useViewportMatch( 'medium' );\n\tconst { isActive, showBlockBreadcrumbsOption } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getEditorSettings } = select( editorStore );\n\t\t\tconst { get } = select( preferencesStore );\n\t\t\tconst { isModalActive } = select( interfaceStore );\n\t\t\tconst isRichEditingEnabled = getEditorSettings().richEditingEnabled;\n\t\t\tconst isDistractionFreeEnabled = get( 'core', 'distractionFree' );\n\t\t\treturn {\n\t\t\t\tshowBlockBreadcrumbsOption:\n\t\t\t\t\t! isDistractionFreeEnabled &&\n\t\t\t\t\tisLargeViewport &&\n\t\t\t\t\tisRichEditingEnabled,\n\t\t\t\tisActive: isModalActive( 'editor/preferences' ),\n\t\t\t};\n\t\t},\n\t\t[ isLargeViewport ]\n\t);\n\tconst { closeModal } = useDispatch( interfaceStore );\n\tconst { setIsListViewOpened, setIsInserterOpened } =\n\t\tuseDispatch( editorStore );\n\tconst { set: setPreference } = useDispatch( preferencesStore );\n\n\tconst sections = useMemo(\n\t\t() => [\n\t\t\t{\n\t\t\t\tname: 'general',\n\t\t\t\ttabLabel: __( 'General' ),\n\t\t\t\tcontent: (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<PreferencesModalSection title={ __( 'Interface' ) }>\n\t\t\t\t\t\t\t<PreferenceToggleControl\n\t\t\t\t\t\t\t\tscope=\"core\"\n\t\t\t\t\t\t\t\tfeatureName=\"showListViewByDefault\"\n\t\t\t\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t\t\t\t'Opens the List View sidebar by default.'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\tlabel={ __( 'Always open List View' ) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{ showBlockBreadcrumbsOption && (\n\t\t\t\t\t\t\t\t<PreferenceToggleControl\n\t\t\t\t\t\t\t\t\tscope=\"core\"\n\t\t\t\t\t\t\t\t\tfeatureName=\"showBlockBreadcrumbs\"\n\t\t\t\t\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t\t\t\t\t'Display the block hierarchy trail at the bottom of the editor.'\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\tlabel={ __( 'Show block breadcrumbs' ) }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t<PreferenceToggleControl\n\t\t\t\t\t\t\t\tscope=\"core\"\n\t\t\t\t\t\t\t\tfeatureName=\"allowRightClickOverrides\"\n\t\t\t\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t\t\t\t'Allows contextual List View menus via right-click, overriding browser defaults.'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\tlabel={ __(\n\t\t\t\t\t\t\t\t\t'Allow right-click contextual menus'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</PreferencesModalSection>\n\t\t\t\t\t\t<PreferencesModalSection\n\t\t\t\t\t\t\ttitle={ __( 'Document settings' ) }\n\t\t\t\t\t\t\tdescription={ __(\n\t\t\t\t\t\t\t\t'Select what settings are shown in the document panel.'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<EnablePluginDocumentSettingPanelOption.Slot />\n\t\t\t\t\t\t\t<PostTaxonomies\n\t\t\t\t\t\t\t\ttaxonomyWrapper={ ( content, taxonomy ) => (\n\t\t\t\t\t\t\t\t\t<EnablePanelOption\n\t\t\t\t\t\t\t\t\t\tlabel={ taxonomy.labels.menu_name }\n\t\t\t\t\t\t\t\t\t\tpanelName={ `taxonomy-panel-${ taxonomy.slug }` }\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<PostFeaturedImageCheck>\n\t\t\t\t\t\t\t\t<EnablePanelOption\n\t\t\t\t\t\t\t\t\tlabel={ __( 'Featured image' ) }\n\t\t\t\t\t\t\t\t\tpanelName=\"featured-image\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</PostFeaturedImageCheck>\n\t\t\t\t\t\t\t<PostExcerptCheck>\n\t\t\t\t\t\t\t\t<EnablePanelOption\n\t\t\t\t\t\t\t\t\tlabel={ __( 'Excerpt' ) }\n\t\t\t\t\t\t\t\t\tpanelName=\"post-excerpt\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</PostExcerptCheck>\n\t\t\t\t\t\t\t<PostTypeSupportCheck\n\t\t\t\t\t\t\t\tsupportKeys={ [ 'comments', 'trackbacks' ] }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<EnablePanelOption\n\t\t\t\t\t\t\t\t\tlabel={ __( 'Discussion' ) }\n\t\t\t\t\t\t\t\t\tpanelName=\"discussion-panel\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</PostTypeSupportCheck>\n\t\t\t\t\t\t\t<PageAttributesCheck>\n\t\t\t\t\t\t\t\t<EnablePanelOption\n\t\t\t\t\t\t\t\t\tlabel={ __( 'Page attributes' ) }\n\t\t\t\t\t\t\t\t\tpanelName=\"page-attributes\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</PageAttributesCheck>\n\t\t\t\t\t\t</PreferencesModalSection>\n\t\t\t\t\t\t{ isLargeViewport && (\n\t\t\t\t\t\t\t<PreferencesModalSection\n\t\t\t\t\t\t\t\ttitle={ __( 'Publishing' ) }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<EnablePublishSidebarOption\n\t\t\t\t\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t\t\t\t\t'Review settings, such as visibility and tags.'\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\tlabel={ __( 'Enable pre-publish checks' ) }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</PreferencesModalSection>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t{ extraSections?.general }\n\t\t\t\t\t</>\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'appearance',\n\t\t\t\ttabLabel: __( 'Appearance' ),\n\t\t\t\tcontent: (\n\t\t\t\t\t<PreferencesModalSection\n\t\t\t\t\t\ttitle={ __( 'Appearance' ) }\n\t\t\t\t\t\tdescription={ __(\n\t\t\t\t\t\t\t'Customize the editor interface to suit your needs.'\n\t\t\t\t\t\t) }\n\t\t\t\t\t>\n\t\t\t\t\t\t<PreferenceToggleControl\n\t\t\t\t\t\t\tscope=\"core\"\n\t\t\t\t\t\t\tfeatureName=\"fixedToolbar\"\n\t\t\t\t\t\t\tonToggle={ () =>\n\t\t\t\t\t\t\t\tsetPreference(\n\t\t\t\t\t\t\t\t\t'core',\n\t\t\t\t\t\t\t\t\t'distractionFree',\n\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t\t\t'Access all block and document tools in a single place.'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\tlabel={ __( 'Top toolbar' ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<PreferenceToggleControl\n\t\t\t\t\t\t\tscope=\"core\"\n\t\t\t\t\t\t\tfeatureName=\"distractionFree\"\n\t\t\t\t\t\t\tonToggle={ () => {\n\t\t\t\t\t\t\t\tsetPreference( 'core', 'fixedToolbar', true );\n\t\t\t\t\t\t\t\tsetIsInserterOpened( false );\n\t\t\t\t\t\t\t\tsetIsListViewOpened( false );\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t\t\t'Reduce visual distractions by hiding the toolbar and other elements to focus on writing.'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\tlabel={ __( 'Distraction free' ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<PreferenceToggleControl\n\t\t\t\t\t\t\tscope=\"core\"\n\t\t\t\t\t\t\tfeatureName=\"focusMode\"\n\t\t\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t\t\t'Highlights the current block and fades other content.'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\tlabel={ __( 'Spotlight mode' ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{ extraSections?.appearance }\n\t\t\t\t\t</PreferencesModalSection>\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'accessibility',\n\t\t\t\ttabLabel: __( 'Accessibility' ),\n\t\t\t\tcontent: (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<PreferencesModalSection\n\t\t\t\t\t\t\ttitle={ __( 'Navigation' ) }\n\t\t\t\t\t\t\tdescription={ __(\n\t\t\t\t\t\t\t\t'Optimize the editing experience for enhanced control.'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<PreferenceToggleControl\n\t\t\t\t\t\t\t\tscope=\"core\"\n\t\t\t\t\t\t\t\tfeatureName=\"keepCaretInsideBlock\"\n\t\t\t\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t\t\t\t'Keeps the text cursor within the block boundaries, aiding users with screen readers by preventing unintentional cursor movement outside the block.'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\tlabel={ __(\n\t\t\t\t\t\t\t\t\t'Contain text cursor inside block'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</PreferencesModalSection>\n\t\t\t\t\t\t<PreferencesModalSection title={ __( 'Interface' ) }>\n\t\t\t\t\t\t\t<PreferenceToggleControl\n\t\t\t\t\t\t\t\tscope=\"core\"\n\t\t\t\t\t\t\t\tfeatureName=\"showIconLabels\"\n\t\t\t\t\t\t\t\tlabel={ __( 'Show button text labels' ) }\n\t\t\t\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t\t\t\t'Show text instead of icons on buttons across the interface.'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</PreferencesModalSection>\n\t\t\t\t\t</>\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'blocks',\n\t\t\t\ttabLabel: __( 'Blocks' ),\n\t\t\t\tcontent: (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<PreferencesModalSection title={ __( 'Inserter' ) }>\n\t\t\t\t\t\t\t<PreferenceToggleControl\n\t\t\t\t\t\t\t\tscope=\"core\"\n\t\t\t\t\t\t\t\tfeatureName=\"mostUsedBlocks\"\n\t\t\t\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t\t\t\t'Adds a category with the most frequently used blocks in the inserter.'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\tlabel={ __( 'Show most used blocks' ) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</PreferencesModalSection>\n\t\t\t\t\t\t<PreferencesModalSection\n\t\t\t\t\t\t\ttitle={ __( 'Manage block visibility' ) }\n\t\t\t\t\t\t\tdescription={ __(\n\t\t\t\t\t\t\t\t\"Disable blocks that you don't want to appear in the inserter. They can always be toggled back on later.\"\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<BlockManager />\n\t\t\t\t\t\t</PreferencesModalSection>\n\t\t\t\t\t</>\n\t\t\t\t),\n\t\t\t},\n\t\t],\n\t\t[\n\t\t\tshowBlockBreadcrumbsOption,\n\t\t\textraSections,\n\t\t\tsetIsInserterOpened,\n\t\t\tsetIsListViewOpened,\n\t\t\tsetPreference,\n\t\t\tisLargeViewport,\n\t\t]\n\t);\n\n\tif ( ! isActive ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<PreferencesModal closeModal={ closeModal }>\n\t\t\t<PreferencesModalTabs sections={ sections } />\n\t\t</PreferencesModal>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport * as interfaceApis from '@wordpress/interface';\n\n/**\n * Internal dependencies\n */\nimport { lock } from './lock-unlock';\nimport { EntitiesSavedStatesExtensible } from './components/entities-saved-states';\nimport EditorContentSlotFill from './components/editor-interface/content-slot-fill';\nimport useBlockEditorSettings from './components/provider/use-block-editor-settings';\nimport BackButton from './components/header/back-button';\nimport CreateTemplatePartModal from './components/create-template-part-modal';\nimport Editor from './components/editor';\nimport PluginPostExcerpt from './components/post-excerpt/plugin';\nimport PreferencesModal from './components/preferences-modal';\nimport { usePostActions } from './components/post-actions/actions';\nimport ToolsMoreMenuGroup from './components/more-menu/tools-more-menu-group';\nimport ViewMoreMenuGroup from './components/more-menu/view-more-menu-group';\nimport ResizableEditor from './components/resizable-editor';\nimport {\n\tmergeBaseAndUserConfigs,\n\tGlobalStylesProvider,\n} from './components/global-styles-provider';\n\nconst { store: interfaceStore, ...remainingInterfaceApis } = interfaceApis;\n\nexport const privateApis = {};\nlock( privateApis, {\n\tCreateTemplatePartModal,\n\tBackButton,\n\tEntitiesSavedStatesExtensible,\n\tEditor,\n\tEditorContentSlotFill,\n\tGlobalStylesProvider,\n\tmergeBaseAndUserConfigs,\n\tPluginPostExcerpt,\n\tPreferencesModal,\n\tusePostActions,\n\tToolsMoreMenuGroup,\n\tViewMoreMenuGroup,\n\tResizableEditor,\n\n\t// This is a temporary private API while we're updating the site editor to use EditorProvider.\n\tuseBlockEditorSettings,\n\tinterfaceStore,\n\t...remainingInterfaceApis,\n} );\n","/**\n * WordPress dependencies\n */\nimport { dispatch } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { unlock } from '../lock-unlock';\nimport { store as editorStore } from '../store';\n\n/**\n * @typedef {import('@wordpress/dataviews').Action} Action\n */\n\n/**\n * Registers a new DataViews action.\n *\n * This is an experimental API and is subject to change.\n * it's only available in the Gutenberg plugin for now.\n *\n * @param {string} kind   Entity kind.\n * @param {string} name   Entity name.\n * @param {Action} config Action configuration.\n */\n\nexport function registerEntityAction( kind, name, config ) {\n\tconst { registerEntityAction: _registerEntityAction } = unlock(\n\t\tdispatch( editorStore )\n\t);\n\n\tif ( globalThis.IS_GUTENBERG_PLUGIN ) {\n\t\t_registerEntityAction( kind, name, config );\n\t}\n}\n\n/**\n * Unregisters a DataViews action.\n *\n * This is an experimental API and is subject to change.\n * it's only available in the Gutenberg plugin for now.\n *\n * @param {string} kind     Entity kind.\n * @param {string} name     Entity name.\n * @param {string} actionId Action ID.\n */\nexport function unregisterEntityAction( kind, name, actionId ) {\n\tconst { unregisterEntityAction: _unregisterEntityAction } = unlock(\n\t\tdispatch( editorStore )\n\t);\n\n\tif ( globalThis.IS_GUTENBERG_PLUGIN ) {\n\t\t_unregisterEntityAction( kind, name, actionId );\n\t}\n}\n","/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { Notice } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { TEMPLATE_POST_TYPE } from '../../store/constants';\nimport EditorInterface from '../editor-interface';\nimport { ExperimentalEditorProvider } from '../provider';\nimport Sidebar from '../sidebar';\n\nfunction Editor( {\n\tpostType,\n\tpostId,\n\ttemplateId,\n\tsettings,\n\tchildren,\n\tinitialEdits,\n\n\t// This could be part of the settings.\n\tonActionPerformed,\n\n\t// The following abstractions are not ideal but necessary\n\t// to account for site editor and post editor differences for now.\n\textraContent,\n\textraSidebarPanels,\n\t...props\n} ) {\n\tconst { post, template, hasLoadedPost } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getEntityRecord, hasFinishedResolution } =\n\t\t\t\tselect( coreStore );\n\t\t\treturn {\n\t\t\t\tpost: getEntityRecord( 'postType', postType, postId ),\n\t\t\t\ttemplate: templateId\n\t\t\t\t\t? getEntityRecord(\n\t\t\t\t\t\t\t'postType',\n\t\t\t\t\t\t\tTEMPLATE_POST_TYPE,\n\t\t\t\t\t\t\ttemplateId\n\t\t\t\t\t  )\n\t\t\t\t\t: undefined,\n\t\t\t\thasLoadedPost: hasFinishedResolution( 'getEntityRecord', [\n\t\t\t\t\t'postType',\n\t\t\t\t\tpostType,\n\t\t\t\t\tpostId,\n\t\t\t\t] ),\n\t\t\t};\n\t\t},\n\t\t[ postType, postId, templateId ]\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t{ hasLoadedPost && ! post && (\n\t\t\t\t<Notice status=\"warning\" isDismissible={ false }>\n\t\t\t\t\t{ __(\n\t\t\t\t\t\t\"You attempted to edit an item that doesn't exist. Perhaps it was deleted?\"\n\t\t\t\t\t) }\n\t\t\t\t</Notice>\n\t\t\t) }\n\t\t\t{ !! post && (\n\t\t\t\t<ExperimentalEditorProvider\n\t\t\t\t\tpost={ post }\n\t\t\t\t\t__unstableTemplate={ template }\n\t\t\t\t\tsettings={ settings }\n\t\t\t\t\tinitialEdits={ initialEdits }\n\t\t\t\t\tuseSubRegistry={ false }\n\t\t\t\t>\n\t\t\t\t\t<EditorInterface { ...props }>\n\t\t\t\t\t\t{ extraContent }\n\t\t\t\t\t</EditorInterface>\n\t\t\t\t\t<Sidebar\n\t\t\t\t\t\tonActionPerformed={ onActionPerformed }\n\t\t\t\t\t\textraPanels={ extraSidebarPanels }\n\t\t\t\t\t/>\n\t\t\t\t\t{ children }\n\t\t\t\t</ExperimentalEditorProvider>\n\t\t\t) }\n\t\t</>\n\t);\n}\n\nexport default Editor;\n"],"names":["module","exports","keys","values","map","Map","has","key","indexOf","get","set","value","push","delete","index","splice","createEvent","name","Event","bubbles","e","evt","document","initEvent","assign","ta","nodeName","heightOffset","clientWidth","cachedHeight","pageResize","update","destroy","style","window","removeEventListener","Object","forEach","bind","height","resize","overflowY","overflowX","wordWrap","addEventListener","getComputedStyle","boxSizing","parseFloat","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","isNaN","changeOverflow","width","offsetWidth","scrollHeight","overflows","el","arr","parentNode","Element","scrollTop","node","getParentOverflows","docTop","documentElement","styleHeight","Math","round","computed","actualHeight","offsetHeight","dispatchEvent","err","methods","autosize","options","Array","prototype","call","length","x","default","prop","currentStyle","replace","word","letter","toUpperCase","isMergeableObject","isNonNullObject","stringValue","toString","$$typeof","REACT_ELEMENT_TYPE","isReactElement","isSpecial","Symbol","for","cloneUnlessOtherwiseSpecified","clone","deepmerge","val","isArray","defaultArrayMerge","target","source","concat","element","getKeys","getOwnPropertySymbols","filter","symbol","propertyIsEnumerable","getEnumerableOwnPropertySymbols","propertyIsOnObject","object","property","_","arrayMerge","sourceIsArray","destination","hasOwnProperty","propertyIsUnsafe","customMerge","getMergeFunction","mergeObject","all","array","Error","reduce","prev","next","deepmerge_1","equal","a","b","constructor","i","RegExp","flags","valueOf","computedStyle","lnHeightStr","lnHeight","_lnHeightStyle","lineHeight","_node","createElement","innerHTML","setAttribute","fontSizeStr","fontSize","padding","border","body","appendChild","removeChild","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","props","propName","componentName","location","propFullName","secret","getShim","isRequired","ReactPropTypes","bigint","bool","func","number","string","any","arrayOf","elementType","instanceOf","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","extendStatics","__extends","this","setPrototypeOf","__proto__","d","p","__","create","__assign","t","s","n","arguments","__rest","__esModule","React","getLineHeight","RESIZED","TextareaAutosizeClass","_super","_this","apply","state","textarea","onResize","updateLineHeight","setState","onChange","currentValue","currentTarget","componentDidMount","_a","maxRows","async","setTimeout","componentWillUnmount","render","_b","children","innerRef","maxHeight","ref","current","componentDidUpdate","defaultProps","rows","propTypes","Component","TextareaAutosize","forwardRef","TextareaAutosize_1","characterMap","chars","join","allAccents","firstAccent","matcher","match","removeAccents","remove","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","getter","definition","o","defineProperty","enumerable","obj","r","toStringTag","lock","unlock","__dangerousOptInToUnstableAPIsOnlyForCoreModules","CONTENT","label","_x","getValue","registry","clientId","attributeName","getBlockAttributes","getBlockParentsByBlockName","select","blockEditorStore","currentBlockAttributes","patternClientId","overridableValue","metadata","setValues","attributes","getBlocks","blockName","syncBlocksWithSameName","blocks","block","dispatch","updateBlockAttributes","innerBlocks","currentBindingValue","entries","acc","canUserEditValue","EDITOR_SETTINGS_DEFAULTS","SETTINGS_DEFAULTS","richEditingEnabled","codeEditingEnabled","fontLibraryEnabled","enableCustomFields","defaultRenderingMode","combineReducers","actions","action","_state$action$kind$ac","type","kind","config","_state$action$kind$ac2","_action","id","actionId","getPostRawValue","raw","postId","postType","templateId","saving","pending","deleting","postLock","isLocked","template","isValid","postSavingLock","lockName","removedLockName","restState","editorSettings","settings","postAutosavingLock","renderingMode","mode","deviceType","removedPanels","includes","panelName","blockInserterPanel","isOpen","inserterSidebarToggleRef","listViewPanel","listViewToggleRef","publishSidebarActive","dataviews","dataviewsReducer","_jsx","SVG","xmlns","viewBox","Path","EDIT_MERGE_PROPERTIES","Set","SAVE_POST_NOTICE_ID","TRASH_POST_NOTICE_ID","PERMALINK_POSTNAME_REGEX","ONE_MINUTE_IN_MS","AUTOSAVE_PROPERTIES","TEMPLATE_PART_AREA_DEFAULT_CATEGORY","TEMPLATE_POST_TYPE","TEMPLATE_PART_POST_TYPE","PATTERN_POST_TYPE","NAVIGATION_POST_TYPE","TEMPLATE_ORIGINS","custom","theme","plugin","TEMPLATE_POST_TYPES","GLOBAL_POST_TYPES","fillRule","getTemplatePartIcon","iconName","headerIcon","footerIcon","sidebarIcon","symbolFilledIcon","EMPTY_OBJECT","hasEditorUndo","createRegistrySelector","coreStore","hasUndo","hasEditorRedo","hasRedo","isEditedPostNew","getCurrentPost","status","hasChangedContent","getPostEdits","isEditedPostDirty","getCurrentPostType","getCurrentPostId","hasEditsForEntityRecord","hasNonPostEntityChanges","dirtyEntityRecords","__experimentalGetDirtyEntityRecords","some","entityRecord","isCleanNewPost","getRawEntityRecord","getCurrentTemplateId","getCurrentPostRevisionsCount","_getCurrentPost$_link","_links","count","getCurrentPostLastRevisionId","_getCurrentPost$_link2","getEntityRecordEdits","getCurrentPostAttribute","post","getNestedEditedPostProperty","createSelector","edits","getEditedPostAttribute","getEditedPostContent","getAutosaveAttribute","currentUserId","getCurrentUser","autosave","getAutosave","getEditedPostVisibility","isCurrentPostPending","isCurrentPostPublished","currentPost","isInTheFuture","Date","Number","getDate","date","isCurrentPostScheduled","isEditedPostPublishable","isEditedPostSaveable","isSavingPost","isEditedPostEmpty","Platform","OS","record","getEditedEntityRecord","content","getDefaultBlockName","getFreeformContentHandlerName","isEditedPostAutosaveable","isPostAutosavingLocked","hasFetchedAutosave","hasFetchedAutosaves","field","isEditedPostBeingScheduled","checkedDate","isEditedPostDateFloating","modified","isDeletingPost","isSavingNonPostEntityChanges","entitiesBeingSaved","__experimentalGetEntitiesBeingSaved","didPostSaveRequestSucceed","getLastEntitySaveError","didPostSaveRequestFail","isAutosavingPost","Boolean","isAutosave","isPreviewingPost","isPreview","getEditedPostPreviewLink","previewLink","addQueryArgs","preview","featuredImageId","_thumbnail_id","getSuggestedPostFormat","provider","providerNameSlug","__unstableSerializeAndClean","isPublishingPost","isPermalinkEditable","permalinkTemplate","test","getPermalink","permalinkParts","getPermalinkParts","prefix","postName","suffix","getEditedPostSlug","cleanForSlug","split","isPostLocked","isPostSavingLocked","isPostLockTakeover","isTakeover","getPostLockUser","user","getActivePostLock","activePostLock","canUserUseUnfilteredHTML","isPublishSidebarEnabled","preferencesStore","getEditorBlocks","parse","isEditorPanelRemoved","isEditorPanelEnabled","inactivePanels","isEditorPanelOpened","openPanels","getEditorSelectionStart","deprecated","since","alternative","selectionStart","getEditorSelectionEnd","selectionEnd","getEditorSelection","__unstableIsEditorReady","getEditorSettings","getRenderingMode","getDeviceType","isListViewOpened","isInserterOpened","getEditorMode","_select$get","getStateBeforeOptimisticTransaction","hint","inSomeHistory","getBlockEditorSelector","args","version","getBlockName","isBlockValid","getBlock","getClientIdsOfDescendants","getClientIdsWithDescendants","getGlobalBlockCount","getBlocksByClientId","getBlockCount","getBlockSelectionStart","getBlockSelectionEnd","getSelectedBlockCount","hasSelectedBlock","getSelectedBlockClientId","getSelectedBlock","getBlockRootClientId","getBlockHierarchyRootClientId","getAdjacentBlockClientId","getPreviousBlockClientId","getNextBlockClientId","getSelectedBlocksInitialCaretPosition","getMultiSelectedBlockClientIds","getMultiSelectedBlocks","getFirstMultiSelectedBlockClientId","getLastMultiSelectedBlockClientId","isFirstMultiSelectedBlock","isBlockMultiSelected","isAncestorMultiSelected","getMultiSelectedBlocksStartClientId","getMultiSelectedBlocksEndClientId","getBlockOrder","getBlockIndex","isBlockSelected","hasSelectedInnerBlock","isBlockWithinSelection","hasMultiSelection","isMultiSelecting","isSelectionEnabled","getBlockMode","isTyping","isCaretWithinFormattedText","getBlockInsertionPoint","isBlockInsertionPointVisible","isValidTemplate","getTemplate","getTemplateLock","canInsertBlockType","getInserterItems","hasInserterItems","getBlockListSettings","__experimentalGetDefaultTemplateTypes","defaultTemplateTypes","__experimentalGetDefaultTemplatePartAreas","_getEditorSettings$de","defaultTemplatePartAreas","item","icon","__experimentalGetDefaultTemplateType","slug","_Object$values$find","templateTypes","find","__experimentalGetTemplateInfo","description","title","area","defaultTitle","defaultDescription","templateTitle","rendered","layout","getPostTypeLabel","currentPostType","getPostType","labels","singular_name","isPublishSidebarOpened","postKey","isPostNew","localAutosaveClear","sessionStorage","removeItem","setupEditor","setEditedPost","synchronizeBlocksWithTemplate","resetEditorBlocks","__unstableShouldCreateUndoLevel","edit","_post$key$raw","editPost","__experimentalTearDownEditor","resetPost","updatePost","setupEditorState","editEntityRecord","savePost","undoIgnore","previousRecord","getEntityRecordNonTransientEdits","saveEntityRecord","error","applyFilters","Promise","resolve","catch","data","code","publishStatus","isPublished","messages","publish","private","future","noticeMessage","message","getNotificationArgumentsForSaveFail","noticesStore","createErrorNotice","updatedRecord","_postType$viewable","previousPost","willPublish","willTrash","isDraft","shouldShowLink","viewable","item_trashed","item_reverted_to_draft","item_published","item_published_privately","item_scheduled","item_updated","view_item","url","link","getNotificationArgumentsForSaveSuccess","resolveSelect","createSuccessNotice","__unstableMarkLastChangeAsPersistent","refreshPost","trashPost","postTypeSlug","removeNotice","rest_base","restBase","rest_namespace","restNamespace","apiFetch","path","method","local","excerpt","setItem","JSON","stringify","post_title","localAutosaveSet","__unstableSaveForPreview","forceIsAutosaveable","redo","undo","createUndoLevel","updatePostLock","enablePublishSidebar","disablePublishSidebar","lockPostSaving","unlockPostSaving","lockPostAutosaving","unlockPostAutosaving","selection","__unstableCreateUndoLevel","blocksForSerialization","updateEditorSettings","setRenderingMode","clearSelectedBlock","setDeviceType","toggleEditorPanelEnabled","_registry$select$get","updatedInactivePanels","invactivePanelName","toggleEditorPanelOpened","_registry$select$get2","updatedOpenPanels","openPanelName","removeEditorPanel","setIsInserterOpened","setIsListViewOpened","toggleDistractionFree","isDistractionFree","batch","createInfoNotice","onClick","toggle","switchEditorMode","speak","openPublishSidebar","closePublishSidebar","togglePublishSidebar","getBlockEditorAction","resetBlocks","receiveBlocks","updateBlock","selectBlock","startMultiSelect","stopMultiSelect","multiSelect","toggleSelection","replaceBlocks","replaceBlock","moveBlocksDown","moveBlocksUp","moveBlockToPosition","insertBlock","insertBlocks","showInsertionPoint","hideInsertionPoint","setTemplateValidity","synchronizeTemplate","mergeBlocks","removeBlocks","removeBlock","toggleBlockMode","startTyping","stopTyping","enterFormattedText","exitFormattedText","insertDefaultBlock","updateBlockListSettings","isTemplateRevertable","has_theme_file","registerEntityAction","unregisterEntityAction","setCurrentTemplateId","createTemplate","savedTemplate","showBlockTypes","blockNames","newBlockNames","hideBlockTypes","existingBlockNames","mergedBlockNames","saveDirtyEntities","onSave","entitiesToSkip","close","PUBLISH_ON_SAVE_ENTITIES","saveNoticeId","homeUrl","getUnstableBase","home","entitiesToSave","elt","siteItemsToSave","pendingSavedRecords","typeToPublish","saveEditedEntityRecord","__experimentalSaveSpecifiedEntityEdits","then","revertTemplate","allowUndo","noticeId","templateEntityConfig","getEntityConfig","fileTemplatePath","baseURL","context","fileTemplate","serializeBlocks","edited","undoRevert","errorMessage","removeTemplates","items","isResetting","every","templatePart","promiseResult","allSettled","deleteEntityRecord","force","throwOnError","successMessage","sprintf","decodeEntities","reason","errorMessages","failedPromises","failedPromise","add","size","_jsxs","EMPTY_ARRAY","memoizedGetFilteredTemplatePartBlocks","fn","head","tail","memoized","len","searchCache","maxSize","clear","memoize","templateParts","templatePartsById","newTemplateParts","part","result","stack","shift","unshift","isTemplatePart","EMPTY_INSERTION_POINT","rootClientId","insertionIndex","filterValue","getInsertionPoint","postContentClientId","getBlocksByName","getListViewToggleRef","getInserterSidebarToggleRef","CARD_ICONS","wp_block","wp_navigation","navigation","page","pageIcon","verse","getPostIcon","postTypeEntity","startsWith","slice","getCurrentTemplateTemplateParts","getEntityRecords","per_page","clientIds","getFilteredTemplatePartBlocks","hasPostMetaChanges","currentPostId","meta","originalPostMeta","getEntityRecord","fastDeepEqual","footnotes","getEntityActions","_state$actions$kind$n","_getEntityActions","storeConfig","reducer","selectors","store","createReduxStore","register","registerPrivateActions","privateActions","registerPrivateSelectors","privateSelectors","getPlaceholder","coreDataStore","setValue","editorStore","canUserEditEntityRecord","registerBlockBindingsSource","blocksStore","postMeta","patternOverrides","getUserLabel","avatar","avatar_urls","className","alt","src","_Fragment","addFilter","_settings$attributes","metaAttributes","fromEntries","attributeKey","createHigherOrderComponent","BlockEdit","setAttributes","useSelect","setMeta","useEntityProp","mergedAttributes","useMemo","metaKey","nextAttributes","nextMeta","createWithMetaAttributeSource","triggerPrefix","useItems","users","getUsers","search","encodeURIComponent","getOptionCompletion","completers","userAutocompleter","MediaUpload","PatternOverridesControls","ResetOverridesControl","PatternOverridesBlockControls","PATTERN_TYPES","PARTIAL_SYNCING_SUPPORTED_BLOCKS","PATTERN_SYNC_TYPES","patternsPrivateApis","withPatternOverrideControls","isSupportedBlock","isSelected","ControlsWithStoreSubscription","blockEditingMode","useBlockEditingMode","hasPatternOverridesSource","isEditingSyncedPattern","getBlockBindingsSource","wp_pattern_sync_status","unsynced","bindings","hasPatternBindings","binding","shouldShowPatternOverridesControls","shouldShowResetOverridesControl","f","clipRule","normalizeComplementaryAreaScope","scope","normalizeComplementaryAreaName","setDefaultComplementaryArea","enableComplementaryArea","disableComplementaryArea","pinItem","pinnedItems","unpinItem","toggleFeature","featureName","setFeatureValue","setFeatureDefaults","defaults","setDefaults","openModal","closeModal","getActiveComplementaryArea","isComplementaryAreaVisible","complementaryAreas","isComplementaryAreaLoading","isVisible","identifier","isItemPinned","_pinnedItems$item","isFeatureActive","isModalActive","modalName","activeModal","withPluginContext","ownProps","complementaryAreaContext","as","Button","selectedIcon","ComponentToUse","interfaceStore","useDispatch","ComplementaryAreaHeader","smallScreenTitle","toggleButtonProps","toggleButton","ComplementaryAreaToggle","closeSmall","clsx","tabIndex","noop","ActionItem","Fill","fpOnClick","Slot","ButtonGroup","fillProps","bubblesVirtually","fills","Children","toArray","initializedByPlugins","__unstableExplicitMenuItem","__unstableTarget","child","PluginsMenuItem","restProps","MenuItem","ComplementaryAreaMoreMenuItem","toggleProps","role","check","PinnedItems","variants","open","closed","mobileOpen","ComplementaryAreaFill","activeArea","isActive","disableMotion","useReducedMotion","isMobileViewport","useViewportMatch","previousActiveArea","usePrevious","previousIsActive","useState","useEffect","transition","duration","ease","AnimatePresence","initial","motion","div","animate","exit","ComplementaryAreaWrapped","withComplementaryAreaContext","closeLabel","header","headerClassName","isPinnable","panelClassName","toggleShortcut","isActiveByDefault","isReady","setIsReady","isLoading","isPinned","isSmall","isLarge","showIconLabels","_activeArea","viewportStore","isViewportMatch","previousIsSmall","useRef","shouldOpenWhenNotSmall","useAdjustComplementaryListener","isPressed","showTooltip","variant","onClose","shortcut","starFilled","starEmpty","Panel","FullscreenMode","isSticky","classList","contains","NavigableRegion","ariaLabel","Tag","commonTransition","headerVariants","hidden","opacity","marginTop","visible","distractionFreeHover","delay","delayChildren","distractionFreeHidden","distractionFreeDisabled","footer","editorNotices","sidebar","secondarySidebar","enableRegionNavigation","shortcuts","secondarySidebarResizeListener","secondarySidebarSize","useResizeObserver","defaultTransition","navigateRegionsProps","useNavigateRegions","querySelector","useHTMLClass","mergedLabels","useMergeRefs","whileHover","position","right","EditorKeyboardShortcuts","isModeToggleDisabled","useShortcut","isDisabled","event","preventDefault","sidebarToOpen","AutosaveMonitor","super","needsAutosave","isDirty","isAutosaveable","disableIntervalChecks","setAutosaveTimer","prevProps","editsReference","interval","clearTimeout","timerId","isAutosaving","timeout","autosaveTimerHandler","compose","withSelect","getReferenceByDistinctEdits","autosaveInterval","withDispatch","TYPE_LABELS","wp_pattern","wp_template","wp_template_part","MotionButton","DocumentBar","documentTitle","isNotFound","isUnsyncedPattern","templateIcon","onNavigateToPreviousEntityRecord","getTemplateInfo","isResolving","isResolvingSelector","_postType","_postId","_document","_templateInfo","openCommandCenter","commandsStore","isReducedMotion","isTemplate","isGlobalEntity","hasBackButton","entityTitle","mounted","isRTL","chevronRightSmall","chevronLeftSmall","stopPropagation","transform","Text","BlockIcon","displayShortcut","primary","TableOfContentsItem","level","href","onSelect","toLowerCase","emptyHeadingContent","incorrectLevelContent","singleH1Headings","multipleH1Headings","EmptyOutlineIllustration","fill","Rect","rx","Line","x1","y1","x2","y2","stroke","y","computeOutlineHeadings","flatMap","isEmpty","isEmptyHeading","heading","trim","DocumentOutline","isTitleSupported","hasOutlineItemsDisabled","_postType$supports$ti","supports","headings","prevHeadingLevel","titleNode","hasTitle","hasMultipleH1","DocumentOutlineItem","isIncorrectLevel","getTextContent","html","DocumentOutlineCheck","hasHeadings","registerShortcut","keyboardShortcutsStore","category","keyCombination","modifier","character","aliases","isAppleOS","BlockEditorKeyboardShortcuts","Register","primaryShift","undoIcon","redoIcon","TemplateValidationNotice","showConfirmDialog","setShowConfirmDialog","Notice","isDismissible","ConfirmDialog","confirmButtonText","onConfirm","onCancel","notices","getNotices","dismissibleNotices","nonDismissibleNotices","NoticeList","onRemove","MAX_VISIBLE_NOTICES","EditorSnackbars","snackbarNotices","SnackbarList","EntityRecordItem","checked","entityRecordTitle","PanelRow","CheckboxControl","__nextHasNoMarginBottom","getGlobalStylesChanges","GlobalStylesContext","blockEditorPrivateApis","GlobalStylesDescription","currentEditorGlobalStyles","useContext","savedRecord","globalStylesChanges","maxResults","change","EntityDescription","entity","getEntityDescription","EntityTypeList","list","unselectedEntities","setUnselectedEntities","firstRecord","entityLabel","PanelBody","initialOpen","useIsDirty","editedEntities","siteEdits","siteEntityConfig","_siteEntityConfig$met","editedEntitiesWithoutSite","siteEntityLabels","editedSiteEntities","_setUnselectedEntities","identity","EntitiesSavedStates","renderDialog","isDirtyProps","EntitiesSavedStatesExtensible","additionalPrompt","saveEnabled","saveEnabledProp","saveLabel","saveButtonRef","partitionedSavables","site","siteSavables","templateSavables","templatePartSavables","contentSavables","sortedPartitionedSavables","dismissPanel","useCallback","saveDialogRef","saveDialogProps","useDialog","dialogLabel","useInstanceId","dialogDescription","Flex","gap","FlexItem","isBlock","disabled","__experimentalIsFocusable","createInterpolateElement","_n","strong","getContent","CopyButton","text","useCopyToClipboard","ErrorBoundary","componentDidCatch","doAction","getDerivedStateFromError","Warning","requestIdleCallback","requestAnimationFrame","hasStorageSupport","ifCondition","hasSessionStorageSupport","deferredAutosave","hasRemoteAutosave","createWarningNotice","localAutosave","getItem","localAutosaveGet","editsContent","editsWithoutContent","useAutosaveNotice","didError","lastIsDirty","lastIsAutosaving","wasEditedPostNew","prevPostId","useAutosavePurge","localAutosaveInterval","supportsPageAttributes","HStack","supportKeys","isSupported","PageAttributesOrder","order","_select$getEditedPost","orderInput","setOrderInput","FlexBlock","NumberControl","__next40pxDefaultSize","help","newOrder","isInteger","menu_order","hideLabelFromVision","onBlur","PageAttributesOrderWithChecks","PostTypeSupportCheck","PostOrderToggle","_select$getEditedPost2","OrderRow","popoverAnchor","setPopoverAnchor","popoverProps","anchor","placement","offset","PostPanelRow","Dropdown","contentClassName","focusOnMount","renderToggle","onToggle","renderContent","InspectorPopoverHeader","buildTermsTree","flatTerms","flatTermsWithParentAndChildren","term","parent","termsByParent","fillWithChildren","terms","unescapeString","arg","unescapeTerm","unescapeTerms","getTitle","getItemPriority","searchValue","normalizedName","normalizedSearch","Infinity","PageAttributesParent","fieldValue","setFieldValue","isHierarchical","parentPostId","parentPostTitle","pageItems","_pType$hierarchical","pageId","pType","postIsHierarchical","hierarchical","query","exclude","parent_exclude","orderby","_fields","parentPost","parentOptions","getOptionsFromTree","tree","sortedNodes","treeNode","repeat","rawName","sort","flat","opts","optsHasParent","ComboboxControl","onFilterValueChange","debounce","inputValue","selectedPostId","PostParentToggle","parentTitle","ParentRow","ExternalLink","PANEL_NAME","AttributesPanel","isEnabled","PageAttributesPanel","PageAttributesCheck","DEFAULT_TITLE","CreateNewTemplateModal","defaultBlockTemplate","onNavigateToEntityRecord","getTemplateId","setTitle","isBusy","setIsBusy","cancel","Modal","onRequestClose","onSubmit","newTemplateContent","serialize","createBlock","tagName","inherit","newTemplate","VStack","spacing","TextControl","placeholder","justify","useEditedPostContext","useAllowSwitchingTemplates","siteSettings","templates","isPostsPage","page_for_posts","isFrontPage","page_on_front","useTemplates","post_type","useAvailableTemplates","currentTemplateSlug","useCurrentTemplateSlug","allowSwitchingTemplate","is_custom","entityTemplate","POPOVER_PROPS","PostTemplateToggle","templateSlug","supportsTemplateMode","availableTemplates","canUser","PostTemplateDropdownContent","_options$find","_selectedOption$value","fetchedTemplates","selectedTemplateSlug","canCreate","canEdit","currentTemplateId","canCreateTemplates","_currentTemplateId","selectedOption","option","isCreateModalOpen","setIsCreateModalOpen","addTemplate","SelectControl","PreferenceBaseOption","preferencesPrivateApis","isRemoved","isChecked","createSlotFill","EnablePluginDocumentSettingPanelOption","EnablePanelOption","PluginDocumentSettingPanel","pluginName","usePluginContext","opened","PluginBlockSettingsMenuItem","allowedBlocks","small","BlockSettingsMenuControls","selectedBlocks","shouldRenderItem","allowed","isEverySelectedBlockAllowed","_ownProps$as","PluginPostPublishPanel","pluginIcon","PluginPostStatusInfo","PluginPrePublishPanel","PluginSidebar","postTitle","getShortcutRepresentation","ComplementaryArea","PluginSidebarMoreMenuItem","SwapTemplateButton","showModal","setShowModal","overlayClassName","isFullScreen","TemplatesList","templatesAsPatterns","shownTemplates","useAsyncList","BlockPatternsList","blockPatterns","shownPatterns","onClickPattern","ResetDefaultTemplate","CreateNewTemplate","BlockThemeControl","isTemplateHidden","hasGoBack","_getEditorSettings","editedRecord","hasResolved","useEntityRecord","canCreateTemplate","_select$canUser","notificationAction","DropdownMenu","tooltipPosition","MenuGroup","PostTemplatePanel","isBlockTheme","__unstableIsBlockBasedTheme","canViewTemplates","_select$canUser2","ClassicThemeControl","BASE_QUERY","AUTHORS_QUERY","who","useAuthorsQuery","authorId","authors","postAuthor","getUser","_authorId","authorOptions","fetchedAuthors","author","findIndex","PostAuthorCombobox","postAuthorId","allowReset","PostAuthorSelect","PostAuthorCheck","hasAssignAuthorAction","hasAuthors","_post$_links$wpActio","PostAuthorToggle","authorName","PostAuthorForm","COMMENT_OPTIONS","commentStatus","RadioControl","newCommentStatus","comment_status","selected","pingStatus","onTogglePingback","ping_status","ModalContents","PostComments","PostPingbacks","PostDiscussionToggle","commentsSupported","trackbacksSupported","_getEditedPostAttribu","_getEditedPostAttribu2","comments","trackbacks","PostDiscussionPanel","PostExcerpt","updateOnBlur","shouldUseDescriptionLabel","usedAttribute","_usedAttribute","localExcerpt","setLocalExcerpt","TextareaControl","PluginPostExcerpt","ExcerptPanel","isOpened","toggleExcerptPanel","PostExcerptForm","PostExcerptPanel","PostExcerptCheck","PrivatePostExcerptPanel","PrivateExcerpt","shouldRender","shouldBeUsedAsDescription","allowEditing","isTemplateOrTemplatePart","isPattern","_shouldBeUsedAsDescription","_shouldRender","headerTitle","excerptText","align","numberOfLines","truncate","excerptPlaceholder","triggerEditLabel","ThemeSupportCheck","themeSupports","getThemeSupports","_themeSupports$key","supported","ALLOWED_MEDIA_TYPES","DEFAULT_FEATURE_IMAGE_LABEL","DEFAULT_SET_FEATURE_IMAGE_LABEL","instructions","applyWithSelect","getMedia","media","applyWithDispatch","noticeOperations","onUpdateImage","image","featured_media","onDropImage","filesList","getSettings","mediaUpload","allowedTypes","onFileChange","onError","removeAllNotices","onRemoveImage","withNotices","withFilters","noticeUI","toggleRef","setIsLoading","mediaSourceUrl","_media$media_details$","_media$media_details$2","defaultSize","media_details","sizes","mediaWidth","mediaHeight","source_url","fallbackSize","getMediaDetails","onDropFiles","isBlobURL","PostFeaturedImageCheck","alt_text","full","file","MediaUploadCheck","fallback","featured_image","unstableFeaturedImageFlow","modalClass","Spinner","set_featured_image","focus","DropZone","onFilesDrop","PostFeaturedImagePanel","withPanelBody","_postType$labels$feat","PostFeaturedImage","disablePostFormats","POST_FORMATS","caption","normalizedA","normalizedB","PostFormat","postFormatSelectorId","postFormat","suggestedFormat","supportedFormats","_postFormat","formats","format","suggestion","onUpdatePostFormat","PostFormatCheck","lastRevisionId","revisionsCount","usePostLastRevisionInfo","PrivatePostLastRevision","PostLastRevisionCheck","revision","backup","iconPosition","PostLastRevision","PostLockedModal","hookName","postLockUtils","releasePostLock","FormData","append","unlockNonce","navigator","sendBeacon","ajaxUrl","xhr","XMLHttpRequest","send","addAction","post_id","received","lock_error","avatar_src_2x","new_lock","removeAction","userDisplayName","userAvatar","unlockUrl","lockKey","_wpnonce","nonce","allPostsUrl","allPostsLabel","shouldCloseOnClickOutside","shouldCloseOnEsc","alignment","PreviewLink","hasPublishAction","PostPendingStatusCheck","togglePendingStatus","PostPreviewButton","textContent","onPreview","currentPostLink","isSaveable","isViewable","editor","targetId","previewWindow","targetDocument","markup","renderToString","write","writeInterstitialMessage","VisuallyHidden","PublishButtonLabel","isSmallerThanMediumViewport","isBeingScheduled","isSaving","isPublishing","postStatusHasChanged","postStatus","PostPublishButton","buttonNode","createRef","createOnClick","closeEntitiesSavedStates","entitiesSavedStatesCallback","timeoutID","callback","setEntitiesSavedStatesCallback","savedEntities","forceIsDirty","isPublishable","isAutoSaving","isToggle","savePostStatus","visibility","isButtonDisabled","isToggleDisabled","buttonProps","onClickButton","onClickToggle","componentProps","visibilityOptions","public","info","password","PostVisibility","instanceId","hasPassword","setHasPassword","showPrivateConfirmDialog","setShowPrivateConfirmDialog","PostVisibilityChoice","setPublic","setPrivate","setPasswordProtected","htmlFor","confirmPrivate","handleDialogCancel","PostVisibilityLabel","usePostVisibilityLabel","toDate","argument","argStr","NaN","startOfMonth","_date","setDate","setHours","endOfMonth","month","getMonth","setFullYear","getFullYear","pow","millisecondsInMinute","millisecondsInHour","patterns","dateTimeDelimiter","timeZoneDelimiter","timezone","dateRegex","timeRegex","timezoneRegex","parseDateUnit","parseInt","parseTimeUnit","daysInMonths","isLeapYearIndex","year","PrivatePublishDateTimePicker","PostSchedule","PrivatePostSchedule","showPopoverHeaderActions","isCompact","postDate","previewedMonth","setPreviewedMonth","eventsByPostType","after","toISOString","before","events","eventDate","is12HourTime","time","reverse","currentDate","is12Hour","onMonthPreviewed","additionalDigits","dateStrings","dateString","timeString","substr","token","exec","splitDateString","parseYearResult","regex","captures","restDateString","century","parseYear","isWeekDate","dayOfYear","day","week","dayOfWeek","_year","validateWeekDate","isoWeekYear","setUTCFullYear","diff","getUTCDay","setUTCDate","getUTCDate","dayOfISOWeekYear","validateDate","validateDayOfYearDate","max","parseDate","getTime","timestamp","hours","minutes","seconds","validateTime","parseTime","dirtyDate","getUTCFullYear","getUTCMonth","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","timezoneString","sign","_hours","validateTimezone","parseTimezone","parseISO","PostScheduleLabel","usePostScheduleLabel","isFloating","getFullPostScheduleLabel","dateAttribute","now","getTimezoneOffset","isTimezoneSameAsSiteTimezone","isSameDay","dateI18n","tomorrow","getPostScheduleLabel","timezoneAbbreviation","abbr","offsetFormatted","getTimezoneAbbreviation","formattedDate","left","MIN_MOST_USED_TERMS","DEFAULT_QUERY","hide_empty","MostUsedTerms","taxonomy","_terms","showTerms","mostUsedTerms","BaseControl","VisualLabel","most_used","MAX_TERMS_SUGGESTIONS","isSameTermName","termA","termB","termNamesToIds","names","termName","FlatTermSelector","_taxonomy$labels$add_","_taxonomy$labels$sing2","setSearch","debouncedSearch","useDebounce","termIds","hasAssignAction","hasCreateAction","hasResolvedTerms","_post$_links","_post$_links2","getTaxonomy","hasFinishedResolution","_taxonomy","_termIds","include","searchResults","newValues","suggestions","onUpdateTerms","newTermIds","newTermLabel","add_new_item","singularName","termAddedLabel","termRemovedLabel","removeTermLabel","FormTokenField","termNames","availableTerms","uniqueTerms","newTermNames","newTerm","term_id","findOrCreateTerm","newTerms","newAvailableTerms","onInputChange","maxSuggestions","added","removed","_taxonomy$labels$sing","defaultName","termAddedMessage","TagsPanel","panelBodyTitle","MaybeTagsPanel","hasTags","isPostTypeSupported","tagsTaxonomy","_isPostTypeSupported","types","areTagsFetched","tags","hadTagsWhenOpeningThePanel","getSuggestion","suggestedPostFormat","PostFormatSuggestion","suggestionText","PostFormatPanel","currentPostFormat","_select$getThemeSuppo","MIN_TERMS_COUNT_FOR_FILTER","HierarchicalTermSelector","_taxonomy$labels$sear","_taxonomy$name","adding","setAdding","formName","setFormName","formParent","setFormParent","showForm","setShowForm","setFilterValue","filteredTermsTree","setFilteredTermsTree","debouncedSpeak","loading","availableTermsTree","termsTree","treeHasSelection","termTree","newTermTree","termOrChildIsSelected","termASelected","termBSelected","sortBySelected","renderTerms","renderedTerms","termId","labelWithFallback","labelProperty","fallbackIsCategory","fallbackIsNotCategory","_taxonomy$labels$labe","newTermButtonLabel","parentSelectLabel","noParentOption","newTermSubmitLabel","filterLabel","search_items","groupLabel","showFilter","direction","newFilteredTermsTree","matchTermsForFilter","originalTerm","getFilterMatcher","getResultCount","resultCount","resultsFoundMessage","onToggleForm","existingTerm","findTerm","required","TreeSelect","noOptionLabel","parentId","selectedId","hasNoCategory","categoriesTaxonomy","defaultCategoryId","default_category","defaultCategory","postTypeSupportsCategories","categories","shouldShowPanel","setShouldShowPanel","flattenBlocks","Image","img","onKeyDown","scale","objectFit","borderRadius","cursor","isUploading","setIsUploading","editorBlocks","externalImages","display","flexWrap","fetch","response","blob","reject","finally","isRequestingSiteIcon","siteIconUrl","siteTitle","siteHome","siteData","site_icon_url","filterURLForDisplay","prePublishTitle","prePublishBodyText","siteIcon","Icon","wordpress","MaybeUploadMedia","MaybePostFormatPanel","MaybeCategoryPanel","POSTNAME","PAGENAME","onCopy","PostPublishPanelPostpublish","showCopyConfirmation","onSelectInput","postLink","dismissCopyConfirmation","isScheduled","postLabel","viewPostLabel","addNewPostLabel","permalink_template","getFuturePostUrl","addLink","postPublishNonLinkHeader","readOnly","safeDecodeURIComponent","onFocus","PostPublishPanel","isPostTypeViewable","onTogglePublishSidebar","PostPublishExtension","PrePublishExtension","additionalProps","propsForPanel","isPublishedOrScheduled","isPrePublish","isPostPublish","PostPublishPanelPrepublish","withFocusReturn","withConstrainedTabbing","cloneElement","PostSavedState","forceSavedMessage","setForceSavedMessage","isLargeViewport","isNew","isPending","wasSaving","timeoutId","shortLabel","isSaved","isSavedState","getAnimateClassName","cloudUpload","cloud","PostScheduleCheck","_select$getCurrentPos","DESIGN_POST_TYPES","PostSchedulePanel","fullLabel","PostScheduleForm","PostSlugCheck","PostSlugControl","postSlug","forceEmptyField","setForceEmptyField","autoComplete","spellCheck","newValue","PostSlug","PostStickyCheck","hasStickyAction","PostSticky","postSticky","sticky","PostSwitchToDraftButton","alertMessage","flexGrow","justifyContent","handleConfirm","PostSyncStatus","syncStatus","taxonomyWrapper","taxonomies","getTaxonomies","show_ui","TaxonomyComponent","Fragment","PostTaxonomiesCheck","TaxonomyPanel","taxonomyMenuName","menu_name","PostTaxonomiesForm","PostTextEditor","_type","_id","Function","Textarea","dir","DEFAULT_CLASSNAMES","REGEXP_NEWLINES","usePostTitleFocus","forwardedRef","_isCleanNewPost","useImperativeHandle","defaultView","ownerDocument","activeElement","usePostTitle","newTitle","titlePlaceholder","setIsSelected","focusRef","onUpdate","setSelection","onInsertBlockAfter","onUnselect","decodedPlaceholder","richTextRef","useRichText","start","end","onSelectionChange","newStart","newEnd","sel","__unstableDisableFormats","contentEditable","keyCode","ENTER","onKeyPress","onPaste","clipboardData","plainText","getData","error1","error2","console","log","pasteHandler","HTML","firstBlock","contentNoHTML","stripHTML","insert","toHTMLString","PostTrash","isDeleting","isDestructive","PostTrashCheck","canTrashPost","resource","canUserDelete","PostURL","isEditable","permalinkPrefix","permalinkSuffix","permalink","createNotice","copyButtonRef","InputControl","InputControlPrefixWrapper","copySmall","PostURLCheck","PostURLLabel","usePostURLLabel","PostURLPanel","PostURLToggle","decodedSlug","PostVisibilityCheck","WordCount","wordCountType","wordCount","AVERAGE_READING_RATE","TimeToRead","minutesToRead","minutesToReadString","span","CharacterCount","characterCount","headingCount","paragraphCount","numberOfBlocks","repositionDropdown","hasBlocks","TableOfContentsPanel","UnsavedChangesWarning","warnIfUnsavedChanges","returnValue","WrappedComponent","useSubRegistry","useRegistry","subRegistries","WeakMap","subRegistry","createRegistry","blockEditorStoreConfig","registerStore","getSubRegistry","RegistryProvider","getExternalLink","getExternalLinkAttributes","getOpenverseCaption","foreign_landing_url","foreignLandingUrl","creator","creator_url","creatorUrl","license","license_version","licenseVersion","license_url","licenseUrl","fullLicense","getOpenverseLicense","licenseName","_creator","_caption","coreMediaFetch","getMediaItems","orderBy","mediaItem","previewUrl","medium","mediaType","media_type","finalQuery","mature","excluded_source","mapFromInserterMediaRequest","URL","queryKey","searchParams","headers","json","results","sourceId","thumbnail","getReportUrl","isExternalResource","additionalData","maxUploadFileSize","wpAllowedMimeTypes","allowedMimeTypes","wp_id","postData","uploadMedia","isObject","isPlainObject","ctor","prot","cleanEmptyObject","mergeBaseAndUserConfigs","base","useGlobalStylesContext","isUserConfigReady","userConfig","setUserConfig","globalStylesId","styles","_globalStylesId","__experimentalGetCurrentGlobalStylesId","callbackOrObject","_record$styles","_record$settings","_record$_links","currentConfig","updatedConfig","useGlobalStylesUserConfig","isBaseConfigReady","baseConfig","__experimentalGetCurrentThemeBaseGlobalStyles","useGlobalStylesBaseConfig","mergedConfig","merged","EMPTY_BLOCKS_LIST","DEFAULT_STYLES","__experimentalReusableBlocksSelect","_select$getEntityReco","BLOCK_EDITOR_SETTINGS","globalStylesDataKey","selectBlockPatternsKey","reusableBlocksSelectKey","privateApis","_mergedGlobalStyles$s","_settings$__experimen","_settings$__experimen2","allowRightClickOverrides","blockTypes","focusMode","hasFixedToolbar","keepCaretInsideBlock","hasUploadPermissions","hiddenBlockTypes","canUseUnfilteredHTML","userCanCreatePages","pageOnFront","pageForPosts","userPatternCategories","restBlockPatternCategories","sectionRootClientId","_canUser","getUserPatternCategories","getBlockPatternCategories","getBlockTypes","_getBlocksByName$","_getBlocksByName$find","mergedGlobalStyles","globalStylesData","settingsBlockPatterns","__experimentalAdditionalBlockPatterns","__experimentalBlockPatterns","settingsBlockPatternCategories","__experimentalAdditionalBlockPatternCategories","__experimentalBlockPatternCategories","postTypes","blockPatternCategories","createPageEntity","allowedBlockTypes","forceDisableFocusMode","blockEditorSettings","getBlockPatternsForPostType","__experimentalUserPatternCategories","__experimentalFetchLinkSuggestions","searchOptions","fetchLinkSuggestions","inserterMediaCategories","__experimentalFetchRichUrlData","fetchUrlData","__experimentalCanUserUseUnfilteredHTML","__experimentalUndo","outlineMode","__experimentalCreatePageEntity","__experimentalUserCanCreatePages","__experimentalPreferPatternsOnRoot","templateLock","__experimentalSetIsInserterOpened","DEFAULT_CONTENT_ONLY_BLOCKS","DisableNonPageContentBlocks","contentOnlyBlocks","contentOnlyIds","getBlockParents","parentClientId","parentBlockName","disabledIds","setBlockEditingMode","unsetBlockEditingMode","NavigationBlockEditingMode","blockClientId","POST_TYPES_ALLOWING_POST_CONTENT_TEMPLATE_PART","RenamePatternModal","PatternRenameModal","pattern","DuplicatePatternModal","PatternDuplicateModal","onSuccess","useEditorCommandLoader","editorMode","isListViewOpen","showBlockBreadcrumbs","isTopToolbar","isFocusMode","isPreviewMode","isCodeEditingEnabled","isRichEditingEnabled","_get","_getPostType$viewable","__unstableIsPreviewMode","allowSwitchEditorMode","commands","keyboard","listView","drawerLeft","drawerRight","activeSidebar","blockDefault","formatListBullets","external","useEditedEntityContextualCommands","patternRenameModalName","patternDuplicateModalName","BlockRemovalWarningModal","TEMPLATE_BLOCKS","BLOCK_REMOVAL_RULES","removedBlocks","BlockRemovalWarnings","removalRulesForPostType","rule","rules","PatternSelection","onChoosePattern","shownBlockPatterns","_pattern","StartPageOptionsModal","startPatterns","blockPatternsWithPostContentBlockType","getPatternsByBlockTypes","useStartPatterns","StartPageOptions","isClosed","setIsClosed","shouldEnableModal","textFormattingShortcuts","KeyCombination","forceAriaLabel","displayShortcutList","shortcutAriaLabel","alias","getShortcutKeyCombination","getShortcutDescription","getShortcutAliases","Shortcut","KEYBOARD_SHORTCUT_HELP_MODAL_NAME","ShortcutList","DynamicShortcut","ShortcutSection","ShortcutCategorySection","categoryName","additionalShortcuts","categoryShortcuts","getCategoryShortcuts","toggleModal","closeButtonLabel","ContentOnlySettingsMenuItems","canEditTemplates","getBlockEditingMode","patternParent","getContentLockingParent","TemplateLockContentOnlyMenuItems","helpText","BlockSettingsMenuFirstItem","contentLockingParent","blockDisplayInformation","useBlockDisplayInformation","modifyContentLockBlock","ContentOnlySettingsMenu","selectedClientIds","fallbackContent","useEntityBlockEditor","getBlockPatterns","currentThemeStylesheet","getCurrentTheme","stylesheet","templateType","innerBlock","injectThemeAttributeInBlockTemplateContent","StartModal","isCustom","getDefaultTemplateId","ignore_empty","useFallbackTemplateContent","expanded","StartTemplateOptions","shouldOpenModal","templateRecord","ConvertToRegularBlocks","canRemoveBlock","lowerCase","str","SuppressedError","DEFAULT_SPLIT_REGEXP","DEFAULT_STRIP_REGEXP","input","re","paramCase","splitRegexp","stripRegexp","delimiter","charAt","noCase","dotCase","useExistingTemplateParts","getUniqueTemplatePartTitle","lowercaseTitle","existingTitles","getCleanTemplatePartSlug","kebabCase","CreateTemplatePartModal","modalTitle","defaultModalTitle","CreateTemplatePartModalContents","defaultArea","confirmLabel","onCreate","existingTemplateParts","setArea","isSubmitting","setIsSubmitting","templatePartAreas","uniqueTitle","cleanSlug","createTemplatePart","RadioGroup","Radio","ConvertToTemplatePart","isModalOpen","setIsModalOpen","symbolFilled","TemplatePartMenuItems","TemplatePartConverterMenuItem","isContentOnly","ExperimentalBlockEditorProvider","PatternsMenuItems","editPatternsPrivateApis","NON_CONTEXTUAL_POST_TYPES","ExperimentalEditorProvider","withRegistryProvider","recovery","initialEdits","BlockEditorProviderComponent","__unstableTemplate","shouldRenderTemplate","rootLevelPost","defaultBlockContext","useBlockEditorSettings","onInput","postBlocks","templateBlocks","onInputTemplate","onChangeTemplate","maybeNavigationBlocks","useBlockEditorProps","useLayoutEffect","editLink","_settings$defaultRend","canInsert","blockType","removeFilter","useHideBlocksFromInserter","useCommandLoader","hook","EntityProvider","BlockContextProvider","KeyboardShortcutHelpModal","BlockEditorProvider","deprecateComponent","Wrapped","staticsToHoist","staticName","deprecateFunction","RichText","RootRichText","Autocomplete","RootAutocomplete","AlignmentToolbar","RootAlignmentToolbar","BlockAlignmentToolbar","RootBlockAlignmentToolbar","BlockControls","RootBlockControls","RootBlockEdit","RootBlockEditorKeyboardShortcuts","BlockFormatControls","RootBlockFormatControls","RootBlockIcon","BlockInspector","RootBlockInspector","BlockList","RootBlockList","BlockMover","RootBlockMover","BlockNavigationDropdown","RootBlockNavigationDropdown","BlockSelectionClearer","RootBlockSelectionClearer","BlockSettingsMenu","RootBlockSettingsMenu","BlockTitle","RootBlockTitle","BlockToolbar","RootBlockToolbar","ColorPalette","RootColorPalette","ContrastChecker","RootContrastChecker","CopyHandler","RootCopyHandler","DefaultBlockAppender","RootDefaultBlockAppender","FontSizePicker","RootFontSizePicker","Inserter","RootInserter","InnerBlocks","RootInnerBlocks","InspectorAdvancedControls","RootInspectorAdvancedControls","InspectorControls","RootInspectorControls","PanelColorSettings","RootPanelColorSettings","PlainText","RootPlainText","RichTextShortcut","RootRichTextShortcut","RichTextToolbarButton","RootRichTextToolbarButton","__unstableRichTextInputEvent","__unstableRootRichTextInputEvent","MediaPlaceholder","RootMediaPlaceholder","RootMediaUpload","RootMediaUploadCheck","MultiSelectScrollIntoView","RootMultiSelectScrollIntoView","NavigableToolbar","RootNavigableToolbar","ObserveTyping","RootObserveTyping","SkipToSelectedBlock","RootSkipToSelectedBlock","URLInput","RootURLInput","URLInputButton","RootURLInputButton","URLPopover","RootURLPopover","RootWarning","WritingFlow","RootWritingFlow","createCustomColorsHOC","rootCreateCustomColorsHOC","getColorClassName","rootGetColorClassName","getColorObjectByAttributeValues","rootGetColorObjectByAttributeValues","getColorObjectByColorValue","rootGetColorObjectByColorValue","getFontSize","rootGetFontSize","getFontSizeClass","rootGetFontSizeClass","withColorContext","rootWithColorContext","withColors","rootWithColors","withFontSizes","rootWithFontSizes","VisualEditorGlobalKeyboardShortcuts","TextEditorGlobalKeyboardShortcuts","urlCleanForSlug","createPrivateSlotFill","componentsPrivateApis","slotName","BackButton","BackButtonSlot","useSlotFills","useHasBlockToolbar","isCollapsed","blockSelectionStart","hasBlockToolbar","hasBlockSelection","hideDragHandle","Popover","previous","disableBlockTools","listViewShortcut","__unstableGetEditorMode","isVisualMode","isZoomedOutView","isWideViewport","toolbarAriaLabel","toggleListView","toggleInserter","longLabel","ToolbarItem","onMouseDown","plus","ToolSelector","EditorHistoryUndo","EditorHistoryRedo","CopyContentMenuItem","MODES","selectedMode","choices","choice","MenuItemsChoice","ToolsMoreMenuGroup","ViewMoreMenuGroup","MoreMenu","setPreference","turnOffDistractionFree","moreVertical","PreferenceToggleMenuItem","messageActivated","messageDeactivated","handleToggling","ModeSwitcher","access","rel","IS_TOGGLE","IS_BUTTON","component","PostViewLink","hasLoaded","PreviewDropdown","_currentPostType","menuProps","deviceIcons","mobile","tablet","desktop","disableOpenOnArrowDown","toolbarVariations","backButtonVariations","customSaveButton","forceDisableBlockTools","isTextEditor","isNestedEntity","getPreference","_isPublishSidebarOpened","hasTopToolbar","isBlockToolsCollapsed","setIsBlockToolsCollapsed","DocumentTools","CollapsableBlockToolbar","PostPublishButtonOrToggle","PrivateInserterLibrary","InserterSidebar","blockSectionRootClientId","insertionPoint","showMostUsedBlocks","sidebarIsOpened","getBlockSectionRootClientId","inserterDialogRef","inserterDialogProps","libraryRef","closeInserterSidebar","closeOnEscape","ESCAPE","defaultPrevented","inserterContents","showInserterHelpPanel","shouldFocusBlock","__experimentalInsertionIndex","__experimentalInitialTab","tab","__experimentalInitialCategory","__experimentalFilterValue","onPatternCategorySelection","__experimentalEnableZoomedOutPatternsTab","ListViewOutline","Tabs","ListViewSidebar","focusOnMountRef","useFocusOnMount","closeListView","dropZoneElement","setDropZoneElement","setTab","sidebarRef","tabsRef","listViewRef","listViewContainerRef","handleToggleListViewShortcut","currentTab","tabPanelFocus","tabbable","listViewApplicationFocus","handleSidebarFocus","tabName","selectOnMove","defaultTabId","TabList","Tab","tabId","TabPanel","focusable","ListView","SavePublishPanels","isEntitiesSavedStatesOpen","forceIsDirtyPublishPanel","publishSidebarOpened","openEntitiesSavedStates","unmountableContent","TextEditor","autoFocus","titleRef","PostTitleRaw","EditTemplateBlocksNotification","contentRef","canEditTemplate","isDialogOpen","setIsDialogOpen","handleDblClick","canvas","ResizeHandle","resizeWidthBy","resizableHandleHelpId","Tooltip","button","LEFT","RIGHT","active","scaleY","whileFocus","whileTap","HANDLE_STYLES_OVERRIDE","userSelect","top","bottom","enableResizing","setWidth","resizableRef","deltaPixels","ResizableBox","api","resizable","onResizeStop","minWidth","maxWidth","enable","showHandle","resizeRatio","handleComponent","handleClasses","handleStyles","clamp","min","distanceFromRect","rect","dx","dy","sqrt","useSelectNearestEditableBlock","getEnabledClientIdsTree","useRefEffect","handleClick","selectNearestEditableBlock","editableBlockClientIds","nearestDistance","nearestClientId","distance","getBoundingClientRect","clientX","clientY","LayoutStyle","useLayoutClasses","useLayoutStyles","ExperimentalBlockCanvas","BlockCanvas","useFlashEditableBlocks","getPostContentAttributes","nestedPostContent","checkForPostContentAtRootLevel","disableIframe","iframeProps","resizeObserver","postContentAttributes","editedPostTemplate","wrapperBlockName","wrapperUniqueId","isFocusedEntity","isDesignPostType","_renderingMode","_wrapperBlockName","postTypeObject","hasRootPaddingAwareAlignments","themeHasDisabledLayoutStyles","themeSupportsLayout","isZoomOutMode","_settings","disableLayoutStyles","supportsLayout","__experimentalFeatures","useRootPaddingAwareAlignments","deviceStyles","useResizeCanvas","globalLayoutSettings","useSettings","fallbackLayout","newestPostContentAttributes","parseableContent","hasPostContentAtRootLevel","postContentLayoutClasses","blockListLayoutClass","postContentLayoutStyles","postContentLayout","contentSize","wideSize","blockListLayout","postEditorLayout","observeTypingRef","useTypingObserver","localRef","typewriterRef","useTypewriter","zoomOutProps","frameSize","forceFullHeight","shouldIframe","iframeStyles","css","ResizableEditor","selector","PostTitle","RecursionProvider","uniqueId","__unstableDisableDropZone","interfaceLabels","EditorInterface","previousShortcut","nextShortcut","documentLabel","blockEditorMode","postTypeLabel","getAllShortcutKeyCombinations","secondarySidebarLabel","InterfaceSkeleton","Header","EditorNotices","EditorContentSlotFill","editorCanvasView","VisualEditor","BlockBreadcrumb","rootLabelText","OverridesPanel","PatternOverridesPanel","Blob","Response","DataView","setUint32","ArrayBuffer","Uint8Array","buffer","TextEncoder","encode","String","File","isFile","lastModified","stream","ReadableStream","isView","asyncIterator","TypeError","pull","desiredSize","enqueue","byteLength","throw","u","BigInt","l","pathname","findLast","decodeURIComponent","c","subarray","Uint32Array","w","getSeconds","getMinutes","getHours","setUint16","B","decode","TextDecoder","fatal","g","m","getReader","done","read","I","setBigUint64","v","h","D","N","iterator","buffersAreUTF8","getJsonFromItem","__file","patternPost","exportPatternAsJSONAction","supportsBulk","isEligible","downloadBlob","nameCount","filesToZip","S","downloadZip","CreatePatternModalContents","useDuplicatePatternProps","isTemplateRemovable","getItemTitle","deletePostAction","isPrimary","trash","hideModalHeader","RenderModal","onActionPerformed","trashPostAction","useCanUserEligibilityCheckPostType","capability","permanentlyDeletePostAction","posts","restorePostAction","viewPostAction","postRevisionsAction","_items$0$_links$versi","_post$_links$predeces","_post$_links$version","renamePostAction","isCustomPattern","hasThemeFile","originalTitle","useDuplicatePostAction","userCanCreatePost","isCreatingPage","setIsCreatingPage","newItemOject","assignablePropertiesPrefix","newItem","resetTemplateAction","canDeleteOrReset","isTemplatePartRevertable","fallbackErrorMessage","duplicatePatternAction","modalHeader","isThemePattern","duplicatedProps","duplicateTemplatePartAction","usePostActions","defaultActions","userCanCreatePostType","cachedCanUserResolvers","getCachedResolvers","_postTypeObject","_resource","duplicatePostAction","trashPostActionForPostType","useTrashPostAction","permanentlyDeletePostActionForPostType","usePermanentlyDeletePostAction","renamePostActionForPostType","useRenamePostAction","restorePostActionForPostType","useRestorePostAction","isLoaded","supportsRevisions","revisions","supportsTitle","existingCallback","_onActionPerformed","_items","ExistingRenderModal","DropdownMenuV2","DropdownMenuGroupV2","DropdownMenuGroup","DropdownMenuItemV2","DropdownMenuItem","DropdownMenuItemLabelV2","DropdownMenuItemLabel","PostActions","isActionsMenuOpen","setIsActionsMenuOpen","allActions","trigger","onOpenChange","ActionsDropdownMenuGroup","DropdownMenuItemTrigger","hideOnClick","ActionWithModal","ActionTrigger","actionTriggerProps","__experimentalHideHeader","PostCardPanel","isSync","_record","_isSync","weight","PostContentInformation","postContent","wordsCounted","readingTime","wordsCountText","toLocaleString","minutesText","activeFormat","PostFormatForm","PostLastEditedPanel","lastEditedText","humanTimeDiff","draft","STATUS_OPTIONS","PostStatus","showPassword","setShowPassword","passwordInputId","newStatus","newPassword","newDate","handleTogglePassword","handleStatus","BlogTitle","postsPageTitle","postsPageId","_postsPageRecord","setPostsPageTitle","decodedTitle","PostsPerPage","postsPerPage","posts_per_page","setPostsPerPage","spinControls","step","SiteDiscussion","allowCommentsOnNewPosts","default_comment_status","setAllowCommentsOnNewPosts","TemplateAreaItem","toggleBlockHighlight","templatePartArea","highlightBlock","cancelHighlightBlock","onMouseOver","onMouseLeave","TemplateAreas","_isTemplate","Heading","PostSummary","isRemovedPostStatusPanel","PostPanelSection","PostStatusPanel","PostAuthorPanel","EXCLUDED_PATTERN_SOURCES","preparePatterns","keywords","__unstableSkipMigrationLogs","showTitlesAsTooltip","PostTransform","availablePatterns","restBlockPatterns","filterOutDuplicatesByName","currentItem","filterOutExcludedPatternSources","filterCompatiblePatterns","filterPatterns","useAvailablePatterns","selectedTemplate","PostTransformPanel","sidebars","SidebarHeader","BlockQuickNavigation","PAGE_CONTENT_BLOCKS","TemplateContentPanel","TemplatePartContentPanelInner","themeBlockNames","themeBlocks","TemplatePartContentPanel","SIDEBAR_ACTIVE_BY_DEFAULT","web","native","SidebarContent","keyboardShortcut","extraPanels","tabListRef","tabsContextValue","Context","tabsElements","from","querySelectorAll","selectedTabElement","getAttribute","Provider","PostTaxonomiesPanel","Sidebar","activeGeneralSidebar","isEditorSidebarOpened","useAutoSwitchEditorSidebars","showSummary","_tabName","onTabSelect","newSelectedTabId","selectedTabId","onItemChange","BlockManagerCategory","filteredBlockTypes","toggleVisible","nextIsChecked","toggleAllVisible","checkedBlockNames","titleId","isAllChecked","isIndeterminate","indeterminate","BlockTypesChecklist","getCategories","hasBlockSupport","isMatchingSearchTerm","hiddenBlock","registeredBlock","numberOfHiddenBlocks","enableAllBlockTypes","SearchControl","nextSearch","PreferencesModal","PreferencesModalTabs","PreferencesModalSection","PreferenceToggleControl","remainingInterfaceApis","interfaceApis","_registerEntityAction","_unregisterEntityAction","Editor","extraContent","extraSidebarPanels","hasLoadedPost","GlobalStylesProvider","extraSections","showBlockBreadcrumbsOption","sections","tabLabel","PostTaxonomies","EnablePublishSidebarOption","general","appearance","BlockManager"],"sourceRoot":""}