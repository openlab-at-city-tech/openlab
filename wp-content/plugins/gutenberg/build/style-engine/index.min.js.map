{"version":3,"file":"./build/style-engine/index.min.js","mappings":"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","sources":["webpack://wp/webpack/bootstrap","webpack://wp/webpack/runtime/define property getters","webpack://wp/webpack/runtime/hasOwnProperty shorthand","webpack://wp/webpack/runtime/make namespace object","webpack://wp/external window \"lodash\"","webpack://wp/./packages/style-engine/build-module/styles/@wordpress/style-engine/src/styles/constants.ts","webpack://wp/./packages/style-engine/build-module/styles/@wordpress/style-engine/src/styles/utils.ts","webpack://wp/./packages/style-engine/build-module/styles/border/@wordpress/style-engine/src/styles/border/index.ts","webpack://wp/./packages/style-engine/build-module/styles/outline/@wordpress/style-engine/src/styles/outline/index.ts","webpack://wp/./packages/style-engine/build-module/styles/@wordpress/style-engine/src/styles/index.ts","webpack://wp/./packages/style-engine/build-module/styles/color/@wordpress/style-engine/src/styles/color/text.ts","webpack://wp/./packages/style-engine/build-module/styles/color/@wordpress/style-engine/src/styles/color/gradient.ts","webpack://wp/./packages/style-engine/build-module/styles/color/@wordpress/style-engine/src/styles/color/background.ts","webpack://wp/./packages/style-engine/build-module/styles/dimensions/@wordpress/style-engine/src/styles/dimensions/index.ts","webpack://wp/./packages/style-engine/build-module/styles/spacing/@wordpress/style-engine/src/styles/spacing/margin.ts","webpack://wp/./packages/style-engine/build-module/styles/spacing/@wordpress/style-engine/src/styles/spacing/padding.ts","webpack://wp/./packages/style-engine/build-module/styles/typography/@wordpress/style-engine/src/styles/typography/index.ts","webpack://wp/./packages/style-engine/build-module/styles/shadow/@wordpress/style-engine/src/styles/shadow/index.ts","webpack://wp/./packages/style-engine/build-module/@wordpress/style-engine/src/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"lodash\"];","export const VARIABLE_REFERENCE_PREFIX = 'var:';\nexport const VARIABLE_PATH_SEPARATOR_TOKEN_ATTRIBUTE = '|';\nexport const VARIABLE_PATH_SEPARATOR_TOKEN_STYLE = '--';\n","/**\n * External dependencies\n */\nimport { get, kebabCase } from 'lodash';\n\n/**\n * Internal dependencies\n */\nimport type {\n\tCssRulesKeys,\n\tGeneratedCSSRule,\n\tStyle,\n\tBox,\n\tStyleOptions,\n} from '../types';\nimport {\n\tVARIABLE_REFERENCE_PREFIX,\n\tVARIABLE_PATH_SEPARATOR_TOKEN_ATTRIBUTE,\n\tVARIABLE_PATH_SEPARATOR_TOKEN_STYLE,\n} from './constants';\n\n/**\n * Returns a JSON representation of the generated CSS rules.\n *\n * @param  style   Style object.\n * @param  options Options object with settings to adjust how the styles are generated.\n * @param  path    An array of strings representing the path to the style value in the style object.\n * @param  ruleKey A CSS property key.\n *\n * @return GeneratedCSSRule[] CSS rules.\n */\nexport function generateRule(\n\tstyle: Style,\n\toptions: StyleOptions,\n\tpath: string[],\n\truleKey: string\n): GeneratedCSSRule[] {\n\tconst styleValue: string | undefined = get( style, path );\n\n\treturn styleValue\n\t\t? [\n\t\t\t\t{\n\t\t\t\t\tselector: options?.selector,\n\t\t\t\t\tkey: ruleKey,\n\t\t\t\t\tvalue: getCSSVarFromStyleValue( styleValue ),\n\t\t\t\t},\n\t\t  ]\n\t\t: [];\n}\n\n/**\n * Returns a JSON representation of the generated CSS rules taking into account box model properties, top, right, bottom, left.\n *\n * @param  style                Style object.\n * @param  options              Options object with settings to adjust how the styles are generated.\n * @param  path                 An array of strings representing the path to the style value in the style object.\n * @param  ruleKeys             An array of CSS property keys and patterns.\n * @param  individualProperties The \"sides\" or individual properties for which to generate rules.\n *\n * @return GeneratedCSSRule[]  CSS rules.\n */\nexport function generateBoxRules(\n\tstyle: Style,\n\toptions: StyleOptions,\n\tpath: string[],\n\truleKeys: CssRulesKeys,\n\tindividualProperties: string[] = [ 'top', 'right', 'bottom', 'left' ]\n): GeneratedCSSRule[] {\n\tconst boxStyle: Box | string | undefined = get( style, path );\n\tif ( ! boxStyle ) {\n\t\treturn [];\n\t}\n\n\tconst rules: GeneratedCSSRule[] = [];\n\tif ( typeof boxStyle === 'string' ) {\n\t\trules.push( {\n\t\t\tselector: options?.selector,\n\t\t\tkey: ruleKeys.default,\n\t\t\tvalue: boxStyle,\n\t\t} );\n\t} else {\n\t\tconst sideRules = individualProperties.reduce(\n\t\t\t( acc: GeneratedCSSRule[], side: string ) => {\n\t\t\t\tconst value: string | undefined = getCSSVarFromStyleValue(\n\t\t\t\t\tget( boxStyle, [ side ] )\n\t\t\t\t);\n\t\t\t\tif ( value ) {\n\t\t\t\t\tacc.push( {\n\t\t\t\t\t\tselector: options?.selector,\n\t\t\t\t\t\tkey: ruleKeys?.individual.replace(\n\t\t\t\t\t\t\t'%s',\n\t\t\t\t\t\t\tupperFirst( side )\n\t\t\t\t\t\t),\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\treturn acc;\n\t\t\t},\n\t\t\t[]\n\t\t);\n\t\trules.push( ...sideRules );\n\t}\n\n\treturn rules;\n}\n\n/**\n * Returns a CSS var value from incoming style value following the pattern `var:description|context|slug`.\n *\n * @param  styleValue A raw style value.\n *\n * @return string A CSS var value.\n */\nexport function getCSSVarFromStyleValue( styleValue: string ): string {\n\tif (\n\t\ttypeof styleValue === 'string' &&\n\t\tstyleValue.startsWith( VARIABLE_REFERENCE_PREFIX )\n\t) {\n\t\tconst variable = styleValue\n\t\t\t.slice( VARIABLE_REFERENCE_PREFIX.length )\n\t\t\t.split( VARIABLE_PATH_SEPARATOR_TOKEN_ATTRIBUTE )\n\t\t\t.map( ( presetVariable ) => kebabCase( presetVariable ) )\n\t\t\t.join( VARIABLE_PATH_SEPARATOR_TOKEN_STYLE );\n\t\treturn `var(--wp--${ variable })`;\n\t}\n\treturn styleValue;\n}\n\n/**\n * Capitalizes the first letter in a string.\n *\n * @param  string The string whose first letter the function will capitalize.\n *\n * @return String with the first letter capitalized.\n */\nexport function upperFirst( string: string ): string {\n\tconst [ firstLetter, ...rest ] = string;\n\treturn firstLetter.toUpperCase() + rest.join( '' );\n}\n\n/**\n * Converts an array of strings into a camelCase string.\n *\n * @param  strings The strings to join into a camelCase string.\n *\n * @return camelCase string.\n */\nexport function camelCaseJoin( strings: string[] ): string {\n\tconst [ firstItem, ...rest ] = strings;\n\treturn firstItem.toLowerCase() + rest.map( upperFirst ).join( '' );\n}\n","/**\n * Internal dependencies\n */\nimport type { BoxEdge, GenerateFunction, StyleDefinition } from '../../types';\nimport { generateRule, generateBoxRules, camelCaseJoin } from '../utils';\n\n/**\n * Creates a function for generating CSS rules when the style path is the same as the camelCase CSS property used in React.\n *\n * @param  path An array of strings representing the path to the style value in the style object.\n *\n * @return A function that generates CSS rules.\n */\nfunction createBorderGenerateFunction( path: string[] ): GenerateFunction {\n\treturn ( style, options ) =>\n\t\tgenerateRule( style, options, path, camelCaseJoin( path ) );\n}\n\n/**\n * Creates a function for generating border-{top,bottom,left,right}-{color,style,width} CSS rules.\n *\n * @param  edge The edge to create CSS rules for.\n *\n * @return A function that generates CSS rules.\n */\nfunction createBorderEdgeGenerateFunction( edge: BoxEdge ): GenerateFunction {\n\treturn ( style, options ) => {\n\t\treturn [ 'color', 'style', 'width' ].flatMap( ( key ) => {\n\t\t\tconst path = [ 'border', edge, key ];\n\t\t\treturn createBorderGenerateFunction( path )( style, options );\n\t\t} );\n\t};\n}\n\nconst color: StyleDefinition = {\n\tname: 'color',\n\tgenerate: createBorderGenerateFunction( [ 'border', 'color' ] ),\n};\n\nconst radius: StyleDefinition = {\n\tname: 'radius',\n\tgenerate: ( style, options ) => {\n\t\treturn generateBoxRules(\n\t\t\tstyle,\n\t\t\toptions,\n\t\t\t[ 'border', 'radius' ],\n\t\t\t{\n\t\t\t\tdefault: 'borderRadius',\n\t\t\t\tindividual: 'border%sRadius',\n\t\t\t},\n\t\t\t[ 'topLeft', 'topRight', 'bottomLeft', 'bottomRight' ]\n\t\t);\n\t},\n};\n\nconst borderStyle: StyleDefinition = {\n\tname: 'style',\n\tgenerate: createBorderGenerateFunction( [ 'border', 'style' ] ),\n};\n\nconst width: StyleDefinition = {\n\tname: 'width',\n\tgenerate: createBorderGenerateFunction( [ 'border', 'width' ] ),\n};\n\nconst borderTop: StyleDefinition = {\n\tname: 'borderTop',\n\tgenerate: createBorderEdgeGenerateFunction( 'top' ),\n};\n\nconst borderRight: StyleDefinition = {\n\tname: 'borderRight',\n\tgenerate: createBorderEdgeGenerateFunction( 'right' ),\n};\n\nconst borderBottom: StyleDefinition = {\n\tname: 'borderBottom',\n\tgenerate: createBorderEdgeGenerateFunction( 'bottom' ),\n};\n\nconst borderLeft: StyleDefinition = {\n\tname: 'borderLeft',\n\tgenerate: createBorderEdgeGenerateFunction( 'left' ),\n};\n\nexport default [\n\tcolor,\n\tborderStyle,\n\twidth,\n\tradius,\n\tborderTop,\n\tborderRight,\n\tborderBottom,\n\tborderLeft,\n];\n","/**\n * Internal dependencies\n */\nimport type { GeneratedCSSRule, Style, StyleOptions } from '../../types';\nimport { generateRule } from '../utils';\n\nconst color = {\n\tname: 'color',\n\tgenerate: (\n\t\tstyle: Style,\n\t\toptions: StyleOptions,\n\t\tpath: string[] = [ 'outline', 'color' ],\n\t\truleKey: string = 'outlineColor'\n\t): GeneratedCSSRule[] => {\n\t\treturn generateRule( style, options, path, ruleKey );\n\t},\n};\n\nconst offset = {\n\tname: 'offset',\n\tgenerate: (\n\t\tstyle: Style,\n\t\toptions: StyleOptions,\n\t\tpath: string[] = [ 'outline', 'offset' ],\n\t\truleKey: string = 'outlineOffset'\n\t): GeneratedCSSRule[] => {\n\t\treturn generateRule( style, options, path, ruleKey );\n\t},\n};\n\nconst outlineStyle = {\n\tname: 'style',\n\tgenerate: (\n\t\tstyle: Style,\n\t\toptions: StyleOptions,\n\t\tpath: string[] = [ 'outline', 'style' ],\n\t\truleKey: string = 'outlineStyle'\n\t): GeneratedCSSRule[] => {\n\t\treturn generateRule( style, options, path, ruleKey );\n\t},\n};\n\nconst width = {\n\tname: 'width',\n\tgenerate: (\n\t\tstyle: Style,\n\t\toptions: StyleOptions,\n\t\tpath: string[] = [ 'outline', 'width' ],\n\t\truleKey: string = 'outlineWidth'\n\t): GeneratedCSSRule[] => {\n\t\treturn generateRule( style, options, path, ruleKey );\n\t},\n};\n\nexport default [ color, outlineStyle, offset, width ];\n","/**\n * Internal dependencies\n */\nimport border from './border';\nimport color from './color';\nimport dimensions from './dimensions';\nimport shadow from './shadow';\nimport outline from './outline';\nimport spacing from './spacing';\nimport typography from './typography';\n\nexport const styleDefinitions = [\n\t...border,\n\t...color,\n\t...dimensions,\n\t...outline,\n\t...spacing,\n\t...typography,\n\t...shadow,\n];\n","/**\n * Internal dependencies\n */\nimport type { Style, StyleOptions } from '../../types';\nimport { generateRule } from '../utils';\n\nconst text = {\n\tname: 'text',\n\tgenerate: ( style: Style, options: StyleOptions ) => {\n\t\treturn generateRule( style, options, [ 'color', 'text' ], 'color' );\n\t},\n};\n\nexport default text;\n","/**\n * Internal dependencies\n */\nimport type { Style, StyleOptions } from '../../types';\nimport { generateRule } from '../utils';\n\nconst gradient = {\n\tname: 'gradient',\n\tgenerate: ( style: Style, options: StyleOptions ) => {\n\t\treturn generateRule(\n\t\t\tstyle,\n\t\t\toptions,\n\t\t\t[ 'color', 'gradient' ],\n\t\t\t'background'\n\t\t);\n\t},\n};\n\nexport default gradient;\n","/**\n * Internal dependencies\n */\nimport type { Style, StyleOptions } from '../../types';\nimport { generateRule } from '../utils';\n\nconst background = {\n\tname: 'background',\n\tgenerate: ( style: Style, options: StyleOptions ) => {\n\t\treturn generateRule(\n\t\t\tstyle,\n\t\t\toptions,\n\t\t\t[ 'color', 'background' ],\n\t\t\t'backgroundColor'\n\t\t);\n\t},\n};\n\nexport default background;\n","/**\n * Internal dependencies\n */\nimport type { Style, StyleOptions } from '../../types';\nimport { generateRule } from '../utils';\n\nconst minHeight = {\n\tname: 'minHeight',\n\tgenerate: ( style: Style, options: StyleOptions ) => {\n\t\treturn generateRule(\n\t\t\tstyle,\n\t\t\toptions,\n\t\t\t[ 'dimensions', 'minHeight' ],\n\t\t\t'minHeight'\n\t\t);\n\t},\n};\n\nexport default [ minHeight ];\n","/**\n * Internal dependencies\n */\nimport type { Style, StyleOptions } from '../../types';\nimport { generateBoxRules } from '../utils';\n\nconst margin = {\n\tname: 'margin',\n\tgenerate: ( style: Style, options: StyleOptions ) => {\n\t\treturn generateBoxRules( style, options, [ 'spacing', 'margin' ], {\n\t\t\tdefault: 'margin',\n\t\t\tindividual: 'margin%s',\n\t\t} );\n\t},\n};\n\nexport default margin;\n","/**\n * Internal dependencies\n */\nimport type { Style, StyleOptions } from '../../types';\nimport { generateBoxRules } from '../utils';\n\nconst padding = {\n\tname: 'padding',\n\tgenerate: ( style: Style, options: StyleOptions ) => {\n\t\treturn generateBoxRules( style, options, [ 'spacing', 'padding' ], {\n\t\t\tdefault: 'padding',\n\t\t\tindividual: 'padding%s',\n\t\t} );\n\t},\n};\n\nexport default padding;\n","/**\n * Internal dependencies\n */\nimport type { Style, StyleOptions } from '../../types';\nimport { generateRule } from '../utils';\n\nconst fontSize = {\n\tname: 'fontSize',\n\tgenerate: ( style: Style, options: StyleOptions ) => {\n\t\treturn generateRule(\n\t\t\tstyle,\n\t\t\toptions,\n\t\t\t[ 'typography', 'fontSize' ],\n\t\t\t'fontSize'\n\t\t);\n\t},\n};\n\nconst fontStyle = {\n\tname: 'fontStyle',\n\tgenerate: ( style: Style, options: StyleOptions ) => {\n\t\treturn generateRule(\n\t\t\tstyle,\n\t\t\toptions,\n\t\t\t[ 'typography', 'fontStyle' ],\n\t\t\t'fontStyle'\n\t\t);\n\t},\n};\n\nconst fontWeight = {\n\tname: 'fontWeight',\n\tgenerate: ( style: Style, options: StyleOptions ) => {\n\t\treturn generateRule(\n\t\t\tstyle,\n\t\t\toptions,\n\t\t\t[ 'typography', 'fontWeight' ],\n\t\t\t'fontWeight'\n\t\t);\n\t},\n};\n\nconst fontFamily = {\n\tname: 'fontFamily',\n\tgenerate: ( style: Style, options: StyleOptions ) => {\n\t\treturn generateRule(\n\t\t\tstyle,\n\t\t\toptions,\n\t\t\t[ 'typography', 'fontFamily' ],\n\t\t\t'fontFamily'\n\t\t);\n\t},\n};\n\nconst letterSpacing = {\n\tname: 'letterSpacing',\n\tgenerate: ( style: Style, options: StyleOptions ) => {\n\t\treturn generateRule(\n\t\t\tstyle,\n\t\t\toptions,\n\t\t\t[ 'typography', 'letterSpacing' ],\n\t\t\t'letterSpacing'\n\t\t);\n\t},\n};\n\nconst lineHeight = {\n\tname: 'letterSpacing',\n\tgenerate: ( style: Style, options: StyleOptions ) => {\n\t\treturn generateRule(\n\t\t\tstyle,\n\t\t\toptions,\n\t\t\t[ 'typography', 'lineHeight' ],\n\t\t\t'lineHeight'\n\t\t);\n\t},\n};\n\nconst textDecoration = {\n\tname: 'textDecoration',\n\tgenerate: ( style: Style, options: StyleOptions ) => {\n\t\treturn generateRule(\n\t\t\tstyle,\n\t\t\toptions,\n\t\t\t[ 'typography', 'textDecoration' ],\n\t\t\t'textDecoration'\n\t\t);\n\t},\n};\n\nconst textTransform = {\n\tname: 'textTransform',\n\tgenerate: ( style: Style, options: StyleOptions ) => {\n\t\treturn generateRule(\n\t\t\tstyle,\n\t\t\toptions,\n\t\t\t[ 'typography', 'textTransform' ],\n\t\t\t'textTransform'\n\t\t);\n\t},\n};\n\nexport default [\n\tfontFamily,\n\tfontSize,\n\tfontStyle,\n\tfontWeight,\n\tletterSpacing,\n\tlineHeight,\n\ttextDecoration,\n\ttextTransform,\n];\n","/**\n * Internal dependencies\n */\nimport type { Style, StyleOptions } from '../../types';\nimport { generateRule } from '../utils';\n\nconst shadow = {\n\tname: 'shadow',\n\tgenerate: ( style: Style, options: StyleOptions ) => {\n\t\treturn generateRule( style, options, [ 'shadow' ], 'boxShadow' );\n\t},\n};\n\nexport default [ shadow ];\n","/**\n * External dependencies\n */\nimport { groupBy, kebabCase } from 'lodash';\n\n/**\n * Internal dependencies\n */\nimport type {\n\tStyle,\n\tStyleOptions,\n\tGeneratedCSSRule,\n\tStyleDefinition,\n} from './types';\nimport { styleDefinitions } from './styles';\n\n/**\n * Generates a stylesheet for a given style object and selector.\n *\n * @since 6.1.0 Introduced in WordPress core.\n *\n * @param  style   Style object, for example, the value of a block's attributes.style object or the top level styles in theme.json\n * @param  options Options object with settings to adjust how the styles are generated.\n *\n * @return A generated stylesheet or inline style declarations.\n */\nexport function compileCSS( style: Style, options: StyleOptions = {} ): string {\n\tconst rules = getCSSRules( style, options );\n\n\t// If no selector is provided, treat generated rules as inline styles to be returned as a single string.\n\tif ( ! options?.selector ) {\n\t\tconst inlineRules: string[] = [];\n\t\trules.forEach( ( rule ) => {\n\t\t\tinlineRules.push( `${ kebabCase( rule.key ) }: ${ rule.value };` );\n\t\t} );\n\t\treturn inlineRules.join( ' ' );\n\t}\n\n\tconst groupedRules = groupBy( rules, 'selector' );\n\tconst selectorRules = Object.keys( groupedRules ).reduce(\n\t\t( acc: string[], subSelector: string ) => {\n\t\t\tacc.push(\n\t\t\t\t`${ subSelector } { ${ groupedRules[ subSelector ]\n\t\t\t\t\t.map(\n\t\t\t\t\t\t( rule: GeneratedCSSRule ) =>\n\t\t\t\t\t\t\t`${ kebabCase( rule.key ) }: ${ rule.value };`\n\t\t\t\t\t)\n\t\t\t\t\t.join( ' ' ) } }`\n\t\t\t);\n\t\t\treturn acc;\n\t\t},\n\t\t[]\n\t);\n\n\treturn selectorRules.join( '\\n' );\n}\n\n/**\n * Returns a JSON representation of the generated CSS rules.\n *\n * @since 6.1.0 Introduced in WordPress core.\n *\n * @param  style   Style object, for example, the value of a block's attributes.style object or the top level styles in theme.json\n * @param  options Options object with settings to adjust how the styles are generated.\n *\n * @return A collection of objects containing the selector, if any, the CSS property key (camelcase) and parsed CSS value.\n */\nexport function getCSSRules(\n\tstyle: Style,\n\toptions: StyleOptions = {}\n): GeneratedCSSRule[] {\n\tconst rules: GeneratedCSSRule[] = [];\n\tstyleDefinitions.forEach( ( definition: StyleDefinition ) => {\n\t\tif ( typeof definition.generate === 'function' ) {\n\t\t\trules.push( ...definition.generate( style, options ) );\n\t\t}\n\t} );\n\n\treturn rules;\n}\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","window","VARIABLE_REFERENCE_PREFIX","generateRule","style","options","path","ruleKey","styleValue","selector","getCSSVarFromStyleValue","generateBoxRules","ruleKeys","individualProperties","boxStyle","rules","push","default","sideRules","reduce","acc","side","individual","replace","upperFirst","startsWith","slice","length","split","map","presetVariable","kebabCase","join","string","firstLetter","rest","toUpperCase","createBorderGenerateFunction","strings","firstItem","toLowerCase","camelCaseJoin","createBorderEdgeGenerateFunction","edge","flatMap","radius","name","generate","color","offset","outlineStyle","width","styleDefinitions","compileCSS","getCSSRules","inlineRules","forEach","rule","groupedRules","groupBy","selectorRules","keys","subSelector"],"sourceRoot":""}