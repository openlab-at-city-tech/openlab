{"version":3,"file":"index.js","mappings":"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","sources":["webpack://wds-citytech/./src/components/post-sharing-options.js","webpack://wds-citytech/external window \"React\"","webpack://wds-citytech/external window [\"wp\",\"components\"]","webpack://wds-citytech/external window [\"wp\",\"data\"]","webpack://wds-citytech/external window [\"wp\",\"editPost\"]","webpack://wds-citytech/external window [\"wp\",\"plugins\"]","webpack://wds-citytech/webpack/bootstrap","webpack://wds-citytech/webpack/runtime/compat get default export","webpack://wds-citytech/webpack/runtime/define property getters","webpack://wds-citytech/webpack/runtime/hasOwnProperty shorthand","webpack://wds-citytech/webpack/runtime/make namespace object","webpack://wds-citytech/./src/index.js"],"sourcesContent":["/* global openlabBlocksPostVisibility */\n\nimport { VisuallyHidden } from '@wordpress/components'\nimport { PluginDocumentSettingPanel } from '@wordpress/edit-post'\nimport { registerPlugin } from '@wordpress/plugins'\nimport { useDispatch, useSelect } from '@wordpress/data'\n\nconst PostSharingOptions = ({}) => {\n\tconst { blogPublic, shareOnlyWithGroup } = openlabBlocksPostVisibility\n\n\tconst { editPost } = useDispatch( 'core/editor' )\n\n\tconst blogPublicInt = parseInt( blogPublic )\n\n\tconst { postVisibility } = useSelect( ( select ) => {\n\t\tconst postMeta = select( 'core/editor' ).getEditedPostAttribute( 'meta' )\n\n\t\tconst defaultVisibility = blogPublicInt >= 0 ? 'default' : 'members-only'\n\n\t\treturn {\n\t\t\tpostVisibility: postMeta.openlab_post_visibility || defaultVisibility\n\t\t}\n\t} )\n\n\tif ( blogPublicInt < -1 ) {\n\t\treturn null\n\t}\n\n\tconst onChange = ( value ) => {\n\t\teditPost( { meta: { 'openlab_post_visibility': value } } )\n\t}\n\n\tconst publicOverrideString = 'This will override the Public visibility setting above.'\n\n\tconst visibilityOptions = [\n\t\t{\n\t\t\tvalue: 'group-members-only',\n\t\t\tlabel: 'Site Members',\n\t\t\tinfo: shareOnlyWithGroup + ' ' + publicOverrideString\n\t\t},\n\t\t{\n\t\t\tvalue: 'members-only',\n\t\t\tlabel: 'OpenLab members only',\n\t\t\tinfo: 'Only logged-in OpenLab members can see this post. ' + publicOverrideString\n\t\t}\n\t]\n\n\tif ( blogPublicInt >= 0 ) {\n\t\tvisibilityOptions.push( {\n\t\t\tvalue: 'default',\n\t\t\tlabel: 'Everyone',\n\t\t\tinfo: 'Everyone who can view this site can see this post.'\n\t\t} )\n\t}\n\n\treturn (\n\t\t<PluginDocumentSettingPanel\n\t\t\tname=\"post-sharing-options\"\n\t\t\ttitle=\"More visibility options\"\n\t\t\tclassName=\"post-sharing-options\"\n\t\t>\n\t\t\t<fieldset className=\"editor-post-visibility__fieldset\">\n\t\t\t\t<VisuallyHidden as=\"legend\">\n\t\t\t\t\tSharing\n\t\t\t\t</VisuallyHidden>\n\n\t\t\t\t<p>{ 'Control who can see this post.' }</p>\n\n\t\t\t\t{ visibilityOptions.map( ( option ) => (\n\t\t\t\t\t<PostSharingChoice\n\t\t\t\t\t\tkey={ option.value }\n\t\t\t\t\t\tinstanceId=\"post-sharing-options\"\n\t\t\t\t\t\tvalue={ option.value }\n\t\t\t\t\t\tlabel={ option.label }\n\t\t\t\t\t\tinfo={ option.info }\n\t\t\t\t\t\tonChange={ ( event ) => onChange( event.target.value ) }\n\t\t\t\t\t\tchecked={ postVisibility === option.value }\n\t\t\t\t\t/>\n\t\t\t\t) ) }\n\t\t\t</fieldset>\n\t\t</PluginDocumentSettingPanel>\n\t)\n}\n\nfunction PostSharingChoice( { instanceId, value, label, info, ...props } ) {\n\treturn (\n\t\t<div className=\"editor-post-visibility__choice\">\n\t\t\t<input\n\t\t\t\ttype=\"radio\"\n\t\t\t\tname={ `editor-post-visibility__setting-${ instanceId }` }\n\t\t\t\tvalue={ value }\n\t\t\t\tid={ `editor-post-${ value }-${ instanceId }` }\n\t\t\t\taria-describedby={ `editor-post-${ value }-${ instanceId }-description` }\n\t\t\t\tclassName=\"editor-post-visibility__radio\"\n\t\t\t\t{ ...props }\n\t\t\t/>\n\t\t\t<label\n\t\t\t\thtmlFor={ `editor-post-${ value }-${ instanceId }` }\n\t\t\t\tclassName=\"editor-post-visibility__label\"\n\t\t\t>\n\t\t\t\t{ label }\n\t\t\t</label>\n\t\t\t<p\n\t\t\t\tid={ `editor-post-${ value }-${ instanceId }-description` }\n\t\t\t\tclassName=\"editor-post-visibility__info\"\n\t\t\t>\n\t\t\t\t{ info }\n\t\t\t</p>\n\t\t</div>\n\t);\n}\n\nregisterPlugin(\n\t'post-sharing-options',\n\t{ render: PostSharingOptions }\n)\n","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"editPost\"];","module.exports = window[\"wp\"][\"plugins\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","//import './blocks/openlab-help'\n//import './blocks/openlab-support'\n\nimport './components/post-sharing-options'\n"],"names":["VisuallyHidden","PluginDocumentSettingPanel","registerPlugin","useDispatch","useSelect","PostSharingOptions","blogPublic","shareOnlyWithGroup","openlabBlocksPostVisibility","editPost","blogPublicInt","parseInt","postVisibility","select","postMeta","getEditedPostAttribute","defaultVisibility","openlab_post_visibility","onChange","value","meta","publicOverrideString","visibilityOptions","label","info","push","createElement","name","title","className","as","map","option","PostSharingChoice","key","instanceId","event","target","checked","props","type","id","htmlFor","render"],"sourceRoot":""}