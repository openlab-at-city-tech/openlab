{"version":3,"file":"index.js","mappings":"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","sources":["webpack://wds-citytech/./src/components/post-sharing-options.js","webpack://wds-citytech/external window \"React\"","webpack://wds-citytech/external window [\"wp\",\"components\"]","webpack://wds-citytech/external window [\"wp\",\"data\"]","webpack://wds-citytech/external window [\"wp\",\"editPost\"]","webpack://wds-citytech/external window [\"wp\",\"plugins\"]","webpack://wds-citytech/webpack/bootstrap","webpack://wds-citytech/webpack/runtime/compat get default export","webpack://wds-citytech/webpack/runtime/define property getters","webpack://wds-citytech/webpack/runtime/hasOwnProperty shorthand","webpack://wds-citytech/webpack/runtime/make namespace object","webpack://wds-citytech/./src/index.js"],"sourcesContent":["/* global openlabBlocksPostVisibility */\n\nimport { VisuallyHidden } from '@wordpress/components';\nimport { PluginDocumentSettingPanel } from '@wordpress/edit-post';\nimport { registerPlugin } from '@wordpress/plugins';\nimport { useDispatch, useSelect } from '@wordpress/data';\n\nconst PostSharingOptions = () => {\n  const { blogPublic, shareOnlyWithGroup } = openlabBlocksPostVisibility;\n  const { editPost } = useDispatch( 'core/editor' );\n\n  const blogPublicInt = parseInt( blogPublic );\n\n  const { postVisibility } = useSelect( ( selectObj ) => {\n    const postMeta = selectObj( 'core/editor' ).getEditedPostAttribute( 'meta' );\n    const defaultVisibility = blogPublicInt >= 0 ? 'default' : 'members-only';\n\n    return {\n      postVisibility: postMeta.openlab_post_visibility || defaultVisibility,\n    };\n  }, [ blogPublicInt ] );\n\tconsole.log(postVisibility, blogPublicInt);\n\n  if ( blogPublicInt < -1 ) {\n    return null;\n  }\n\n  const onChange = ( value ) => {\n    editPost( { meta: { 'openlab_post_visibility': value } } );\n  };\n\n  const publicOverrideString = 'This will override the Public visibility setting above.';\n\n  const visibilityOptions = [\n    {\n      value: 'group-members-only',\n      label: 'Site Members',\n      info: shareOnlyWithGroup + ' ' + publicOverrideString,\n    },\n    {\n      value: 'members-only',\n      label: 'OpenLab members only',\n      info: 'Only logged-in OpenLab members can see this post. ' + publicOverrideString,\n    },\n  ];\n\n  if ( blogPublicInt >= 0 ) {\n    visibilityOptions.push({\n      value: 'default',\n      label: 'Everyone',\n      info: 'Everyone who can view this site can see this post.',\n    });\n  }\n\n  return (\n    <PluginDocumentSettingPanel\n      name=\"post-sharing-options\"\n      title=\"More visibility options\"\n      className=\"post-sharing-options\"\n    >\n      <fieldset className=\"editor-post-visibility__fieldset\">\n        <VisuallyHidden as=\"legend\">Sharing</VisuallyHidden>\n\n        <p>Control who can see this post.</p>\n\n        { visibilityOptions.map( ( option ) => (\n          <PostSharingChoice\n            key={ option.value }\n            instanceId=\"post-sharing-options\"\n            value={ option.value }\n            label={ option.label }\n            info={ option.info }\n            onChange={ ( event ) => onChange( event.target.value ) }\n            checked={ postVisibility === option.value }\n          />\n        )) }\n      </fieldset>\n    </PluginDocumentSettingPanel>\n  );\n};\n\nfunction PostSharingChoice( { instanceId, value, label, info, ...props } ) {\n  return (\n    <div className=\"editor-post-visibility__choice\">\n      <input\n        type=\"radio\"\n        name={ `editor-post-visibility__setting-${ instanceId }` }\n        value={ value }\n        id={ `editor-post-${ value }-${ instanceId }` }\n        aria-describedby={ `editor-post-${ value }-${ instanceId }-description` }\n        className=\"editor-post-visibility__radio\"\n        { ...props }\n      />\n      <label\n        htmlFor={ `editor-post-${ value }-${ instanceId }` }\n        className=\"editor-post-visibility__label\"\n      >\n        { label }\n      </label>\n      <p\n        id={ `editor-post-${ value }-${ instanceId }-description` }\n        className=\"editor-post-visibility__info\"\n      >\n        { info }\n      </p>\n    </div>\n  );\n}\n\nconst OpenlabPostVisibilityPlugin = () => {\n  const isSiteEditor = useSelect( ( select ) => {\n    const editSite = select( 'core/edit-site' );\n    return !!editSite;\n  }, [] );\n\n  return !isSiteEditor && <PostSharingOptions />;\n};\n\nconst registerPostVisibility = () => {\n  registerPlugin( 'post-sharing-options', {\n    render: OpenlabPostVisibilityPlugin,\n    icon: 'visibility',\n  } );\n};\n\nwp.domReady( registerPostVisibility );\n","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"editPost\"];","module.exports = window[\"wp\"][\"plugins\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","//import './blocks/openlab-help'\n//import './blocks/openlab-support'\n\nimport './components/post-sharing-options'\n"],"names":["VisuallyHidden","PluginDocumentSettingPanel","registerPlugin","useDispatch","useSelect","PostSharingOptions","blogPublic","shareOnlyWithGroup","openlabBlocksPostVisibility","editPost","blogPublicInt","parseInt","postVisibility","selectObj","postMeta","getEditedPostAttribute","defaultVisibility","openlab_post_visibility","console","log","onChange","value","meta","publicOverrideString","visibilityOptions","label","info","push","createElement","name","title","className","as","map","option","PostSharingChoice","key","instanceId","event","target","checked","props","type","id","htmlFor","OpenlabPostVisibilityPlugin","isSiteEditor","select","editSite","registerPostVisibility","render","icon","wp","domReady"],"sourceRoot":""}