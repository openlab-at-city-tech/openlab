{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./assets/blocks/editor-sidebar/post-sidebar.jsx"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","wpI18n","wpPlugins","wpElement","wpData","wpComponents","wpEditPost","__","registerPlugin","Component","Fragment","select","withSelect","withDispatch","PanelBody","ButtonGroup","Button","PluginSidebar","PluginSidebarMoreMenuItem","compose","sidebarTitle","VISUAL_GUIDE_SETTINGS","EDITOR_WIDTH_SETTINGS","AdvSidebar","AdvSidebarRender","wp","i18n","plugins","element","data","components","editPost","label","arguments","metaData","this","props","metaValues","updateMetaField","meta","postMetaData","getEditedPostAttribute","advgb_blocks_editor_width","advgb_blocks_columns_visual_guide","bodyClass","window","document","body","classList","remove","add","advg_settings","editor_width_global","enable_columns_visual_guide_global","updateBodyClass","columnsVisualGuide","editorWidth","className","title","map","setting","index","isSecondary","isPrimary","onClick","onUpdateMeta","undefined","advgbBlocks","enable_advgb_blocks","initialOpen","dispatch","render","target","icon"],"mappings":"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","file":"post-sidebar.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","(function ( wpI18n, wpPlugins, wpElement, wpData, wpComponents, wpEditPost ) {\n    const { __ } = wpI18n;\n    const { registerPlugin } = wpPlugins;\n    const { Component, Fragment } = wpElement;\n    const { select, withSelect, withDispatch } = wpData;\n    const { PanelBody, ButtonGroup, Button } = wpComponents;\n    const { PluginSidebar, PluginSidebarMoreMenuItem } = wpEditPost;\n    const { compose } = wp.compose;\n\n    const sidebarName  = \"advgb-editor-sidebar\";\n    const sidebarTitle = __( 'PublishPress Blocks Settings', 'advanced-gutenberg' );\n    const sidebarIcon  = \"layout\";\n    const VISUAL_GUIDE_SETTINGS = [\n        { label: __( 'Inherit from global settings', 'advanced-gutenberg' ), value: '' },\n        { label: __( 'Enable', 'advanced-gutenberg' ), value: 'enable' },\n        { label: __( 'Disable', 'advanced-gutenberg' ), value: 'disable' },\n    ];\n    const EDITOR_WIDTH_SETTINGS = [\n        { label: __( 'Inherit from global settings', 'advanced-gutenberg' ), value: '' },\n        { label: __( 'Original', 'advanced-gutenberg' ), value: 'default' },\n        { label: __( 'Large', 'advanced-gutenberg' ), value: 'large' },\n        { label: __( 'Full width', 'advanced-gutenberg' ), value: 'full' },\n    ];\n\n    const updateBodyClass = function () {\n        const postMetaData = select( 'core/editor' ).getEditedPostAttribute( 'meta' );\n        if (!postMetaData) return null;\n        const { advgb_blocks_editor_width, advgb_blocks_columns_visual_guide } = postMetaData;\n        const bodyClass = window.document.body.classList;\n\n        bodyClass.remove(\n            'advgb-editor-width-default',\n            'advgb-editor-width-large',\n            'advgb-editor-width-full',\n            'advgb-editor-col-guide-enable',\n            'advgb-editor-col-guide-disable',\n        );\n\n        // Editor width\n        if (!!advgb_blocks_editor_width) {\n            bodyClass.add( 'advgb-editor-width-' + advgb_blocks_editor_width );\n        } else {\n            // Global\n            bodyClass.add( 'advgb-editor-width-' + advg_settings.editor_width_global );\n        }\n\n        // Columns visual guide\n        if (!!advgb_blocks_columns_visual_guide) {\n            bodyClass.add( 'advgb-editor-col-guide-' + advgb_blocks_columns_visual_guide );\n        } else {\n            // Global\n            bodyClass.add( 'advgb-editor-col-guide-' + advg_settings.enable_columns_visual_guide_global );\n        }\n    };\n\n    // Line below stopped working - https://github.com/WordPress/gutenberg/issues/28032#issuecomment-759723289\n    // window.document.addEventListener(\"DOMContentLoaded\", updateBodyClass);\n\n    class AdvSidebar extends Component {\n        constructor() {\n            super( ...arguments );\n        }\n\n        onUpdateMeta( metaData ) {\n            const { metaValues, updateMetaField } = this.props;\n            const meta = { ...metaValues, ...metaData };\n\n            updateMetaField( meta );\n            updateBodyClass();\n        }\n\n        render() {\n            const { columnsVisualGuide, editorWidth } = this.props;\n\n            return (\n                <Fragment>\n                    <div className=\"advgb-editor-sidebar-note\">\n                        { __( 'These settings will override the PublishPress Blocks global settings.', 'advanced-gutenberg' ) }\n                    </div>\n                    <PanelBody title={ __( 'Editor width', 'advanced-gutenberg' ) }>\n                        <div className=\"advgb-editor-sidebar-note\">\n                            { __( 'Change your editor width', 'advanced-gutenberg' ) }\n                        </div>\n                        <ButtonGroup className=\"advgb-button-group\">\n                            {EDITOR_WIDTH_SETTINGS.map((setting, index) => (\n                                <Button className=\"advgb-button\"\n                                        key={ index }\n                                        isSecondary={ setting.value !== editorWidth }\n                                        isPrimary={ setting.value === editorWidth }\n                                        onClick={ () => this.onUpdateMeta( { advgb_blocks_editor_width: setting.value } ) }\n                                >\n                                    { setting.label }\n                                </Button>\n                            ) ) }\n                        </ButtonGroup>\n                    </PanelBody>\n                    { advgbBlocks.enable_advgb_blocks !== undefined && advgbBlocks.enable_advgb_blocks === '1' &&\n                        <PanelBody title={ __( 'Columns Visual Guide', 'advanced-gutenberg' ) } initialOpen={ false }>\n                            <div className=\"advgb-editor-sidebar-note\">\n                                { __( 'Border to materialize PublishPress Blocks Column block', 'advanced-gutenberg' ) }\n                            </div>\n                            <ButtonGroup className=\"advgb-button-group\">\n                                {VISUAL_GUIDE_SETTINGS.map((setting, index) => (\n                                    <Button className=\"advgb-button\"\n                                            key={ index }\n                                            isSecondary={ setting.value !== columnsVisualGuide }\n                                            isPrimary={ setting.value === columnsVisualGuide }\n                                            onClick={ () => this.onUpdateMeta( { advgb_blocks_columns_visual_guide: setting.value } ) }\n                                    >\n                                        { setting.label }\n                                    </Button>\n                                ) ) }\n                            </ButtonGroup>\n                        </PanelBody>\n                    }\n                </Fragment>\n            )\n        }\n    }\n\n    const AdvSidebarRender = compose(\n        withDispatch( ( dispatch ) => {\n            return {\n                updateMetaField: ( data ) => {\n                    dispatch( 'core/editor' ).editPost(\n                        { meta: data }\n                    );\n                },\n            }\n        } ),\n        withSelect( ( select ) => {\n            const metaValues = select( 'core/editor' ).getEditedPostAttribute( 'meta' );\n\n            return {\n                metaValues: metaValues,\n                columnsVisualGuide: metaValues.advgb_blocks_columns_visual_guide,\n                editorWidth: metaValues.advgb_blocks_editor_width,\n            }\n        } )\n    )( AdvSidebar );\n\n    registerPlugin( 'advgb-editor-sidebar', {\n        render: function () {\n            return (\n                <Fragment>\n                    <PluginSidebarMoreMenuItem\n                        target={ sidebarName }\n                        icon={ sidebarIcon }\n                    >\n                        { sidebarTitle }\n                    </PluginSidebarMoreMenuItem>\n                    <PluginSidebar\n                        name={ sidebarName }\n                        title={ sidebarTitle }\n                        icon={ sidebarIcon }\n                    >\n                        <div className=\"advgb-editor-sidebar-content\">\n                            <AdvSidebarRender />\n                        </div>\n                    </PluginSidebar>\n                </Fragment>\n            )\n        }\n    } );\n})( wp.i18n, wp.plugins, wp.element, wp.data, wp.components, wp.editPost );\n"],"sourceRoot":""}