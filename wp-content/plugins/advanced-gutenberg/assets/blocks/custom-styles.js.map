{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./assets/blocks/customstyles/custom-styles.jsx"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","wpI18n","wpHooks","wpBlocks","wpBlockEditor","wpComponents","wpCompose","wp","blockEditor","editor","addFilter","__","hasBlockSupport","InspectorControls","SelectControl","createHigherOrderComponent","SUPPORTED_BLOCKS","settings","includes","attributes","customStyle","type","identifyColor","advgbBlocks","customStyles","unshift","id","label","BlockEdit","props","isSelected","className","style","background","verticalAlign","borderRadius","border","width","height","display","marginLeft","help","options","map","cstyle","index","title","onChange","filter","setAttributes","backgroundColor","undefined","textColor","fontSize","extraProps","blockType","trim","withStyleClasses","BlockListBlock","hooks","i18n","blocks","components","compose"],"mappings":"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","file":"custom-styles.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","(function ( wpI18n, wpHooks, wpBlocks, wpBlockEditor, wpComponents, wpCompose ) {\n    wpBlockEditor = wp.blockEditor || wp.editor;\n    const { addFilter } = wpHooks;\n    const { __ } = wpI18n;\n    const { hasBlockSupport } = wpBlocks;\n    const { InspectorControls } = wpBlockEditor;\n    const { SelectControl } = wpComponents;\n    const { createHigherOrderComponent } = wpCompose;\n\n    const SUPPORTED_BLOCKS = [\n        'core/paragraph',\n        'core/heading',\n        'core/list',\n        'core/code',\n        'core/preformatted',\n        'core/table',\n        'core/columns',\n        'core/column',\n        'core/group',\n        'core/image',\n    ];\n\n\n    // Register custom styles to blocks attributes\n    addFilter( 'blocks.registerBlockType', 'advgb/registerCustomStyleClass', function ( settings ) {\n        if (SUPPORTED_BLOCKS.includes( settings.name )) {\n            settings.attributes = Object.assign( settings.attributes, {\n                customStyle: {\n                    type: 'string'\n                },\n                identifyColor: {\n                    type: 'string'\n                }\n            } );\n        }\n\n        return settings;\n    } );\n\n    // Add option to return to default style\n    if (typeof advgbBlocks.customStyles !== 'undefined' && advgbBlocks.customStyles) {\n        advgbBlocks.customStyles.unshift( {\n            id: 0,\n            label: __( 'Select a block style', 'advanced-gutenberg' ),\n            value: '',\n            identifyColor: ''\n        } );\n    }\n\n    // Add option to select custom styles for supported blocks\n    addFilter( 'editor.BlockEdit', 'advgb/customStyles', function ( BlockEdit ) {\n        return ( props ) => {\n            return ( [\n                <BlockEdit key=\"block-edit-custom-class-name\" {...props} />,\n                props.isSelected && SUPPORTED_BLOCKS.includes( props.name ) &&\n                <InspectorControls key=\"advgb-custom-controls\">\n                    <div className=\"advgb-custom-styles-wrapper\">\n                        <SelectControl\n                            label={ [\n                                __( 'Block styles', 'advanced-gutenberg' ),\n                                <span className={'components-panel__color-area'}\n                                      key=\"customstyle-identify\"\n                                      style={ {\n                                          background: props.attributes.identifyColor,\n                                          verticalAlign: 'text-bottom',\n                                          borderRadius: '50%',\n                                          border: 'none',\n                                          width: '16px',\n                                          height: '16px',\n                                          display: 'inline-block',\n                                          marginLeft: '10px',\n                                      } } />\n                            ] }\n                            help={__( 'This option let you add custom style for the current block', 'advanced-gutenberg' )}\n                            value={props.attributes.customStyle}\n                            options={advgbBlocks.customStyles.map( ( cstyle, index ) => {\n                                if (cstyle.title) advgbBlocks.customStyles[ index ].label = cstyle.title;\n                                if (cstyle.name) advgbBlocks.customStyles[ index ].value = cstyle.name;\n\n                                return cstyle;\n                            } )}\n                            onChange={( cstyle ) => {\n                                const { identifyColor } = advgbBlocks.customStyles.filter( ( style ) => style.value === cstyle )[0];\n                                props.setAttributes( {\n                                    customStyle: cstyle,\n                                    identifyColor: identifyColor,\n                                    backgroundColor: undefined,\n                                    textColor: undefined,\n                                    fontSize: undefined,\n                                } );\n                            }}\n                        />\n                    </div>\n                </InspectorControls>\n            ] )\n        }\n    } );\n\n    // Apply custom styles on front-end\n    addFilter( 'blocks.getSaveContent.extraProps', 'advgb/loadFrontendCustomStyles', function ( extraProps, blockType, attributes ) {\n        if (hasBlockSupport( blockType, 'customStyle', true ) && attributes.customStyle) {\n            if (typeof extraProps.className === 'undefined') {\n                extraProps.className = attributes.customStyle;\n            } else {\n                extraProps.className += ' ' + attributes.customStyle;\n                extraProps.className = extraProps.className.trim();\n            }\n        }\n\n        return extraProps;\n    } );\n\n\n    const withStyleClasses = createHigherOrderComponent( ( BlockListBlock ) => {\n        return ( props ) => {\n            if ( ! SUPPORTED_BLOCKS.includes( props.name ) || !hasBlockSupport( props.name, 'customStyle', true ) ) {\n                return <BlockListBlock { ...props } />\n            }\n\n            const {\n                customStyle,\n            } = props.attributes;\n\n            return <BlockListBlock { ...props } className={ `${ customStyle }` } />;\n        };\n    }, 'withStyleClasses' );\n\n    // Apply custom styles on back-end\n    wp.hooks.addFilter( 'editor.BlockListBlock', 'advgb/loadBackendCustomStyles', withStyleClasses );\n\n})( wp.i18n, wp.hooks, wp.blocks, wp.blockEditor, wp.components, wp.compose );\n"],"sourceRoot":""}