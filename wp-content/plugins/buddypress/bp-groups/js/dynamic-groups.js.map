{"version":3,"sources":["bp-groups/js/dynamic-groups.js"],"names":["wp","i18n","__","sprintf","bp","dynamicWidgetBlock","bpGroupsWidgetBlock","groups","container","type","tmpl","selector","document","querySelector","output","length","forEach","group","created_since","extra","total_member_count","membersCount","parseInt","last_activity_diff","avatar_alt","name","innerHTML","blocks","block","i","query_args","list","closest","querySelectorAll","navItem","addEventListener","event","preventDefault","target","classList","remove","add","newType","getAttribute","settings","window","bpDynamicGroupsSettings","bpDynamicGroupsBlocks","bpDynamicGroups","readyState","start"],"mappings":"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","file":"dynamic-groups.js","sourceRoot":"../src/js","sourcesContent":["/**\n * WordPress dependencies\n */\nconst {\n\ti18n: {\n\t\t__,\n\t\tsprintf,\n\t},\n} = wp;\n\n/**\n * BuddyPress dependencies.\n */\nconst {\n\tdynamicWidgetBlock,\n} = bp;\n\n/**\n * Front-end Dynamic Groups Widget Block class.\n *\n * @since 9.0.0\n */\nclass bpGroupsWidgetBlock extends dynamicWidgetBlock {\n\tloop( groups = [], container = '', type = 'active' ) {\n\t\tconst tmpl = super.useTemplate( 'bp-dynamic-groups-item' );\n\t\tconst selector = document.querySelector( '#' + container );\n\t\tlet output = '';\n\n\t\tif ( groups && groups.length ) {\n\t\t\tgroups.forEach( ( group ) => {\n\t\t\t\tif ( 'newest' === type && group.created_since ) {\n\t\t\t\t\t/* translators: %s is time elapsed since the group was created */\n\t\t\t\t\tgroup.extra = sprintf( __( 'Created %s', 'buddypress' ), group.created_since );\n\t\t\t\t} else if ( 'popular' === type && group.total_member_count ) {\n\t\t\t\t\tconst membersCount = parseInt( group.total_member_count, 10 );\n\n\t\t\t\t\tif ( 0 === membersCount ) {\n\t\t\t\t\t\tgroup.extra = __( 'No members', 'buddypress' );\n\t\t\t\t\t} else if ( 1 === membersCount ) {\n\t\t\t\t\t\tgroup.extra = __( '1 member', 'buddypress' );\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/* translators: %s is the number of Group members (more than 1). */\n\t\t\t\t\t\tgroup.extra = sprintf( __( '%s members', 'buddypress' ), group.total_member_count );\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t/* translators: %s: a human time diff. */\n\t\t\t\t\tgroup.extra = sprintf( __( 'Active %s', 'buddypress' ), group.last_activity_diff );\n\t\t\t\t}\n\n\t\t\t\t/* Translators: %s is the group's name. */\n\t\t\t\tgroup.avatar_alt = sprintf( __( 'Group Profile photo of %s', 'buddypress' ), group.name );\n\n\t\t\t\toutput += tmpl( group );\n\t\t\t} );\n\t\t} else {\n\t\t\toutput = '<div class=\"widget-error\">' + __( 'There are no groups to display.', 'buddypress' ) + '</div>';\n\t\t}\n\n\t\tselector.innerHTML = output;\n\t}\n\n\tstart() {\n\t\tthis.blocks.forEach( ( block, i ) => {\n\t\t\tconst { selector } = block;\n\t\t\tconst { type } = block.query_args;\n\t\t\tconst list = document.querySelector( '#' + selector ).closest( '.bp-dynamic-block-container' );\n\n\t\t\t// Get default Block's type groups.\n\t\t\tsuper.getItems( type, i );\n\n\t\t\t// Listen to Block's Nav item clics\n\t\t\tlist.querySelectorAll( '.item-options a' ).forEach( ( navItem ) => {\n\t\t\t\tnavItem.addEventListener( 'click', ( event ) => {\n\t\t\t\t\tevent.preventDefault();\n\n\t\t\t\t\t// Changes the displayed filter.\n\t\t\t\t\tevent.target.closest( '.item-options' ).querySelector( '.selected' ).classList.remove( 'selected' );\n\t\t\t\t\tevent.target.classList.add( 'selected' );\n\n\t\t\t\t\tconst newType = event.target.getAttribute( 'data-bp-sort' );\n\n\t\t\t\t\tif ( newType !== this.blocks[ i ].query_args.type ) {\n\t\t\t\t\t\tsuper.getItems( newType, i );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} );\n\t\t} );\n\t}\n}\n\nconst settings = window.bpDynamicGroupsSettings || {};\nconst blocks = window.bpDynamicGroupsBlocks || [];\nconst bpDynamicGroups = new bpGroupsWidgetBlock( settings, blocks );\n\nif ( 'loading' === document.readyState ) {\n\tdocument.addEventListener( 'DOMContentLoaded', bpDynamicGroups.start() );\n} else {\n\tbpDynamicGroups.start();\n}\n"]}