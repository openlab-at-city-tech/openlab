{"version":3,"sources":["bp-core/admin/js/dismissible-admin-notices.js"],"names":["window","bp","DismissibleAdminNotices","constructor","settings","start","url","nonce","document","querySelectorAll","forEach","notice","addEventListener","event","preventDefault","noticeLink","target","classList","contains","add","notice_id","dataset","noticeContainer","closest","noticeHeaders","Headers","noticeData","FormData","append","fetch","method","headers","body","then","response","json","data","success","remove","bpDismissibleAdminNoticesSettings","bpDismissibleAdminNotices","readyState"],"mappings":";AACAA,OAAOC,GAAKD,OAAOC,IAAM,GAOzBA,GAAGC,wBAA0B,MAC5BC,YAAaC,GACPA,KAAAA,SAAWA,GAAY,GAG7BC,QACO,MAAA,IAAEC,EAAF,MAAOC,GAAU,KAAKH,SAErBE,GAASC,GAIhBC,SAASC,iBAAkB,sBAAuBC,QAAWC,IAC5DA,EAAOC,iBAAkB,QAAWC,IACnCA,EAAMC,iBAEAC,MAAAA,EAAaF,EAAMG,OACpBD,GAAAA,EAAWE,UAAUC,SAAU,WACnC,OAIDH,EAAWE,UAAUE,IAAK,WAGpB,MAAA,UAAEC,GAAcL,EAAWM,QAC3BC,EAAkBP,EAAWQ,QAAS,wBAGtCC,EAAgB,IAAIC,QAAS,CACnBlB,aAAAA,IAIVmB,EAAa,IAAIC,SACvBD,EAAWE,OAAQ,SAAU,qBAC7BF,EAAWE,OAAQ,YAAaR,GAEhCS,MAAOvB,EAAK,CACXwB,OAAQ,OACRC,QAASP,EACTQ,KAAMN,IACHO,KAAQC,GACJA,EAASC,QACbF,KAAQG,IACL,MAAA,QAAEC,GAAYD,EAEfC,EACJf,EAAgBgB,SAEhBvB,EAAWE,UAAUqB,OAAQ,mBAQnC,MAAMlC,EAAWJ,OAAOuC,mCAAqC,GACvDC,EAA4B,IAAIvC,GAAGC,wBAAyBE,GAE7D,YAAcI,SAASiC,WAC3BjC,SAASI,iBAAkB,mBAAoB4B,EAA0BnC,SAEzEmC,EAA0BnC","file":"dismissible-admin-notices.js","sourceRoot":"../src/js","sourcesContent":["// Use the bp global.\nwindow.bp = window.bp || {};\n\n/**\n * Use an XHR request to dismiss admin notices.\n *\n * @since 10.0.0\n */\nbp.DismissibleAdminNotices = class {\n\tconstructor( settings ) {\n\t\tthis.settings = settings || {};\n\t}\n\n\tstart() {\n\t\tconst { url, nonce } = this.settings;\n\n\t\tif ( ! url || ! nonce ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdocument.querySelectorAll( '.bp-is-dismissible' ).forEach( ( notice ) => {\n\t\t\tnotice.addEventListener( 'click', ( event ) => {\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tconst noticeLink = event.target;\n\t\t\t\tif ( noticeLink.classList.contains( 'loading' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Prevent multiple clicks.\n\t\t\t\tnoticeLink.classList.add( 'loading' );\n\n\t\t\t\t// Set the notice ID & notice container.\n\t\t\t\tconst { notice_id } = noticeLink.dataset;\n\t\t\t\tconst noticeContainer = noticeLink.closest( '.bp-notice-container' );\n\n\t\t\t\t// Set notice headers.\n\t\t\t\tconst noticeHeaders = new Headers( {\n\t\t\t\t\t'X-BP-Nonce' : nonce,\n\t\t\t\t} );\n\n\t\t\t\t// Set notice data.\n\t\t\t\tconst noticeData = new FormData();\n\t\t\t\tnoticeData.append( 'action', 'bp_dismiss_notice' );\n\t\t\t\tnoticeData.append( 'notice_id', notice_id );\n\n\t\t\t\tfetch( url, {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: noticeHeaders,\n\t\t\t\t\tbody: noticeData,\n\t\t\t\t} ).then( ( response ) => {\n\t\t\t\t\treturn response.json();\n\t\t\t\t} ).then( ( data ) => {\n\t\t\t\t\tconst { success } = data;\n\n\t\t\t\t\tif ( success ) {\n\t\t\t\t\t\tnoticeContainer.remove();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnoticeLink.classList.remove( 'loading' );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} );\n\t\t} );\n\t}\n}\n\nconst settings = window.bpDismissibleAdminNoticesSettings || {};\nconst bpDismissibleAdminNotices = new bp.DismissibleAdminNotices( settings );\n\nif ( 'loading' === document.readyState ) {\n\tdocument.addEventListener( 'DOMContentLoaded', bpDismissibleAdminNotices.start() );\n} else {\n\tbpDismissibleAdminNotices.start();\n}\n"]}