{"version":3,"sources":["bp-members/admin/js/admin.js"],"names":["window","bp","clear","container","optionsContainer","document","getElementById","checkedRadio","querySelector","allOptions","querySelectorAll","checked","forEach","option","selected","button","addEventListener","event","preventDefault","changeButton","target","changeButtonContainer","closest","settingsContainer","nextElementSibling","setAttribute","style","display","closeButton","previousElementSibling","currentVisibility","innerHTML"],"mappings":";AACAA,OAAOC,GAAKD,OAAOC,IAAM,GASzBA,GAAGC,MAAUC,CAAAA,IACNC,MAAAA,EAAmBC,SAASC,eAAgBH,GAE7C,IAAEC,EACN,OAGKG,MAAAA,EAAeH,EAAiBI,cAAe,iBAC/CC,EAAaL,EAAiBM,iBAAkB,UAEjDH,IACJA,EAAaI,QAAU,IAGnBF,GACJA,EAAWG,QAAWC,IACrBA,EAAOC,UAAW,MAKrBT,SAASK,iBAAkB,2BAA4BE,QAAWG,IACjEA,EAAOC,iBAAkB,QAAWC,IACnCA,EAAMC,iBAEAC,MAAAA,EAAeF,EAAMG,OACrBC,EAAwBF,EAAaG,QAAS,qCAC9CC,EAAoBF,EAAsBG,mBAGhDL,EAAaM,aAAc,iBAAiB,GAC5CJ,EAAsBK,MAAMC,QAAU,OAGtCJ,EAAkBG,MAAMC,QAAU,YAIpCtB,SAASK,iBAAkB,oCAAqCE,QAAWG,IAC1EA,EAAOC,iBAAkB,QAAWC,IACnCA,EAAMC,iBAEAU,MACAL,EADcN,EAAMG,OACYE,QAAS,8BACzCD,EAAwBE,EAAkBM,uBAC1CC,EAAoBP,EAAkBf,cAAe,iBAAkBgB,mBAAmBO,UAGhGR,EAAkBG,MAAMC,QAAU,OAGlCN,EAAsBb,cAAe,2BAA4BiB,aAAc,iBAAiB,GAChGJ,EAAsBb,cAAe,6BAA8BuB,UAAYD,EAC/ET,EAAsBK,MAAMC,QAAU","file":"admin.js","sourceRoot":"../src/js","sourcesContent":["// Use the bp global.\nwindow.bp = window.bp || {};\n\n/**\n * Clears the checked/selected options of a radio button or a multiple select.\n *\n * @since 10.0.0\n * @param {HTMLElement} container The HTMLElement containing the options to clear.\n * @returns {void}\n */\nbp.clear = ( container ) => {\n\tconst optionsContainer = document.getElementById( container );\n\n\tif ( ! optionsContainer ) {\n\t\treturn;\n\t}\n\n\tconst checkedRadio = optionsContainer.querySelector( 'input:checked' );\n\tconst allOptions = optionsContainer.querySelectorAll( 'option' );\n\n\tif ( checkedRadio ) {\n\t\tcheckedRadio.checked = '';\n\t}\n\n\tif ( allOptions ) {\n\t\tallOptions.forEach( ( option ) => {\n\t\t\toption.selected = false;\n\t\t} );\n\t}\n};\n\ndocument.querySelectorAll( '.visibility-toggle-link' ).forEach( ( button ) => {\n\tbutton.addEventListener( 'click', ( event ) => {\n\t\tevent.preventDefault();\n\n\t\tconst changeButton = event.target;\n\t\tconst changeButtonContainer = changeButton.closest( '.field-visibility-settings-toggle' );\n\t\tconst settingsContainer = changeButtonContainer.nextElementSibling;\n\n\t\t// Hides the \"Change\" button.\n\t\tchangeButton.setAttribute( 'aria-expanded', true );\n\t\tchangeButtonContainer.style.display = 'none';\n\n\t\t// Displays the settings visibility container.\n\t\tsettingsContainer.style.display = 'block';\n\t} );\n} );\n\ndocument.querySelectorAll( '.field-visibility-settings-close' ).forEach( ( button ) => {\n\tbutton.addEventListener( 'click', ( event ) => {\n\t\tevent.preventDefault();\n\n\t\tconst closeButton = event.target;\n\t\tconst settingsContainer = closeButton.closest( '.field-visibility-settings' );\n\t\tconst changeButtonContainer = settingsContainer.previousElementSibling;\n\t\tconst currentVisibility = settingsContainer.querySelector( 'input:checked' ).nextElementSibling.innerHTML;\n\n\t\t// Closes the visibility settings options.\n\t\tsettingsContainer.style.display = 'none';\n\n\t\t// Displays the current visibility.\n\t\tchangeButtonContainer.querySelector( '.visibility-toggle-link' ).setAttribute( 'aria-expanded', false );\n\t\tchangeButtonContainer.querySelector( '.current-visibility-level' ).innerHTML = currentVisibility;\n\t\tchangeButtonContainer.style.display = 'block';\n\t} );\n} );\n"]}