/* FILE: editor-block/blocks/_block.scss */

.wp-block {
	max-width: $max_width_entry_content;
	margin-bottom: var(--gap);
	z-index: 1; // In case of negative margin overlay.

	&:not([style*="margin-bottom"]):not(.has-no-margin):not(.has-no-margin-bottom):not(.has-no-margin-vertical):not(.margin-none):not(.margin-bottom-none):not(.margin-vertical-none):not(.m0):not(.mb0):not(.m-0):not(.mb-0) {
		+ .block-list-appender {
			margin-top: calc( var(--gap) * -1 );
		}
	}

		&[style*="margin-bottom"],
		&.has-no-margin,
		&.has-no-margin-bottom,
		&.has-no-margin-vertical,
		&.margin-none,
		&.margin-bottom-none,
		&.margin-vertical-none,
		&.m0,
		&.mb0,
		&.m-0,
		&.mb-0 {
			> .block-list-appender.block-list-appender.block-list-appender.block-list-appender.block-list-appender:last-child {
				margin-top: 0;
			}
		}

	&:not([data-align="wide"]):not([data-align="full"]):last-child {
		margin-bottom: 0;
	}

	&.is-reusable {
		max-width: calc( 100% - 120px ) !important;
	}

	&[data-align="left"] {

		.block-editor-block-list__layout & > .is-block-content,
		#{ $selector_editor_wrapper } & .block-editor-block-list__block-edit,
		> [class] {
			margin-top: 0;
			margin-right: var(--typography_font_size_base); // Simulating rem unit for block editor.
			margin-bottom: var(--typography_font_size_base); // Simulating rem unit for block editor.

			@include media( map_get( $breakpoint, 'l' ) ) {
				margin-right: calc( var(--typography_font_size_base) * 2 ); // Simulating rem unit for block editor.
			}
		}

	}

	&[data-align="center"] {
		clear: both;
		text-align: center;
	}

	&[data-align="right"] {

		.block-editor-block-list__layout & > .is-block-content,
		#{ $selector_editor_wrapper } & .block-editor-block-list__block-edit,
		> [class] {
			margin-top: 0;
			margin-left: var(--typography_font_size_base); // Simulating rem unit for block editor.
			margin-bottom: var(--typography_font_size_base); // Simulating rem unit for block editor.

			@include media( map_get( $breakpoint, 'l' ) ) {
				margin-left: calc( var(--typography_font_size_base) * 2 ); // Simulating rem unit for block editor.
			}
		}

	}

	&[data-align="wide"],
	&[data-align="full"] {
		max-width: none;
		margin: 0;

		&:not(:last-child) > * {
			margin-bottom: var(--gap);
		}

		&:last-child > * {
			margin-bottom: 0;
		}

		[data-align="wide"] {
			margin-left: auto;
			margin-right: auto;
		}

	}

	&[data-align="wide"] {
		// Matching .alignwide-wrap styles, basically.
		padding-left: var(--body_padding);
		padding-right: var(--body_padding);
		margin-left: -10px;
		margin-right: -10px;

		.wp-block-widget-area & {
			padding-left: 0;
			padding-right: 0;
			margin-left: auto;
			margin-right: auto;
		}

		> * {
			max-width: $max_width_content;
			// Unfortunately, it's easier to use !important here to override WP styles for image block, for example.
			margin-left: auto !important;
			margin-right: auto !important;
		}

		[data-align="wide"] {
			padding-left: 0;
			padding-right: 0;
		}

	}

}

.has-background [data-align="wide"] {
	padding-left: 0;
	padding-right: 0;
}

#{ $selector_editor_wrapper } .has-background.has-background .wp-block[data-align="full"] {
	width: auto;
	margin-left: calc( -1 * var(--body_padding) );
	margin-right: calc( -1 * var(--body_padding) );
}

#{ $selector_editor_wrapper } figure.wp-block {
	margin-bottom: var(--gap);
}

.has-background:not([style*="padding-bottom"]):not(.has-no-padding):not(.has-no-padding-bottom):not(.has-no-padding-vertical):not(.p-0):not(.pb-0) {
	[data-align="wide"],
	[data-align="full"] {
		+ .block-list-appender:last-child {
			margin-top: 0;
		}
	}
}

// Block previews in patterns and styles.

	.block-editor-block-preview__container .editor-styles-wrapper,
	body.editor-styles-wrapper {
		background-image: none;
	}

	.block-editor-block-preview__content .has-parallax {
		background-attachment: scroll;
	}

	.block-editor-block-styles__item-preview [class*="-min-height"] {
		min-height: 100px !important;
	}

	// WP 5.9 fix for continual height change in block pattern preview.
	body.editor-styles-wrapper {
		padding-top: 2em !important;
		padding-bottom: 2em !important;

		[style*="min-height: 100vh"] {
			min-height: calc( 100 * var(--min-height-multiplier-vh, 9px) ) !important;
		}

		[style*="min-height: 62vh"] {
			min-height: calc( 62 * var(--min-height-multiplier-vh, 9px) ) !important;
		}

	}
