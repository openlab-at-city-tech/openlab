/* FILE: global/modifiers/_box-model.scss */

// Width

	$important_modifiers: _important( 'modifier_width' );

	.has-narrow-max-width {
		max-width: var(--layout_width_entry_content) $important_modifiers;
	}

	.has-wide-content-width {

		.wp-block-cover__inner-container,
		.wp-block-group__inner-container {

			&,
			> * {
				max-width: var(--layout_width_content) $important_modifiers;
			}

		}

	}

	$important_modifiers: null; // Required reset.

// Height

	$important_modifiers: _important( 'modifier_screen_min_height' );

	@at-root :root {
		--min-height-multiplier-vh: 1vh;
		--min-height-multiplier-vmih: 1vmin;
		--min-height-multiplier-vmax: 1vmax;
	}
	// WP 5.9 fix for continual height change in block pattern preview.
	@at-root body.editor-styles-wrapper {
		--min-height-multiplier-vh:   9px;
		--min-height-multiplier-vmih: var(--min-height-multiplier-vh);
		--min-height-multiplier-vmax: var(--min-height-multiplier-vh);
	}

	@for $i from 2 through 20 {
		$h : $i * 5;

		.has-#{ $h }vh-min-height {
			min-height: calc( #{ $h } * var(--min-height-multiplier-vh) ) $important_modifiers;
		}
			[class*="wp-block-"].has-#{ $h }vh-min-height {
				@extend .has-#{ $h }vh-min-height;
			}

		.has-#{ $h }vmin-min-height {
			min-height: calc( #{ $h } * var(--min-height-multiplier-vmin) ) $important_modifiers;
		}
			[class*="wp-block-"].has-#{ $h }vmin-min-height {
				@extend .has-#{ $h }vmin-min-height;
			}

		.has-#{ $h }vmax-min-height {
			min-height: calc( #{ $h } * var(--min-height-multiplier-vmax) ) $important_modifiers;
		}
			[class*="wp-block-"].has-#{ $h }vmax-min-height {
				@extend .has-#{ $h }vmax-min-height;
			}

	}

	.has-phi-vh-min-height {
		min-height: calc( #{ $ratio_maj * 100 } * var(--min-height-multiplier-vh) ) $important_modifiers;
	}

		[class*="wp-block-"].has-phi-vh-min-height,
		.has-phi-screen-min-height,
		[class*="wp-block-"].has-phi-screen-min-height {
			@extend .has-phi-vh-min-height;
		}

	.has-full-screen-min-height,
	[class*="wp-block-"].has-full-screen-min-height {
		@extend .has-100vh-min-height;
	}

	$important_modifiers: null; // Required reset.

// Padding

	$important_modifiers: _important( 'modifier_padding' );

	.is-style-has-padding {
		padding: 2em $important_modifiers;

		@include media( map_get( $breakpoint, 'xl' ) ) {
			padding: 4% $important_modifiers;
		}

	}

	.has-phi-padding,
	.has-golden-padding,
	.padding-phi,
	.padding-golden {
		padding: 1.618em $important_modifiers;
	}

	.has-no-padding,
	.padding-none,
	.p0,
	.p-0 {
		padding: 0 $important_modifiers;
	}

	.has-no-padding-top,
	.padding-top-none,
	.pt0,
	.pt-0 {
		padding-top: 0 $important_modifiers;
	}

	.has-no-padding-right,
	.padding-right-none,
	.pr0,
	.pr-0 {
		padding-right: 0 $important_modifiers;
	}

	.has-no-padding-bottom,
	.padding-bottom-none,
	.pb0,
	.pb-0 {
		padding-bottom: 0 $important_modifiers;
	}

	.has-no-padding-left,
	.padding-left-none,
	.pl0,
	.pl-0 {
		padding-left: 0 $important_modifiers;
	}

	.has-no-padding-horizontal,
	.padding-horizontal-none,
	.padding-left-right-none,
	.plr0,
	.plr-0 {
		padding-left: 0 $important_modifiers;
		padding-right: 0 $important_modifiers;
	}

	.has-no-padding-vertical,
	.padding-vertical-none,
	.padding-top-bottom-none,
	.ptb0,
	.ptb-0 {
		padding-top: 0 $important_modifiers;
		padding-bottom: 0 $important_modifiers;
	}

	.has-xs-padding,
	.has-extra-small-padding {
		padding: .8em $important_modifiers;
	}

	.has-s-padding,
	.has-small-padding {
		padding: 1em $important_modifiers;
	}

	.has-m-padding,
	.has-regular-padding,
	.has-medium-padding {
		padding: 1.5em $important_modifiers;
	}

	.has-l-padding,
	.has-large-padding {
		padding: 2em $important_modifiers;
	}

	.has-xl-padding,
	.has-huge-padding,
	.has-extra-large-padding {
		padding: 3em $important_modifiers;
	}

	.has-phi-padding,
	.has-golden-padding,
	.has-m-padding,
	.has-regular-padding,
	.has-medium-padding,
	.has-l-padding,
	.has-large-padding,
	.has-xl-padding,
	.has-huge-padding,
	.has-extra-large-padding {
		@include media( ( map_get( $breakpoint, 'm' ), 'max-width' ) ) {
			padding-left: var(--body_padding) $important_modifiers;
			padding-right: var(--body_padding) $important_modifiers;
		}
	}

	$important_modifiers: null; // Required reset.

// Margin

	$important_modifiers: _important( 'modifier_margin' );

	.has-no-margin,
	.margin-none,
	.m0,
	.m-0 {
		margin: 0 $important_modifiers;
	}

	.has-no-margin-top,
	.margin-top-none,
	.mt0,
	.mt-0 {
		margin-top: 0 $important_modifiers;
	}

	.has-no-margin-right,
	.margin-right-none,
	.mr0,
	.mr-0 {
		margin-right: 0 $important_modifiers;
	}

	.has-auto-margin-right,
	.margin-right-auto,
	.mrauto,
	.mr-auto {
		margin-right: auto $important_modifiers;
	}

	.has-no-margin-bottom,
	.margin-bottom-none,
	.mb0,
	.mb-0 {
		margin-bottom: 0 $important_modifiers;
	}

	.has-no-margin-left,
	.margin-left-none,
	.ml0,
	.ml-0 {
		margin-left: 0 $important_modifiers;
	}

	.has-auto-margin-left,
	.margin-left-auto,
	.mlauto,
	.ml-auto {
		margin-left: auto $important_modifiers;
	}

	.has-no-margin-horizontal,
	.margin-horizontal-none,
	.margin-left-right-none,
	.mlr0,
	.mlr-0 {
		margin-left: 0 $important_modifiers;
		margin-right: 0 $important_modifiers;
	}

	.has-no-margin-vertical,
	.margin-vertical-none,
	.margin-top-bottom-none,
	.mtb0,
	.mtb-0 {
		margin-top: 0 $important_modifiers;
		margin-bottom: 0 $important_modifiers;
	}

	.has-regular-margin-bottom,
	.has-normal-margin-bottom,
	.is-style-has-margin-bottom {
		margin-bottom: var(--gap) $important_modifiers;
	}

	$important_modifiers: null; // Required reset.

	.is-style-no-margin-vertical.is-style-no-margin-vertical.is-style-no-margin-vertical {
		margin-top: 0;
		margin-bottom: 0;
	}

// Flexbox

	.has-flex-display {
		display: flex;

		> * {
			flex: 1 0 auto;
		}

	}

	$important_modifiers: _important( 'modifier_flex_order' );

	@include media( map_get( $breakpoint, 'm' ) ) {

		@for $i from 1 through 6 {
			.has-order-#{$i} {
				order: $i $important_modifiers;
			}
		}

		.has-order-first {
			order: -99;
		}

		.has-order-last {
			order: 99;
		}

	}

	$important_modifiers: null; // Required reset.

	$important_modifiers: _important( 'modifier_flex_grow' );

	@for $i from 2 through 6 {
		.has-#{$i}-flex-grow {
			flex-grow: $i $important_modifiers;
		}
	}

	$important_modifiers: null; // Required reset.

// Z-index

	$important_modifiers: _important( 'modifier_z-index' );

	@for $i from 1 through 10 {
		.has-#{$i}-z-index {
			position: relative;
			z-index: $i $important_modifiers;
		}
	}

	$important_modifiers: null; // Required reset.
